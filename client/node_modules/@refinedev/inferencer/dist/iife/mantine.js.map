{"version":3,"sources":["../../../devtools-shared/src/index.ts","../../../devtools-shared/src/event-types.ts","../../../devtools-shared/src/scopes.ts","../../../devtools-shared/src/context.tsx","../../../devtools-shared/src/send.ts","../../../devtools-shared/src/receive.ts","../../../devtools-internal/src/index.ts","../../../devtools-internal/src/get-trace.ts","../../../devtools-internal/src/clean-stack.ts","../../../devtools-internal/src/constants.ts","../../../devtools-internal/src/is-refine-stack.ts","../../../devtools-internal/src/get-package-name-from-filename.ts","../../../devtools-internal/src/get-resource-path.ts","../../../devtools-internal/src/get-xray.ts","../../../devtools-internal/src/use-query-subscription.tsx","../../../devtools-internal/src/listeners.ts","../../../devtools-internal/src/create-identifier.ts","../../../core/src/index.tsx","../../../core/src/components/pages/error/index.tsx","../../../core/src/hooks/auth/usePermissions/index.ts","../../../core/src/definitions/table/index.ts","../../../core/src/definitions/helpers/userFriendlySeconds/index.ts","../../../core/src/definitions/helpers/importCSVMapper/index.ts","../../../core/src/definitions/helpers/userFriendlyResourceName/index.ts","../../../core/src/definitions/helpers/handleUseParams/index.tsx","../../../core/src/definitions/helpers/pickNotDeprecated/index.ts","../../../core/src/definitions/helpers/keys/index.ts","../../../core/src/definitions/helpers/queryKeys/index.ts","../../../core/src/definitions/helpers/hasPermission/index.ts","../../../core/src/definitions/helpers/router/is-parameter.ts","../../../core/src/definitions/helpers/router/split-to-segments.ts","../../../core/src/definitions/helpers/router/is-segment-counts-same.ts","../../../core/src/definitions/helpers/router/remove-leading-trailing-slashes.ts","../../../core/src/definitions/helpers/router/check-by-segments.ts","../../../core/src/definitions/helpers/router/get-default-action-path.ts","../../../core/src/definitions/helpers/router/get-parent-resource.ts","../../../core/src/definitions/helpers/router/get-parent-prefix-for-resource.ts","../../../core/src/definitions/helpers/router/get-action-routes-from-resource.ts","../../../core/src/definitions/helpers/router/pick-matched-route.ts","../../../core/src/definitions/helpers/router/match-resource-from-route.ts","../../../core/src/definitions/helpers/routeGenerator/index.ts","../../../core/src/definitions/helpers/treeView/createTreeView/index.ts","../../../core/src/definitions/helpers/humanizeString/index.ts","../../../core/src/contexts/refine/index.tsx","../../../core/src/components/layoutWrapper/defaultLayout/index.tsx","../../../core/src/definitions/helpers/handleRefineOptions/index.ts","../../../core/src/definitions/helpers/redirectPage/index.ts","../../../core/src/definitions/helpers/sequentialPromises/index.ts","../../../core/src/definitions/helpers/pick-resource/index.ts","../../../core/src/definitions/helpers/pickDataProvider/index.ts","../../../core/src/definitions/helpers/handleMultiple/index.ts","../../../core/src/definitions/helpers/useInfinitePagination/index.ts","../../../core/src/definitions/helpers/legacy-resource-transform/index.ts","../../../core/src/definitions/helpers/router/pick-route-params.ts","../../../core/src/definitions/helpers/router/prepare-route-params.ts","../../../core/src/definitions/helpers/router/compose-route.ts","../../../core/src/contexts/auth/index.tsx","../../../core/src/definitions/helpers/useActiveAuthProvider/index.ts","../../../core/src/definitions/helpers/handlePaginationParams/index.ts","../../../core/src/definitions/helpers/useMediaQuery/index.ts","../../../core/src/definitions/helpers/safe-translate/index.ts","../../../core/src/definitions/helpers/generateDocumentTitle/index.ts","../../../core/src/hooks/refine/useMutationMode.ts","../../../core/src/hooks/refine/useWarnAboutChange/index.ts","../../../core/src/contexts/unsavedWarn/index.tsx","../../../core/src/hooks/refine/useSyncWithLocation.ts","../../../core/src/hooks/refine/useTitle.tsx","../../../core/src/hooks/refine/useRefineContext.ts","../../../core/src/definitions/helpers/useUserFriendlyName/index.ts","../../../core/src/definitions/upload/file2Base64/index.ts","../../../core/src/hooks/useKeys/index.tsx","../../../core/src/hooks/auth/useGetIdentity/index.ts","../../../core/src/hooks/auth/useLogout/index.ts","../../../core/src/hooks/auth/useInvalidateAuthStore/index.ts","../../../core/src/hooks/auth/useLogin/index.ts","../../../core/src/hooks/auth/useRegister/index.ts","../../../core/src/hooks/auth/useForgotPassword/index.ts","../../../core/src/hooks/auth/useUpdatePassword/index.ts","../../../core/src/hooks/auth/useIsAuthenticated/index.ts","../../../core/src/hooks/auth/useOnError/index.ts","../../../core/src/hooks/auth/useIsExistAuthentication/index.ts","../../../core/src/hooks/data/useList.ts","../../../core/src/hooks/useLoadingOvertime/index.ts","../../../core/src/hooks/data/useOne.ts","../../../core/src/hooks/data/useMany.ts","../../../core/src/hooks/data/useUpdate.ts","../../../core/src/contexts/undoableQueue/undoableQueueContext.tsx","../../../core/src/hooks/data/useCreate.ts","../../../core/src/hooks/data/useDelete.ts","../../../core/src/hooks/data/useCreateMany.ts","../../../core/src/hooks/data/useUpdateMany.ts","../../../core/src/hooks/data/useDeleteMany.ts","../../../core/src/hooks/data/useApiUrl.ts","../../../core/src/hooks/data/useCustom.ts","../../../core/src/hooks/data/useCustomMutation.ts","../../../core/src/hooks/data/useDataProvider.tsx","../../../core/src/contexts/data/index.tsx","../../../core/src/hooks/data/useInfiniteList.ts","../../../core/src/hooks/live/useResourceSubscription/index.ts","../../../core/src/contexts/live/index.tsx","../../../core/src/hooks/resource/useResource/index.ts","../../../core/src/contexts/resource/index.tsx","../../../core/src/hooks/deepMemo/index.tsx","../../../core/src/hooks/memoized/index.tsx","../../../core/src/contexts/router-picker/index.tsx","../../../core/src/hooks/router/use-parsed/index.tsx","../../../core/src/contexts/router/index.tsx","../../../core/src/hooks/router/use-parse/index.tsx","../../../core/src/hooks/resource/useResourceWithRoute/index.ts","../../../core/src/hooks/invalidate/index.tsx","../../../core/src/hooks/live/useLiveMode/index.ts","../../../core/src/hooks/live/useSubscription/index.ts","../../../core/src/hooks/live/usePublish/index.ts","../../../core/src/hooks/notification/useCancelNotification/index.tsx","../../../core/src/hooks/notification/useNotification/index.ts","../../../core/src/contexts/notification/index.tsx","../../../core/src/hooks/notification/useHandleNotification/index.ts","../../../core/src/hooks/translate/useSetLocale.ts","../../../core/src/contexts/translation/index.tsx","../../../core/src/hooks/translate/useTranslate.ts","../../../core/src/hooks/translate/useGetLocale.ts","../../../core/src/hooks/export/index.ts","../../../core/src/hooks/form/useForm.ts","../../../core/src/hooks/redirection/index.ts","../../../core/src/hooks/router/use-go/index.tsx","../../../core/src/hooks/router/use-back/index.tsx","../../../core/src/hooks/navigation/index.ts","../../../core/src/hooks/show/useShow.ts","../../../core/src/hooks/import/index.tsx","../../../core/src/hooks/modal/useModal/index.tsx","../../../core/src/hooks/router/use-get-to-path/index.ts","../../../core/src/hooks/router/use-to-path/index.ts","../../../core/src/hooks/router/use-link/index.tsx","../../../core/src/hooks/legacy-router/useRouterContext.ts","../../../core/src/contexts/legacy-router/index.tsx","../../../core/src/hooks/accessControl/useCan/index.ts","../../../core/src/contexts/accessControl/index.tsx","../../../core/src/definitions/helpers/sanitize-resource/index.ts","../../../core/src/hooks/accessControl/useCanWithoutCache.ts","../../../core/src/hooks/useSelect/index.ts","../../../core/src/hooks/useTable/index.ts","../../../core/src/hooks/auditLog/useLog/index.ts","../../../core/src/contexts/auditLog/index.tsx","../../../core/src/hooks/auditLog/useLogList/index.ts","../../../core/src/hooks/breadcrumb/index.ts","../../../core/src/hooks/menu/useMenu.tsx","../../../core/src/definitions/helpers/menu/create-resource-key.ts","../../../core/src/definitions/helpers/menu/create-tree.ts","../../../core/src/hooks/useMeta/index.ts","../../../core/src/components/pages/login/index.tsx","../../../core/src/components/pages/auth/index.tsx","../../../core/src/components/pages/auth/components/login/index.tsx","../../../core/src/components/pages/auth/components/register/index.tsx","../../../core/src/components/pages/auth/components/forgotPassword/index.tsx","../../../core/src/components/pages/auth/components/updatePassword/index.tsx","../../../core/src/components/pages/ready/index.tsx","../../../core/src/components/pages/welcome/index.tsx","../../../core/src/components/containers/refine/index.tsx","../../../core/src/components/telemetry/index.tsx","../../../core/src/hooks/useTelemetryData/index.ts","../../../core/src/definitions/helpers/check-router-prop-misuse/index.ts","../../../core/src/hooks/router/use-router-misuse-warning/index.ts","../../../core/src/components/undoableQueue/index.tsx","../../../core/src/components/layoutWrapper/index.tsx","../../../core/src/components/authenticated/index.tsx","../../../core/src/components/routeChangeHandler/index.tsx","../../../core/src/components/canAccess/index.tsx","../../../core/src/components/gh-banner/index.tsx","../../../core/src/components/gh-banner/styles.ts","../../../ui-types/src/index.tsx","../../../ui-types/src/ids.tsx","../../../ui-types/src/classNames.ts","../../../mantine/src/index.tsx","../../../mantine/src/components/ring-countdown/index.tsx","../../../mantine/src/components/fields/text/index.tsx","../../../mantine/src/components/fields/tag/index.tsx","../../../mantine/src/components/fields/email/index.tsx","../../../mantine/src/components/fields/boolean/index.tsx","../../../mantine/src/components/fields/date/index.tsx","../../../mantine/src/components/fields/file/index.tsx","../../../mantine/src/components/fields/url/index.tsx","../../../mantine/src/components/fields/number/index.tsx","../../../mantine/src/components/fields/markdown/index.tsx","../../../mantine/src/components/buttons/create/index.tsx","../../../mantine/src/definitions/button/index.ts","../../../mantine/src/components/buttons/edit/index.tsx","../../../mantine/src/components/buttons/delete/index.tsx","../../../mantine/src/components/buttons/refresh/index.tsx","../../../mantine/src/components/buttons/show/index.tsx","../../../mantine/src/components/buttons/list/index.tsx","../../../mantine/src/components/buttons/export/index.tsx","../../../mantine/src/components/buttons/save/index.tsx","../../../mantine/src/components/buttons/clone/index.tsx","../../../mantine/src/components/buttons/import/index.tsx","../../../mantine/src/components/crud/list/index.tsx","../../../mantine/src/components/crud/show/index.tsx","../../../mantine/src/components/crud/edit/index.tsx","../../../mantine/src/components/crud/create/index.tsx","../../../mantine/src/components/pages/error/index.tsx","../../../mantine/src/components/pages/ready/index.tsx","../../../mantine/src/components/pages/welcome/index.tsx","../../../mantine/src/components/pages/auth/index.tsx","../../../mantine/src/components/pages/auth/components/login/index.tsx","../../../mantine/src/contexts/form-context.ts","../../../mantine/src/components/pages/auth/components/styles.ts","../../../mantine/src/components/pages/auth/components/register/index.tsx","../../../mantine/src/components/pages/auth/components/forgotPassword/index.tsx","../../../mantine/src/components/pages/auth/components/updatePassword/index.tsx","../../../mantine/src/components/breadcrumb/index.tsx","../../../mantine/src/components/layout/index.tsx","../../../mantine/src/components/layout/sider/index.tsx","../../../mantine/src/components/layout/header/index.tsx","../../../mantine/src/components/layout/title/index.tsx","../../../mantine/src/components/themedLayout/index.tsx","../../../mantine/src/components/themedLayout/sider/index.tsx","../../../mantine/src/components/themedLayout/header/index.tsx","../../../mantine/src/components/themedLayout/title/index.tsx","../../../mantine/src/components/themedLayoutV2/index.tsx","../../../mantine/src/components/themedLayoutV2/sider/index.tsx","../../../mantine/src/hooks/form/useForm/index.ts","../../../mantine/src/hooks/form/useModalForm/index.ts","../../../mantine/src/hooks/form/useStepsForm/index.ts","../../../mantine/src/hooks/useSelect/index.ts","../../../mantine/src/hooks/useSiderVisible/index.ts","../../../mantine/src/contexts/themedLayoutContext/index.tsx","../../../mantine/src/hooks/useThemedLayoutContext/index.ts","../../../mantine/src/components/themedLayoutV2/header/index.tsx","../../../mantine/src/components/themedLayoutV2/hamburgerMenu/index.tsx","../../../mantine/src/components/themedLayoutV2/title/index.tsx","../../../mantine/src/components/autoSaveIndicator/index.tsx","../../../mantine/src/providers/notificationProvider.tsx","../../../mantine/src/theme/index.ts","../../../react-table/src/index.ts","../../../react-table/src/useTable/index.ts","../../../react-table/src/utils/useIsFirstRender/index.ts","../../src/inferencers/mantine/index.tsx","../../src/inferencers/mantine/show.tsx","../../src/create-inferencer/index.tsx","../../src/utilities/get-fieldable-keys/index.ts","../../src/utilities/pick-data-provider/index.tsx","../../src/utilities/pick-inferred-field/index.ts","../../src/utilities/prettier-format/index.ts","../../src/utilities/pretty-spaces/index.ts","../../src/field-inferencers/relation.ts","../../src/utilities/remove-relation-suffix/index.ts","../../src/utilities/pretty-string/index.ts","../../src/utilities/translate-pretty-string/index.ts","../../src/utilities/to-singular/index.ts","../../src/utilities/to-plural/index.ts","../../src/utilities/replace-exports/index.ts","../../src/utilities/replace-imports/index.ts","../../src/utilities/resource-from-inferred/index.ts","../../src/utilities/component-name/index.ts","../../src/utilities/jsx/index.ts","../../src/utilities/prepare-live-code/index.ts","../../src/utilities/remove-hidden-code/index.ts","../../src/utilities/accessor/index.ts","../../src/utilities/print-imports/index.ts","../../src/utilities/is-id-key/index.ts","../../src/utilities/get-option-label/index.ts","../../src/utilities/no-op/index.ts","../../src/utilities/get-variable-name/index.ts","../../src/utilities/get-meta-props/index.ts","../../src/utilities/id-quote-wrapper/index.ts","../../src/compose-inferencers/index.ts","../../src/compose-transformers/index.ts","../../src/field-inferencers/array.ts","../../src/field-inferencers/boolean.ts","../../src/field-inferencers/date.ts","../../src/field-inferencers/email.ts","../../src/field-inferencers/image.ts","../../src/field-inferencers/nullish.ts","../../src/field-inferencers/number.ts","../../src/field-inferencers/object.ts","../../src/field-inferencers/richtext.ts","../../src/field-inferencers/text.ts","../../src/field-inferencers/url.ts","../../src/field-inferencers/index.ts","../../src/field-transformers/basic-to-relation.ts","../../src/field-transformers/image-by-key.ts","../../src/field-transformers/relation-by-resource.ts","../../src/field-transformers/relation-to-fieldable.ts","../../src/field-transformers/index.ts","../../src/components/live/index.tsx","../../src/components/shared-code-viewer/index.tsx","../../src/use-infer-fetch/index.tsx","../../src/use-relation-fetch/index.ts","../../src/inferencers/mantine/error.tsx","../../src/inferencers/mantine/loading.tsx","../../src/inferencers/mantine/list.tsx","../../src/inferencers/mantine/create.tsx","../../src/inferencers/mantine/edit.tsx"],"sourcesContent":["export { DevtoolsEvent, DevtoolsEventPayloads } from \"./event-types\";\nexport { TraceType } from \"./trace\";\nexport { Feed, FeedSection } from \"./feed\";\nexport {\n    PackageType,\n    PackageLatestVersionType,\n    AvailablePackageType,\n} from \"./package\";\nexport { RefineHook, Scopes, hooksByScope, scopes } from \"./scopes\";\n\nexport { DevToolsContextProvider, DevToolsContext } from \"./context\";\n\nexport { send } from \"./send\";\nexport { receive } from \"./receive\";\n","import {\n    Mutation,\n    MutationKey,\n    MutationStatus,\n    QueryKey,\n    QueryState,\n    QueryStatus,\n} from \"@tanstack/react-query\";\nimport { TraceType } from \"./trace\";\n\nexport enum DevtoolsEvent {\n    RELOAD = \"devtools:reload\",\n    DEVTOOLS_INIT = \"devtools:init\",\n    DEVTOOLS_HANDSHAKE = \"devtools:handshake\",\n    DEVTOOLS_ALREADY_CONNECTED = \"devtools:already-connected\",\n    ACTIVITY = \"devtools:send-activity\",\n    DEVTOOLS_ACTIVITY_UPDATE = \"devtools:activity-update\",\n    DEVTOOLS_CONNECTED_APP = \"devtools:connected-app\",\n    DEVTOOLS_DISCONNECTED_APP = \"devtools:disconnected-app\",\n    DEVTOOLS_HIGHLIGHT_IN_MONITOR = \"devtools:highlight-in-monitor\",\n    DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION = \"devtools:highlight-in-monitor-action\",\n    DEVTOOLS_LOGIN_SUCCESS = \"devtools:login-success\",\n    DEVTOOLS_RELOAD_AFTER_LOGIN = \"devtools:reload-after-login\",\n}\n\ntype Timestamps = {\n    createdAt: number;\n    updatedAt: number;\n};\n\ntype ActivityPayload =\n    | {\n          type: \"mutation\";\n          identifier: string;\n          key?: MutationKey;\n          status?: MutationStatus;\n          trace?: TraceType[];\n          state: Mutation<any, any, any, any>[\"state\"];\n          variables?: Mutation<any, any, any, any>[\"state\"][\"variables\"];\n          hookName: string;\n          resourcePath: string | null;\n          legacyKey: boolean;\n      }\n    | {\n          type: \"query\";\n          identifier: string;\n          key?: QueryKey;\n          status?: QueryStatus;\n          trace?: TraceType[];\n          state: QueryState<any, any>;\n          hookName: string;\n          resourcePath: string | null;\n          legacyKey: boolean;\n      };\n\nexport type DevtoolsEventPayloads = {\n    [DevtoolsEvent.RELOAD]: {};\n    [DevtoolsEvent.DEVTOOLS_INIT]: { url: string };\n    [DevtoolsEvent.DEVTOOLS_HANDSHAKE]: { url: string };\n    [DevtoolsEvent.DEVTOOLS_ALREADY_CONNECTED]: { url: string };\n    [DevtoolsEvent.ACTIVITY]: ActivityPayload;\n    [DevtoolsEvent.DEVTOOLS_ACTIVITY_UPDATE]: {\n        updatedActivities: (ActivityPayload & Timestamps)[];\n    };\n    [DevtoolsEvent.DEVTOOLS_CONNECTED_APP]: { url: string | null };\n    [DevtoolsEvent.DEVTOOLS_DISCONNECTED_APP]: {};\n    [DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR]: { name: string };\n    [DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION]: { name: string };\n    [DevtoolsEvent.DEVTOOLS_LOGIN_SUCCESS]: {};\n    [DevtoolsEvent.DEVTOOLS_RELOAD_AFTER_LOGIN]: {};\n};\n","export type RefineHook =\n    | \"useCan\"\n    | \"useLog\"\n    | \"useLogList\"\n    | \"useCreate\"\n    | \"useCreateMany\"\n    | \"useCustom\"\n    | \"useCustomMutation\"\n    | \"useDelete\"\n    | \"useDeleteMany\"\n    | \"useInfiniteList\"\n    | \"useList\"\n    | \"useMany\"\n    | \"useOne\"\n    | \"useUpdate\"\n    | \"useUpdateMany\"\n    | \"useForgotPassword\"\n    | \"useGetIdentity\"\n    | \"useIsAuthenticated\"\n    | \"useLogin\"\n    | \"useLogout\"\n    | \"useOnError\"\n    | \"usePermissions\"\n    | \"useRegister\"\n    | \"useUpdatePassword\";\n\nexport type Scopes = \"data\" | \"audit-log\" | \"access-control\" | \"auth\";\n\nexport const scopes: Record<RefineHook, Scopes> = {\n    useCan: \"access-control\",\n    useLog: \"audit-log\",\n    useLogList: \"audit-log\",\n    useCreate: \"data\",\n    useCreateMany: \"data\",\n    useCustom: \"data\",\n    useCustomMutation: \"data\",\n    useDelete: \"data\",\n    useDeleteMany: \"data\",\n    useInfiniteList: \"data\",\n    useList: \"data\",\n    useMany: \"data\",\n    useOne: \"data\",\n    useUpdate: \"data\",\n    useUpdateMany: \"data\",\n    useForgotPassword: \"auth\",\n    useGetIdentity: \"auth\",\n    useIsAuthenticated: \"auth\",\n    useLogin: \"auth\",\n    useLogout: \"auth\",\n    useOnError: \"auth\",\n    usePermissions: \"auth\",\n    useRegister: \"auth\",\n    useUpdatePassword: \"auth\",\n};\n\nexport const hooksByScope = Object.entries(scopes).reduce(\n    (acc, [hook, scope]) => {\n        if (!acc[scope]) {\n            acc[scope] = [];\n        }\n\n        acc[scope].push(hook as RefineHook);\n\n        return acc;\n    },\n    {} as Record<Scopes, RefineHook[]>,\n);\n","import React from \"react\";\nimport { DevtoolsEvent } from \"./event-types\";\nimport { send } from \"./send\";\nimport { receive } from \"./receive\";\n\ntype DevToolsContextValue = {\n    __devtools: boolean;\n    port: number;\n    url: string;\n    secure: boolean;\n    ws: WebSocket | null;\n    devtoolsUrl?: string;\n};\n\nexport const DevToolsContext = React.createContext<DevToolsContextValue>({\n    __devtools: false,\n    port: 5002,\n    url: \"localhost\",\n    secure: false,\n    ws: null,\n});\n\ntype Props = React.PropsWithChildren<\n    Partial<Pick<DevToolsContextValue, \"port\" | \"__devtools\">>\n>;\n\nexport const DevToolsContextProvider: React.FC<Props> = ({\n    __devtools,\n    port,\n    children,\n}) => {\n    const [values, setValues] = React.useState<DevToolsContextValue>({\n        __devtools: __devtools ?? false,\n        port: port ?? 5002,\n        url: \"localhost\",\n        secure: false,\n        ws: null,\n    });\n\n    const [ws, setWs] = React.useState<WebSocket | null>(null);\n\n    React.useEffect(() => {\n        const wsInstance = new WebSocket(\n            `${values.secure ? \"wss\" : \"ws\"}://localhost:${values.port}`,\n        );\n\n        const unsubscribe = receive(\n            wsInstance,\n            DevtoolsEvent.DEVTOOLS_HANDSHAKE,\n            (data) => {\n                setValues((v) => ({\n                    ...v,\n                    devtoolsUrl: data.url,\n                }));\n                unsubscribe();\n            },\n        );\n\n        wsInstance.addEventListener(\"open\", () => {\n            if (!values.__devtools) {\n                send(wsInstance, DevtoolsEvent.DEVTOOLS_INIT, {\n                    url: window.location.origin,\n                });\n            }\n        });\n\n        setWs(wsInstance);\n\n        return () => {\n            unsubscribe();\n\n            wsInstance.close(1000, window.location.origin);\n        };\n    }, []);\n\n    const contextValues = React.useMemo<DevToolsContextValue>(\n        () => ({\n            ...values,\n            ws,\n        }),\n        [values, ws],\n    );\n\n    return (\n        <DevToolsContext.Provider value={contextValues}>\n            {children}\n        </DevToolsContext.Provider>\n    );\n};\n","import { DevtoolsEvent, DevtoolsEventPayloads } from \"./event-types\";\n\nexport async function send<T extends DevtoolsEvent>(\n    ws: WebSocket,\n    event: T,\n    payload: DevtoolsEventPayloads[T],\n) {\n    // check if the socket is open\n    // if not, wait for it to open\n    if (ws.readyState !== ws.OPEN) {\n        await new Promise<void>((resolve) => {\n            const listener = () => {\n                ws.send(JSON.stringify({ event, payload }));\n                resolve();\n                ws.removeEventListener(\"open\", listener);\n            };\n\n            ws.addEventListener(\"open\", listener);\n        });\n        return;\n    } else {\n        ws.send(JSON.stringify({ event, payload }));\n        return;\n    }\n}\n","// receive ws message by adding a listener to the ws object\n\nimport { DevtoolsEvent, DevtoolsEventPayloads } from \"./event-types\";\n\nexport function receive<T extends DevtoolsEvent>(\n    ws: WebSocket,\n    event: T,\n    callback: (payload: DevtoolsEventPayloads[T]) => void,\n) {\n    const listener = (e: MessageEvent) => {\n        const { event: receivedEvent, payload } = JSON.parse(e.data);\n        if (event === receivedEvent) {\n            callback(payload);\n        }\n    };\n\n    ws.addEventListener(\"message\", listener);\n\n    return () => {\n        ws.removeEventListener(\"message\", listener);\n    };\n}\n","export { getTrace } from \"./get-trace\";\nexport { getXRay } from \"./get-xray\";\nexport { useQuerySubscription } from \"./use-query-subscription\";\n","import ErrorStackParser from \"error-stack-parser\";\nimport { cleanStack } from \"./clean-stack\";\nimport { isRefineStack } from \"./is-refine-stack\";\nimport { getPackageNameFromFilename } from \"./get-package-name-from-filename\";\nimport { TraceType } from \"@refinedev/devtools-shared\";\n\nexport function getTrace() {\n    if (__DEV_CONDITION__ !== \"development\") {\n        return [];\n    } else {\n        try {\n            const error = new Error();\n            const stack = ErrorStackParser.parse(error);\n            const clean = cleanStack(stack);\n            const traces = clean\n                .map(\n                    (frame) =>\n                        ({\n                            file: frame.fileName,\n                            line: frame.lineNumber,\n                            column: frame.columnNumber,\n                            function: frame.functionName,\n                            isRefine: isRefineStack(frame.fileName),\n                            packageName: getPackageNameFromFilename(\n                                frame.fileName,\n                            ),\n                        } as TraceType),\n                )\n                .filter((trace) => trace.function);\n            return traces.slice(1);\n        } catch (error) {\n            return [];\n        }\n    }\n}\n","import type { StackFrame } from \"error-stack-parser\";\n\nconst unrelatedFunctionName = \"renderWithHooks\";\n\nexport const cleanStack = (stack: StackFrame[]) => {\n    const firstUnrelatedIndex = stack.findIndex(\n        (frame) => frame.functionName === unrelatedFunctionName,\n    );\n\n    if (firstUnrelatedIndex !== -1) {\n        return stack.slice(0, firstUnrelatedIndex);\n    }\n\n    return stack;\n};\n","export const REFINE_PACKAGE_FILEPATH_REGEXP =\n    __DEV_CONDITION__ !== \"development\"\n        ? /node_modules\\/refinedev\\/(?<name>.*?)\\//\n        : /\\/refine\\/packages\\/(?<name>.*?)\\//;\n","import { REFINE_PACKAGE_FILEPATH_REGEXP } from \"./constants\";\n\nexport const isRefineStack = (filename?: string) => {\n    if (!filename) return false;\n\n    const match = filename.match(REFINE_PACKAGE_FILEPATH_REGEXP);\n\n    return !!match;\n};\n","import { REFINE_PACKAGE_FILEPATH_REGEXP } from \"./constants\";\n\nexport const getPackageNameFromFilename = (filename?: string) => {\n    if (!filename) return;\n\n    const match = filename.match(REFINE_PACKAGE_FILEPATH_REGEXP);\n\n    const name = match?.groups?.name;\n\n    if (!name) return;\n\n    return `@refinedev/${name}`;\n};\n","import {\n    DevtoolsEvent,\n    DevtoolsEventPayloads,\n    RefineHook,\n    scopes,\n} from \"@refinedev/devtools-shared\";\n\nexport type Activity =\n    DevtoolsEventPayloads[DevtoolsEvent.DEVTOOLS_ACTIVITY_UPDATE][\"updatedActivities\"][number];\n\nexport const getResourcePath = (\n    hookName: RefineHook,\n    legacyKey: boolean,\n): string | null => {\n    if (scopes[hookName] === \"auth\") {\n        return null;\n    }\n    if (hookName === \"useCan\") {\n        if (legacyKey) {\n            return \"key[1].resource\";\n        } else {\n            return \"key[1]\";\n        }\n    }\n    if (scopes[hookName] === \"audit-log\") {\n        if (hookName === \"useLog\") {\n            return \"variables.resource\";\n        }\n        return \"key[1]\";\n    }\n    if (scopes[hookName] === \"data\") {\n        if (hookName === \"useCustom\" || hookName === \"useCustomMutation\") {\n            return null;\n        }\n        switch (hookName) {\n            case \"useList\":\n            case \"useInfiniteList\":\n            case \"useOne\":\n            case \"useMany\":\n                if (legacyKey) {\n                    return \"key[1]\";\n                } else {\n                    return \"key[2]\";\n                }\n            case \"useCreate\":\n            case \"useCreateMany\":\n            case \"useDelete\":\n            case \"useDeleteMany\":\n            case \"useUpdate\":\n            case \"useUpdateMany\":\n                return \"variables.resource\";\n        }\n    }\n    return null;\n};\n","import { RefineHook, TraceType } from \"@refinedev/devtools-shared\";\nimport { getTrace } from \"./get-trace\";\nimport { getResourcePath } from \"./get-resource-path\";\n\nexport type XRayResponse = {\n    hookName: string;\n    trace: TraceType[];\n    resourcePath: string | null;\n    legacyKey: boolean;\n};\n\nexport function getXRay(hookName: string, legacyKey: boolean): XRayResponse {\n    if (__DEV_CONDITION__ !== \"development\") {\n        return {\n            hookName: \"\",\n            trace: [],\n            resourcePath: null,\n            legacyKey: false,\n        };\n    } else {\n        const trace = getTrace().slice(1);\n\n        const resourcePath = getResourcePath(hookName as RefineHook, legacyKey);\n\n        return {\n            hookName,\n            trace,\n            resourcePath,\n            legacyKey,\n        };\n    }\n}\n","import { DevToolsContext } from \"@refinedev/devtools-shared\";\nimport { QueryClient } from \"@tanstack/react-query\";\nimport React, { useContext } from \"react\";\nimport { createQueryListener, createMutationListener } from \"./listeners\";\n\nexport const useQuerySubscription =\n    __DEV_CONDITION__ !== \"development\"\n        ? () => ({})\n        : (queryClient: QueryClient) => {\n              const { ws } = useContext(DevToolsContext);\n              const queryCacheSubscription = React.useRef<() => void>();\n              const mutationCacheSubscription = React.useRef<() => void>();\n\n              React.useEffect(() => {\n                  if (!ws) return () => 0;\n\n                  const queryCache = queryClient.getQueryCache();\n\n                  const queryListener = createQueryListener(ws);\n\n                  queryCache.getAll().forEach(queryListener);\n\n                  queryCacheSubscription.current = queryCache.subscribe(\n                      ({ query, type }) =>\n                          (type === \"added\" || type === \"updated\") &&\n                          queryListener(query),\n                  );\n\n                  return () => {\n                      queryCacheSubscription.current?.();\n                  };\n              }, [ws, queryClient]);\n\n              React.useEffect(() => {\n                  if (!ws) return () => 0;\n\n                  const mutationCache = queryClient.getMutationCache();\n\n                  const mutationListener = createMutationListener(ws);\n\n                  mutationCache.getAll().forEach(mutationListener);\n\n                  mutationCacheSubscription.current = mutationCache.subscribe(\n                      ({ mutation, type }) =>\n                          (type === \"added\" || type === \"updated\") &&\n                          mutationListener(mutation),\n                  );\n\n                  return () => {\n                      mutationCacheSubscription.current?.();\n                  };\n              }, [ws, queryClient]);\n\n              return {};\n          };\n","import { DevtoolsEvent, send } from \"@refinedev/devtools-shared\";\nimport { Mutation, Query } from \"@tanstack/react-query\";\n\nimport { createIdentifier } from \"./create-identifier\";\nimport { XRayResponse } from \"./get-xray\";\n\nexport const createMutationListener =\n    (ws: WebSocket) => (mutation?: Mutation) => {\n        if (!mutation?.meta?.trace) return;\n\n        const meta: XRayResponse = mutation?.meta as any;\n\n        new Promise<void>((resolve) => {\n            send(ws, DevtoolsEvent.ACTIVITY, {\n                type: \"mutation\",\n                identifier: createIdentifier(\n                    mutation?.options.mutationKey,\n                    mutation?.meta?.trace as any,\n                ),\n                key: mutation?.options.mutationKey as any,\n                status: mutation?.state.status,\n                state: mutation?.state,\n                variables: mutation?.state?.variables,\n                ...meta,\n            });\n            resolve();\n        });\n\n        // console.table({\n        //     type: \"mutation\",\n        //     key: mutation?.options.mutationKey,\n        //     id: mutation?.mutationId,\n        //     status: mutation?.state.status,\n        //     trace: mutation?.meta?.trace,\n        //     state: mutation?.state,\n        //     variables: mutation?.state?.variables,\n        // });\n    };\n\nexport const createQueryListener = (ws: WebSocket) => (query: Query) => {\n    if (!query?.meta?.trace) return;\n\n    const meta: XRayResponse = query?.meta as any;\n\n    new Promise<void>((resolve) => {\n        send(ws, DevtoolsEvent.ACTIVITY, {\n            type: \"query\",\n            identifier: createIdentifier(\n                query.queryKey,\n                query.meta?.trace as any,\n            ),\n            key: query.queryKey as any,\n            status: query.state.status,\n            state: query.state,\n            ...meta,\n        });\n        resolve();\n    });\n\n    // console.table({\n    //     type: \"query\",\n    //     key: query.queryKey,\n    //     status: query.state.status,\n    //     trace: query.meta?.trace,\n    //     state: query.state,\n    // });\n};\n","import { TraceType } from \"@refinedev/devtools-shared\";\nimport { MutationKey, QueryKey } from \"@tanstack/react-query\";\n\nexport const createIdentifier = (\n    key?: QueryKey | MutationKey,\n    trace?: TraceType[],\n) => {\n    const simpleTrace = trace?.map(\n        (t) =>\n            `${t.file}:${t.line}:${t.column}#${t.function}-${t.packageName}-${\n                t.isRefine ? 1 : 0\n            }`,\n    );\n    const str = JSON.stringify([...(key ?? []), ...(simpleTrace ?? [])]);\n\n    return str;\n};\n","export * from \"./components\";\nexport * from \"./hooks\";\n\nexport {\n    Action,\n    ActionWithPage,\n    AccessControlProvider,\n    AuditLogProvider,\n    LegacyAuthProvider,\n    AuthBindings,\n    BaseKey,\n    BaseRecord,\n    CanParams,\n    CanReturnType,\n    ConditionalFilter,\n    CreateManyResponse,\n    CreateResponse,\n    CrudFilter,\n    CrudFilters,\n    CrudOperators,\n    CrudSort,\n    CrudSorting,\n    CustomResponse,\n    DeleteManyResponse,\n    DeleteOneResponse,\n    FormAction,\n    GetListResponse,\n    GetManyResponse,\n    GetOneResponse,\n    HttpError,\n    LayoutProps,\n    LiveEvent,\n    LiveModeProps,\n    LogicalFilter,\n    LogParams,\n    MapDataFn,\n    MetaQuery,\n    MetaDataQuery,\n    MutationMode,\n    NotificationProvider,\n    OpenNotificationParams,\n    Option,\n    Pagination,\n    PromptProps,\n    RedirectionTypes,\n    RedirectAction,\n    ResourceErrorRouterParams,\n    ResourceProps,\n    ResourceRouterParams,\n    RouteAction,\n    SortOrder,\n    SuccessErrorNotification,\n    TitleProps,\n    TranslationProvider,\n    UpdateManyResponse,\n    UpdateResponse,\n    I18nProvider,\n    IAccessControlContext,\n    ILegacyAuthContext,\n    IDataContextProvider as DataProvider,\n    ILiveContext as LiveProvider,\n    ILog,\n    ILogData,\n    ILoginForm,\n    INotificationContext,\n    IResourceComponents,\n    IResourceComponentsProps,\n    IResourceContext as ResourceProvider,\n    ITranslationContext,\n    IResourceItem,\n    IRouterProvider,\n    ITreeMenu,\n    IQueryKeys,\n    AccessControlBindings,\n    DataBindings,\n    i18nBindings,\n    LiveBindings,\n    NotificationsBindings,\n    ResourceBindings,\n    RouterBindings,\n    ParseResponse,\n    ParsedParams,\n    GoConfig,\n    BackFunction,\n    GoFunction,\n    ParseFunction,\n    Prettify,\n    FormWithSyncWithLocationParams,\n    AutoSaveIndicatorProps,\n    AutoSaveProps,\n} from \"./interfaces\";\n\n// all auth types\nexport * from \"./interfaces/auth\";\n\nexport {\n    getDefaultFilter,\n    getDefaultSortOrder,\n    parseTableParams,\n    parseTableParamsFromQuery,\n    setInitialFilters,\n    setInitialSorters,\n    stringifyTableParams,\n    unionFilters,\n    unionSorters,\n} from \"./definitions/table\";\nexport {\n    createTreeView,\n    handleUseParams,\n    importCSVMapper,\n    routeGenerator,\n    userFriendlyResourceName,\n    getNextPageParam,\n    getPreviousPageParam,\n    pickNotDeprecated,\n    legacyResourceTransform,\n    matchResourceFromRoute,\n    useActiveAuthProvider,\n    useUserFriendlyName,\n    queryKeys,\n    pickDataProvider,\n    keys,\n    KeyBuilder,\n} from \"./definitions/helpers\";\nexport { file2Base64 } from \"./definitions/upload\";\nexport { generateDefaultDocumentTitle } from \"./definitions\";\n\nexport { ResourceContext } from \"./contexts/resource/index\";\nexport { TranslationContext } from \"./contexts/translation/index\";\nexport { AccessControlContext } from \"./contexts/accessControl/index\";\n","import React, { useEffect, useState } from \"react\";\n\nimport {\n    useNavigation,\n    useTranslate,\n    useResource,\n    useGo,\n    useRouterType,\n} from \"@hooks\";\n\n/**\n * When the app is navigated to a non-existent route, refine shows a default error page.\n * A custom error component can be used for this error page.\n *\n * @see {@link https://refine.dev/docs/packages/documentation/routers/} for more details.\n */\nexport const ErrorComponent: React.FC = () => {\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const translate = useTranslate();\n    const { push } = useNavigation();\n    const go = useGo();\n    const routerType = useRouterType();\n\n    const { resource, action } = useResource();\n\n    useEffect(() => {\n        if (resource && action) {\n            setErrorMessage(\n                translate(\n                    \"pages.error.info\",\n                    {\n                        action: action,\n                        resource: resource.name,\n                    },\n                    `You may have forgotten to add the \"${action}\" component to \"${resource.name}\" resource.`,\n                ),\n            );\n        }\n    }, [resource, action]);\n\n    return (\n        <>\n            <h1>\n                {translate(\n                    \"pages.error.404\",\n                    undefined,\n                    \"Sorry, the page you visited does not exist.\",\n                )}\n            </h1>\n            {errorMessage && <p>{errorMessage}</p>}\n            <button\n                onClick={() => {\n                    if (routerType === \"legacy\") {\n                        push(\"/\");\n                    } else {\n                        go({ to: \"/\" });\n                    }\n                }}\n            >\n                {translate(\"pages.error.backHome\", undefined, \"Back Home\")}\n            </button>\n        </>\n    );\n};\n","import {\n    useQuery,\n    UseQueryResult,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useKeys } from \"@hooks/useKeys\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { PermissionResponse } from \"../../../interfaces\";\n\nexport type UsePermissionsLegacyProps<TData = any> = {\n    v3LegacyAuthProviderCompatible: true;\n    options?: UseQueryOptions<TData>;\n};\n\nexport type UsePermissionsProps<TData = PermissionResponse> = {\n    v3LegacyAuthProviderCompatible?: false;\n    options?: UseQueryOptions<TData>;\n};\n\nexport type UsePermissionsCombinedProps<TData = any> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    options?: UseQueryOptions<TData> | UseQueryOptions<PermissionResponse>;\n};\n\nexport type UsePermissionsLegacyReturnType<TData = any> = UseQueryResult<\n    TData,\n    unknown\n>;\n\nexport type UsePermissionsReturnType<TData = PermissionResponse> =\n    UseQueryResult<TData, unknown>;\n\nexport type UsePermissionsCombinedReturnType<TData = any> =\n    | UseQueryResult<TData, unknown>\n    | UseQueryResult<PermissionResponse, unknown>;\n\nexport function usePermissions<TData = any>(\n    props: UsePermissionsLegacyProps<TData>,\n): UsePermissionsLegacyReturnType<TData>;\n\nexport function usePermissions<TData = PermissionResponse>(\n    props?: UsePermissionsProps<TData>,\n): UsePermissionsReturnType<TData>;\n\nexport function usePermissions<TData = any>(\n    props?: UsePermissionsCombinedProps<TData>,\n): UsePermissionsCombinedReturnType<TData>;\n\n/**\n * `usePermissions` calls the `getPermissions` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/usePermissions} for more details.\n *\n * @typeParam TData - Result data of the query\n *\n */\nexport function usePermissions<TData = any>({\n    v3LegacyAuthProviderCompatible = false,\n    options,\n}: UsePermissionsProps<TData> | UsePermissionsLegacyProps<TData> = {}):\n    | UsePermissionsReturnType\n    | UsePermissionsLegacyReturnType<TData> {\n    const { getPermissions: legacyGetPermission } = useLegacyAuthContext();\n    const { getPermissions } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const queryResponse = useQuery<TData>(\n        keys().auth().action(\"permissions\").get(preferLegacyKeys),\n        // Enabled check for `getPermissions` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        (getPermissions as (params?: unknown) => Promise<TData>) ??\n            (() => Promise.resolve(undefined)),\n        {\n            enabled: !v3LegacyAuthProviderCompatible && !!getPermissions,\n            ...(v3LegacyAuthProviderCompatible ? {} : options),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible ? {} : options?.meta),\n                ...getXRay(\"usePermissions\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const legacyQueryResponse = useQuery<TData>(\n        [\n            ...keys().auth().action(\"permissions\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        // Enabled check for `getPermissions` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        legacyGetPermission ?? (() => Promise.resolve(undefined)),\n        {\n            enabled: v3LegacyAuthProviderCompatible && !!legacyGetPermission,\n            ...(v3LegacyAuthProviderCompatible ? options : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible ? options?.meta : {}),\n                ...getXRay(\"usePermissions\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n","import qs, { IStringifyOptions } from \"qs\";\nimport unionWith from \"lodash/unionWith\";\nimport differenceWith from \"lodash/differenceWith\";\nimport warnOnce from \"warn-once\";\n\nimport {\n    CrudFilters,\n    CrudSorting,\n    CrudFilter,\n    CrudSort,\n    CrudOperators,\n    SortOrder,\n} from \"../../interfaces\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\n\nexport const parseTableParams = (url: string) => {\n    const { current, pageSize, sorter, sorters, filters } = qs.parse(\n        url.substring(1), // remove first ? character\n    );\n\n    return {\n        parsedCurrent: current && Number(current),\n        parsedPageSize: pageSize && Number(pageSize),\n        parsedSorter: (pickNotDeprecated(sorters, sorter) as CrudSorting) ?? [],\n        parsedFilters: (filters as CrudFilters) ?? [],\n    };\n};\n\nexport const parseTableParamsFromQuery = (params: any) => {\n    const url = qs.stringify(params);\n    return parseTableParams(`/${url}`);\n};\n\n/**\n * @internal This function is used to stringify table params from the useTable hook.\n */\nexport const stringifyTableParams = (params: {\n    pagination?: { current?: number; pageSize?: number };\n    sorters: CrudSorting;\n    filters: CrudFilters;\n    [key: string]: any;\n}): string => {\n    const options: IStringifyOptions = {\n        skipNulls: true,\n        arrayFormat: \"indices\",\n        encode: false,\n    };\n    const { pagination, sorter, sorters, filters, ...rest } = params;\n\n    const queryString = qs.stringify(\n        {\n            ...rest,\n            ...(pagination ? pagination : {}),\n            sorters: pickNotDeprecated(sorters, sorter),\n            filters,\n        },\n        options,\n    );\n\n    return queryString;\n};\n\nexport const compareFilters = (\n    left: CrudFilter,\n    right: CrudFilter,\n): boolean => {\n    if (\n        left.operator !== \"and\" &&\n        left.operator !== \"or\" &&\n        right.operator !== \"and\" &&\n        right.operator !== \"or\"\n    ) {\n        return (\n            (\"field\" in left ? left.field : undefined) ==\n                (\"field\" in right ? right.field : undefined) &&\n            left.operator == right.operator\n        );\n    }\n\n    return (\n        (\"key\" in left ? left.key : undefined) ==\n            (\"key\" in right ? right.key : undefined) &&\n        left.operator == right.operator\n    );\n};\n\nexport const compareSorters = (left: CrudSort, right: CrudSort): boolean =>\n    left.field == right.field;\n// Keep only one CrudFilter per type according to compareFilters\n// Items in the array that is passed first to unionWith have higher priority\n// CrudFilter items with undefined values are necessary to signify no filter\n// After union, don't keep CrudFilter items with undefined value in the result\n// Items in the arrays with higher priority are put at the end.\nexport const unionFilters = (\n    permanentFilter: CrudFilters,\n    newFilters: CrudFilters,\n    prevFilters: CrudFilters = [],\n): CrudFilters => {\n    const isKeyRequired = newFilters.filter(\n        (f) => (f.operator === \"or\" || f.operator === \"and\") && !f.key,\n    );\n\n    if (isKeyRequired.length > 1) {\n        warnOnce(\n            true,\n            `[conditionalFilters]: You have created multiple Conditional Filters at the top level, this requires the key parameter. \\nFor more information, see https://refine.dev/docs/advanced-tutorials/data-provider/handling-filters/#top-level-multiple-conditional-filters-usage`,\n        );\n    }\n\n    return unionWith(\n        permanentFilter,\n        newFilters,\n        prevFilters,\n        compareFilters,\n    ).filter(\n        (crudFilter) =>\n            crudFilter.value !== undefined &&\n            crudFilter.value !== null &&\n            (crudFilter.operator !== \"or\" ||\n                (crudFilter.operator === \"or\" &&\n                    crudFilter.value.length !== 0)) &&\n            (crudFilter.operator !== \"and\" ||\n                (crudFilter.operator === \"and\" &&\n                    crudFilter.value.length !== 0)),\n    );\n};\n\nexport const unionSorters = (\n    permanentSorter: CrudSorting,\n    newSorters: CrudSorting,\n): CrudSorting =>\n    unionWith(permanentSorter, newSorters, compareSorters).filter(\n        (crudSorter) =>\n            crudSorter.order !== undefined && crudSorter.order !== null,\n    );\n// Prioritize filters in the permanentFilter and put it at the end of result array\nexport const setInitialFilters = (\n    permanentFilter: CrudFilters,\n    defaultFilter: CrudFilters,\n): CrudFilters => [\n    ...differenceWith(defaultFilter, permanentFilter, compareFilters),\n    ...permanentFilter,\n];\n\nexport const setInitialSorters = (\n    permanentSorter: CrudSorting,\n    defaultSorter: CrudSorting,\n): CrudSorting => [\n    ...differenceWith(defaultSorter, permanentSorter, compareSorters),\n    ...permanentSorter,\n];\n\nexport const getDefaultSortOrder = (\n    columnName: string,\n    sorter?: CrudSorting,\n): SortOrder | undefined => {\n    if (!sorter) {\n        return undefined;\n    }\n\n    const sortItem = sorter.find((item) => item.field === columnName);\n\n    if (sortItem) {\n        return sortItem.order as SortOrder;\n    }\n\n    return undefined;\n};\n\nexport const getDefaultFilter = (\n    columnName: string,\n    filters?: CrudFilters,\n    operatorType: CrudOperators = \"eq\",\n): CrudFilter[\"value\"] | undefined => {\n    const filter = filters?.find((filter) => {\n        if (\n            filter.operator !== \"or\" &&\n            filter.operator !== \"and\" &&\n            \"field\" in filter\n        ) {\n            const { operator, field } = filter;\n            return field === columnName && operator === operatorType;\n        }\n        return undefined;\n    });\n\n    if (filter) {\n        return filter.value || [];\n    }\n\n    return undefined;\n};\n","export const userFriendlySecond = (miliseconds: number): number => {\n    return miliseconds / 1000; //convert to seconds\n};\n","import zip from \"lodash/zip\";\nimport fromPairs from \"lodash/fromPairs\";\nimport { MapDataFn } from \"../../../interfaces\";\n\nexport const importCSVMapper = <TItem = any, TVariables = any>(\n    data: any[][],\n    mapData: MapDataFn<TItem, TVariables> = (item) => item as any,\n): TVariables[] => {\n    const [headers, ...body] = data;\n    return body\n        .map((entry) => fromPairs(zip(headers, entry)))\n        .map((item: any, index, array: any) =>\n            mapData.call(undefined, item, index, array),\n        );\n};\n","import pluralize from \"pluralize\";\nimport { humanizeString } from \"@definitions\";\n\n/**\n * A method that the internal uses\n * @internal\n * @deprecated use `useUserFriendlyName` instead.\n */\nexport const userFriendlyResourceName = (\n    resource = \"\",\n    type: \"singular\" | \"plural\",\n): string => {\n    const humanizeResource = humanizeString(resource);\n    if (type === \"singular\") {\n        return pluralize.singular(humanizeResource);\n    }\n    return pluralize.plural(humanizeResource);\n};\n","export const handleUseParams = (params: any = {}): any => {\n    if (params?.id) {\n        return {\n            ...params,\n            id: decodeURIComponent(params.id),\n        };\n    }\n    return params;\n};\n","/*\n * Returns first value that is not undefined.\n * @internal This is an internal helper function. Please do not use externally.\n */\nexport const pickNotDeprecated = <T extends unknown[]>(\n    ...args: T\n): T[never] => {\n    return args.find((arg) => typeof arg !== \"undefined\");\n};\n","import { BaseKey } from \"src/interfaces\";\n\ntype ParametrizedDataActions = \"list\" | \"infinite\";\ntype IdRequiredDataActions = \"one\";\ntype IdsRequiredDataActions = \"many\";\ntype DataMutationActions =\n    | \"custom\"\n    | \"customMutation\"\n    | \"create\"\n    | \"createMany\"\n    | \"update\"\n    | \"updateMany\"\n    | \"delete\"\n    | \"deleteMany\";\n\ntype AuthActionType =\n    | \"login\"\n    | \"logout\"\n    | \"identity\"\n    | \"register\"\n    | \"forgotPassword\"\n    | \"check\"\n    | \"onError\"\n    | \"permissions\"\n    | \"updatePassword\";\n\ntype AuditActionType = \"list\" | \"log\" | \"rename\";\n\ntype IdType = BaseKey;\ntype IdsType = IdType[];\n\ntype ParamsType = any;\n\ntype KeySegment = string | IdType | IdsType | ParamsType;\n\nexport function arrayFindIndex<T>(array: T[], slice: T[]): number {\n    return array.findIndex(\n        (item, index) =>\n            index <= array.length - slice.length &&\n            slice.every(\n                (sliceItem, sliceIndex) =>\n                    array[index + sliceIndex] === sliceItem,\n            ),\n    );\n}\n\nexport function arrayReplace<T>(\n    array: T[],\n    partToBeReplaced: T[],\n    newPart: T[],\n): T[] {\n    const newArray: T[] = [...array];\n    const startIndex = arrayFindIndex(array, partToBeReplaced);\n\n    if (startIndex !== -1) {\n        newArray.splice(startIndex, partToBeReplaced.length, ...newPart);\n    }\n\n    return newArray;\n}\n\nexport function stripUndefined(segments: KeySegment[]) {\n    return segments.filter((segment) => segment !== undefined);\n}\n\nfunction convertToLegacy(segments: KeySegment[]) {\n    // for `list`, `many` and `one`\n    if (segments[0] === \"data\") {\n        // [data, dpName, resource, action, ...];\n        const newSegments = segments.slice(1);\n\n        if (newSegments[2] === \"many\") {\n            newSegments[2] = \"getMany\";\n        } else if (newSegments[2] === \"infinite\") {\n            newSegments[2] = \"list\";\n        } else if (newSegments[2] === \"one\") {\n            newSegments[2] = \"detail\";\n        } else if (newSegments[1] === \"custom\") {\n            const newParams = {\n                ...newSegments[2],\n            };\n            delete newParams.method;\n            delete newParams.url;\n\n            return [\n                newSegments[0],\n                newSegments[1],\n                newSegments[2].method,\n                newSegments[2].url,\n                newParams,\n            ];\n        }\n\n        return newSegments;\n    }\n    // for `audit` -> `logList`\n    if (segments[0] === \"audit\") {\n        // [audit, resource, action, params] (for log and list)\n        // or\n        // [audit, action, params] (for rename)\n        if (segments[2] === \"list\") {\n            return [\"logList\", segments[1], segments[3]];\n        }\n    }\n    // for `access` -> `useCan`\n    if (segments[0] === \"access\") {\n        // [access, resource, action, params]\n        if (segments.length === 4) {\n            return [\n                \"useCan\",\n                {\n                    resource: segments[1],\n                    action: segments[2],\n                    ...segments[3], // params: { params, enabled }\n                },\n            ];\n        }\n    }\n    // for `auth`\n    if (segments[0] === \"auth\") {\n        if (arrayFindIndex(segments, [\"auth\", \"login\"]) !== -1) {\n            return [\"useLogin\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"logout\"]) !== -1) {\n            return [\"useLogout\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"identity\"]) !== -1) {\n            return [\"getUserIdentity\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"register\"]) !== -1) {\n            return [\"useRegister\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"forgotPassword\"]) !== -1) {\n            return [\"useForgotPassword\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"check\"]) !== -1) {\n            return [\"useAuthenticated\", segments[2]]; // [auth, check, params]\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"onError\"]) !== -1) {\n            return [\"useCheckError\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"permissions\"]) !== -1) {\n            return [\"usePermissions\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"updatePassword\"]) !== -1) {\n            return [\"useUpdatePassword\"];\n        }\n    }\n    return segments;\n}\n\nclass BaseKeyBuilder {\n    segments: KeySegment[] = [];\n\n    constructor(segments: KeySegment[] = []) {\n        this.segments = segments;\n    }\n\n    key() {\n        return this.segments;\n    }\n\n    legacy() {\n        return convertToLegacy(this.segments);\n    }\n\n    get(legacy?: boolean) {\n        return legacy ? this.legacy() : this.segments;\n    }\n}\n\nclass ParamsKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    params(paramsValue?: ParamsType) {\n        return new BaseKeyBuilder([...this.segments, paramsValue]);\n    }\n}\n\nclass DataIdRequiringKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    id(idValue?: IdType) {\n        return new ParamsKeyBuilder([\n            ...this.segments,\n            idValue ? String(idValue) : undefined,\n        ]);\n    }\n}\n\nclass DataIdsRequiringKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    ids(...idsValue: IdsType) {\n        return new ParamsKeyBuilder([\n            ...this.segments,\n            ...(idsValue.length ? [idsValue.map((el) => String(el))] : []),\n        ]);\n    }\n}\n\nclass DataResourceKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    action(actionType: ParametrizedDataActions): ParamsKeyBuilder;\n    action(actionType: IdRequiredDataActions): DataIdRequiringKeyBuilder;\n    action(actionType: IdsRequiredDataActions): DataIdsRequiringKeyBuilder;\n    action(\n        actionType:\n            | ParametrizedDataActions\n            | IdRequiredDataActions\n            | IdsRequiredDataActions,\n    ):\n        | ParamsKeyBuilder\n        | DataIdRequiringKeyBuilder\n        | DataIdsRequiringKeyBuilder {\n        if (actionType === \"one\") {\n            return new DataIdRequiringKeyBuilder([\n                ...this.segments,\n                actionType,\n            ]);\n        } else if (actionType === \"many\") {\n            return new DataIdsRequiringKeyBuilder([\n                ...this.segments,\n                actionType,\n            ]);\n        } else if ([\"list\", \"infinite\"].includes(actionType)) {\n            return new ParamsKeyBuilder([...this.segments, actionType]);\n        } else {\n            throw new Error(\"Invalid action type\");\n        }\n    }\n}\n\nclass DataKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    resource(resourceName?: string) {\n        return new DataResourceKeyBuilder([...this.segments, resourceName]);\n    }\n\n    mutation(mutationName: DataMutationActions) {\n        return new ParamsKeyBuilder([\n            ...(mutationName === \"custom\" ? this.segments : [this.segments[0]]),\n            mutationName,\n        ]);\n    }\n}\n\nclass AuthKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    action(actionType: AuthActionType) {\n        return new ParamsKeyBuilder([...this.segments, actionType]);\n    }\n}\n\nclass AccessResourceKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    action(resourceName: string) {\n        return new ParamsKeyBuilder([...this.segments, resourceName]);\n    }\n}\n\nclass AccessKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    resource(resourceName?: string) {\n        return new AccessResourceKeyBuilder([...this.segments, resourceName]);\n    }\n}\n\nclass AuditActionKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    action(actionType: Extract<AuditActionType, \"list\">) {\n        return new ParamsKeyBuilder([...this.segments, actionType]);\n    }\n}\n\nclass AuditKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    resource(resourceName?: string) {\n        return new AuditActionKeyBuilder([...this.segments, resourceName]);\n    }\n\n    action(actionType: Extract<AuditActionType, \"rename\" | \"log\">) {\n        return new ParamsKeyBuilder([...this.segments, actionType]);\n    }\n}\n\nexport class KeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    data(name?: string) {\n        return new DataKeyBuilder([\"data\", name || \"default\"]);\n    }\n\n    auth() {\n        return new AuthKeyBuilder([\"auth\"]);\n    }\n\n    access() {\n        return new AccessKeyBuilder([\"access\"]);\n    }\n\n    audit() {\n        return new AuditKeyBuilder([\"audit\"]);\n    }\n}\n\nexport const keys = () => new KeyBuilder([]);\n","import { IQueryKeys } from \"src/interfaces\";\nimport { QueryKey } from \"@tanstack/react-query\";\n\nimport { MetaQuery } from \"src/interfaces\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\nimport { keys as newKeys } from \"../keys\";\n\n/**\n * @deprecated `queryKeys` is deprecated. Please use `keys` instead.\n */\nexport const queryKeys = (\n    resource?: string,\n    dataProviderName?: string,\n    meta?: MetaQuery,\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery | undefined,\n): IQueryKeys => {\n    const providerName = dataProviderName || \"default\";\n    const keys: IQueryKeys = {\n        all: [providerName],\n        resourceAll: [providerName, resource || \"\"],\n        list: (config) => [\n            ...keys.resourceAll,\n            \"list\",\n            {\n                ...config,\n                ...(pickNotDeprecated(meta, metaData) || {}),\n            } as QueryKey,\n        ],\n        many: (ids) =>\n            [\n                ...keys.resourceAll,\n                \"getMany\",\n                (ids && ids.map(String)) as QueryKey,\n                { ...(pickNotDeprecated(meta, metaData) || {}) } as QueryKey,\n            ].filter((item) => item !== undefined),\n        detail: (id) => [\n            ...keys.resourceAll,\n            \"detail\",\n            id?.toString(),\n            { ...(pickNotDeprecated(meta, metaData) || {}) } as QueryKey,\n        ],\n        logList: (meta) =>\n            [\"logList\", resource, meta as any, metaData as QueryKey].filter(\n                (item) => item !== undefined,\n            ),\n    };\n    return keys;\n};\n\nexport const queryKeysReplacement = (preferLegacyKeys?: boolean) => {\n    return (\n        resource?: string,\n        dataProviderName?: string,\n        meta?: MetaQuery,\n        /**\n         * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n         */\n        metaData?: MetaQuery | undefined,\n    ): IQueryKeys => {\n        const providerName = dataProviderName || \"default\";\n\n        const keys: IQueryKeys = {\n            all: newKeys().data(providerName).get(preferLegacyKeys),\n            resourceAll: newKeys()\n                .data(dataProviderName)\n                .resource(resource ?? \"\")\n                .get(preferLegacyKeys),\n            list: (config) =>\n                newKeys()\n                    .data(dataProviderName)\n                    .resource(resource ?? \"\")\n                    .action(\"list\")\n                    .params({\n                        ...config,\n                        ...(pickNotDeprecated(meta, metaData) || {}),\n                    })\n                    .get(preferLegacyKeys),\n            many: (ids) =>\n                newKeys()\n                    .data(dataProviderName)\n                    .resource(resource ?? \"\")\n                    .action(\"many\")\n                    .ids(...(ids ?? []))\n                    .params({\n                        ...(pickNotDeprecated(meta, metaData) || {}),\n                    })\n                    .get(preferLegacyKeys),\n            detail: (id) =>\n                newKeys()\n                    .data(dataProviderName)\n                    .resource(resource ?? \"\")\n                    .action(\"one\")\n                    .id(id ?? \"\")\n                    .params({\n                        ...(pickNotDeprecated(meta, metaData) || {}),\n                    })\n                    .get(preferLegacyKeys),\n            logList: (meta) =>\n                [\n                    ...newKeys()\n                        .audit()\n                        .resource(resource)\n                        .action(\"list\")\n                        .params(meta)\n                        .get(preferLegacyKeys),\n                    metaData as QueryKey,\n                ].filter((item) => item !== undefined),\n        };\n\n        return keys;\n    };\n};\n","export const hasPermission = (\n    permissions: string[] | undefined,\n    action: string | undefined,\n): boolean => {\n    if (!permissions || !action) {\n        return false;\n    }\n    return !!permissions.find((i) => i === action);\n};\n","/**\n * Check if a segment is a parameter. (e.g. :id)\n */\nexport const isParameter = (segment: string) => {\n    return segment.startsWith(\":\");\n};\n","/**\n * Split a path to segments.\n */\nexport const splitToSegments = (path: string) => {\n    const segments = path.split(\"/\").filter((segment) => segment !== \"\");\n    return segments;\n};\n","import { splitToSegments } from \"./split-to-segments\";\n\n/**\n * Checks if the both routes have the same number of segments.\n */\nexport const isSegmentCountsSame = (route: string, resourceRoute: string) => {\n    const routeSegments = splitToSegments(route);\n    const resourceRouteSegments = splitToSegments(resourceRoute);\n\n    return routeSegments.length === resourceRouteSegments.length;\n};\n","/**\n * Remove leading and trailing slashes from a route.\n */\nexport const removeLeadingTrailingSlashes = (route: string) => {\n    return route.replace(/^\\/|\\/$/g, \"\");\n};\n","import { isParameter } from \"./is-parameter\";\nimport { isSegmentCountsSame } from \"./is-segment-counts-same\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { splitToSegments } from \"./split-to-segments\";\n\n/**\n * This function if the route and resourceRoute match by segments.\n * - First, trailing and leading slashes are removed\n * - Then, the route and resourceRoute are split to segments and checked if they have the same number of segments\n * - Then, each segment is checked if it is a parameter or if it matches the resourceRoute segment\n * - If all segments match, the function returns true, otherwise false\n */\nexport const checkBySegments = (route: string, resourceRoute: string) => {\n    const stdRoute = removeLeadingTrailingSlashes(route);\n    const stdResourceRoute = removeLeadingTrailingSlashes(resourceRoute);\n    // we need to check if the route and resourceRoute have the same number of segments\n    // if not, we can't match them\n    if (!isSegmentCountsSame(stdRoute, stdResourceRoute)) {\n        return false;\n    }\n\n    const routeSegments = splitToSegments(stdRoute);\n    const resourceRouteSegments = splitToSegments(stdResourceRoute);\n\n    return resourceRouteSegments.every((segment, index) => {\n        return isParameter(segment) || segment === routeSegments[index];\n    });\n};\n","import { Action } from \"src/interfaces\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\n\n/**\n * This helper function returns the default path for a given action and resource.\n * It also applies the parentPrefix if provided.\n * This is used by the legacy router and the new router if the resource doesn't provide a custom path.\n */\nexport const getDefaultActionPath = (\n    resourceName: string,\n    action: Action,\n    parentPrefix?: string,\n): string => {\n    const cleanParentPrefix = removeLeadingTrailingSlashes(parentPrefix || \"\");\n\n    let path = `${cleanParentPrefix}${\n        cleanParentPrefix ? \"/\" : \"\"\n    }${resourceName}`;\n\n    if (action === \"list\") {\n        path = `${path}`;\n    } else if (action === \"create\") {\n        path = `${path}/create`;\n    } else if (action === \"edit\") {\n        path = `${path}/edit/:id`;\n    } else if (action === \"show\") {\n        path = `${path}/show/:id`;\n    } else if (action === \"clone\") {\n        path = `${path}/clone/:id`;\n    }\n\n    return `/${path.replace(/^\\//, \"\")}`;\n};\n","import { IResourceItem } from \"src/interfaces\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * Returns the parent resource of the given resource.\n * Works both with the deprecated `parentName` and the new `parent` property.\n */\nexport const getParentResource = (\n    resource: IResourceItem,\n    resources: IResourceItem[],\n): IResourceItem | undefined => {\n    const parentName = pickNotDeprecated(\n        resource.meta?.parent,\n        resource.options?.parent,\n        resource.parentName,\n    );\n\n    if (!parentName) {\n        return undefined;\n    }\n\n    const parentResource = resources.find(\n        (resource) => (resource.identifier ?? resource.name) === parentName,\n    );\n\n    /**\n     * If the parent resource is not found, we return a resource object with the name of the parent resource.\n     * Because we still want to have nesting and prefixing for the resource even if the parent is not explicitly defined.\n     */\n    return parentResource ?? { name: parentName };\n};\n","import { ResourceProps } from \"src/interfaces/bindings/resource\";\nimport { getParentResource } from \"./get-parent-resource\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\n\n/**\n * Returns the parent prefix for a resource\n * - If `legacy` is provided, the computation is based on the `route` option of the resource\n */\nexport const getParentPrefixForResource = (\n    resource: ResourceProps,\n    resources: ResourceProps[],\n    /**\n     * Uses legacy route if true (`options.route`)\n     */\n    legacy?: boolean,\n): string | undefined => {\n    const parents: ResourceProps[] = [];\n\n    let parent = getParentResource(resource, resources);\n\n    while (parent) {\n        parents.push(parent);\n        parent = getParentResource(parent, resources);\n    }\n\n    if (parents.length === 0) {\n        return undefined;\n    }\n\n    return `/${parents\n        .reverse()\n        .map((parent) => {\n            const v = legacy\n                ? parent.options?.route ?? parent.name\n                : parent.name;\n            return removeLeadingTrailingSlashes(v);\n        })\n        .join(\"/\")}`;\n};\n","import { Action, IResourceItem } from \"src/interfaces\";\nimport { getDefaultActionPath } from \"./get-default-action-path\";\nimport { getParentPrefixForResource } from \"./get-parent-prefix-for-resource\";\n\nexport type ResourceActionRoute = {\n    action: Action;\n    resource: IResourceItem;\n    route: string;\n};\n\n/**\n * This function returns all the routes for available actions for a resource.\n * - If the action is a function, it means we're fallbacking to default path for the action\n * - If the action is a string, it means we don't have the component, but we have the route\n * - If the action is an object, it means we have the component and the route\n * - It will return an array of objects with the action, the resource and the route\n */\nexport const getActionRoutesFromResource = (\n    resource: IResourceItem,\n    resources: IResourceItem[],\n    /**\n     * Uses legacy route if true (`options.route`)\n     */\n    legacy?: boolean,\n) => {\n    const actions: ResourceActionRoute[] = [];\n\n    const actionList: Action[] = [\"list\", \"show\", \"edit\", \"create\", \"clone\"];\n\n    const parentPrefix = getParentPrefixForResource(\n        resource,\n        resources,\n        legacy,\n    );\n\n    actionList.forEach((action) => {\n        const item =\n            legacy && action === \"clone\" ? resource.create : resource[action];\n\n        let route: string | undefined = undefined;\n\n        if (typeof item === \"function\" || legacy) {\n            // means we're fallbacking to default path for the action\n            route = getDefaultActionPath(\n                legacy\n                    ? resource.meta?.route ??\n                          resource.options?.route ??\n                          resource.name\n                    : resource.name,\n                action,\n                legacy ? parentPrefix : undefined,\n            );\n        } else if (typeof item === \"string\") {\n            // means we don't have the component, but we have the route\n            route = item;\n        } else if (typeof item === \"object\") {\n            // means we have the component and the route\n            route = item.path;\n        }\n\n        if (route) {\n            actions.push({\n                action,\n                resource,\n                route: `/${route.replace(/^\\//, \"\")}`,\n            });\n        }\n    });\n\n    return actions;\n};\n","import { ResourceActionRoute } from \"./get-action-routes-from-resource\";\nimport { isParameter } from \"./is-parameter\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { splitToSegments } from \"./split-to-segments\";\n\n/**\n * Picks the most eligible route from the given matched routes.\n * - If there's only one route, it returns it.\n * - If there's more than one route, it picks the best non-greedy match.\n */\nexport const pickMatchedRoute = (\n    routes: ResourceActionRoute[],\n): ResourceActionRoute | undefined => {\n    // these routes are all matched, we should pick the least parametrized one\n\n    // no routes, no match\n    if (routes.length === 0) {\n        return undefined;\n    }\n\n    // no need to calculate the route segments if there's only one route\n    if (routes.length === 1) {\n        return routes[0];\n    }\n\n    // remove trailing and leading slashes\n    // split them to segments\n    const sanitizedRoutes = routes.map((route) => ({\n        ...route,\n        splitted: splitToSegments(removeLeadingTrailingSlashes(route.route)),\n    }));\n\n    // at this point, before calling this function, we already checked for segment lenghts and expect all of them to be the same\n    const segmentsCount = sanitizedRoutes[0]?.splitted.length ?? 0;\n\n    let eligibleRoutes: Array<(typeof sanitizedRoutes)[number]> = [\n        ...sanitizedRoutes,\n    ];\n\n    // loop through the segments\n    for (let i = 0; i < segmentsCount; i++) {\n        const nonParametrizedRoutes = eligibleRoutes.filter(\n            (route) => !isParameter(route.splitted[i]),\n        );\n\n        if (nonParametrizedRoutes.length === 0) {\n            // keep the eligible routes as they are\n            continue;\n        }\n        if (nonParametrizedRoutes.length === 1) {\n            // no need to continue, we found the route\n            eligibleRoutes = nonParametrizedRoutes;\n            break;\n        }\n\n        // we have more than one non-parametrized route, we need to check the next segment\n        eligibleRoutes = nonParametrizedRoutes;\n    }\n\n    return eligibleRoutes[0];\n};\n","import { Action, IResourceItem } from \"../../../interfaces\";\nimport { checkBySegments } from \"./check-by-segments\";\nimport { getActionRoutesFromResource } from \"./get-action-routes-from-resource\";\nimport { pickMatchedRoute } from \"./pick-matched-route\";\n\n/**\n * Match the resource from the route\n * - It will calculate all possible routes for resources and their actions\n * - It will check if the route matches any of the possible routes\n * - It will return the most eligible resource and action\n */\nexport const matchResourceFromRoute = (\n    route: string,\n    resources: IResourceItem[],\n): {\n    found: boolean;\n    resource?: IResourceItem;\n    action?: Action;\n    matchedRoute?: string;\n} => {\n    const allActionRoutes = resources.flatMap((resource) => {\n        return getActionRoutesFromResource(resource, resources);\n    });\n\n    const allFound = allActionRoutes.filter((actionRoute) => {\n        return checkBySegments(route, actionRoute.route);\n    });\n\n    const mostEligible = pickMatchedRoute(allFound);\n\n    return {\n        found: !!mostEligible,\n        resource: mostEligible?.resource,\n        action: mostEligible?.action,\n        matchedRoute: mostEligible?.route,\n    };\n};\n","import { ResourceProps } from \"src/interfaces/bindings/resource\";\nimport { getParentPrefixForResource } from \"../router\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * generates route for the resource based on parents and custom routes\n * @deprecated this is a **legacy** function and works only with the old resource definition\n */\nexport const routeGenerator = (\n    item: ResourceProps,\n    resourcesFromProps: ResourceProps[],\n): string | undefined => {\n    let route;\n\n    const parentPrefix = getParentPrefixForResource(\n        item,\n        resourcesFromProps,\n        true,\n    );\n\n    if (parentPrefix) {\n        const meta = pickNotDeprecated(item.meta, item.options);\n        route = `${parentPrefix}/${meta?.route ?? item.name}`;\n    } else {\n        route = item.options?.route ?? item.name;\n    }\n\n    return `/${route.replace(/^\\//, \"\")}`;\n};\n","import { pickNotDeprecated } from \"@definitions/helpers/pickNotDeprecated\";\nimport { IResourceItem, ITreeMenu, IMenuItem } from \"src/interfaces\";\n\n/**\n * @deprecated This helper is deprecated. Please use `createTree` instead.\n */\nexport const createTreeView = (\n    resources: IResourceItem[] | IMenuItem[],\n): ITreeMenu[] | ITreeMenu[] => {\n    const tree = [];\n    const resourcesRouteObject: { [key: string]: any } = {};\n    const resourcesNameObject: { [key: string]: any } = {};\n    let parent: IResourceItem | IMenuItem;\n    let child: ITreeMenu;\n\n    for (let i = 0; i < resources.length; i++) {\n        parent = resources[i];\n\n        const route =\n            parent.route ??\n            pickNotDeprecated(parent?.meta, parent.options)?.route ??\n            \"\";\n\n        resourcesRouteObject[route] = parent;\n        resourcesRouteObject[route][\"children\"] = [];\n\n        resourcesNameObject[parent.name] = parent;\n        resourcesNameObject[parent.name][\"children\"] = [];\n    }\n\n    for (const name in resourcesRouteObject) {\n        if (resourcesRouteObject.hasOwnProperty(name)) {\n            child = resourcesRouteObject[name];\n\n            if (child.parentName && resourcesNameObject[child.parentName]) {\n                resourcesNameObject[child.parentName][\"children\"].push(child);\n            } else {\n                tree.push(child);\n            }\n        }\n    }\n\n    return tree;\n};\n","export const humanizeString = (text: string): string => {\n    text = text.replace(/([a-z]{1})([A-Z]{1})/g, \"$1-$2\");\n    text = text.replace(/([A-Z]{1})([A-Z]{1})([a-z]{1})/g, \"$1-$2$3\");\n\n    text = text\n        .toLowerCase()\n        .replace(/[_-]+/g, \" \")\n        .replace(/\\s{2,}/g, \" \")\n        .trim();\n    text = text.charAt(0).toUpperCase() + text.slice(1);\n\n    return text;\n};\n// https://www.npmjs.com/package/humanize-string\n","import React from \"react\";\nimport pluralize from \"pluralize\";\nimport { humanizeString } from \"../../definitions/helpers/humanizeString\";\n\nimport {\n    IRefineContextOptions,\n    IRefineContext,\n    IRefineContextProvider,\n} from \"./IRefineContext\";\nimport { DefaultLayout } from \"@components/layoutWrapper/defaultLayout\";\n\nimport { LoginPage as DefaultLoginPage } from \"@components/pages\";\n\nexport const defaultRefineOptions: IRefineContextOptions = {\n    mutationMode: \"pessimistic\",\n    syncWithLocation: false,\n    undoableTimeout: 5000,\n    warnWhenUnsavedChanges: false,\n    liveMode: \"off\",\n    redirect: {\n        afterCreate: \"list\",\n        afterClone: \"list\",\n        afterEdit: \"list\",\n    },\n    overtime: {\n        interval: 1000,\n    },\n    textTransformers: {\n        humanize: humanizeString,\n        plural: pluralize.plural,\n        singular: pluralize.singular,\n    },\n    disableServerSideValidation: false,\n};\n\nexport const RefineContext = React.createContext<IRefineContext>({\n    hasDashboard: false,\n    mutationMode: \"pessimistic\",\n    warnWhenUnsavedChanges: false,\n    syncWithLocation: false,\n    undoableTimeout: 5000,\n    Title: undefined,\n    Sider: undefined,\n    Header: undefined,\n    Footer: undefined,\n    Layout: DefaultLayout,\n    OffLayoutArea: undefined,\n    liveMode: \"off\",\n    onLiveEvent: undefined,\n    options: defaultRefineOptions,\n});\n\nexport const RefineContextProvider: React.FC<IRefineContextProvider> = ({\n    hasDashboard,\n    mutationMode,\n    warnWhenUnsavedChanges,\n    syncWithLocation,\n    undoableTimeout,\n    children,\n    DashboardPage,\n    Title,\n    Layout = DefaultLayout,\n    Header,\n    Sider,\n    Footer,\n    OffLayoutArea,\n    LoginPage = DefaultLoginPage,\n    catchAll,\n    liveMode = \"off\",\n    onLiveEvent,\n    options,\n}) => {\n    return (\n        <RefineContext.Provider\n            value={{\n                hasDashboard,\n                mutationMode,\n                warnWhenUnsavedChanges,\n                syncWithLocation,\n                Title,\n                undoableTimeout,\n                Layout,\n                Header,\n                Sider,\n                Footer,\n                OffLayoutArea,\n                DashboardPage,\n                LoginPage,\n                catchAll,\n                liveMode,\n                onLiveEvent,\n                options,\n            }}\n        >\n            {children}\n        </RefineContext.Provider>\n    );\n};\n","import React from \"react\";\n\nimport { LayoutProps } from \"../../../interfaces\";\n\nexport const DefaultLayout: React.FC<LayoutProps> = ({ children }) => {\n    return <div>{children}</div>;\n};\n","import { QueryClient, QueryClientConfig } from \"@tanstack/react-query\";\n\nimport { defaultRefineOptions } from \"@contexts/refine\";\nimport {\n    IRefineContextOptions,\n    IRefineOptions,\n    LiveModeProps,\n    MutationMode,\n} from \"src/interfaces\";\n\ntype HandleRefineOptionsProps = {\n    options?: IRefineOptions;\n    mutationMode?: MutationMode;\n    syncWithLocation?: boolean;\n    warnWhenUnsavedChanges?: boolean;\n    undoableTimeout?: number;\n    liveMode?: LiveModeProps[\"liveMode\"];\n    disableTelemetry?: boolean;\n    reactQueryClientConfig?: QueryClientConfig;\n    reactQueryDevtoolConfig?: any | false;\n};\n\ntype HandleRefineOptionsReturnValues = {\n    optionsWithDefaults: IRefineContextOptions;\n    disableTelemetryWithDefault: boolean;\n    reactQueryWithDefaults: {\n        clientConfig: QueryClientConfig | InstanceType<typeof QueryClient>;\n        devtoolConfig: false | any;\n    };\n};\n\nexport const handleRefineOptions = ({\n    options,\n    disableTelemetry,\n    liveMode,\n    mutationMode,\n    reactQueryClientConfig,\n    reactQueryDevtoolConfig,\n    syncWithLocation,\n    undoableTimeout,\n    warnWhenUnsavedChanges,\n}: HandleRefineOptionsProps = {}): HandleRefineOptionsReturnValues => {\n    const optionsWithDefaults: IRefineContextOptions = {\n        breadcrumb: options?.breadcrumb,\n        mutationMode:\n            options?.mutationMode ??\n            mutationMode ??\n            defaultRefineOptions.mutationMode,\n        undoableTimeout:\n            options?.undoableTimeout ??\n            undoableTimeout ??\n            defaultRefineOptions.undoableTimeout,\n        syncWithLocation:\n            options?.syncWithLocation ??\n            syncWithLocation ??\n            defaultRefineOptions.syncWithLocation,\n        warnWhenUnsavedChanges:\n            options?.warnWhenUnsavedChanges ??\n            warnWhenUnsavedChanges ??\n            defaultRefineOptions.warnWhenUnsavedChanges,\n        liveMode:\n            options?.liveMode ?? liveMode ?? defaultRefineOptions.liveMode,\n        redirect: {\n            afterCreate:\n                options?.redirect?.afterCreate ??\n                defaultRefineOptions.redirect.afterCreate,\n            afterClone:\n                options?.redirect?.afterClone ??\n                defaultRefineOptions.redirect.afterClone,\n            afterEdit:\n                options?.redirect?.afterEdit ??\n                defaultRefineOptions.redirect.afterEdit,\n        },\n        overtime: options?.overtime ?? defaultRefineOptions.overtime,\n        textTransformers: {\n            humanize:\n                options?.textTransformers?.humanize ??\n                defaultRefineOptions.textTransformers.humanize,\n            plural:\n                options?.textTransformers?.plural ??\n                defaultRefineOptions.textTransformers.plural,\n            singular:\n                options?.textTransformers?.singular ??\n                defaultRefineOptions.textTransformers.singular,\n        },\n        disableServerSideValidation:\n            options?.disableServerSideValidation ??\n            defaultRefineOptions.disableServerSideValidation,\n        projectId: options?.projectId,\n        useNewQueryKeys: options?.useNewQueryKeys,\n    };\n\n    const disableTelemetryWithDefault =\n        options?.disableTelemetry ?? disableTelemetry ?? false;\n\n    const reactQueryWithDefaults = {\n        clientConfig:\n            options?.reactQuery?.clientConfig ?? reactQueryClientConfig ?? {},\n        devtoolConfig:\n            options?.reactQuery?.devtoolConfig ?? reactQueryDevtoolConfig ?? {},\n    };\n\n    return {\n        optionsWithDefaults,\n        disableTelemetryWithDefault,\n        reactQueryWithDefaults,\n    };\n};\n","import { Action, IRefineContextOptions, RedirectAction } from \"src/interfaces\";\n\ntype RedirectPageProps = {\n    redirectFromProps?: RedirectAction;\n    action: Action;\n    redirectOptions: IRefineContextOptions[\"redirect\"];\n};\n\nexport const redirectPage = ({\n    redirectFromProps,\n    action,\n    redirectOptions,\n}: RedirectPageProps): RedirectAction => {\n    if (redirectFromProps || redirectFromProps === false) {\n        return redirectFromProps;\n    }\n\n    switch (action) {\n        case \"clone\":\n            return redirectOptions.afterClone;\n        case \"create\":\n            return redirectOptions.afterCreate;\n        case \"edit\":\n            return redirectOptions.afterEdit;\n        default:\n            return false;\n    }\n};\n","type EachResolve<TResolve, Response> = (\n    result: TResolve,\n    index: number,\n) => Response;\ntype EachReject<TReject, Response> = (\n    error: TReject,\n    index: number,\n) => Response;\n\nexport const sequentialPromises = async <\n    TResolve = unknown,\n    TReject = unknown,\n    TResolveResponse = unknown,\n    TRejectResponse = unknown,\n>(\n    promises: (() => Promise<TResolve>)[],\n    onEachResolve: EachResolve<TResolve, TResolveResponse>,\n    onEachReject: EachReject<TReject, TRejectResponse>,\n): Promise<(TResolveResponse | TRejectResponse)[]> => {\n    const results = [];\n    // @ts-expect-error Remove this when we enable `downLevelIterations`\n    for (const [index, promise] of promises.entries()) {\n        try {\n            const result = await promise();\n\n            results.push(onEachResolve(result, index));\n        } catch (error) {\n            results.push(onEachReject(error as TReject, index));\n        }\n    }\n    return results;\n};\n","import { IResourceItem } from \"src/interfaces/bindings/resource\";\nimport { removeLeadingTrailingSlashes } from \"../router/remove-leading-trailing-slashes\";\n\n/**\n * Picks the resource based on the provided identifier.\n * Identifier fallbacks to `name` if `identifier` is not explicitly provided to the resource.\n * If legacy is true, then resource is matched by `route` first and then by `name`.\n */\nexport const pickResource = (\n    identifier?: string,\n    resources: IResourceItem[] = [],\n    /**\n     * If true, the identifier will be checked for `route` and `name` properties\n     */\n    legacy = false,\n): IResourceItem | undefined => {\n    if (!identifier) {\n        return undefined;\n    }\n\n    if (legacy) {\n        const resourceByRoute = resources.find(\n            (r) =>\n                removeLeadingTrailingSlashes(r.route ?? \"\") ===\n                removeLeadingTrailingSlashes(identifier),\n        );\n\n        const resource = resourceByRoute\n            ? resourceByRoute\n            : resources.find((r) => r.name === identifier);\n\n        return resource;\n    }\n\n    let resource = resources.find((r) => r.identifier === identifier);\n    if (!resource) {\n        resource = resources.find((r) => r.name === identifier);\n    }\n\n    return resource;\n};\n","import { IResourceItem } from \"src/interfaces/bindings/resource\";\nimport { pickResource } from \"../pick-resource\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * Picks the data provider name based on the provided name or fallbacks to resource definition, or `default`.\n */\nexport const pickDataProvider = (\n    resourceName?: string,\n    dataProviderName?: string,\n    resources?: IResourceItem[],\n) => {\n    if (dataProviderName) {\n        return dataProviderName;\n    }\n\n    /**\n     * In this helper, we don't do `route` based matching therefore there's no need to check for `legacy` behaviors.\n     */\n    const resource = pickResource(resourceName, resources);\n\n    const meta = pickNotDeprecated(resource?.meta, resource?.options);\n\n    if (meta?.dataProviderName) {\n        return meta.dataProviderName;\n    }\n\n    return \"default\";\n};\n","export const handleMultiple = async <TData = unknown>(\n    promises: Promise<{ data: TData }>[],\n): Promise<{ data: TData[] }> => {\n    return {\n        data: (await Promise.all(promises)).map((res) => res.data),\n    };\n};\n","import { GetListResponse } from \"../../../interfaces\";\n\nexport const getNextPageParam = (lastPage: GetListResponse) => {\n    const { pagination, cursor } = lastPage;\n\n    // cursor pagination\n    if (cursor?.next) {\n        return cursor.next;\n    }\n\n    const current = pagination?.current || 1;\n\n    const pageSize = pagination?.pageSize || 10;\n    const totalPages = Math.ceil((lastPage.total || 0) / pageSize);\n\n    return current < totalPages ? Number(current) + 1 : undefined;\n};\n\nexport const getPreviousPageParam = (lastPage: GetListResponse) => {\n    const { pagination, cursor } = lastPage;\n\n    // cursor pagination\n    if (cursor?.prev) {\n        return cursor.prev;\n    }\n\n    const current = pagination?.current || 1;\n\n    return current === 1 ? undefined : current - 1;\n};\n","import {\n    IResourceItem,\n    ResourceProps,\n} from \"../../../interfaces/bindings/resource\";\n\nimport { routeGenerator } from \"../routeGenerator\";\n\n/**\n * For the legacy definition of resources, we did a basic transformation for provided resources\n * - This is meant to provide an easier way to access properties.\n * - In the new definition, we don't need to do transformations and properties can be accessed via helpers or manually.\n * This is kept for backward compability\n */\nexport const legacyResourceTransform = (resources: ResourceProps[]) => {\n    const _resources: IResourceItem[] = [];\n\n    resources.forEach((resource) => {\n        _resources.push({\n            ...resource,\n            label: resource.meta?.label ?? resource.options?.label,\n            route: routeGenerator(resource, resources),\n            canCreate: !!resource.create,\n            canEdit: !!resource.edit,\n            canShow: !!resource.show,\n            canDelete: resource.canDelete,\n        });\n    });\n\n    return _resources;\n};\n","import { splitToSegments } from \"./split-to-segments\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { isParameter } from \"./is-parameter\";\n\n/**\n * Picks the route parameters from the given route.\n * (e.g. /users/:id/posts/:postId => ['id', 'postId'])\n */\nexport const pickRouteParams = (route: string) => {\n    const segments = splitToSegments(removeLeadingTrailingSlashes(route));\n\n    return segments.flatMap((s) => {\n        if (isParameter(s)) {\n            return [s.slice(1)];\n        }\n\n        return [];\n    });\n};\n","/**\n * Prepares the route params by checking the existing params and meta data.\n * Meta data is prioritized over params.\n * Params are prioritized over predetermined id, action and resource.\n * This means, we can use `meta` for user supplied params (both manually or from the query string)\n */\nexport const prepareRouteParams = <\n    TRouteParams extends Record<string, unknown> = Record<string, unknown>,\n>(\n    routeParams: (keyof TRouteParams)[],\n    meta: Record<string, unknown> = {},\n): Partial<TRouteParams> => {\n    return routeParams.reduce((acc, key) => {\n        const value = meta[key as string];\n        if (typeof value !== \"undefined\") {\n            acc[key] = value as TRouteParams[keyof TRouteParams];\n        }\n        return acc;\n    }, {} as Partial<TRouteParams>);\n};\n","import { MetaQuery, ParseResponse } from \"src/interfaces\";\nimport { pickRouteParams } from \"./pick-route-params\";\nimport { prepareRouteParams } from \"./prepare-route-params\";\n\n/**\n * This function will compose a route with the given params and meta.\n * - A route can have parameters like (eg: /users/:id)\n * - First we pick the route params from the route (eg: [id])\n * - Then we prepare the route params with the given params and meta (eg: { id: 1 })\n * - Then we replace the route params with the prepared route params (eg: /users/1)\n */\nexport const composeRoute = (\n    designatedRoute: string,\n    resourceMeta: MetaQuery = {},\n    parsed: ParseResponse = {},\n    meta: Record<string, unknown> = {},\n): string => {\n    // pickRouteParams (from the route)\n    const routeParams = pickRouteParams(designatedRoute);\n    // prepareRouteParams (from route params, params and meta)\n    const preparedRouteParams = prepareRouteParams(routeParams, {\n        ...resourceMeta,\n        ...(typeof parsed?.id !== \"undefined\" ? { id: parsed.id } : {}),\n        ...(typeof parsed?.action !== \"undefined\"\n            ? { action: parsed.action }\n            : {}),\n        ...(typeof parsed?.resource !== \"undefined\"\n            ? { resource: parsed.resource }\n            : {}),\n        ...parsed?.params,\n        ...meta,\n    });\n    // replace route params with prepared route params\n    return designatedRoute.replace(/:([^\\/]+)/g, (match, key) => {\n        const fromParams = preparedRouteParams[key];\n        if (typeof fromParams !== \"undefined\") {\n            return `${fromParams}`;\n        }\n        return match;\n    });\n};\n","import React, { PropsWithChildren } from \"react\";\n\nimport { useNavigation } from \"@hooks\";\nimport { ILegacyAuthContext, IAuthBindingsContext } from \"../../interfaces\";\n\n/**\n * @deprecated `LegacyAuthContext` is deprecated with refine@4, use `AuthBindingsContext` instead, however, we still support `LegacyAuthContext` for backward compatibility.\n */\nexport const LegacyAuthContext = React.createContext<ILegacyAuthContext>({});\n\n/**\n * @deprecated `LegacyAuthContextProvider` is deprecated with refine@4, use `AuthBindingsContextProvider` instead, however, we still support `LegacyAuthContextProvider` for backward compatibility.\n */\nexport const LegacyAuthContextProvider: React.FC<\n    ILegacyAuthContext & {\n        children?: React.ReactNode;\n    }\n> = ({ children, isProvided, ...authOperations }) => {\n    const { replace } = useNavigation();\n\n    const loginFunc = async (params: any) => {\n        try {\n            const result = await authOperations.login?.(params);\n\n            return result;\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    };\n\n    const registerFunc = async (params: any) => {\n        try {\n            const result = await authOperations.register?.(params);\n\n            return result;\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    };\n\n    const logoutFunc = async (params: any) => {\n        try {\n            const redirectPath = await authOperations.logout?.(params);\n\n            return redirectPath;\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    };\n\n    const checkAuthFunc = async (params: any) => {\n        try {\n            await authOperations.checkAuth?.(params);\n            return Promise.resolve();\n        } catch (error) {\n            if ((error as { redirectPath?: string })?.redirectPath) {\n                replace((error as { redirectPath: string }).redirectPath);\n            }\n\n            return Promise.reject(error);\n        }\n    };\n\n    return (\n        <LegacyAuthContext.Provider\n            value={{\n                ...authOperations,\n                login: loginFunc,\n                logout: logoutFunc,\n                checkAuth: checkAuthFunc,\n                register: registerFunc,\n                isProvided,\n            }}\n        >\n            {children}\n        </LegacyAuthContext.Provider>\n    );\n};\n\nexport const AuthBindingsContext = React.createContext<\n    Partial<IAuthBindingsContext>\n>({});\n\nexport const AuthBindingsContextProvider: React.FC<\n    PropsWithChildren<IAuthBindingsContext>\n> = ({ children, isProvided, ...authBindings }) => {\n    const handleLogin = async (params: unknown) => {\n        try {\n            const result = await authBindings.login?.(params);\n\n            return result;\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in login: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleRegister = async (params: unknown) => {\n        try {\n            const result = await authBindings.register?.(params);\n\n            return result;\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in register: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleLogout = async (params: unknown) => {\n        try {\n            const result = await authBindings.logout?.(params);\n\n            return result;\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in logout: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleCheck = async (params: unknown) => {\n        try {\n            const result = await authBindings.check?.(params);\n\n            return Promise.resolve(result);\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in check: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleForgotPassword = async (params: unknown) => {\n        try {\n            const result = await authBindings.forgotPassword?.(params);\n\n            return Promise.resolve(result);\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in forgotPassword: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleUpdatePassword = async (params: unknown) => {\n        try {\n            const result = await authBindings.updatePassword?.(params);\n            return Promise.resolve(result);\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in updatePassword: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    return (\n        <AuthBindingsContext.Provider\n            value={{\n                ...authBindings,\n                login: handleLogin as IAuthBindingsContext[\"login\"],\n                logout: handleLogout as IAuthBindingsContext[\"logout\"],\n                check: handleCheck as IAuthBindingsContext[\"check\"],\n                register: handleRegister as IAuthBindingsContext[\"register\"],\n                forgotPassword:\n                    handleForgotPassword as IAuthBindingsContext[\"forgotPassword\"],\n                updatePassword:\n                    handleUpdatePassword as IAuthBindingsContext[\"updatePassword\"],\n                isProvided,\n            }}\n        >\n            {children}\n        </AuthBindingsContext.Provider>\n    );\n};\n\n/**\n * @deprecated `useLegacyAuthContext` is deprecated with refine@4, use `useAuthBindingsContext` instead, however, we still support `useLegacyAuthContext` for backward compatibility.\n */\nexport const useLegacyAuthContext = () => {\n    const context = React.useContext(LegacyAuthContext);\n\n    return context;\n};\n\nexport const useAuthBindingsContext = () => {\n    const context = React.useContext(AuthBindingsContext);\n\n    return context;\n};\n","import { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\n/**\n * @returns authProvider or legacyAuthProvider if provided, otherwise null\n * @internal\n * NOTE: Will be removed in v5\n */\nexport const useActiveAuthProvider = () => {\n    const legacyAuthProvider = useLegacyAuthContext();\n    const authProvider = useAuthBindingsContext();\n\n    if (authProvider.isProvided) {\n        return { isLegacy: false, ...authProvider };\n    }\n\n    if (legacyAuthProvider.isProvided) {\n        // legacyAuthProvider interface is different from authProvider interface\n        // we need to convert it to authProvider interface for simple usage\n        // in the future, we will remove legacyAuthProvider\n        return {\n            isLegacy: true,\n            ...legacyAuthProvider,\n            check: legacyAuthProvider.checkAuth,\n            onError: legacyAuthProvider.checkError,\n            getIdentity: legacyAuthProvider.getUserIdentity,\n        };\n    }\n\n    return null;\n};\n","import { Pagination } from \"../../../interfaces\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\ntype HandlePaginationParamsProps = {\n    hasPagination?: boolean;\n    pagination?: Pagination;\n    configPagination?: Pagination;\n};\n\nexport const handlePaginationParams = ({\n    hasPagination,\n    pagination,\n    configPagination,\n}: HandlePaginationParamsProps = {}): Required<Pagination> => {\n    const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n    const mode = pagination?.mode ?? hasPaginationString;\n\n    const current =\n        pickNotDeprecated(pagination?.current, configPagination?.current) ?? 1;\n\n    const pageSize =\n        pickNotDeprecated(pagination?.pageSize, configPagination?.pageSize) ??\n        10;\n\n    return {\n        current,\n        pageSize,\n        mode,\n    };\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useMediaQuery = (query: string) => {\n    const [matches, setMatches] = useState(false);\n\n    useEffect(() => {\n        const media = window.matchMedia(query);\n        if (media.matches !== matches) {\n            setMatches(media.matches);\n        }\n        const listener = () => setMatches(media.matches);\n        window.addEventListener(\"resize\", listener);\n        return () => window.removeEventListener(\"resize\", listener);\n    }, [matches, query]);\n\n    return matches;\n};\n","import type { useTranslate } from \"@hooks/translate\";\n\nexport const safeTranslate = (\n    translate: ReturnType<typeof useTranslate>,\n    key: string,\n    defaultMessage?: string,\n    options?: any,\n) => {\n    const translated = options\n        ? translate(key, options, defaultMessage)\n        : translate(key, defaultMessage);\n\n    const fallback = defaultMessage ?? key;\n\n    if (translated === key || typeof translated === \"undefined\") {\n        return fallback;\n    }\n\n    return translated;\n};\n","import { IResourceItem } from \"@contexts/resource\";\nimport { userFriendlyResourceName } from \"../userFriendlyResourceName\";\nimport type { useTranslate } from \"@hooks/translate\";\nimport { safeTranslate } from \"../safe-translate\";\n\n/**\n * Generates document title for the given resource and action.\n */\nexport function generateDefaultDocumentTitle(\n    translate: ReturnType<typeof useTranslate>,\n    resource?: IResourceItem,\n    action?: string,\n    id?: string,\n    resourceName?: string,\n) {\n    const actionPrefixMatcher = {\n        create: \"Create new \",\n        clone: `#${id ?? \"\"} Clone `,\n        edit: `#${id ?? \"\"} Edit `,\n        show: `#${id ?? \"\"} Show `,\n        list: \"\",\n    };\n\n    const identifier = resource?.identifier ?? resource?.name;\n\n    const resourceNameFallback =\n        resource?.label ??\n        resource?.meta?.label ??\n        userFriendlyResourceName(\n            identifier,\n            action === \"list\" ? \"plural\" : \"singular\",\n        );\n\n    const resourceNameWithFallback = resourceName ?? resourceNameFallback;\n\n    const defaultTitle = safeTranslate(\n        translate,\n        \"documentTitle.default\",\n        \"refine\",\n    );\n    const suffix = safeTranslate(\n        translate,\n        \"documentTitle.suffix\",\n        \" | refine\",\n    );\n    let autoGeneratedTitle = defaultTitle;\n\n    if (action && identifier) {\n        autoGeneratedTitle = safeTranslate(\n            translate,\n            `documentTitle.${identifier}.${action}`,\n            `${\n                actionPrefixMatcher[\n                    action as keyof typeof actionPrefixMatcher\n                ] ?? \"\"\n            }${resourceNameWithFallback}${suffix}`,\n            { id },\n        );\n    }\n\n    return autoGeneratedTitle;\n}\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport { IRefineContextOptions } from \"../../interfaces\";\n\ntype UseMutationModeType = () => {\n    mutationMode: IRefineContextOptions[\"mutationMode\"];\n    undoableTimeout: IRefineContextOptions[\"undoableTimeout\"];\n};\n\n/**\n * Mutation mode determines which mode the mutation runs with.\n * Mutations can run under three different modes: `pessimistic`, `optimistic` and `undoable`.\n * Each mode corresponds to a different type of user experience.\n *\n * @see {@link https://refine.dev/docs/guides-and-concepts/mutation-mode} for more details.\n */\nexport const useMutationMode: UseMutationModeType = () => {\n    const { mutationMode, undoableTimeout } = useContext(RefineContext);\n\n    return { mutationMode, undoableTimeout };\n};\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport { UnsavedWarnContext } from \"@contexts/unsavedWarn\";\nimport {\n    IRefineContextOptions,\n    IUnsavedWarnContext,\n} from \"../../../interfaces\";\n\ntype UseWarnAboutChangeType = () => {\n    warnWhenUnsavedChanges: IRefineContextOptions[\"warnWhenUnsavedChanges\"];\n    warnWhen: NonNullable<IUnsavedWarnContext[\"warnWhen\"]>;\n    setWarnWhen: NonNullable<IUnsavedWarnContext[\"setWarnWhen\"]>;\n};\n\n/**\n * When you have unsaved changes and try to leave the current page, **refine** shows a confirmation modal box.\n * To activate this feature, set the `warnWhenUnsavedChanges` to `true`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config#warnwhenunsavedchanges} for more details.\n */\nexport const useWarnAboutChange: UseWarnAboutChangeType = () => {\n    const { warnWhenUnsavedChanges } = useContext(RefineContext);\n\n    const { warnWhen, setWarnWhen } = useContext(UnsavedWarnContext);\n\n    return {\n        warnWhenUnsavedChanges,\n        warnWhen: Boolean(warnWhen),\n        setWarnWhen: setWarnWhen ?? (() => undefined),\n    };\n};\n","import React, { ReactNode, useState } from \"react\";\n\nimport { IUnsavedWarnContext } from \"./IUnsavedWarnContext\";\n\nexport const UnsavedWarnContext = React.createContext<IUnsavedWarnContext>({});\n\nexport const UnsavedWarnContextProvider: React.FC<{ children: ReactNode }> = ({\n    children,\n}) => {\n    const [warnWhen, setWarnWhen] = useState(false);\n\n    return (\n        <UnsavedWarnContext.Provider value={{ warnWhen, setWarnWhen }}>\n            {children}\n        </UnsavedWarnContext.Provider>\n    );\n};\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport { IRefineContextOptions } from \"../../interfaces\";\n\ntype UseSyncWithLocationType = () => {\n    syncWithLocation: IRefineContextOptions[\"syncWithLocation\"];\n};\n\n/**\n * List query parameter values can be edited manually by typing directly in the URL.\n * To activate this feature `syncWithLocation` needs to be set to `true`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#syncwithlocation} for more details.\n */\nexport const useSyncWithLocation: UseSyncWithLocationType = () => {\n    const { syncWithLocation } = useContext(RefineContext);\n\n    return { syncWithLocation };\n};\n","import { useContext } from \"react\";\nimport { RefineContext } from \"@contexts/refine\";\nimport { TitleProps } from \"../../interfaces\";\n\n/**\n * `useTitle` returns a component that calls the `<Title>` passed to the `<Refine>`.\n * In this way, it becomes easier for us to access this component in various parts of the application.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/refine/useTitle} for more details.\n */\nexport const useTitle: () => React.FC<TitleProps> | undefined = () => {\n    const { Title } = useContext(RefineContext);\n\n    return Title;\n};\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\n\nexport const useRefineContext = () => {\n    const {\n        Footer,\n        Header,\n        Layout,\n        OffLayoutArea,\n        Sider,\n        Title,\n        hasDashboard,\n        mutationMode,\n        syncWithLocation,\n        undoableTimeout,\n        warnWhenUnsavedChanges,\n        DashboardPage,\n        LoginPage,\n        catchAll,\n        options,\n    } = useContext(RefineContext);\n\n    return {\n        Footer,\n        Header,\n        Layout,\n        OffLayoutArea,\n        Sider,\n        Title,\n        hasDashboard,\n        mutationMode,\n        syncWithLocation,\n        undoableTimeout,\n        warnWhenUnsavedChanges,\n        DashboardPage,\n        LoginPage,\n        catchAll,\n        options,\n    };\n};\n","import { useRefineContext } from \"@hooks/refine\";\n\n/**\n * A method that the internal uses\n * @internal\n */\nexport const useUserFriendlyName = () => {\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n\n    const getFriendlyName = (\n        name = \"\",\n        type: \"singular\" | \"plural\",\n    ): string => {\n        const humanizeName = textTransformers.humanize(name);\n        if (type === \"singular\") {\n            return textTransformers.singular(humanizeName);\n        }\n        return textTransformers.plural(humanizeName);\n    };\n\n    return getFriendlyName;\n};\n","export const file2Base64 = (file: any): Promise<string> => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        const resultHandler = () => {\n            if (reader.result) {\n                reader.removeEventListener(\"load\", resultHandler, false);\n\n                resolve(reader.result as string);\n            }\n        };\n\n        reader.addEventListener(\"load\", resultHandler, false);\n\n        reader.readAsDataURL(file.originFileObj as Blob);\n        reader.onerror = (error) => {\n            reader.removeEventListener(\"load\", resultHandler, false);\n            return reject(error);\n        };\n    });\n};\n","import { useRefineContext } from \"..\";\nimport { keys } from \"@definitions/index\";\n\nexport const useKeys = () => {\n    const {\n        options: { useNewQueryKeys },\n    } = useRefineContext();\n\n    return {\n        keys,\n        preferLegacyKeys: !useNewQueryKeys,\n    };\n};\n","import {\n    useQuery,\n    UseQueryResult,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { IdentityResponse } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseGetIdentityLegacyProps<TData> = {\n    v3LegacyAuthProviderCompatible: true;\n    queryOptions?: UseQueryOptions<TData>;\n};\n\nexport type UseGetIdentityProps<TData = IdentityResponse> = {\n    v3LegacyAuthProviderCompatible?: false;\n    queryOptions?: UseQueryOptions<TData>;\n};\n\nexport type UseGetIdentityCombinedProps<TData = any> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    queryOptions?: UseQueryOptions<TData> | UseQueryOptions<IdentityResponse>;\n};\n\nexport type UseGetIdentityLegacyReturnType<TData> = UseQueryResult<\n    TData,\n    unknown\n>;\n\nexport type UseGetIdentityReturnType<TData = IdentityResponse> = UseQueryResult<\n    TData,\n    unknown\n>;\n\nexport type UsePermissionsCombinedReturnType<TData = any> =\n    | UseQueryResult<TData, unknown>\n    | UseQueryResult<IdentityResponse, unknown>;\n\nexport function useGetIdentity<TData = any>(\n    props: UseGetIdentityLegacyProps<TData>,\n): UseGetIdentityLegacyReturnType<TData>;\n\nexport function useGetIdentity<TData = IdentityResponse>(\n    props?: UseGetIdentityProps<TData>,\n): UseGetIdentityReturnType<TData>;\n\nexport function useGetIdentity<TData = any>(\n    props?: UseGetIdentityCombinedProps<TData>,\n): UsePermissionsCombinedReturnType<TData>;\n\n/**\n * `useGetIdentity` calls the `getUserIdentity` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useGetIdentity} for more details.\n *\n * @typeParam TData - Result data of the query\n *\n */\nexport function useGetIdentity<TData = any>({\n    v3LegacyAuthProviderCompatible = false,\n    queryOptions,\n}: UseGetIdentityProps<TData> | UseGetIdentityLegacyProps<TData> = {}):\n    | UseGetIdentityReturnType<TData>\n    | UseGetIdentityLegacyReturnType<TData> {\n    const { getUserIdentity: legacyGetUserIdentity } = useLegacyAuthContext();\n    const { getIdentity } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const queryResponse = useQuery<TData>(\n        keys().auth().action(\"identity\").get(preferLegacyKeys),\n        // Enabled check for `getIdentity` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        (getIdentity as (params?: unknown) => Promise<TData>) ??\n            (() => Promise.resolve({})),\n        {\n            enabled: !v3LegacyAuthProviderCompatible && !!getIdentity,\n            retry: false,\n            ...(v3LegacyAuthProviderCompatible === true ? {} : queryOptions),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible === true\n                    ? {}\n                    : queryOptions?.meta),\n                ...getXRay(\"useGetIdentity\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const legacyQueryResponse = useQuery<TData>(\n        [\n            ...keys().auth().action(\"identity\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        // Enabled check for `getUserIdentity` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        legacyGetUserIdentity ?? (() => Promise.resolve({})),\n        {\n            enabled: v3LegacyAuthProviderCompatible && !!legacyGetUserIdentity,\n            retry: false,\n            ...(v3LegacyAuthProviderCompatible ? queryOptions : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible ? queryOptions?.meta : {}),\n                ...getXRay(\"useGetIdentity\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useGo, useNavigation, useNotification, useRouterType } from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport {\n    RefineError,\n    OpenNotificationParams,\n    TLogoutData,\n} from \"../../../interfaces\";\nimport { AuthActionResponse } from \"src/interfaces/bindings/auth\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ntype Variables = {\n    redirectPath?: string | false;\n};\n\nexport type UseLogoutLegacyProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TLogoutData,\n            Error | RefineError,\n            (TVariables & Variables) | void,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseLogoutProps<TVariables> = {\n    v3LegacyAuthProviderCompatible?: false;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse,\n            Error | RefineError,\n            (TVariables & Variables) | void,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseLogoutCombinedProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TLogoutData,\n            Error | RefineError,\n            (TVariables & Variables) | void,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseLogoutLegacyReturnType<TVariables> = UseMutationResult<\n    TLogoutData,\n    Error | RefineError,\n    (TVariables & Variables) | void,\n    unknown\n>;\n\nexport type UseLogoutReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    (TVariables & Variables) | void,\n    unknown\n>;\n\nexport type UseLogoutCombinedReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse | TLogoutData,\n    Error | RefineError,\n    (TVariables & Variables) | void,\n    unknown\n>;\n\nexport function useLogout<TVariables = {}>(\n    props: UseLogoutLegacyProps<TVariables>,\n): UseLogoutLegacyReturnType<TVariables>;\n\nexport function useLogout<TVariables = {}>(\n    props?: UseLogoutProps<TVariables>,\n): UseLogoutReturnType<TVariables>;\n\nexport function useLogout<TVariables = {}>(\n    props?: UseLogoutCombinedProps<TVariables>,\n): UseLogoutCombinedReturnType<TVariables>;\n\n/**\n * `useLogout` calls the `logout` method from the {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useLogout} for more details.\n *\n */\nexport function useLogout<TVariables = {}>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}: UseLogoutProps<TVariables> | UseLogoutLegacyProps<TVariables> = {}):\n    | UseLogoutLegacyReturnType<TVariables>\n    | UseLogoutReturnType<TVariables> {\n    const invalidateAuthStore = useInvalidateAuthStore();\n    const routerType = useRouterType();\n    const go = useGo();\n    const { push } = useNavigation();\n    const { open, close } = useNotification();\n    const { logout: legacyLogoutFromContext } = useLegacyAuthContext();\n    const { logout: logoutFromContext } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error | RefineError,\n        (TVariables & Variables) | void,\n        unknown\n    >(keys().auth().action(\"logout\").get(preferLegacyKeys), logoutFromContext, {\n        onSuccess: async (data, variables) => {\n            const { success, error, redirectTo } = data;\n            const { redirectPath } = variables ?? {};\n\n            const redirect = redirectPath ?? redirectTo;\n\n            if (success) {\n                close?.(\"useLogout-error\");\n            }\n\n            if (error || !success) {\n                open?.(buildNotification(error));\n            }\n\n            await invalidateAuthStore();\n\n            if (redirect !== false) {\n                if (routerType === \"legacy\") {\n                    push(redirect ?? \"/login\");\n                } else {\n                    if (redirect) {\n                        go({ to: redirect });\n                    }\n                }\n            }\n        },\n        onError: (error: any) => {\n            open?.(buildNotification(error));\n        },\n        ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible === true\n                ? {}\n                : mutationOptions?.meta),\n            ...getXRay(\"useLogout\", preferLegacyKeys),\n        },\n    });\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TLogoutData,\n        Error | RefineError,\n        (TVariables & Variables) | void,\n        unknown\n    >(\n        [\n            ...keys().auth().action(\"logout\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        legacyLogoutFromContext,\n        {\n            onSuccess: async (data, variables) => {\n                const redirectPath = variables?.redirectPath ?? data;\n\n                await invalidateAuthStore();\n\n                if (redirectPath === false) {\n                    return;\n                }\n\n                if (redirectPath) {\n                    if (routerType === \"legacy\") {\n                        push(redirectPath);\n                    } else {\n                        go({ to: redirectPath });\n                    }\n                    return;\n                }\n\n                if (routerType === \"legacy\") {\n                    push(\"/login\");\n                } else {\n                    go({ to: \"/login\" });\n                }\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible\n                    ? mutationOptions?.meta\n                    : {}),\n                ...getXRay(\"useLogout\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        key: \"useLogout-error\",\n        type: \"error\",\n        message: error?.name || \"Logout Error\",\n        description: error?.message || \"Something went wrong during logout\",\n    };\n};\n","import { useKeys } from \"@hooks/useKeys\";\nimport { useQueryClient } from \"@tanstack/react-query\";\n\nexport const useInvalidateAuthStore = () => {\n    const queryClient = useQueryClient();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const invalidate = async () => {\n        await Promise.all(\n            ([\"check\", \"identity\", \"permissions\"] as const).map((action) =>\n                queryClient.invalidateQueries(\n                    keys().auth().action(action).get(preferLegacyKeys),\n                ),\n            ),\n        );\n    };\n\n    return invalidate;\n};\n","import React from \"react\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport qs from \"qs\";\n\nimport {\n    useNavigation,\n    useRouterContext,\n    useNotification,\n    useRouterType,\n    useParsed,\n    useGo,\n} from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\nimport {\n    RefineError,\n    OpenNotificationParams,\n    TLoginData,\n} from \"../../../interfaces\";\nimport { AuthActionResponse } from \"src/interfaces/bindings/auth\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseLoginLegacyProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TLoginData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseLoginProps<TVariables> = {\n    v3LegacyAuthProviderCompatible?: false;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseLoginCombinedProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TLoginData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseLoginLegacyReturnType<TVariables> = UseMutationResult<\n    TLoginData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseLoginReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseLoginCombinedReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse | TLoginData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport function useLogin<TVariables = {}>(\n    props: UseLoginLegacyProps<TVariables>,\n): UseLoginLegacyReturnType<TVariables>;\n\nexport function useLogin<TVariables = {}>(\n    props?: UseLoginProps<TVariables>,\n): UseLoginReturnType<TVariables>;\n\nexport function useLogin<TVariables = {}>(\n    props?: UseLoginCombinedProps<TVariables>,\n): UseLoginCombinedReturnType<TVariables>;\n\n/**\n * `useLogin` calls `login` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useLogin} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useLogin<TVariables = {}>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}: UseLoginProps<TVariables> | UseLoginLegacyProps<TVariables> = {}):\n    | UseLoginLegacyReturnType<TVariables>\n    | UseLoginReturnType<TVariables> {\n    const invalidateAuthStore = useInvalidateAuthStore();\n    const routerType = useRouterType();\n\n    const go = useGo();\n    const { replace } = useNavigation();\n\n    const parsed = useParsed();\n\n    const { useLocation } = useRouterContext();\n    const { search } = useLocation();\n\n    const { close, open } = useNotification();\n    const { login: legacyLoginFromContext } = useLegacyAuthContext();\n    const { login: loginFromContext } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const to = React.useMemo(() => {\n        if (routerType === \"legacy\") {\n            const legacySearch = qs.parse(search, {\n                ignoreQueryPrefix: true,\n            });\n            return legacySearch.to;\n        } else {\n            return parsed.params?.to;\n        }\n    }, [routerType, parsed.params, search]);\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(keys().auth().action(\"login\").get(preferLegacyKeys), loginFromContext, {\n        onSuccess: async ({ success, redirectTo, error }) => {\n            if (success) {\n                close?.(\"login-error\");\n            }\n\n            if (error || !success) {\n                open?.(buildNotification(error));\n            }\n\n            await invalidateAuthStore();\n\n            if (to && success) {\n                if (routerType === \"legacy\") {\n                    replace(to as string);\n                } else {\n                    go({ to: to as string, type: \"replace\" });\n                }\n            } else if (redirectTo) {\n                if (routerType === \"legacy\") {\n                    replace(redirectTo);\n                } else {\n                    go({ to: redirectTo, type: \"replace\" });\n                }\n            } else {\n                if (routerType === \"legacy\") {\n                    replace(\"/\");\n                }\n            }\n        },\n        onError: (error: any) => {\n            open?.(buildNotification(error));\n        },\n        ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible === true\n                ? {}\n                : mutationOptions?.meta),\n            ...getXRay(\"useLogin\", preferLegacyKeys),\n        },\n    });\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TLoginData,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(\n        [\n            ...keys().auth().action(\"login\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        legacyLoginFromContext,\n        {\n            onSuccess: async (redirectPathFromAuth) => {\n                await invalidateAuthStore();\n\n                if (to) {\n                    replace(to as string);\n                }\n\n                if (redirectPathFromAuth !== false && !to) {\n                    if (typeof redirectPathFromAuth === \"string\") {\n                        if (routerType === \"legacy\") {\n                            replace(redirectPathFromAuth);\n                        } else {\n                            go({ to: redirectPathFromAuth, type: \"replace\" });\n                        }\n                    } else {\n                        if (routerType === \"legacy\") {\n                            replace(\"/\");\n                        } else {\n                            go({ to: \"/\", type: \"replace\" });\n                        }\n                    }\n                }\n\n                close?.(\"login-error\");\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible\n                    ? mutationOptions?.meta\n                    : {}),\n                ...getXRay(\"useLogin\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        message: error?.name || \"Login Error\",\n        description: error?.message || \"Invalid credentials\",\n        key: \"login-error\",\n        type: \"error\",\n    };\n};\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useNavigation, useRouterType, useGo, useNotification } from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\nimport {\n    AuthActionResponse,\n    RefineError,\n    OpenNotificationParams,\n    TLoginData,\n    TRegisterData,\n} from \"../../../interfaces\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseRegisterLegacyProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TRegisterData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseRegisterProps<TVariables> = {\n    v3LegacyAuthProviderCompatible?: false;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseRegisterCombinedProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TRegisterData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseRegisterLegacyReturnType<TVariables> = UseMutationResult<\n    TRegisterData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseRegisterReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseRegisterCombinedReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse | TLoginData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport function useRegister<TVariables = {}>(\n    props: UseRegisterLegacyProps<TVariables>,\n): UseRegisterLegacyReturnType<TVariables>;\n\nexport function useRegister<TVariables = {}>(\n    props?: UseRegisterProps<TVariables>,\n): UseRegisterReturnType<TVariables>;\n\nexport function useRegister<TVariables = {}>(\n    props?: UseRegisterCombinedProps<TVariables>,\n): UseRegisterCombinedReturnType<TVariables>;\n\n/**\n * `useRegister` calls `register` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useRegister} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useRegister<TVariables = {}>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}: UseRegisterProps<TVariables> | UseRegisterLegacyProps<TVariables> = {}):\n    | UseRegisterReturnType<TVariables>\n    | UseRegisterLegacyReturnType<TVariables> {\n    const invalidateAuthStore = useInvalidateAuthStore();\n    const routerType = useRouterType();\n    const go = useGo();\n    const { replace } = useNavigation();\n    const { register: legacyRegisterFromContext } = useLegacyAuthContext();\n    const { register: registerFromContext } = useAuthBindingsContext();\n    const { close, open } = useNotification();\n\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(\n        keys().auth().action(\"register\").get(preferLegacyKeys),\n        registerFromContext,\n        {\n            onSuccess: async ({ success, redirectTo, error }) => {\n                if (success) {\n                    close?.(\"register-error\");\n                }\n\n                if (error || !success) {\n                    open?.(buildNotification(error));\n                }\n\n                await invalidateAuthStore();\n\n                if (redirectTo) {\n                    if (routerType === \"legacy\") {\n                        replace(redirectTo);\n                    } else {\n                        go({ to: redirectTo, type: \"replace\" });\n                    }\n                } else {\n                    if (routerType === \"legacy\") {\n                        replace(\"/\");\n                    }\n                }\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible === true\n                    ? {}\n                    : mutationOptions?.meta),\n                ...getXRay(\"useRegister\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TRegisterData,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(\n        [\n            ...keys().auth().action(\"register\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        legacyRegisterFromContext,\n        {\n            onSuccess: async (redirectPathFromAuth) => {\n                await invalidateAuthStore();\n\n                if (redirectPathFromAuth !== false) {\n                    if (redirectPathFromAuth) {\n                        if (routerType === \"legacy\") {\n                            replace(redirectPathFromAuth);\n                        } else {\n                            go({ to: redirectPathFromAuth, type: \"replace\" });\n                        }\n                    } else {\n                        if (routerType === \"legacy\") {\n                            replace(\"/\");\n                        } else {\n                            go({ to: \"/\", type: \"replace\" });\n                        }\n                    }\n                    close?.(\"register-error\");\n                }\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible\n                    ? mutationOptions?.meta\n                    : {}),\n                ...getXRay(\"useRegister\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        message: error?.name || \"Register Error\",\n        description: error?.message || \"Error while registering\",\n        key: \"register-error\",\n        type: \"error\",\n    };\n};\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useGo, useNavigation, useNotification, useRouterType } from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\nimport {\n    AuthActionResponse,\n    RefineError,\n    OpenNotificationParams,\n    TForgotPasswordData,\n} from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseForgotPasswordLegacyProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TForgotPasswordData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseForgotPasswordProps<TVariables> = {\n    v3LegacyAuthProviderCompatible?: false;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseForgotPasswordCombinedProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TForgotPasswordData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseForgotPasswordLegacyReturnType<TVariables> = UseMutationResult<\n    TForgotPasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseForgotPasswordReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseForgotPasswordCombinedReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse | TForgotPasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport function useForgotPassword<TVariables = {}>(\n    props: UseForgotPasswordLegacyProps<TVariables>,\n): UseForgotPasswordLegacyReturnType<TVariables>;\n\nexport function useForgotPassword<TVariables = {}>(\n    props?: UseForgotPasswordProps<TVariables>,\n): UseForgotPasswordReturnType<TVariables>;\n\nexport function useForgotPassword<TVariables = {}>(\n    props?: UseForgotPasswordCombinedProps<TVariables>,\n): UseForgotPasswordCombinedReturnType<TVariables>;\n\n/**\n * `useForgotPassword` calls `forgotPassword` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useForgotPassword} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useForgotPassword<TVariables = {}>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}:\n    | UseForgotPasswordProps<TVariables>\n    | UseForgotPasswordLegacyProps<TVariables> = {}):\n    | UseForgotPasswordReturnType<TVariables>\n    | UseForgotPasswordLegacyReturnType<TVariables> {\n    const routerType = useRouterType();\n    const go = useGo();\n    const { replace } = useNavigation();\n    const {\n        forgotPassword: v3LegacyAuthProviderCompatibleForgotPasswordFromContext,\n    } = useLegacyAuthContext();\n    const { forgotPassword: forgotPasswordFromContext } =\n        useAuthBindingsContext();\n    const { close, open } = useNotification();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(\n        keys().auth().action(\"forgotPassword\").get(preferLegacyKeys),\n        forgotPasswordFromContext,\n        {\n            onSuccess: ({ success, redirectTo, error }) => {\n                if (success) {\n                    close?.(\"forgot-password-error\");\n                }\n\n                if (error || !success) {\n                    open?.(buildNotification(error));\n                }\n\n                if (redirectTo) {\n                    if (routerType === \"legacy\") {\n                        replace(redirectTo);\n                    } else {\n                        go({ to: redirectTo, type: \"replace\" });\n                    }\n                }\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible === true\n                    ? {}\n                    : mutationOptions?.meta),\n                ...getXRay(\"useForgotPassword\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TForgotPasswordData,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(\n        [\n            ...keys().auth().action(\"forgotPassword\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        v3LegacyAuthProviderCompatibleForgotPasswordFromContext,\n        {\n            onSuccess: (redirectPathFromAuth) => {\n                if (redirectPathFromAuth !== false) {\n                    if (redirectPathFromAuth) {\n                        if (routerType === \"legacy\") {\n                            replace(redirectPathFromAuth);\n                        } else {\n                            go({ to: redirectPathFromAuth, type: \"replace\" });\n                        }\n                    }\n                }\n                close?.(\"forgot-password-error\");\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible\n                    ? mutationOptions?.meta\n                    : {}),\n                ...getXRay(\"useForgotPassword\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        message: error?.name || \"Forgot Password Error\",\n        description: error?.message || \"Error while resetting password\",\n        key: \"forgot-password-error\",\n        type: \"error\",\n    };\n};\n","import React from \"react\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport qs from \"qs\";\n\nimport {\n    useNavigation,\n    useRouterType,\n    useGo,\n    useParsed,\n    useNotification,\n    useRouterContext,\n} from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport {\n    AuthActionResponse,\n    RefineError,\n    OpenNotificationParams,\n    TUpdatePasswordData,\n    UpdatePasswordFormTypes,\n} from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseUpdatePasswordLegacyProps<\n    TVariables extends UpdatePasswordFormTypes,\n> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TUpdatePasswordData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseUpdatePasswordProps<TVariables extends UpdatePasswordFormTypes> =\n    {\n        v3LegacyAuthProviderCompatible?: false;\n        mutationOptions?: Omit<\n            UseMutationOptions<\n                AuthActionResponse,\n                Error | RefineError,\n                TVariables,\n                unknown\n            >,\n            \"mutationFn\"\n        >;\n    };\n\nexport type UseUpdatePasswordCombinedProps<\n    TVariables extends UpdatePasswordFormTypes,\n> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TUpdatePasswordData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseUpdatePasswordLegacyReturnType<\n    TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n    TUpdatePasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseUpdatePasswordReturnType<\n    TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseUpdatePasswordCombinedReturnType<\n    TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n    AuthActionResponse | TUpdatePasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n    props: UseUpdatePasswordLegacyProps<TVariables>,\n): UseUpdatePasswordLegacyReturnType<TVariables>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n    props?: UseUpdatePasswordProps<TVariables>,\n): UseUpdatePasswordReturnType<TVariables>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n    props?: UseUpdatePasswordCombinedProps<TVariables>,\n): UseUpdatePasswordCombinedReturnType<TVariables>;\n\n/**\n * `useUpdatePassword` calls `updatePassword` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useUpdatePassword} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useUpdatePassword<\n    TVariables extends UpdatePasswordFormTypes = {},\n>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}:\n    | UseUpdatePasswordProps<TVariables>\n    | UseUpdatePasswordLegacyProps<TVariables> = {}):\n    | UseUpdatePasswordReturnType<TVariables>\n    | UseUpdatePasswordLegacyReturnType<TVariables> {\n    const routerType = useRouterType();\n\n    const go = useGo();\n    const { replace } = useNavigation();\n    const { updatePassword: legacyUpdatePasswordFromContext } =\n        useLegacyAuthContext();\n    const { updatePassword: updatePasswordFromContext } =\n        useAuthBindingsContext();\n    const { close, open } = useNotification();\n\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const parsed = useParsed();\n    const { useLocation } = useRouterContext();\n    const { search } = useLocation();\n\n    const params = React.useMemo(() => {\n        if (routerType === \"legacy\") {\n            const queryStrings = qs.parse(search, {\n                ignoreQueryPrefix: true,\n            });\n            return queryStrings ?? {};\n        } else {\n            return parsed.params ?? {};\n        }\n    }, [search, parsed, routerType]);\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error,\n        TVariables,\n        unknown\n    >(\n        keys().auth().action(\"updatePassword\").get(preferLegacyKeys),\n        async (variables) => {\n            return updatePasswordFromContext?.({\n                ...params,\n                ...variables,\n            }) as Promise<AuthActionResponse>;\n        },\n        {\n            onSuccess: ({ success, redirectTo, error }) => {\n                if (success) {\n                    close?.(\"update-password-error\");\n                }\n\n                if (error || !success) {\n                    open?.(buildNotification(error));\n                }\n\n                if (redirectTo) {\n                    if (routerType === \"legacy\") {\n                        replace(redirectTo);\n                    } else {\n                        go({ to: redirectTo, type: \"replace\" });\n                    }\n                }\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible === true\n                    ? {}\n                    : mutationOptions?.meta),\n                ...getXRay(\"useUpdatePassword\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TUpdatePasswordData,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(\n        [\n            ...keys().auth().action(\"updatePassword\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        async (variables) => {\n            return legacyUpdatePasswordFromContext?.({\n                ...params,\n                ...variables,\n            });\n        },\n        {\n            onSuccess: (redirectPathFromAuth) => {\n                if (redirectPathFromAuth !== false) {\n                    if (redirectPathFromAuth) {\n                        if (routerType === \"legacy\") {\n                            replace(redirectPathFromAuth);\n                        } else {\n                            go({ to: redirectPathFromAuth, type: \"replace\" });\n                        }\n                    }\n                }\n                close?.(\"update-password-error\");\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible\n                    ? mutationOptions?.meta\n                    : {}),\n                ...getXRay(\"useUpdatePassword\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        message: error?.name || \"Update Password Error\",\n        description: error?.message || \"Error while updating password\",\n        key: \"update-password-error\",\n        type: \"error\",\n    };\n};\n","import { useQuery, UseQueryResult } from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { CheckResponse } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseIsAuthenticatedLegacyProps = {\n    v3LegacyAuthProviderCompatible: true;\n    params?: any;\n};\n\nexport type UseIsAuthenticatedProps = {\n    v3LegacyAuthProviderCompatible?: false;\n    params?: any;\n};\n\nexport type UseIsAuthenticatedCombinedProps = {\n    v3LegacyAuthProviderCompatible: boolean;\n    params?: any;\n};\n\nexport type UseIsAuthenticatedLegacyReturnType = UseQueryResult<any, any>;\n\nexport type UseIsAuthenticatedReturnType = UseQueryResult<CheckResponse, any>;\n\nexport type UseIsAuthenticatedCombinedReturnType = UseQueryResult<\n    CheckResponse | any,\n    any\n>;\n\nexport function useIsAuthenticated(\n    props: UseIsAuthenticatedLegacyProps,\n): UseIsAuthenticatedLegacyReturnType;\n\nexport function useIsAuthenticated(\n    props?: UseIsAuthenticatedProps,\n): UseIsAuthenticatedReturnType;\n\nexport function useIsAuthenticated(\n    props?: UseIsAuthenticatedCombinedProps,\n): UseIsAuthenticatedCombinedReturnType;\n\n/**\n *  `useIsAuthenticated` calls the `checkAuth` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useAuthenticated} for more details.\n */\nexport function useIsAuthenticated({\n    v3LegacyAuthProviderCompatible = false,\n    params,\n}: UseIsAuthenticatedProps | UseIsAuthenticatedLegacyProps = {}):\n    | UseIsAuthenticatedReturnType\n    | UseIsAuthenticatedLegacyReturnType {\n    const { checkAuth } = useLegacyAuthContext();\n    const { check } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const queryResponse = useQuery(\n        keys().auth().action(\"check\").params(params).get(preferLegacyKeys),\n        async () => (await check?.(params)) ?? {},\n        {\n            retry: false,\n            enabled: !v3LegacyAuthProviderCompatible,\n            meta: {\n                ...getXRay(\"useIsAuthenticated\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const legacyQueryResponse = useQuery(\n        [\n            ...keys()\n                .auth()\n                .action(\"check\")\n                .params(params)\n                .get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        async () => (await checkAuth?.(params)) ?? {},\n        {\n            retry: false,\n            enabled: v3LegacyAuthProviderCompatible,\n            meta: {\n                ...getXRay(\"useIsAuthenticated\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n\n/**\n * @deprecated `useAuthenticated` is deprecated with refine@4, use `useIsAuthenticated` instead, however, we still support `useAuthenticated` for backward compatibility.\n */\nexport const useAuthenticated = useIsAuthenticated;\n","import { useMutation, UseMutationResult } from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { OnErrorResponse } from \"../../../interfaces\";\nimport { useGo, useLogout, useNavigation, useRouterType } from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseOnErrorLegacyProps = {\n    v3LegacyAuthProviderCompatible: true;\n};\n\nexport type UseOnErrorProps = {\n    v3LegacyAuthProviderCompatible?: false;\n};\n\nexport type UseOnErrorCombinedProps = {\n    v3LegacyAuthProviderCompatible: boolean;\n};\n\nexport type UseOnErrorLegacyReturnType = UseMutationResult<\n    void,\n    string | undefined,\n    any,\n    unknown\n>;\n\nexport type UseOnErrorReturnType = UseMutationResult<\n    OnErrorResponse,\n    unknown,\n    unknown,\n    unknown\n>;\nexport type UseOnErrorCombinedReturnType = UseMutationResult<\n    OnErrorResponse | void,\n    unknown,\n    unknown,\n    unknown\n>;\n\nexport function useOnError(\n    props: UseOnErrorLegacyProps,\n): UseOnErrorLegacyReturnType;\n\nexport function useOnError(props?: UseOnErrorProps): UseOnErrorReturnType;\n\nexport function useOnError(\n    props?: UseOnErrorCombinedProps,\n): UseOnErrorCombinedReturnType;\n\n/**\n * `useOnError` calls the `checkError` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useCheckError} for more details.\n *\n */\nexport function useOnError({\n    v3LegacyAuthProviderCompatible = false,\n}: UseOnErrorProps | UseOnErrorLegacyProps = {}):\n    | UseOnErrorReturnType\n    | UseOnErrorLegacyReturnType {\n    const routerType = useRouterType();\n    const go = useGo();\n    const { replace } = useNavigation();\n\n    const { checkError: legacyCheckErrorFromContext } = useLegacyAuthContext();\n    const { onError: onErrorFromContext } = useAuthBindingsContext();\n\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const { mutate: legacyLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(v3LegacyAuthProviderCompatible),\n    });\n    const { mutate: logout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(v3LegacyAuthProviderCompatible),\n    });\n\n    const mutation = useMutation(\n        keys().auth().action(\"onError\").get(preferLegacyKeys),\n        onErrorFromContext,\n        {\n            onSuccess: ({ logout: shouldLogout, redirectTo }) => {\n                if (shouldLogout) {\n                    logout({ redirectPath: redirectTo });\n                    return;\n                }\n\n                if (redirectTo) {\n                    if (routerType === \"legacy\") {\n                        replace(redirectTo);\n                    } else {\n                        go({ to: redirectTo, type: \"replace\" });\n                    }\n                    return;\n                }\n            },\n            meta: {\n                ...getXRay(\"useOnError\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation(\n        [\n            ...keys().auth().action(\"onError\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        legacyCheckErrorFromContext,\n        {\n            onError: (redirectPath?: string) => {\n                legacyLogout({ redirectPath });\n            },\n            meta: {\n                ...getXRay(\"useOnError\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\n/**\n * @deprecated `useCheckError` is deprecated with refine@4, use `useOnError` instead, however, we still support `useCheckError` for backward compatibility.\n */\nexport const useCheckError = useOnError;\n","import { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\n/**\n * A hook that the UI uses\n * @internal\n */\nexport const useIsExistAuthentication = (): boolean => {\n    const { isProvided: legacyIsProvided } = useLegacyAuthContext();\n    const { isProvided } = useAuthBindingsContext();\n\n    return Boolean(isProvided || legacyIsProvided);\n};\n","import {\n    QueryObserverResult,\n    useQuery,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    GetListResponse,\n    CrudFilters,\n    Pagination,\n    BaseRecord,\n    HttpError,\n    CrudSorting,\n    MetaQuery,\n    SuccessErrorNotification,\n    LiveModeProps,\n    Prettify,\n} from \"../../interfaces\";\nimport {\n    useResource,\n    useHandleNotification,\n    useResourceSubscription,\n    useTranslate,\n    useDataProvider,\n    useOnError,\n    useMeta,\n} from \"@hooks\";\nimport {\n    queryKeys,\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n    handlePaginationParams,\n} from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport interface UseListConfig {\n    pagination?: Pagination;\n    hasPagination?: boolean;\n    sort?: CrudSorting;\n    filters?: CrudFilters;\n}\n\nexport type BaseListProps = {\n    /**\n     * Configuration for pagination, sorting and filtering\n     * @type [`UseListConfig`](/docs/api-reference/core/hooks/data/useList/#config-parameters)\n     * @deprecated `config` property is deprecated. Use `pagination`, `hasPagination`, `sorters` and `filters` instead.\n     */\n    config?: UseListConfig;\n    /**\n     * Pagination properties\n     */\n    pagination?: Pagination;\n    /**\n     * Whether to use server-side pagination or not\n     * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * Sorter parameters\n     */\n    sorters?: CrudSorting;\n    /**\n     * Filter parameters\n     */\n    filters?: CrudFilters;\n    /**\n     * Meta data query for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * Meta data query for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use\n     */\n    dataProviderName?: string;\n};\n\nexport type UseListProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource?: string;\n\n    /**\n     * Tanstack Query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >;\n} & BaseListProps &\n    SuccessErrorNotification<\n        GetListResponse<TData>,\n        TError,\n        Prettify<BaseListProps>\n    > &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useList` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving items from a `resource` with pagination, sort, and filter configurations.\n *\n * It uses the `getList` method as the query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useList = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    config,\n    filters,\n    hasPagination,\n    pagination,\n    sorters,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    dataProviderName,\n    overtimeOptions,\n}: UseListProps<TQueryFnData, TError, TData>): QueryObserverResult<\n    GetListResponse<TData>,\n    TError\n> &\n    UseLoadingOvertimeReturnType => {\n    const { resources, resource, identifier } = useResource(resourceFromProp);\n\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const pickedDataProvider = pickDataProvider(\n        identifier,\n        dataProviderName,\n        resources,\n    );\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n    const prefferedFilters = pickNotDeprecated(filters, config?.filters);\n    const prefferedSorters = pickNotDeprecated(sorters, config?.sort);\n    const prefferedHasPagination = pickNotDeprecated(\n        hasPagination,\n        config?.hasPagination,\n    );\n    const prefferedPagination = handlePaginationParams({\n        pagination,\n        configPagination: config?.pagination,\n        hasPagination: prefferedHasPagination,\n    });\n    const isServerPagination = prefferedPagination.mode === \"server\";\n\n    const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n    const notificationValues = {\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        filters: prefferedFilters,\n        hasPagination: isServerPagination,\n        pagination: prefferedPagination,\n        sorters: prefferedSorters,\n        config: {\n            ...config,\n            sort: prefferedSorters,\n        },\n    };\n\n    const isEnabled =\n        queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n    const { getList } = dataProvider(pickedDataProvider);\n\n    useResourceSubscription({\n        resource: identifier,\n        types: [\"*\"],\n        params: {\n            meta: combinedMeta,\n            metaData: combinedMeta,\n            pagination: prefferedPagination,\n            hasPagination: isServerPagination,\n            sort: prefferedSorters,\n            sorters: prefferedSorters,\n            filters: prefferedFilters,\n            subscriptionType: \"useList\",\n            ...liveParams,\n        },\n        channel: `resources/${resource?.name}`,\n        enabled: isEnabled,\n        liveMode,\n        onLiveEvent,\n    });\n\n    const queryResponse = useQuery<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >(\n        keys()\n            .data(pickedDataProvider)\n            .resource(identifier ?? \"\")\n            .action(\"list\")\n            .params({\n                ...(preferredMeta || {}),\n                filters: prefferedFilters,\n                hasPagination: isServerPagination,\n                ...(isServerPagination && {\n                    pagination: prefferedPagination,\n                }),\n                ...(sorters && {\n                    sorters,\n                }),\n                ...(config?.sort && {\n                    sort: config?.sort,\n                }),\n            })\n            .get(preferLegacyKeys),\n        ({ queryKey, pageParam, signal }) => {\n            return getList<TQueryFnData>({\n                resource: resource?.name ?? \"\",\n                pagination: prefferedPagination,\n                hasPagination: isServerPagination,\n                filters: prefferedFilters,\n                sort: prefferedSorters,\n                sorters: prefferedSorters,\n                meta: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n                metaData: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n            });\n        },\n        {\n            ...queryOptions,\n            enabled:\n                typeof queryOptions?.enabled !== \"undefined\"\n                    ? queryOptions?.enabled\n                    : !!resource?.name,\n            select: (rawData) => {\n                let data = rawData;\n\n                const { current, mode, pageSize } = prefferedPagination;\n\n                if (mode === \"client\") {\n                    data = {\n                        ...data,\n                        data: data.data.slice(\n                            (current - 1) * pageSize,\n                            current * pageSize,\n                        ),\n                        total: data.total,\n                    };\n                }\n\n                if (queryOptions?.select) {\n                    return queryOptions?.select?.(data);\n                }\n\n                return data as unknown as GetListResponse<TData>;\n            },\n            onSuccess: (data) => {\n                queryOptions?.onSuccess?.(data);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(\n                              data,\n                              notificationValues,\n                              identifier,\n                          )\n                        : successNotification;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (err: TError) => {\n                checkError(err);\n                queryOptions?.onError?.(err);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, notificationValues, identifier)\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${identifier}-useList-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useList\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResponse.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import { useEffect, useState } from \"react\";\nimport { useRefineContext } from \"..\";\n\nexport type UseLoadingOvertimeRefineContext = Omit<\n    UseLoadingOvertimeCoreProps,\n    \"isLoading\" | \"interval\"\n> &\n    Required<Pick<UseLoadingOvertimeCoreProps, \"interval\">>;\n\nexport type UseLoadingOvertimeOptionsProps = {\n    overtimeOptions?: UseLoadingOvertimeCoreOptions;\n};\n\nexport type UseLoadingOvertimeReturnType = {\n    overtime: {\n        elapsedTime?: number;\n    };\n};\n\ntype UseLoadingOvertimeCoreOptions = Omit<\n    UseLoadingOvertimeCoreProps,\n    \"isLoading\"\n>;\n\ntype UseLoadingOvertimeCoreReturnType = {\n    elapsedTime?: number;\n};\n\nexport type UseLoadingOvertimeCoreProps = {\n    /**\n     * The loading state. If true, the elapsed time will be calculated.\n     */\n    isLoading: boolean;\n\n    /**\n     * The interval in milliseconds. If the loading time exceeds this time, the `onInterval` callback will be called.\n     * If not specified, the `interval` value from the `overtime` option of the `RefineProvider` will be used.\n     *\n     * @default: 1000 (1 second)\n     */\n    interval?: number;\n\n    /**\n     * The callback function that will be called when the loading time exceeds the specified time.\n     * If not specified, the `onInterval` value from the `overtime` option of the `RefineProvider` will be used.\n     *\n     * @param elapsedInterval The elapsed time in milliseconds.\n     */\n    onInterval?: (elapsedInterval: number) => void;\n};\n\n/**\n * if you need to do something when the loading time exceeds the specified time, refine provides the `useLoadingOvertime` hook.\n * It returns the elapsed time in milliseconds.\n *\n * @example\n * const { elapsedTime } = useLoadingOvertime({\n *    isLoading,\n *    interval: 1000,\n *    onInterval(elapsedInterval) {\n *        console.log(\"loading overtime\", elapsedInterval);\n *    },\n * });\n */\nexport const useLoadingOvertime = ({\n    isLoading,\n    interval: intervalProp,\n    onInterval: onIntervalProp,\n}: UseLoadingOvertimeCoreProps): UseLoadingOvertimeCoreReturnType => {\n    const [elapsedTime, setElapsedTime] = useState<number | undefined>(\n        undefined,\n    );\n    // get overtime options from refine context\n    const { options } = useRefineContext();\n    const { overtime } = options;\n\n    // pick props or refine context options\n    const interval = intervalProp ?? overtime.interval;\n    const onInterval = onIntervalProp ?? overtime?.onInterval;\n\n    useEffect(() => {\n        let intervalFn: ReturnType<typeof setInterval>;\n\n        if (isLoading) {\n            intervalFn = setInterval(() => {\n                // increase elapsed time\n                setElapsedTime((prevElapsedTime) => {\n                    if (prevElapsedTime === undefined) {\n                        return interval;\n                    }\n\n                    return prevElapsedTime + interval;\n                });\n            }, interval);\n        }\n\n        return () => {\n            clearInterval(intervalFn);\n            // reset elapsed time\n            setElapsedTime(undefined);\n        };\n    }, [isLoading, interval]);\n\n    useEffect(() => {\n        // call onInterval callback\n        if (onInterval && elapsedTime) {\n            onInterval(elapsedTime);\n        }\n    }, [elapsedTime]);\n\n    return {\n        elapsedTime,\n    };\n};\n","import {\n    QueryObserverResult,\n    useQuery,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    GetOneResponse,\n    HttpError,\n    BaseRecord,\n    BaseKey,\n    LiveModeProps,\n    SuccessErrorNotification,\n    MetaQuery,\n    Prettify,\n} from \"../../interfaces\";\nimport {\n    useResource,\n    useTranslate,\n    useResourceSubscription,\n    useHandleNotification,\n    useDataProvider,\n    useOnError,\n    useMeta,\n} from \"@hooks\";\nimport {\n    queryKeys,\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseOneProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource?: string;\n    /**\n     * id of the item in the resource\n     * @type [`BaseKey`](/docs/api-reference/core/interfaceReferences/#basekey)\n     */\n    id?: BaseKey;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetOneResponse<TQueryFnData>,\n        TError,\n        GetOneResponse<TData>\n    >;\n    /**\n     * Metadata query for `dataProvider`,\n     */\n    meta?: MetaQuery;\n    /**\n     * Meta data query for `dataProvider`,\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default `\"default\"``\n     */\n    dataProviderName?: string;\n} & SuccessErrorNotification<\n    GetOneResponse<TData>,\n    TError,\n    Prettify<{ id?: BaseKey } & MetaQuery>\n> &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useOne` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving single items from a `resource`.\n *\n * It uses `getOne` method as query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useOne} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useOne = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    id,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    dataProviderName,\n    overtimeOptions,\n}: UseOneProps<TQueryFnData, TError, TData>): QueryObserverResult<\n    GetOneResponse<TData>\n> &\n    UseLoadingOvertimeReturnType => {\n    const { resources, resource, identifier } = useResource(resourceFromProp);\n\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n    const pickedDataProvider = pickDataProvider(\n        identifier,\n        dataProviderName,\n        resources,\n    );\n\n    const { getOne } = dataProvider(pickedDataProvider);\n\n    const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n    useResourceSubscription({\n        resource: identifier,\n        types: [\"*\"],\n        channel: `resources/${resource?.name}`,\n        params: {\n            ids: id ? [id] : [],\n            id: id,\n            meta: combinedMeta,\n            metaData: combinedMeta,\n            subscriptionType: \"useOne\",\n            ...liveParams,\n        },\n        enabled:\n            typeof queryOptions?.enabled !== \"undefined\"\n                ? queryOptions?.enabled\n                : typeof resource?.name !== \"undefined\" &&\n                  typeof id !== \"undefined\",\n        liveMode,\n        onLiveEvent,\n    });\n\n    const queryResponse = useQuery<\n        GetOneResponse<TQueryFnData>,\n        TError,\n        GetOneResponse<TData>\n    >(\n        keys()\n            .data(pickedDataProvider)\n            .resource(identifier ?? \"\")\n            .action(\"one\")\n            .id(id ?? \"\")\n            .params({\n                ...(preferredMeta || {}),\n            })\n            .get(preferLegacyKeys),\n        ({ queryKey, pageParam, signal }) =>\n            getOne<TQueryFnData>({\n                resource: resource?.name ?? \"\",\n                id: id!,\n                meta: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n                metaData: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n            }),\n        {\n            ...queryOptions,\n            enabled:\n                typeof queryOptions?.enabled !== \"undefined\"\n                    ? queryOptions?.enabled\n                    : typeof id !== \"undefined\",\n            onSuccess: (data) => {\n                queryOptions?.onSuccess?.(data);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(\n                              data,\n                              {\n                                  id,\n                                  ...combinedMeta,\n                              },\n                              identifier,\n                          )\n                        : successNotification;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (err: TError) => {\n                checkError(err);\n                queryOptions?.onError?.(err);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(\n                              err,\n                              {\n                                  id,\n                                  ...combinedMeta,\n                              },\n                              identifier,\n                          )\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${id}-${identifier}-getOne-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useOne\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResponse.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import {\n    QueryObserverResult,\n    useQuery,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    BaseRecord,\n    BaseKey,\n    GetManyResponse,\n    HttpError,\n    LiveModeProps,\n    SuccessErrorNotification,\n    MetaQuery,\n} from \"../../interfaces\";\nimport {\n    useResource,\n    useTranslate,\n    useResourceSubscription,\n    useHandleNotification,\n    useDataProvider,\n    useOnError,\n    useMeta,\n} from \"@hooks\";\nimport {\n    queryKeys,\n    pickDataProvider,\n    handleMultiple,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseManyProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * ids of the item in the resource\n     * @type [`BaseKey[]`](/docs/api-reference/core/interfaceReferences/#basekey)\n     */\n    ids: BaseKey[];\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetManyResponse<TQueryFnData>,\n        TError,\n        GetManyResponse<TData>\n    >;\n    /**\n     * Metadata query for `dataProvider`,\n     */\n    meta?: MetaQuery;\n    /**\n     * Metadata query for `dataProvider`,\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n} & SuccessErrorNotification<GetManyResponse<TData>, TError, BaseKey[]> &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving multiple items from a `resource`.\n *\n * It uses `getMany` method as query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useMany} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useMany = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    ids,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    dataProviderName,\n    overtimeOptions,\n}: UseManyProps<TQueryFnData, TError, TData>): QueryObserverResult<\n    GetManyResponse<TData>\n> &\n    UseLoadingOvertimeReturnType => {\n    const { resources, resource, identifier } = useResource(resourceFromProp);\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n    const pickedDataProvider = pickDataProvider(\n        identifier,\n        dataProviderName,\n        resources,\n    );\n    const isEnabled =\n        queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n    const { getMany, getOne } = dataProvider(pickedDataProvider);\n\n    const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n    useResourceSubscription({\n        resource: identifier,\n        types: [\"*\"],\n        params: {\n            ids: ids,\n            meta: combinedMeta,\n            metaData: combinedMeta,\n            subscriptionType: \"useMany\",\n            ...liveParams,\n        },\n        channel: `resources/${resource.name}`,\n        enabled: isEnabled,\n        liveMode,\n        onLiveEvent,\n    });\n\n    const queryResponse = useQuery<\n        GetManyResponse<TQueryFnData>,\n        TError,\n        GetManyResponse<TData>\n    >(\n        keys()\n            .data(pickedDataProvider)\n            .resource(identifier)\n            .action(\"many\")\n            .ids(...ids)\n            .params({\n                ...(preferredMeta || {}),\n            })\n            .get(preferLegacyKeys),\n        ({ queryKey, pageParam, signal }) => {\n            if (getMany) {\n                return getMany({\n                    resource: resource?.name,\n                    ids,\n                    meta: {\n                        ...combinedMeta,\n                        queryContext: {\n                            queryKey,\n                            pageParam,\n                            signal,\n                        },\n                    },\n                    metaData: {\n                        ...combinedMeta,\n                        queryContext: {\n                            queryKey,\n                            pageParam,\n                            signal,\n                        },\n                    },\n                });\n            } else {\n                return handleMultiple(\n                    ids.map((id) =>\n                        getOne<TQueryFnData>({\n                            resource: resource?.name,\n                            id,\n                            meta: {\n                                ...combinedMeta,\n                                queryContext: {\n                                    queryKey,\n                                    pageParam,\n                                    signal,\n                                },\n                            },\n                            metaData: {\n                                ...combinedMeta,\n                                queryContext: {\n                                    queryKey,\n                                    pageParam,\n                                    signal,\n                                },\n                            },\n                        }),\n                    ),\n                );\n            }\n        },\n        {\n            ...queryOptions,\n            onSuccess: (data) => {\n                queryOptions?.onSuccess?.(data);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(data, ids, identifier)\n                        : successNotification;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (err: TError) => {\n                checkError(err);\n                queryOptions?.onError?.(err);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, ids, identifier)\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${ids[0]}-${identifier}-getMany-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useMany\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResponse.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n    useQueryClient,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n    BaseRecord,\n    BaseKey,\n    UpdateResponse,\n    MutationMode,\n    PrevContext as UpdateContext,\n    HttpError,\n    SuccessErrorNotification,\n    MetaQuery,\n    PreviousQuery,\n    GetListResponse,\n    IQueryKeys,\n    OptimisticUpdateMapType,\n    GetManyResponse,\n    GetOneResponse,\n} from \"../../interfaces\";\nimport {\n    useResource,\n    useMutationMode,\n    useCancelNotification,\n    useTranslate,\n    usePublish,\n    useHandleNotification,\n    useDataProvider,\n    useLog,\n    useInvalidate,\n    useOnError,\n    useMeta,\n    useRefineContext,\n} from \"@hooks\";\nimport {\n    queryKeysReplacement,\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UpdateParams<TData, TError, TVariables> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * id for mutation function\n     */\n    id: BaseKey;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n     */\n    undoableTimeout?: number;\n    /**\n     * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n     */\n    onCancel?: (cancelMutation: () => void) => void;\n    /**\n     * Values for mutation function\n     */\n    values: TVariables;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * Metadata query for dataProvider\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n    /**\n     *  You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * You can use it to customize the optimistic update logic.\n     * @default {\n     *   list: true,\n     *   many: true,\n     *   detail: true,\n     * }\n     */\n    optimisticUpdateMap?: OptimisticUpdateMapType<TData, TVariables>;\n} & SuccessErrorNotification<\n    UpdateResponse<TData>,\n    TError,\n    { id: BaseKey; values: TVariables }\n>;\n\nexport type UseUpdateReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    UpdateResponse<TData>,\n    TError,\n    UpdateParams<TData, TError, TVariables>,\n    UpdateContext<TData>\n> &\n    UseLoadingOvertimeReturnType;\n\nexport type UseUpdateProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            UpdateResponse<TData>,\n            TError,\n            UpdateParams<TData, TError, TVariables>,\n            UpdateContext<TData>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useUpdate` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for update mutations.\n *\n * It uses `update` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useUpdate} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useUpdate = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseUpdateProps<TData, TError, TVariables> = {}): UseUpdateReturnType<\n    TData,\n    TError,\n    TVariables\n> => {\n    const { resources, select } = useResource();\n    const queryClient = useQueryClient();\n    const dataProvider = useDataProvider();\n\n    const {\n        mutationMode: mutationModeContext,\n        undoableTimeout: undoableTimeoutContext,\n    } = useMutationMode();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const publish = usePublish();\n    const { log } = useLog();\n    const { notificationDispatch } = useCancelNotification();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        UpdateResponse<TData>,\n        TError,\n        UpdateParams<TData, TError, TVariables>,\n        UpdateContext<TData>\n    >(\n        ({\n            id,\n            values,\n            resource: resourceName,\n            mutationMode,\n            undoableTimeout,\n            onCancel,\n            meta,\n            metaData,\n            dataProviderName,\n        }) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            const undoableTimeoutPropOrContext =\n                undoableTimeout ?? undoableTimeoutContext;\n\n            if (!(mutationModePropOrContext === \"undoable\")) {\n                return dataProvider(\n                    pickDataProvider(identifier, dataProviderName, resources),\n                ).update<TData, TVariables>({\n                    resource: resource.name,\n                    id,\n                    variables: values,\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                });\n            }\n            const updatePromise = new Promise<UpdateResponse<TData>>(\n                (resolve, reject) => {\n                    const doMutation = () => {\n                        dataProvider(\n                            pickDataProvider(\n                                identifier,\n                                dataProviderName,\n                                resources,\n                            ),\n                        )\n                            .update<TData, TVariables>({\n                                resource: resource.name,\n                                id,\n                                variables: values,\n                                meta: combinedMeta,\n                                metaData: combinedMeta,\n                            })\n                            .then((result) => resolve(result))\n                            .catch((err) => reject(err));\n                    };\n\n                    const cancelMutation = () => {\n                        reject({ message: \"mutationCancelled\" });\n                    };\n\n                    if (onCancel) {\n                        onCancel(cancelMutation);\n                    }\n\n                    notificationDispatch({\n                        type: ActionTypes.ADD,\n                        payload: {\n                            id: id,\n                            resource: identifier,\n                            cancelMutation: cancelMutation,\n                            doMutation: doMutation,\n                            seconds: undoableTimeoutPropOrContext,\n                            isSilent: !!onCancel,\n                        },\n                    });\n                },\n            );\n            return updatePromise;\n        },\n        {\n            onMutate: async ({\n                resource: resourceName,\n                id,\n                mutationMode,\n                values,\n                dataProviderName,\n                meta,\n                metaData,\n                optimisticUpdateMap = { list: true, many: true, detail: true },\n            }) => {\n                const { identifier } = select(resourceName);\n\n                const preferredMeta = pickNotDeprecated(meta, metaData);\n\n                const queryKey = queryKeysReplacement(preferLegacyKeys)(\n                    identifier,\n                    pickDataProvider(identifier, dataProviderName, resources),\n                    preferredMeta,\n                );\n\n                const resourceKeys = keys()\n                    .data(\n                        pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                    )\n                    .resource(identifier);\n\n                const previousQueries: PreviousQuery<TData>[] =\n                    queryClient.getQueriesData(\n                        resourceKeys.get(preferLegacyKeys),\n                    );\n\n                const mutationModePropOrContext =\n                    mutationMode ?? mutationModeContext;\n\n                await queryClient.cancelQueries(\n                    resourceKeys.get(preferLegacyKeys),\n                    undefined,\n                    {\n                        silent: true,\n                    },\n                );\n\n                if (mutationModePropOrContext !== \"pessimistic\") {\n                    if (optimisticUpdateMap.list) {\n                        // Set the previous queries to the new ones:\n                        queryClient.setQueriesData(\n                            resourceKeys\n                                .action(\"list\")\n                                .params(preferredMeta ?? {})\n                                .get(preferLegacyKeys),\n                            (previous?: GetListResponse<TData> | null) => {\n                                if (\n                                    typeof optimisticUpdateMap.list ===\n                                    \"function\"\n                                ) {\n                                    return optimisticUpdateMap.list(\n                                        previous,\n                                        values,\n                                        id,\n                                    );\n                                }\n\n                                if (!previous) {\n                                    return null;\n                                }\n\n                                const data = previous.data.map(\n                                    (record: TData) => {\n                                        if (\n                                            record.id?.toString() ===\n                                            id?.toString()\n                                        ) {\n                                            return {\n                                                id,\n                                                ...record,\n                                                ...values,\n                                            } as unknown as TData;\n                                        }\n                                        return record;\n                                    },\n                                );\n\n                                return {\n                                    ...previous,\n                                    data,\n                                };\n                            },\n                        );\n                    }\n\n                    if (optimisticUpdateMap.many) {\n                        queryClient.setQueriesData(\n                            resourceKeys.action(\"many\").get(preferLegacyKeys),\n                            (previous?: GetManyResponse<TData> | null) => {\n                                if (\n                                    typeof optimisticUpdateMap.many ===\n                                    \"function\"\n                                ) {\n                                    return optimisticUpdateMap.many(\n                                        previous,\n                                        values,\n                                        id,\n                                    );\n                                }\n\n                                if (!previous) {\n                                    return null;\n                                }\n\n                                const data = previous.data.map(\n                                    (record: TData) => {\n                                        if (\n                                            record.id?.toString() ===\n                                            id?.toString()\n                                        ) {\n                                            record = {\n                                                id,\n                                                ...record,\n                                                ...values,\n                                            } as unknown as TData;\n                                        }\n                                        return record;\n                                    },\n                                );\n                                return {\n                                    ...previous,\n                                    data,\n                                };\n                            },\n                        );\n                    }\n\n                    if (optimisticUpdateMap.detail) {\n                        queryClient.setQueriesData(\n                            resourceKeys\n                                .action(\"one\")\n                                .id(id)\n                                .params(preferredMeta ?? {})\n                                .get(preferLegacyKeys),\n                            (previous?: GetOneResponse<TData> | null) => {\n                                if (\n                                    typeof optimisticUpdateMap.detail ===\n                                    \"function\"\n                                ) {\n                                    return optimisticUpdateMap.detail(\n                                        previous,\n                                        values,\n                                        id,\n                                    );\n                                }\n\n                                if (!previous) {\n                                    return null;\n                                }\n\n                                return {\n                                    ...previous,\n                                    data: {\n                                        ...previous.data,\n                                        ...values,\n                                    },\n                                };\n                            },\n                        );\n                    }\n                }\n\n                return {\n                    previousQueries,\n                    queryKey,\n                };\n            },\n            onSettled: (\n                _data,\n                _error,\n                {\n                    id,\n                    resource: resourceName,\n                    dataProviderName,\n                    invalidates = [\"list\", \"many\", \"detail\"],\n                },\n            ) => {\n                const { identifier } = select(resourceName);\n\n                invalidateStore({\n                    resource: identifier,\n                    dataProviderName: pickDataProvider(\n                        identifier,\n                        dataProviderName,\n                        resources,\n                    ),\n                    invalidates,\n                    id,\n                });\n\n                notificationDispatch({\n                    type: ActionTypes.REMOVE,\n                    payload: { id, resource: identifier },\n                });\n            },\n            onSuccess: (\n                data,\n                {\n                    id,\n                    resource: resourceName,\n                    successNotification,\n                    dataProviderName,\n                    values,\n                    meta,\n                    metaData,\n                },\n                context,\n            ) => {\n                const { resource, identifier } = select(resourceName);\n\n                const resourceSingular = textTransformers.singular(identifier);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(data, { id, values }, identifier)\n                        : successNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${id}-${identifier}-notification`,\n                    description: translate(\n                        \"notifications.success\",\n                        \"Successful\",\n                    ),\n                    message: translate(\n                        \"notifications.editSuccess\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                resourceSingular,\n                            ),\n                        },\n                        `Successfully updated ${resourceSingular}`,\n                    ),\n                    type: \"success\",\n                });\n\n                publish?.({\n                    channel: `resources/${resource.name}`,\n                    type: \"updated\",\n                    payload: {\n                        ids: data.data?.id ? [data.data.id] : undefined,\n                    },\n                    date: new Date(),\n                });\n\n                let previousData: any;\n                if (context) {\n                    const queryData = queryClient.getQueryData<\n                        UpdateResponse<TData>\n                    >(context.queryKey.detail(id));\n\n                    previousData = Object.keys(values || {}).reduce<any>(\n                        (acc, item) => {\n                            acc[item] = queryData?.data?.[item];\n                            return acc;\n                        },\n                        {},\n                    );\n                }\n\n                const { fields, operation, variables, ...rest } =\n                    pickNotDeprecated(meta, metaData) || {};\n\n                log?.mutate({\n                    action: \"update\",\n                    resource: resource.name,\n                    data: values,\n                    previousData,\n                    meta: {\n                        id,\n                        dataProviderName: pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                        ...rest,\n                    },\n                });\n            },\n            onError: (\n                err: TError,\n                { id, resource: resourceName, errorNotification, values },\n                context,\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // set back the queries to the context:\n                if (context) {\n                    for (const query of context.previousQueries) {\n                        queryClient.setQueryData(query[0], query[1]);\n                    }\n                }\n\n                if (err.message !== \"mutationCancelled\") {\n                    checkError?.(err);\n\n                    const resourceSingular =\n                        textTransformers.singular(identifier);\n\n                    const notificationConfig =\n                        typeof errorNotification === \"function\"\n                            ? errorNotification(err, { id, values }, identifier)\n                            : errorNotification;\n\n                    handleNotification(notificationConfig, {\n                        key: `${id}-${identifier}-notification`,\n                        message: translate(\n                            \"notifications.editError\",\n                            {\n                                resource: translate(\n                                    `${identifier}.${identifier}`,\n                                    resourceSingular,\n                                ),\n                                statusCode: err.statusCode,\n                            },\n                            `Error when updating ${resourceSingular} (status code: ${err.statusCode})`,\n                        ),\n                        description: err.message,\n                        type: \"error\",\n                    });\n                }\n            },\n            mutationKey: keys().data().mutation(\"update\").get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useUpdate\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import React, { ReactNode, useReducer } from \"react\";\nimport isEqual from \"lodash/isEqual\";\n\nimport { UndoableQueue } from \"@components\";\n\nimport { IUndoableQueue, IUndoableQueueContext } from \"../../interfaces\";\nimport { ActionTypes } from \"./actionTypes\";\n\nexport const UndoableQueueContext = React.createContext<IUndoableQueueContext>({\n    notifications: [],\n    notificationDispatch: () => false,\n});\n\nconst initialState: IUndoableQueue[] = [];\n\nexport const undoableQueueReducer = (state: IUndoableQueue[], action: any) => {\n    switch (action.type) {\n        case ActionTypes.ADD:\n            const newState = state.filter(\n                (notificationItem: IUndoableQueue) => {\n                    return !(\n                        isEqual(notificationItem.id, action.payload.id) &&\n                        notificationItem.resource == action.payload.resource\n                    );\n                },\n            );\n\n            return [\n                ...newState,\n                {\n                    ...action.payload,\n                    isRunning: true,\n                },\n            ];\n        case ActionTypes.REMOVE:\n            return state.filter(\n                (notificationItem: IUndoableQueue) =>\n                    !(\n                        isEqual(notificationItem.id, action.payload.id) &&\n                        notificationItem.resource == action.payload.resource\n                    ),\n            );\n        case ActionTypes.DECREASE_NOTIFICATION_SECOND:\n            return state.map((notificationItem: IUndoableQueue) => {\n                if (\n                    isEqual(notificationItem.id, action.payload.id) &&\n                    notificationItem.resource == action.payload.resource\n                ) {\n                    return {\n                        ...notificationItem,\n                        seconds: action.payload.seconds - 1000,\n                    };\n                }\n                return notificationItem;\n            });\n        default:\n            return state;\n    }\n};\n\nexport const UndoableQueueContextProvider: React.FC<{\n    children: ReactNode;\n}> = ({ children }) => {\n    const [notifications, notificationDispatch] = useReducer(\n        undoableQueueReducer,\n        initialState,\n    );\n\n    const notificationData = { notifications, notificationDispatch };\n\n    return (\n        <UndoableQueueContext.Provider value={notificationData}>\n            {children}\n            {typeof window !== \"undefined\" &&\n                notifications.map((notification) => (\n                    <UndoableQueue\n                        key={`${notification.id}-${notification.resource}-queue`}\n                        notification={notification}\n                    />\n                ))}\n        </UndoableQueueContext.Provider>\n    );\n};\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\n\nimport {\n    CreateResponse,\n    BaseRecord,\n    HttpError,\n    SuccessErrorNotification,\n    MetaQuery,\n    IQueryKeys,\n} from \"../../interfaces\";\nimport {\n    useResource,\n    useTranslate,\n    usePublish,\n    useHandleNotification,\n    useDataProvider,\n    useLog,\n    useInvalidate,\n    useOnError,\n    useMeta,\n    useRefineContext,\n} from \"@hooks\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ntype useCreateParams<TData, TError, TVariables> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * Values for mutation function\n     */\n    values: TVariables;\n    /**\n     * Meta data for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * Meta data for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n    /**\n     * You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n} & SuccessErrorNotification<CreateResponse<TData>, TError, TVariables>;\n\nexport type UseCreateReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    CreateResponse<TData>,\n    TError,\n    useCreateParams<TData, TError, TVariables>,\n    unknown\n>;\n\nexport type UseCreateProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            CreateResponse<TData>,\n            TError,\n            useCreateParams<TData, TError, TVariables>,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCreate` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for create mutations.\n *\n * It uses `create` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCreate} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\n\nexport const useCreate = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseCreateProps<TData, TError, TVariables> = {}): UseCreateReturnType<\n    TData,\n    TError,\n    TVariables\n> &\n    UseLoadingOvertimeReturnType => {\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const dataProvider = useDataProvider();\n    const invalidateStore = useInvalidate();\n    const { resources, select } = useResource();\n    const translate = useTranslate();\n    const publish = usePublish();\n    const { log } = useLog();\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        CreateResponse<TData>,\n        TError,\n        useCreateParams<TData, TError, TVariables>,\n        unknown\n    >(\n        ({\n            resource: resourceName,\n            values,\n            meta,\n            metaData,\n            dataProviderName,\n        }: useCreateParams<TData, TError, TVariables>) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            return dataProvider(\n                pickDataProvider(identifier, dataProviderName, resources),\n            ).create<TData, TVariables>({\n                resource: resource.name,\n                variables: values,\n                meta: combinedMeta,\n                metaData: combinedMeta,\n            });\n        },\n        {\n            onSuccess: (\n                data,\n                {\n                    resource: resourceName,\n                    successNotification: successNotificationFromProp,\n                    dataProviderName,\n                    invalidates = [\"list\", \"many\"],\n                    values,\n                    meta,\n                    metaData,\n                },\n            ) => {\n                const { resource, identifier } = select(resourceName);\n\n                const resourceSingular = textTransformers.singular(identifier);\n\n                const notificationConfig =\n                    typeof successNotificationFromProp === \"function\"\n                        ? successNotificationFromProp(data, values, identifier)\n                        : successNotificationFromProp;\n\n                handleNotification(notificationConfig, {\n                    key: `create-${identifier}-notification`,\n                    message: translate(\n                        \"notifications.createSuccess\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                resourceSingular,\n                            ),\n                        },\n                        `Successfully created ${resourceSingular}`,\n                    ),\n                    description: translate(\"notifications.success\", \"Success\"),\n                    type: \"success\",\n                });\n\n                invalidateStore({\n                    resource: identifier,\n                    dataProviderName: pickDataProvider(\n                        identifier,\n                        dataProviderName,\n                        resources,\n                    ),\n                    invalidates,\n                });\n\n                publish?.({\n                    channel: `resources/${resource.name}`,\n                    type: \"created\",\n                    payload: {\n                        ids: data?.data?.id ? [data.data.id] : undefined,\n                    },\n                    date: new Date(),\n                });\n\n                const combinedMeta = getMeta({\n                    resource,\n                    meta: pickNotDeprecated(meta, metaData),\n                });\n\n                const { fields, operation, variables, ...rest } =\n                    combinedMeta || {};\n\n                log?.mutate({\n                    action: \"create\",\n                    resource: resource.name,\n                    data: values,\n                    meta: {\n                        dataProviderName: pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                        id: data?.data?.id ?? undefined,\n                        ...rest,\n                    },\n                });\n            },\n            onError: (\n                err: TError,\n                {\n                    resource: resourceName,\n                    errorNotification: errorNotificationFromProp,\n                    values,\n                },\n            ) => {\n                checkError(err);\n\n                const { identifier } = select(resourceName);\n\n                const resourceSingular = textTransformers.singular(identifier);\n\n                const notificationConfig =\n                    typeof errorNotificationFromProp === \"function\"\n                        ? errorNotificationFromProp(err, values, identifier)\n                        : errorNotificationFromProp;\n\n                handleNotification(notificationConfig, {\n                    key: `create-${identifier}-notification`,\n                    description: err.message,\n                    message: translate(\n                        \"notifications.createError\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                resourceSingular,\n                            ),\n                            statusCode: err.statusCode,\n                        },\n                        `There was an error creating ${resourceSingular} (status code: ${err.statusCode})`,\n                    ),\n                    type: \"error\",\n                });\n            },\n            mutationKey: keys().data().mutation(\"create\").get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useCreate\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import {\n    useQueryClient,\n    useMutation,\n    UseMutationResult,\n    UseMutationOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    useResource,\n    useMutationMode,\n    useCancelNotification,\n    useTranslate,\n    usePublish,\n    useHandleNotification,\n    useDataProvider,\n    useLog,\n    useInvalidate,\n    useOnError,\n    useMeta,\n    useRefineContext,\n} from \"@hooks\";\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n    DeleteOneResponse,\n    MutationMode,\n    PrevContext as DeleteContext,\n    BaseRecord,\n    BaseKey,\n    HttpError,\n    GetListResponse,\n    SuccessErrorNotification,\n    PreviousQuery,\n    IQueryKeys,\n    MetaQuery,\n} from \"../../interfaces\";\nimport {\n    queryKeysReplacement,\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type DeleteParams<TData, TError, TVariables> = {\n    /**\n     * id for mutation function\n     */\n    id: BaseKey;\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n     */\n    undoableTimeout?: number;\n    /**\n     * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n     */\n    onCancel?: (cancelMutation: () => void) => void;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n    /**\n     *  You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * Values for mutation function\n     */\n    values?: TVariables;\n} & SuccessErrorNotification<DeleteOneResponse<TData>, TError, BaseKey>;\n\nexport type UseDeleteReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    DeleteOneResponse<TData>,\n    TError,\n    DeleteParams<TData, TError, TVariables>,\n    DeleteContext<TData>\n> &\n    UseLoadingOvertimeReturnType;\n\nexport type UseDeleteProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            DeleteOneResponse<TData>,\n            TError,\n            DeleteParams<TData, TError, TVariables>,\n            DeleteContext<TData>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useDelete` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for delete mutations.\n *\n * It uses `deleteOne` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useDelete} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n */\nexport const useDelete = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseDeleteProps<TData, TError, TVariables> = {}): UseDeleteReturnType<\n    TData,\n    TError,\n    TVariables\n> => {\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const dataProvider = useDataProvider();\n\n    const { resources, select } = useResource();\n    const queryClient = useQueryClient();\n\n    const {\n        mutationMode: mutationModeContext,\n        undoableTimeout: undoableTimeoutContext,\n    } = useMutationMode();\n\n    const { notificationDispatch } = useCancelNotification();\n    const translate = useTranslate();\n    const publish = usePublish();\n    const { log } = useLog();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        DeleteOneResponse<TData>,\n        TError,\n        DeleteParams<TData, TError, TVariables>,\n        DeleteContext<TData>\n    >(\n        ({\n            id,\n            mutationMode,\n            undoableTimeout,\n            resource: resourceName,\n            onCancel,\n            meta,\n            metaData,\n            dataProviderName,\n            values,\n        }) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            const undoableTimeoutPropOrContext =\n                undoableTimeout ?? undoableTimeoutContext;\n\n            if (!(mutationModePropOrContext === \"undoable\")) {\n                return dataProvider(\n                    pickDataProvider(identifier, dataProviderName, resources),\n                ).deleteOne<TData, TVariables>({\n                    resource: resource.name,\n                    id,\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                    variables: values,\n                });\n            }\n\n            const deletePromise = new Promise<DeleteOneResponse<TData>>(\n                (resolve, reject) => {\n                    const doMutation = () => {\n                        dataProvider(\n                            pickDataProvider(\n                                identifier,\n                                dataProviderName,\n                                resources,\n                            ),\n                        )\n                            .deleteOne<TData, TVariables>({\n                                resource: resource.name,\n                                id,\n                                meta: combinedMeta,\n                                metaData: combinedMeta,\n                                variables: values,\n                            })\n                            .then((result) => resolve(result))\n                            .catch((err) => reject(err));\n                    };\n\n                    const cancelMutation = () => {\n                        reject({ message: \"mutationCancelled\" });\n                    };\n\n                    if (onCancel) {\n                        onCancel(cancelMutation);\n                    }\n\n                    notificationDispatch({\n                        type: ActionTypes.ADD,\n                        payload: {\n                            id,\n                            resource: identifier,\n                            cancelMutation: cancelMutation,\n                            doMutation: doMutation,\n                            seconds: undoableTimeoutPropOrContext,\n                            isSilent: !!onCancel,\n                        },\n                    });\n                },\n            );\n            return deletePromise;\n        },\n        {\n            onMutate: async ({\n                id,\n                resource: resourceName,\n                mutationMode,\n                dataProviderName,\n                meta,\n                metaData,\n            }) => {\n                const { identifier } = select(resourceName);\n\n                const preferredMeta = pickNotDeprecated(meta, metaData);\n\n                const queryKey = queryKeysReplacement(preferLegacyKeys)(\n                    identifier,\n                    pickDataProvider(identifier, dataProviderName, resources),\n                    preferredMeta,\n                );\n\n                const resourceKeys = keys()\n                    .data(\n                        pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                    )\n                    .resource(identifier);\n\n                const mutationModePropOrContext =\n                    mutationMode ?? mutationModeContext;\n\n                await queryClient.cancelQueries(\n                    resourceKeys.get(preferLegacyKeys),\n                    undefined,\n                    {\n                        silent: true,\n                    },\n                );\n\n                const previousQueries: PreviousQuery<TData>[] =\n                    queryClient.getQueriesData(\n                        resourceKeys.get(preferLegacyKeys),\n                    );\n\n                if (mutationModePropOrContext !== \"pessimistic\") {\n                    // Set the previous queries to the new ones:\n                    queryClient.setQueriesData(\n                        resourceKeys\n                            .action(\"list\")\n                            .params(preferredMeta ?? {})\n                            .get(preferLegacyKeys),\n                        (previous?: GetListResponse<TData> | null) => {\n                            if (!previous) {\n                                return null;\n                            }\n                            const data = previous.data.filter(\n                                (record: TData) =>\n                                    record.id?.toString() !== id.toString(),\n                            );\n\n                            return {\n                                data,\n                                total: previous.total - 1,\n                            };\n                        },\n                    );\n\n                    queryClient.setQueriesData(\n                        resourceKeys.action(\"many\").get(preferLegacyKeys),\n                        (previous?: GetListResponse<TData> | null) => {\n                            if (!previous) {\n                                return null;\n                            }\n                            const data = previous.data.filter(\n                                (record: TData) => {\n                                    return (\n                                        record.id?.toString() !== id?.toString()\n                                    );\n                                },\n                            );\n\n                            return {\n                                ...previous,\n                                data,\n                            };\n                        },\n                    );\n                }\n\n                return {\n                    previousQueries,\n                    queryKey,\n                };\n            },\n            onSettled: (\n                _data,\n                _error,\n                {\n                    id,\n                    resource: resourceName,\n                    dataProviderName,\n                    invalidates = [\"list\", \"many\"],\n                },\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // invalidate the cache for the list and many queries:\n                invalidateStore({\n                    resource: identifier,\n                    dataProviderName: pickDataProvider(\n                        identifier,\n                        dataProviderName,\n                        resources,\n                    ),\n                    invalidates,\n                });\n\n                notificationDispatch({\n                    type: ActionTypes.REMOVE,\n                    payload: { id, resource: identifier },\n                });\n            },\n            onSuccess: (\n                _data,\n                {\n                    id,\n                    resource: resourceName,\n                    successNotification,\n                    dataProviderName,\n                    meta,\n                    metaData,\n                },\n                context,\n            ) => {\n                const { resource, identifier } = select(resourceName);\n\n                const resourceSingular = textTransformers.singular(identifier);\n\n                // Remove the queries from the cache:\n                queryClient.removeQueries(context?.queryKey.detail(id));\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(_data, id, identifier)\n                        : successNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${id}-${identifier}-notification`,\n                    description: translate(\"notifications.success\", \"Success\"),\n                    message: translate(\n                        \"notifications.deleteSuccess\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                resourceSingular,\n                            ),\n                        },\n                        `Successfully deleted a ${resourceSingular}`,\n                    ),\n                    type: \"success\",\n                });\n\n                publish?.({\n                    channel: `resources/${resource.name}`,\n                    type: \"deleted\",\n                    payload: {\n                        ids: [id],\n                    },\n                    date: new Date(),\n                });\n\n                const combinedMeta = getMeta({\n                    resource,\n                    meta: pickNotDeprecated(meta, metaData),\n                });\n\n                const { fields, operation, variables, ...rest } =\n                    combinedMeta || {};\n\n                log?.mutate({\n                    action: \"delete\",\n                    resource: resource.name,\n                    meta: {\n                        id,\n                        dataProviderName: pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                        ...rest,\n                    },\n                });\n\n                // Remove the queries from the cache:\n                queryClient.removeQueries(context?.queryKey.detail(id));\n            },\n            onError: (\n                err: TError,\n                { id, resource: resourceName, errorNotification },\n                context,\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // set back the queries to the context:\n                if (context) {\n                    for (const query of context.previousQueries) {\n                        queryClient.setQueryData(query[0], query[1]);\n                    }\n                }\n\n                if (err.message !== \"mutationCancelled\") {\n                    checkError(err);\n\n                    const resourceSingular =\n                        textTransformers.singular(identifier);\n\n                    const notificationConfig =\n                        typeof errorNotification === \"function\"\n                            ? errorNotification(err, id, identifier)\n                            : errorNotification;\n\n                    handleNotification(notificationConfig, {\n                        key: `${id}-${identifier}-notification`,\n                        message: translate(\n                            \"notifications.deleteError\",\n                            {\n                                resource: resourceSingular,\n                                statusCode: err.statusCode,\n                            },\n                            `Error (status code: ${err.statusCode})`,\n                        ),\n                        description: err.message,\n                        type: \"error\",\n                    });\n                }\n            },\n            mutationKey: keys().data().mutation(\"delete\").get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useDelete\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    BaseRecord,\n    CreateManyResponse,\n    HttpError,\n    SuccessErrorNotification,\n    MetaQuery,\n    IQueryKeys,\n} from \"../../interfaces\";\nimport {\n    useResource,\n    useTranslate,\n    usePublish,\n    useHandleNotification,\n    useDataProvider,\n    useInvalidate,\n    useLog,\n    useMeta,\n    useRefineContext,\n} from \"@hooks\";\nimport {\n    handleMultiple,\n    pickDataProvider,\n    pickNotDeprecated,\n} from \"@definitions\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ntype useCreateManyParams<TData, TError, TVariables> = {\n    resource: string;\n    values: TVariables[];\n    meta?: MetaQuery;\n    metaData?: MetaQuery;\n    dataProviderName?: string;\n    invalidates?: Array<keyof IQueryKeys>;\n} & SuccessErrorNotification<CreateManyResponse<TData>, TError, TVariables[]>;\n\nexport type UseCreateManyReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    CreateManyResponse<TData>,\n    TError,\n    useCreateManyParams<TData, TError, TVariables>,\n    unknown\n>;\n\nexport type UseCreateManyProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            CreateManyResponse<TData>,\n            TError,\n            useCreateManyParams<TData, TError, TVariables>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCreateMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple create mutations.\n *\n * It uses `createMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCreateMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useCreateMany = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseCreateManyProps<TData, TError, TVariables> = {}): UseCreateManyReturnType<\n    TData,\n    TError,\n    TVariables\n> &\n    UseLoadingOvertimeReturnType => {\n    const dataProvider = useDataProvider();\n    const { resources, select } = useResource();\n    const translate = useTranslate();\n    const publish = usePublish();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const { log } = useLog();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        CreateManyResponse<TData>,\n        TError,\n        useCreateManyParams<TData, TError, TVariables>\n    >(\n        ({\n            resource: resourceName,\n            values,\n            meta,\n            metaData,\n            dataProviderName,\n        }: useCreateManyParams<TData, TError, TVariables>) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const selectedDataProvider = dataProvider(\n                pickDataProvider(identifier, dataProviderName, resources),\n            );\n\n            if (selectedDataProvider.createMany) {\n                return selectedDataProvider.createMany<TData, TVariables>({\n                    resource: resource.name,\n                    variables: values,\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                });\n            } else {\n                return handleMultiple(\n                    values.map((val) =>\n                        selectedDataProvider.create<TData, TVariables>({\n                            resource: resource.name,\n                            variables: val,\n                            meta: combinedMeta,\n                            metaData: combinedMeta,\n                        }),\n                    ),\n                );\n            }\n        },\n        {\n            onSuccess: (\n                response,\n                {\n                    resource: resourceName,\n                    successNotification,\n                    dataProviderName,\n                    invalidates = [\"list\", \"many\"],\n                    values,\n                    meta,\n                    metaData,\n                },\n            ) => {\n                const { resource, identifier } = select(resourceName);\n\n                const resourcePlural = textTransformers.plural(identifier);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(response, values, identifier)\n                        : successNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `createMany-${identifier}-notification`,\n                    message: translate(\n                        \"notifications.createSuccess\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                identifier,\n                            ),\n                        },\n                        `Successfully created ${resourcePlural}`,\n                    ),\n                    description: translate(\"notifications.success\", \"Success\"),\n                    type: \"success\",\n                });\n\n                invalidateStore({\n                    resource: identifier,\n                    dataProviderName: pickDataProvider(\n                        identifier,\n                        dataProviderName,\n                        resources,\n                    ),\n                    invalidates,\n                });\n\n                const ids = response?.data\n                    .filter((item) => item?.id !== undefined)\n                    .map((item) => item.id!);\n\n                publish?.({\n                    channel: `resources/${resource.name}`,\n                    type: \"created\",\n                    payload: {\n                        ids,\n                    },\n                    date: new Date(),\n                });\n\n                const combinedMeta = getMeta({\n                    resource,\n                    meta: pickNotDeprecated(meta, metaData),\n                });\n\n                const { fields, operation, variables, ...rest } =\n                    combinedMeta || {};\n\n                log?.mutate({\n                    action: \"createMany\",\n                    resource: resource.name,\n                    data: values,\n                    meta: {\n                        dataProviderName: pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                        ids,\n                        ...rest,\n                    },\n                });\n            },\n            onError: (\n                err: TError,\n                { resource: resourceName, errorNotification, values },\n            ) => {\n                const { identifier } = select(resourceName);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, values, identifier)\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `createMany-${identifier}-notification`,\n                    description: err.message,\n                    message: translate(\n                        \"notifications.createError\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                identifier,\n                            ),\n                            statusCode: err.statusCode,\n                        },\n                        `There was an error creating ${identifier} (status code: ${err.statusCode}`,\n                    ),\n                    type: \"error\",\n                });\n            },\n            mutationKey: keys()\n                .data()\n                .mutation(\"createMany\")\n                .get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useCreateMany\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n    useQueryClient,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    useResource,\n    useCancelNotification,\n    useMutationMode,\n    useTranslate,\n    usePublish,\n    useHandleNotification,\n    useDataProvider,\n    useInvalidate,\n    useLog,\n    useOnError,\n    useMeta,\n    useRefineContext,\n} from \"@hooks\";\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n    BaseRecord,\n    BaseKey,\n    UpdateManyResponse,\n    HttpError,\n    MutationMode,\n    QueryResponse,\n    PrevContext as UpdateContext,\n    SuccessErrorNotification,\n    MetaQuery,\n    GetListResponse,\n    IQueryKeys,\n    OptimisticUpdateManyMapType,\n    GetManyResponse,\n    GetOneResponse,\n} from \"../../interfaces\";\nimport {\n    queryKeysReplacement,\n    pickDataProvider,\n    handleMultiple,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ntype UpdateManyParams<TData, TError, TVariables> = {\n    /**\n     * ids for mutation function\n     */\n    ids: BaseKey[];\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n     */\n    undoableTimeout?: number;\n    /**\n     * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n     */\n    onCancel?: (cancelMutation: () => void) => void;\n    /**\n     * Values for mutation function\n     */\n    values: TVariables;\n    /**\n     * meta data for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * meta data for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n    /**\n     *  You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * You can use it to manage the invalidations that will occur at the end of the mutation.\n     * @default {\n     *   list: true,\n     *   many: true,\n     *   detail: true,\n     * }\n     */\n    optimisticUpdateMap?: OptimisticUpdateManyMapType<TData, TVariables>;\n} & SuccessErrorNotification<\n    UpdateManyResponse<TData>,\n    TError,\n    { ids: BaseKey[]; values: TVariables }\n>;\n\ntype UseUpdateManyReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    UpdateManyResponse<TData>,\n    TError,\n    UpdateManyParams<TData, TError, TVariables>,\n    UpdateContext<TData>\n> &\n    UseLoadingOvertimeReturnType;\n\nexport type UseUpdateManyProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            UpdateManyResponse<TData>,\n            TError,\n            UpdateManyParams<TData, TError, TVariables>,\n            UpdateContext<TData>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useUpdateMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple update mutations.\n *\n * It uses `updateMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useUpdateMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useUpdateMany = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseUpdateManyProps<TData, TError, TVariables> = {}): UseUpdateManyReturnType<\n    TData,\n    TError,\n    TVariables\n> => {\n    const { resources, select } = useResource();\n    const queryClient = useQueryClient();\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const {\n        mutationMode: mutationModeContext,\n        undoableTimeout: undoableTimeoutContext,\n    } = useMutationMode();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const { notificationDispatch } = useCancelNotification();\n    const publish = usePublish();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const { log } = useLog();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        UpdateManyResponse<TData>,\n        TError,\n        UpdateManyParams<TData, TError, TVariables>,\n        UpdateContext<TData>\n    >(\n        ({\n            ids,\n            values,\n            resource: resourceName,\n            onCancel,\n            mutationMode,\n            undoableTimeout,\n            meta,\n            metaData,\n            dataProviderName,\n        }: UpdateManyParams<TData, TError, TVariables>) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            const undoableTimeoutPropOrContext =\n                undoableTimeout ?? undoableTimeoutContext;\n\n            const selectedDataProvider = dataProvider(\n                pickDataProvider(identifier, dataProviderName, resources),\n            );\n\n            const mutationFn = () => {\n                if (selectedDataProvider.updateMany) {\n                    return selectedDataProvider.updateMany<TData, TVariables>({\n                        resource: resource.name,\n                        ids,\n                        variables: values,\n                        meta: combinedMeta,\n                        metaData: combinedMeta,\n                    });\n                } else {\n                    return handleMultiple(\n                        ids.map((id) =>\n                            selectedDataProvider.update<TData, TVariables>({\n                                resource: resource.name,\n                                id,\n                                variables: values,\n                                meta: combinedMeta,\n                                metaData: combinedMeta,\n                            }),\n                        ),\n                    );\n                }\n            };\n\n            if (!(mutationModePropOrContext === \"undoable\")) {\n                return mutationFn();\n            }\n\n            const updatePromise = new Promise<UpdateManyResponse<TData>>(\n                (resolve, reject) => {\n                    const doMutation = () => {\n                        mutationFn()\n                            .then((result) => resolve(result))\n                            .catch((err) => reject(err));\n                    };\n\n                    const cancelMutation = () => {\n                        reject({ message: \"mutationCancelled\" });\n                    };\n\n                    if (onCancel) {\n                        onCancel(cancelMutation);\n                    }\n\n                    notificationDispatch({\n                        type: ActionTypes.ADD,\n                        payload: {\n                            id: ids,\n                            resource: identifier,\n                            cancelMutation: cancelMutation,\n                            doMutation: doMutation,\n                            seconds: undoableTimeoutPropOrContext,\n                            isSilent: !!onCancel,\n                        },\n                    });\n                },\n            );\n            return updatePromise;\n        },\n\n        {\n            onMutate: async ({\n                resource: resourceName,\n                ids,\n                values,\n                mutationMode,\n                dataProviderName,\n                meta,\n                metaData,\n                optimisticUpdateMap = { list: true, many: true, detail: true },\n            }) => {\n                const { identifier } = select(resourceName);\n                const preferredMeta = pickNotDeprecated(meta, metaData);\n\n                const queryKey = queryKeysReplacement(preferLegacyKeys)(\n                    identifier,\n                    pickDataProvider(identifier, dataProviderName, resources),\n                    pickNotDeprecated(meta, metaData),\n                );\n\n                const resourceKeys = keys()\n                    .data(\n                        pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                    )\n                    .resource(identifier);\n\n                const mutationModePropOrContext =\n                    mutationMode ?? mutationModeContext;\n\n                await queryClient.cancelQueries(\n                    resourceKeys.get(preferLegacyKeys),\n                    undefined,\n                    {\n                        silent: true,\n                    },\n                );\n\n                const previousQueries = queryClient.getQueriesData<\n                    QueryResponse<TData>\n                >(resourceKeys.get(preferLegacyKeys));\n\n                if (mutationModePropOrContext !== \"pessimistic\") {\n                    if (optimisticUpdateMap.list) {\n                        // Set the previous queries to the new ones:\n                        queryClient.setQueriesData(\n                            resourceKeys\n                                .action(\"list\")\n                                .params(preferredMeta ?? {})\n                                .get(preferLegacyKeys),\n                            (previous?: GetListResponse<TData> | null) => {\n                                if (\n                                    typeof optimisticUpdateMap.list ===\n                                    \"function\"\n                                ) {\n                                    return optimisticUpdateMap.list(\n                                        previous,\n                                        values,\n                                        ids,\n                                    );\n                                }\n\n                                if (!previous) {\n                                    return null;\n                                }\n\n                                const data = previous.data.map(\n                                    (record: TData) => {\n                                        if (\n                                            record.id !== undefined &&\n                                            ids\n                                                .filter(\n                                                    (id) => id !== undefined,\n                                                )\n                                                .map(String)\n                                                .includes(record.id.toString())\n                                        ) {\n                                            return {\n                                                ...record,\n                                                ...values,\n                                            };\n                                        }\n\n                                        return record;\n                                    },\n                                );\n\n                                return {\n                                    ...previous,\n                                    data,\n                                };\n                            },\n                        );\n                    }\n\n                    if (optimisticUpdateMap.many) {\n                        queryClient.setQueriesData(\n                            resourceKeys.action(\"many\").get(preferLegacyKeys),\n                            (previous?: GetManyResponse<TData> | null) => {\n                                if (\n                                    typeof optimisticUpdateMap.many ===\n                                    \"function\"\n                                ) {\n                                    return optimisticUpdateMap.many(\n                                        previous,\n                                        values,\n                                        ids,\n                                    );\n                                }\n\n                                if (!previous) {\n                                    return null;\n                                }\n\n                                const data = previous.data.map(\n                                    (record: TData) => {\n                                        if (\n                                            record.id !== undefined &&\n                                            ids\n                                                .filter(\n                                                    (id) => id !== undefined,\n                                                )\n                                                .map(String)\n                                                .includes(record.id.toString())\n                                        ) {\n                                            return {\n                                                ...record,\n                                                ...values,\n                                            };\n                                        }\n                                        return record;\n                                    },\n                                );\n                                return {\n                                    ...previous,\n                                    data,\n                                };\n                            },\n                        );\n                    }\n\n                    if (optimisticUpdateMap.detail) {\n                        for (const id of ids) {\n                            queryClient.setQueriesData(\n                                resourceKeys\n                                    .action(\"one\")\n                                    .id(id)\n                                    .params(preferredMeta ?? {})\n                                    .get(preferLegacyKeys),\n                                (previous?: GetOneResponse<TData> | null) => {\n                                    if (\n                                        typeof optimisticUpdateMap.detail ===\n                                        \"function\"\n                                    ) {\n                                        return optimisticUpdateMap.detail(\n                                            previous,\n                                            values,\n                                            id,\n                                        );\n                                    }\n\n                                    if (!previous) {\n                                        return null;\n                                    }\n\n                                    const data = {\n                                        ...previous.data,\n                                        ...values,\n                                    };\n                                    return {\n                                        ...previous,\n                                        data,\n                                    };\n                                },\n                            );\n                        }\n                    }\n                }\n\n                return {\n                    previousQueries,\n                    queryKey,\n                };\n            },\n            onSettled: (\n                _data,\n                _error,\n                { ids, resource: resourceName, dataProviderName },\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // invalidate the cache for the list and many queries:\n                invalidateStore({\n                    resource: identifier,\n                    invalidates: [\"list\", \"many\"],\n                    dataProviderName: pickDataProvider(\n                        identifier,\n                        dataProviderName,\n                        resources,\n                    ),\n                });\n\n                ids.forEach((id) =>\n                    invalidateStore({\n                        resource: identifier,\n                        invalidates: [\"detail\"],\n                        dataProviderName: pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                        id,\n                    }),\n                );\n\n                notificationDispatch({\n                    type: ActionTypes.REMOVE,\n                    payload: { id: ids, resource: identifier },\n                });\n            },\n            onSuccess: (\n                data,\n                {\n                    ids,\n                    resource: resourceName,\n                    meta,\n                    metaData,\n                    dataProviderName,\n                    successNotification,\n                    values,\n                },\n                context,\n            ) => {\n                const { resource, identifier } = select(resourceName);\n\n                const resourceSingular = textTransformers.singular(identifier);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(data, { ids, values }, identifier)\n                        : successNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${ids}-${identifier}-notification`,\n                    description: translate(\n                        \"notifications.success\",\n                        \"Successful\",\n                    ),\n                    message: translate(\n                        \"notifications.editSuccess\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                identifier,\n                            ),\n                        },\n                        `Successfully updated ${resourceSingular}`,\n                    ),\n                    type: \"success\",\n                });\n\n                publish?.({\n                    channel: `resources/${resource.name}`,\n                    type: \"updated\",\n                    payload: {\n                        ids: ids.map(String),\n                    },\n                    date: new Date(),\n                });\n\n                const previousData: any[] = [];\n                if (context) {\n                    ids.forEach((id) => {\n                        const queryData = queryClient.getQueryData<\n                            UpdateManyResponse<TData>\n                        >(context.queryKey.detail(id));\n\n                        previousData.push(\n                            Object.keys(values || {}).reduce<any>(\n                                (acc, item: any) => {\n                                    acc[item] = queryData?.data?.[item];\n                                    return acc;\n                                },\n                                {},\n                            ),\n                        );\n                    });\n                }\n\n                const combinedMeta = getMeta({\n                    resource,\n                    meta: pickNotDeprecated(meta, metaData),\n                });\n\n                const { fields, operation, variables, ...rest } =\n                    combinedMeta || {};\n\n                log?.mutate({\n                    action: \"updateMany\",\n                    resource: resource.name,\n                    data: values,\n                    previousData,\n                    meta: {\n                        ids,\n                        dataProviderName: pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                        ...rest,\n                    },\n                });\n            },\n            onError: (\n                err: TError,\n                { ids, resource: resourceName, errorNotification, values },\n                context,\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // set back the queries to the context:\n                if (context) {\n                    for (const query of context.previousQueries) {\n                        queryClient.setQueryData(query[0], query[1]);\n                    }\n                }\n\n                if (err.message !== \"mutationCancelled\") {\n                    checkError?.(err);\n\n                    const resourceSingular =\n                        textTransformers.singular(identifier);\n\n                    const notificationConfig =\n                        typeof errorNotification === \"function\"\n                            ? errorNotification(\n                                  err,\n                                  { ids, values },\n                                  identifier,\n                              )\n                            : errorNotification;\n\n                    handleNotification(notificationConfig, {\n                        key: `${ids}-${identifier}-updateMany-error-notification`,\n                        message: translate(\n                            \"notifications.editError\",\n                            {\n                                resource: resourceSingular,\n                                statusCode: err.statusCode,\n                            },\n                            `Error when updating ${resourceSingular} (status code: ${err.statusCode})`,\n                        ),\n                        description: err.message,\n                        type: \"error\",\n                    });\n                }\n            },\n            mutationKey: keys()\n                .data()\n                .mutation(\"updateMany\")\n                .get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useUpdateMany\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import {\n    useQueryClient,\n    useMutation,\n    UseMutationResult,\n    UseMutationOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    DeleteManyResponse,\n    HttpError,\n    BaseRecord,\n    BaseKey,\n    MutationMode,\n    PreviousQuery,\n    GetListResponse,\n    PrevContext as DeleteContext,\n    SuccessErrorNotification,\n    MetaQuery,\n    IQueryKeys,\n} from \"../../interfaces\";\nimport {\n    useResource,\n    useTranslate,\n    useMutationMode,\n    useCancelNotification,\n    usePublish,\n    useHandleNotification,\n    useDataProvider,\n    useInvalidate,\n    useLog,\n    useOnError,\n    useMeta,\n    useRefineContext,\n} from \"@hooks\";\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n    queryKeysReplacement,\n    pickDataProvider,\n    handleMultiple,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type DeleteManyParams<TData, TError, TVariables> = {\n    /**\n     * ids for mutation function\n     */\n    ids: BaseKey[];\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n     */\n    undoableTimeout?: number;\n    /**\n     * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n     */\n    onCancel?: (cancelMutation: () => void) => void;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n    /**\n     *  You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * Values for mutation function\n     */\n    values?: TVariables;\n} & SuccessErrorNotification<DeleteManyResponse<TData>, TError, BaseKey[]>;\n\nexport type UseDeleteManyReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    DeleteManyResponse<TData>,\n    TError,\n    DeleteManyParams<TData, TError, TVariables>,\n    unknown\n> &\n    UseLoadingOvertimeReturnType;\n\nexport type UseDeleteManyProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            DeleteManyResponse<TData>,\n            TError,\n            DeleteManyParams<TData, TError, TVariables>,\n            DeleteContext<TData>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useDeleteMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple delete mutations.\n *\n * It uses `deleteMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useDeleteMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n */\nexport const useDeleteMany = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseDeleteManyProps<TData, TError, TVariables> = {}): UseDeleteManyReturnType<\n    TData,\n    TError,\n    TVariables\n> => {\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const {\n        mutationMode: mutationModeContext,\n        undoableTimeout: undoableTimeoutContext,\n    } = useMutationMode();\n    const dataProvider = useDataProvider();\n    const { notificationDispatch } = useCancelNotification();\n    const translate = useTranslate();\n    const publish = usePublish();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const { log } = useLog();\n    const { resources, select } = useResource();\n    const queryClient = useQueryClient();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        DeleteManyResponse<TData>,\n        TError,\n        DeleteManyParams<TData, TError, TVariables>,\n        DeleteContext<TData>\n    >(\n        ({\n            resource: resourceName,\n            ids,\n            mutationMode,\n            undoableTimeout,\n            onCancel,\n            meta,\n            metaData,\n            dataProviderName,\n            values,\n        }: DeleteManyParams<TData, TError, TVariables>) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            const undoableTimeoutPropOrContext =\n                undoableTimeout ?? undoableTimeoutContext;\n\n            const selectedDataProvider = dataProvider(\n                pickDataProvider(identifier, dataProviderName, resources),\n            );\n\n            const mutationFn = () => {\n                if (selectedDataProvider.deleteMany) {\n                    return selectedDataProvider.deleteMany<TData, TVariables>({\n                        resource: resource.name,\n                        ids,\n                        meta: combinedMeta,\n                        metaData: combinedMeta,\n                        variables: values,\n                    });\n                } else {\n                    return handleMultiple(\n                        ids.map((id) =>\n                            selectedDataProvider.deleteOne<TData, TVariables>({\n                                resource: resource.name,\n                                id,\n                                meta: combinedMeta,\n                                metaData: combinedMeta,\n                                variables: values,\n                            }),\n                        ),\n                    );\n                }\n            };\n\n            if (!(mutationModePropOrContext === \"undoable\")) {\n                return mutationFn();\n            }\n\n            const updatePromise = new Promise<DeleteManyResponse<TData>>(\n                (resolve, reject) => {\n                    const doMutation = () => {\n                        mutationFn()\n                            .then((result) => resolve(result))\n                            .catch((err) => reject(err));\n                    };\n\n                    const cancelMutation = () => {\n                        reject({ message: \"mutationCancelled\" });\n                    };\n\n                    if (onCancel) {\n                        onCancel(cancelMutation);\n                    }\n\n                    notificationDispatch({\n                        type: ActionTypes.ADD,\n                        payload: {\n                            id: ids,\n                            resource: identifier,\n                            cancelMutation: cancelMutation,\n                            doMutation: doMutation,\n                            seconds: undoableTimeoutPropOrContext,\n                            isSilent: !!onCancel,\n                        },\n                    });\n                },\n            );\n            return updatePromise;\n        },\n        {\n            onMutate: async ({\n                ids,\n                resource: resourceName,\n                mutationMode,\n                dataProviderName,\n                meta,\n                metaData,\n            }) => {\n                const { identifier } = select(resourceName);\n\n                const preferredMeta = pickNotDeprecated(meta, metaData);\n\n                const queryKey = queryKeysReplacement(preferLegacyKeys)(\n                    identifier,\n                    pickDataProvider(identifier, dataProviderName, resources),\n                    preferredMeta,\n                );\n\n                const resourceKeys = keys()\n                    .data(\n                        pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                    )\n                    .resource(identifier);\n\n                const mutationModePropOrContext =\n                    mutationMode ?? mutationModeContext;\n\n                await queryClient.cancelQueries(\n                    resourceKeys.get(preferLegacyKeys),\n                    undefined,\n                    {\n                        silent: true,\n                    },\n                );\n\n                const previousQueries: PreviousQuery<TData>[] =\n                    queryClient.getQueriesData(\n                        resourceKeys.get(preferLegacyKeys),\n                    );\n\n                if (mutationModePropOrContext !== \"pessimistic\") {\n                    // Set the previous queries to the new ones:\n                    queryClient.setQueriesData(\n                        resourceKeys\n                            .action(\"list\")\n                            .params(preferredMeta ?? {})\n                            .get(preferLegacyKeys),\n                        (previous?: GetListResponse<TData> | null) => {\n                            if (!previous) {\n                                return null;\n                            }\n\n                            const data = previous.data.filter(\n                                (item) =>\n                                    item.id &&\n                                    !ids\n                                        .map(String)\n                                        .includes(item.id.toString()),\n                            );\n\n                            return {\n                                data,\n                                total: previous.total - 1,\n                            };\n                        },\n                    );\n\n                    queryClient.setQueriesData(\n                        resourceKeys.action(\"many\").get(preferLegacyKeys),\n                        (previous?: GetListResponse<TData> | null) => {\n                            if (!previous) {\n                                return null;\n                            }\n\n                            const data = previous.data.filter(\n                                (record: TData) => {\n                                    if (record.id) {\n                                        return !ids\n                                            .map(String)\n                                            .includes(record.id.toString());\n                                    }\n                                    return false;\n                                },\n                            );\n\n                            return {\n                                ...previous,\n                                data,\n                            };\n                        },\n                    );\n\n                    for (const id of ids) {\n                        queryClient.setQueriesData(\n                            resourceKeys\n                                .action(\"one\")\n                                .id(id)\n                                .params(preferredMeta)\n                                .get(preferLegacyKeys),\n                            (previous?: any | null) => {\n                                if (!previous || previous.data.id == id) {\n                                    return null;\n                                }\n                                return {\n                                    ...previous,\n                                };\n                            },\n                        );\n                    }\n                }\n\n                return {\n                    previousQueries,\n                    queryKey,\n                };\n            },\n            // Always refetch after error or success:\n            onSettled: (\n                _data,\n                _error,\n                {\n                    resource: resourceName,\n                    ids,\n                    dataProviderName,\n                    invalidates = [\"list\", \"many\"],\n                },\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // invalidate the cache for the list and many queries:\n                invalidateStore({\n                    resource: identifier,\n                    dataProviderName: pickDataProvider(\n                        identifier,\n                        dataProviderName,\n                        resources,\n                    ),\n                    invalidates,\n                });\n\n                notificationDispatch({\n                    type: ActionTypes.REMOVE,\n                    payload: { id: ids, resource: identifier },\n                });\n            },\n            onSuccess: (\n                _data,\n                {\n                    ids,\n                    resource: resourceName,\n                    meta,\n                    metaData,\n                    dataProviderName,\n                    successNotification,\n                },\n                context,\n            ) => {\n                const { resource, identifier } = select(resourceName);\n\n                // Remove the queries from the cache:\n                ids.forEach((id) =>\n                    queryClient.removeQueries(context?.queryKey.detail(id)),\n                );\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(_data, ids, identifier)\n                        : successNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${ids}-${identifier}-notification`,\n                    description: translate(\"notifications.success\", \"Success\"),\n                    message: translate(\n                        \"notifications.deleteSuccess\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                identifier,\n                            ),\n                        },\n                        `Successfully deleted ${identifier}`,\n                    ),\n                    type: \"success\",\n                });\n\n                publish?.({\n                    channel: `resources/${resource.name}`,\n                    type: \"deleted\",\n                    payload: { ids },\n                    date: new Date(),\n                });\n\n                const combinedMeta = getMeta({\n                    resource,\n                    meta: pickNotDeprecated(meta, metaData),\n                });\n\n                const { fields, operation, variables, ...rest } =\n                    combinedMeta || {};\n\n                log?.mutate({\n                    action: \"deleteMany\",\n                    resource: resource.name,\n                    meta: {\n                        ids,\n                        dataProviderName: pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                        ...rest,\n                    },\n                });\n\n                // Remove the queries from the cache:\n                ids.forEach((id) =>\n                    queryClient.removeQueries(context?.queryKey.detail(id)),\n                );\n            },\n            onError: (\n                err,\n                { ids, resource: resourceName, errorNotification },\n                context,\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // set back the queries to the context:\n                if (context) {\n                    for (const query of context.previousQueries) {\n                        queryClient.setQueryData(query[0], query[1]);\n                    }\n                }\n\n                if (err.message !== \"mutationCancelled\") {\n                    checkError(err);\n                    const resourceSingular =\n                        textTransformers.singular(identifier);\n\n                    const notificationConfig =\n                        typeof errorNotification === \"function\"\n                            ? errorNotification(err, ids, identifier)\n                            : errorNotification;\n\n                    handleNotification(notificationConfig, {\n                        key: `${ids}-${identifier}-notification`,\n                        message: translate(\n                            \"notifications.deleteError\",\n                            {\n                                resource: resourceSingular,\n                                statusCode: err.statusCode,\n                            },\n                            `Error (status code: ${err.statusCode})`,\n                        ),\n                        description: err.message,\n                        type: \"error\",\n                    });\n                }\n            },\n            mutationKey: keys()\n                .data()\n                .mutation(\"deleteMany\")\n                .get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useDeleteMany\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import { pickNotDeprecated } from \"@definitions/index\";\nimport { useDataProvider, useResource } from \"@hooks\";\n\nexport const useApiUrl = (dataProviderName?: string): string => {\n    const dataProvider = useDataProvider();\n    const { resource } = useResource();\n\n    const { getApiUrl } = dataProvider(\n        dataProviderName ??\n            pickNotDeprecated(resource?.meta, resource?.options)\n                ?.dataProviderName,\n    );\n\n    return getApiUrl();\n};\n","import {\n    QueryObserverResult,\n    useQuery,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { pickNotDeprecated, useActiveAuthProvider } from \"@definitions/helpers\";\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useMeta,\n    useOnError,\n    useTranslate,\n} from \"@hooks\";\nimport {\n    BaseRecord,\n    CrudFilters,\n    CrudSorting,\n    CustomResponse,\n    HttpError,\n    MetaQuery,\n    Prettify,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ninterface UseCustomConfig<TQuery, TPayload> {\n    /**\n     * @deprecated `sort` is deprecated, use `sorters` instead.\n     */\n    sort?: CrudSorting;\n    sorters?: CrudSorting;\n    filters?: CrudFilters;\n    query?: TQuery;\n    payload?: TPayload;\n    headers?: {};\n}\n\nexport type UseCustomProps<TQueryFnData, TError, TQuery, TPayload, TData> = {\n    /**\n     * request's URL\n     */\n    url: string;\n    /**\n     * request's method (`GET`, `POST`, etc.)\n     */\n    method: \"get\" | \"delete\" | \"head\" | \"options\" | \"post\" | \"put\" | \"patch\";\n    /**\n     * The config of your request. You can send headers, payload, query, filters and sorters using this field\n     */\n    config?: UseCustomConfig<TQuery, TPayload>;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\"\n     */\n    queryOptions?: UseQueryOptions<\n        CustomResponse<TQueryFnData>,\n        TError,\n        CustomResponse<TData>\n    >;\n    /**\n     * meta data for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * meta data for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n} & SuccessErrorNotification<\n    CustomResponse<TData>,\n    TError,\n    Prettify<UseCustomConfig<TQuery, TPayload> & MetaQuery>\n> &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCustom` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for custom requests.\n *\n * It uses the `custom` method from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCustom} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TQuery - Values for query params\n * @typeParam TPayload - Values for params\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useCustom = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TQuery = unknown,\n    TPayload = unknown,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    url,\n    method,\n    config,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    dataProviderName,\n    overtimeOptions,\n}: UseCustomProps<\n    TQueryFnData,\n    TError,\n    TQuery,\n    TPayload,\n    TData\n>): QueryObserverResult<CustomResponse<TData>, TError> &\n    UseLoadingOvertimeReturnType => {\n    const dataProvider = useDataProvider();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const translate = useTranslate();\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n\n    const { custom } = dataProvider(dataProviderName);\n\n    const combinedMeta = getMeta({ meta: preferredMeta });\n\n    if (custom) {\n        const queryResponse = useQuery<\n            CustomResponse<TQueryFnData>,\n            TError,\n            CustomResponse<TData>\n        >({\n            queryKey: keys()\n                .data(dataProviderName)\n                .mutation(\"custom\")\n                .params({\n                    method,\n                    url,\n                    ...config,\n                    ...(preferredMeta || {}),\n                })\n                .get(preferLegacyKeys),\n            queryFn: ({ queryKey, pageParam, signal }) =>\n                custom<TQueryFnData>({\n                    url,\n                    method,\n                    ...config,\n                    meta: {\n                        ...combinedMeta,\n                        queryContext: {\n                            queryKey,\n                            pageParam,\n                            signal,\n                        },\n                    },\n                    metaData: {\n                        ...combinedMeta,\n                        queryContext: {\n                            queryKey,\n                            pageParam,\n                            signal,\n                        },\n                    },\n                }),\n            ...queryOptions,\n            onSuccess: (data) => {\n                queryOptions?.onSuccess?.(data);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(data, {\n                              ...config,\n                              ...combinedMeta,\n                          })\n                        : successNotification;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (err: TError) => {\n                checkError(err);\n                queryOptions?.onError?.(err);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, {\n                              ...config,\n                              ...combinedMeta,\n                          })\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${method}-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useCustom\", preferLegacyKeys),\n            },\n        });\n        const { elapsedTime } = useLoadingOvertime({\n            isLoading: queryResponse.isFetching,\n            interval: overtimeOptions?.interval,\n            onInterval: overtimeOptions?.onInterval,\n        });\n\n        return { ...queryResponse, overtime: { elapsedTime } };\n    } else {\n        throw Error(\"Not implemented custom on data provider.\");\n    }\n};\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useTranslate,\n    useOnError,\n    useMeta,\n} from \"@hooks\";\nimport {\n    CreateResponse,\n    BaseRecord,\n    HttpError,\n    SuccessErrorNotification,\n    MetaQuery,\n    Prettify,\n} from \"../../interfaces\";\nimport { pickNotDeprecated, useActiveAuthProvider } from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ninterface UseCustomMutationConfig {\n    headers?: {};\n}\n\ntype useCustomMutationParams<TData, TError, TVariables> = {\n    url: string;\n    method: \"post\" | \"put\" | \"patch\" | \"delete\";\n    values: TVariables;\n    /**\n     * Meta data for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * Meta data for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    dataProviderName?: string;\n    config?: UseCustomMutationConfig;\n} & SuccessErrorNotification<\n    CreateResponse<TData>,\n    TError,\n    Prettify<UseCustomMutationConfig & MetaQuery>\n>;\n\nexport type UseCustomMutationReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    CreateResponse<TData>,\n    TError,\n    useCustomMutationParams<TData, TError, TVariables>,\n    unknown\n>;\n\nexport type UseCustomMutationProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            CreateResponse<TData>,\n            TError,\n            useCustomMutationParams<TData, TError, TVariables>,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCustomMutation` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for create mutations.\n *\n * It uses the `custom` method from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCustomMutation} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\n\nexport const useCustomMutation = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseCustomMutationProps<\n    TData,\n    TError,\n    TVariables\n> = {}): UseCustomMutationReturnType<TData, TError, TVariables> &\n    UseLoadingOvertimeReturnType => {\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        CreateResponse<TData>,\n        TError,\n        useCustomMutationParams<TData, TError, TVariables>,\n        unknown\n    >(\n        ({\n            url,\n            method,\n            values,\n            meta,\n            metaData,\n            dataProviderName,\n            config,\n        }: useCustomMutationParams<TData, TError, TVariables>) => {\n            const combinedMeta = getMeta({\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const { custom } = dataProvider(dataProviderName);\n\n            if (custom) {\n                return custom<TData>({\n                    url,\n                    method,\n                    payload: values,\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                    headers: { ...config?.headers },\n                });\n            }\n\n            throw Error(\"Not implemented custom on data provider.\");\n        },\n        {\n            onSuccess: (\n                data,\n                {\n                    successNotification: successNotificationFromProp,\n                    config,\n                    meta,\n                    metaData,\n                },\n            ) => {\n                const notificationConfig =\n                    typeof successNotificationFromProp === \"function\"\n                        ? successNotificationFromProp(data, {\n                              ...config,\n                              ...(pickNotDeprecated(meta, metaData) || {}),\n                          })\n                        : successNotificationFromProp;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (\n                err: TError,\n                {\n                    errorNotification: errorNotificationFromProp,\n                    method,\n                    config,\n                    meta,\n                    metaData,\n                },\n            ) => {\n                checkError(err);\n\n                const notificationConfig =\n                    typeof errorNotificationFromProp === \"function\"\n                        ? errorNotificationFromProp(err, {\n                              ...config,\n                              ...(pickNotDeprecated(meta, metaData) || {}),\n                          })\n                        : errorNotificationFromProp;\n\n                handleNotification(notificationConfig, {\n                    key: `${method}-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            mutationKey: keys()\n                .data()\n                .mutation(\"customMutation\")\n                .get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useCustomMutation\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import { useCallback, useContext } from \"react\";\n\nimport { DataContext } from \"@contexts/data\";\nimport {\n    IDataContextProvider,\n    IDataMultipleContextProvider,\n} from \"../../interfaces\";\n\nexport const useDataProvider = (): ((\n    /**\n     * The name of the `data provider` you want to access\n     */\n    dataProviderName?: string,\n) => IDataContextProvider) => {\n    const context = useContext<IDataMultipleContextProvider>(DataContext);\n\n    const handleDataProvider = useCallback(\n        (dataProviderName?: string) => {\n            if (dataProviderName) {\n                const dataProvider = context[dataProviderName];\n                if (!dataProvider) {\n                    throw new Error(\n                        `\"${dataProviderName}\" Data provider not found`,\n                    );\n                }\n                return context[dataProviderName];\n            }\n            if (context.default) {\n                return context.default;\n            } else\n                throw new Error(\n                    `There is no \"default\" data provider. Please pass dataProviderName.`,\n                );\n        },\n        [context],\n    );\n\n    return handleDataProvider;\n};\n","import React from \"react\";\nimport { ReactNode } from \"react\";\n\nimport {\n    IDataContextProvider,\n    IDataMultipleContextProvider,\n} from \"../../interfaces\";\n\nexport const defaultDataProvider = () => {\n    return {\n        default: {\n            create: () => Promise.resolve({ data: { id: 1 } }),\n            createMany: () => Promise.resolve({ data: [] }),\n            deleteOne: () => Promise.resolve({ data: { id: 1 } }),\n            deleteMany: () => Promise.resolve({ data: [] }),\n            getList: () => Promise.resolve({ data: [], total: 0 }),\n            getMany: () => Promise.resolve({ data: [] }),\n            getOne: () => Promise.resolve({ data: { id: 1 } }),\n            update: () => Promise.resolve({ data: { id: 1 } }),\n            updateMany: () => Promise.resolve({ data: [] }),\n            custom: () => Promise.resolve({ data: {} }),\n            getApiUrl: () => \"\",\n        },\n    };\n};\n\nexport const DataContext = React.createContext<IDataMultipleContextProvider>(\n    defaultDataProvider() as IDataMultipleContextProvider,\n);\n\nexport const DataContextProvider: React.FC<\n    | IDataMultipleContextProvider\n    | (IDataContextProvider & {\n          children: ReactNode;\n      })\n> = ({ children, ...rest }) => {\n    let dataProviders;\n    if (!rest.getList || !rest.getOne) {\n        dataProviders = rest as IDataMultipleContextProvider;\n    } else {\n        dataProviders = {\n            default: rest,\n        } as IDataMultipleContextProvider;\n    }\n    return (\n        <DataContext.Provider value={dataProviders}>\n            {children}\n        </DataContext.Provider>\n    );\n};\n","import {\n    useInfiniteQuery,\n    UseInfiniteQueryOptions,\n    InfiniteQueryObserverResult,\n    InfiniteData,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    CrudFilters,\n    Pagination,\n    BaseRecord,\n    HttpError,\n    CrudSorting,\n    MetaQuery,\n    SuccessErrorNotification,\n    LiveModeProps,\n    GetListResponse,\n    Prettify,\n} from \"../../interfaces\";\nimport {\n    useResource,\n    useHandleNotification,\n    useResourceSubscription,\n    useTranslate,\n    useDataProvider,\n    useOnError,\n    useMeta,\n} from \"@hooks\";\nimport {\n    queryKeys,\n    pickDataProvider,\n    getNextPageParam,\n    getPreviousPageParam,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n    handlePaginationParams,\n} from \"@definitions/helpers\";\n\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport interface UseInfiniteListConfig {\n    pagination?: Pagination;\n    hasPagination?: boolean;\n    sort?: CrudSorting;\n    filters?: CrudFilters;\n}\n\ntype BaseInfiniteListProps = {\n    /**\n     *  Metadata query for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     *  Metadata query for `dataProvider`\n     *  @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * Configuration for pagination, sorting and filtering\n     * @type [`useInfiniteListConfig`](/docs/api-reference/core/hooks/data/useInfiniteList/#config-parameters)\n     * @deprecated `config` property is deprecated. Use `pagination`, `hasPagination`, `sorters` and `filters` instead.\n     */\n    config?: UseInfiniteListConfig;\n    /**\n     * Pagination properties\n     */\n    pagination?: Pagination;\n    /**\n     * Whether to use server-side pagination or not\n     * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * Sorter parameters\n     */\n    sorters?: CrudSorting;\n    /**\n     * Filter parameters\n     */\n    filters?: CrudFilters;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use\n     */\n    dataProviderName?: string;\n};\n\nexport type UseInfiniteListProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * Tanstack Query's [useInfiniteQuery](https://tanstack.com/query/v4/docs/react/reference/useInfiniteQuery) options\n     */\n    queryOptions?: UseInfiniteQueryOptions<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >;\n} & BaseInfiniteListProps &\n    SuccessErrorNotification<\n        InfiniteData<GetListResponse<TData>>,\n        TError,\n        Prettify<BaseInfiniteListProps>\n    > &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useInfiniteList` is a modified version of `react-query`'s {@link https://tanstack.com/query/latest/docs/react/guides/infinite-queries `useInfiniteQuery`} used for retrieving items from a `resource` with pagination, sort, and filter configurations.\n *\n * It uses the `getList` method as the query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useInfiniteList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useInfiniteList = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    config,\n    filters,\n    hasPagination,\n    pagination,\n    sorters,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    dataProviderName,\n    overtimeOptions,\n}: UseInfiniteListProps<\n    TQueryFnData,\n    TError,\n    TData\n>): InfiniteQueryObserverResult<GetListResponse<TData>, TError> &\n    UseLoadingOvertimeReturnType => {\n    const { resources, resource, identifier } = useResource(resourceFromProp);\n\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const pickedDataProvider = pickDataProvider(\n        identifier,\n        dataProviderName,\n        resources,\n    );\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n    const prefferedFilters = pickNotDeprecated(filters, config?.filters);\n    const prefferedSorters = pickNotDeprecated(sorters, config?.sort);\n    const prefferedHasPagination = pickNotDeprecated(\n        hasPagination,\n        config?.hasPagination,\n    );\n    const prefferedPagination = handlePaginationParams({\n        pagination,\n        configPagination: config?.pagination,\n        hasPagination: prefferedHasPagination,\n    });\n    const isServerPagination = prefferedPagination.mode === \"server\";\n    const notificationValues = {\n        meta: preferredMeta,\n        metaData: preferredMeta,\n        filters: prefferedFilters,\n        hasPagination: isServerPagination,\n        pagination: prefferedPagination,\n        sorters: prefferedSorters,\n        config: {\n            ...config,\n            sort: prefferedSorters,\n        },\n    };\n\n    const isEnabled =\n        queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n    const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n    const { getList } = dataProvider(pickedDataProvider);\n\n    useResourceSubscription({\n        resource: identifier,\n        types: [\"*\"],\n        params: {\n            meta: combinedMeta,\n            metaData: combinedMeta,\n            pagination: prefferedPagination,\n            hasPagination: isServerPagination,\n            sort: prefferedSorters,\n            sorters: prefferedSorters,\n            filters: prefferedFilters,\n            subscriptionType: \"useList\",\n            ...liveParams,\n        },\n        channel: `resources/${resource.name}`,\n        enabled: isEnabled,\n        liveMode,\n        onLiveEvent,\n    });\n\n    const queryResponse = useInfiniteQuery<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >(\n        keys()\n            .data(pickedDataProvider)\n            .resource(identifier)\n            .action(\"infinite\")\n            .params({\n                ...(preferredMeta || {}),\n                filters: prefferedFilters,\n                hasPagination: isServerPagination,\n                ...(isServerPagination && {\n                    pagination: prefferedPagination,\n                }),\n                ...(sorters && {\n                    sorters,\n                }),\n                ...(config?.sort && {\n                    sort: config?.sort,\n                }),\n            })\n            .get(preferLegacyKeys),\n        ({ queryKey, pageParam, signal }) => {\n            const paginationProperties = {\n                ...prefferedPagination,\n                current: pageParam,\n            };\n\n            return getList<TQueryFnData>({\n                resource: resource.name,\n                pagination: paginationProperties,\n                hasPagination: isServerPagination,\n                filters: prefferedFilters,\n                sort: prefferedSorters,\n                sorters: prefferedSorters,\n                meta: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n                metaData: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n            }).then(({ data, total, ...rest }) => {\n                return {\n                    data,\n                    total,\n                    pagination: paginationProperties,\n                    ...rest,\n                };\n            });\n        },\n        {\n            getNextPageParam: (lastPage) => getNextPageParam(lastPage),\n            getPreviousPageParam: (lastPage) => getPreviousPageParam(lastPage),\n            ...queryOptions,\n            onSuccess: (data) => {\n                queryOptions?.onSuccess?.(data);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(\n                              data,\n                              notificationValues,\n                              identifier,\n                          )\n                        : successNotification;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (err: TError) => {\n                checkError(err);\n                queryOptions?.onError?.(err);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, notificationValues, identifier)\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${identifier}-useInfiniteList-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useInfiniteList\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResponse.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import { useContext, useEffect } from \"react\";\nimport {\n    BaseKey,\n    CrudFilters,\n    CrudSorting,\n    ILiveContext,\n    IRefineContext,\n    LiveEvent,\n    LiveModeProps,\n    MetaQuery,\n    Pagination,\n} from \"../../../interfaces\";\nimport { LiveContext } from \"@contexts/live\";\nimport { RefineContext } from \"@contexts/refine\";\nimport { useResource } from \"@hooks/resource\";\nimport { useInvalidate } from \"@hooks/invalidate\";\n\nexport type UseResourceSubscriptionProps = {\n    channel: string;\n    params?: {\n        ids?: BaseKey[];\n        id?: BaseKey;\n        meta?: MetaQuery;\n        /**\n         * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n         */\n        metaData?: MetaQuery;\n        pagination?: Pagination;\n        /**\n         * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n         */\n        hasPagination?: boolean;\n        /**\n         * @deprecated `sort` is deprecated. Use `sorters` instead.\n         */\n        sort?: CrudSorting;\n        sorters?: CrudSorting;\n        filters?: CrudFilters;\n        subscriptionType: \"useList\" | \"useOne\" | \"useMany\";\n        [key: string]: any;\n    };\n    types: LiveEvent[\"type\"][];\n    resource?: string;\n    enabled?: boolean;\n} & LiveModeProps;\n\nexport type PublishType = {\n    (event: LiveEvent): void;\n};\n\nexport const useResourceSubscription = ({\n    resource: resourceFromProp,\n    params,\n    channel,\n    types,\n    enabled = true,\n    liveMode: liveModeFromProp,\n    onLiveEvent,\n}: UseResourceSubscriptionProps): void => {\n    const { resource, identifier } = useResource(resourceFromProp);\n\n    const liveDataContext = useContext<ILiveContext>(LiveContext);\n    const {\n        liveMode: liveModeFromContext,\n        onLiveEvent: onLiveEventContextCallback,\n    } = useContext<IRefineContext>(RefineContext);\n\n    const liveMode = liveModeFromProp ?? liveModeFromContext;\n\n    const invalidate = useInvalidate();\n\n    useEffect(() => {\n        let subscription: any;\n\n        const callback = (event: LiveEvent) => {\n            if (liveMode === \"auto\") {\n                invalidate({\n                    resource: identifier,\n                    dataProviderName: resource?.meta?.dataProviderName,\n                    invalidates: [\"resourceAll\"],\n                    invalidationFilters: {\n                        type: \"active\",\n                        refetchType: \"active\",\n                    },\n                    invalidationOptions: { cancelRefetch: false },\n                });\n            }\n\n            onLiveEvent?.(event);\n            onLiveEventContextCallback?.(event);\n        };\n\n        if (liveMode && liveMode !== \"off\" && enabled) {\n            subscription = liveDataContext?.subscribe({\n                channel,\n                params: {\n                    resource: resource?.name,\n                    ...params,\n                },\n                types,\n                callback,\n            });\n        }\n\n        return () => {\n            if (subscription) {\n                liveDataContext?.unsubscribe(subscription);\n            }\n        };\n    }, [enabled]);\n};\n","import React from \"react\";\n\nimport { ILiveContext, ILiveContextProvider } from \"./ILiveContext\";\n\nexport const LiveContext = React.createContext<ILiveContext>(undefined);\n\nexport const LiveContextProvider: React.FC<ILiveContextProvider> = ({\n    liveProvider,\n    children,\n}) => {\n    return (\n        <LiveContext.Provider value={liveProvider}>\n            {children}\n        </LiveContext.Provider>\n    );\n};\n","import { useContext } from \"react\";\n\nimport { ResourceContext } from \"@contexts/resource\";\nimport {\n    Action,\n    BaseKey,\n    IResourceItem,\n    ResourceRouterParams,\n} from \"../../../interfaces\";\nimport { useRouterContext, useResourceWithRoute } from \"@hooks\";\nimport { useRouterType } from \"../../../contexts/router-picker\";\nimport { useParsed } from \"../../router/use-parsed\";\nimport { pickResource } from \"../../../definitions/helpers/pick-resource\";\n\nexport type UseResourceLegacyProps = {\n    /**\n     * Determines which resource to use for redirection\n     * @deprecated resourceName deprecated. Use resourceNameOrRouteName instead # https://github.com/refinedev/refine/issues/1618\n     */\n    resourceName?: string;\n    /**\n     * Determines which resource to use for redirection\n     * @default Resource name that it reads from route\n     */\n    resourceNameOrRouteName?: string;\n    /**\n     * Adds id to the end of the URL\n     * @deprecated resourceName deprecated. Use resourceNameOrRouteName instead # https://github.com/refinedev/refine/issues/1618\n     */\n    recordItemId?: BaseKey;\n};\n\n/**\n * Matches the resource by identifier.\n * If not provided, the resource from the route will be returned.\n * If your resource does not explicitly define an identifier, the resource name will be used.\n */\nexport type UseResourceParam = string | undefined;\n\ntype SelectReturnType<T extends boolean> = T extends true\n    ? { resource: IResourceItem; identifier: string }\n    : { resource: IResourceItem; identifier: string } | undefined;\n\nexport type UseResourceReturnType = {\n    resources: IResourceItem[];\n    resource?: IResourceItem;\n    /**\n     * @deprecated Use `resource.name` instead when you need to get the resource name.\n     */\n    resourceName?: string;\n    id?: BaseKey;\n    action?: Action;\n    select: <T extends boolean = true>(\n        resourceName: string,\n        force?: T,\n    ) => SelectReturnType<T>;\n    identifier?: string;\n};\n\ntype UseResourceReturnTypeWithResource = UseResourceReturnType & {\n    resource: IResourceItem;\n    identifier: string;\n};\n\n/**\n * @deprecated Use `useResource` with `identifier` property instead. (`identifier` does not check by route name in new router)\n */\nexport function useResource(\n    props: UseResourceLegacyProps,\n): UseResourceReturnType;\nexport function useResource(): UseResourceReturnType;\nexport function useResource<TIdentifier = UseResourceParam>(\n    identifier: TIdentifier,\n): TIdentifier extends NonNullable<UseResourceParam>\n    ? UseResourceReturnTypeWithResource\n    : UseResourceReturnType;\n/**\n * `useResource` is used to get `resources` that are defined as property of the `<Refine>` component.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/resource/useResource} for more details.\n */\nexport function useResource(\n    args?: UseResourceLegacyProps | UseResourceParam,\n): UseResourceReturnType {\n    const { resources } = useContext(ResourceContext);\n\n    const routerType = useRouterType();\n\n    const params = useParsed();\n\n    const oldProps = {\n        resourceName:\n            args && typeof args !== \"string\" ? args.resourceName : args,\n        resourceNameOrRouteName:\n            args && typeof args !== \"string\"\n                ? args.resourceNameOrRouteName\n                : args,\n        recordItemId:\n            args && typeof args !== \"string\" ? args.recordItemId : undefined,\n    };\n\n    const select = <T extends boolean = true>(\n        resourceName: string,\n        force = true,\n    ): SelectReturnType<T> => {\n        const isLegacy = routerType === \"legacy\";\n        const pickedResource = pickResource(resourceName, resources, isLegacy);\n\n        if (pickedResource) {\n            return {\n                resource: pickedResource,\n                identifier: pickedResource.identifier ?? pickedResource.name,\n            } as SelectReturnType<T>;\n        }\n\n        if (force) {\n            const resource: IResourceItem = {\n                name: resourceName,\n                identifier: resourceName,\n            };\n\n            const identifier = resource.identifier ?? resource.name;\n\n            return {\n                resource,\n                identifier,\n            } as SelectReturnType<T>;\n        }\n\n        return undefined as SelectReturnType<T>;\n    };\n\n    /**\n     * Legacy Router - Start\n     *\n     * using `useParams` and `route` to match resource and get params.\n     */\n    const resourceWithRoute = useResourceWithRoute();\n\n    const { useParams } = useRouterContext();\n\n    const legacyParams = useParams<Partial<ResourceRouterParams>>();\n\n    if (routerType === \"legacy\") {\n        const resourceKeyToCheck = oldProps.resourceNameOrRouteName\n            ? oldProps.resourceNameOrRouteName\n            : legacyParams.resource;\n\n        const legacyResource = resourceKeyToCheck\n            ? resourceWithRoute(resourceKeyToCheck)\n            : undefined;\n        const legacyId = oldProps?.recordItemId ?? legacyParams.id;\n        const legacyAction = legacyParams.action;\n        const legacyResourceName =\n            oldProps?.resourceName ?? legacyResource?.name;\n        const legacyIdentifier =\n            legacyResource?.identifier ?? legacyResource?.name;\n\n        return {\n            resources,\n            resource: legacyResource,\n            resourceName: legacyResourceName,\n            id: legacyId,\n            action: legacyAction,\n            select,\n            identifier: legacyIdentifier,\n        };\n    }\n    /** Legacy Router - End */\n\n    /** New Router */\n    let resource: IResourceItem | undefined = undefined;\n    // we try to pick the resource from props first\n    const identifier =\n        typeof args === \"string\" ? args : oldProps?.resourceNameOrRouteName;\n    if (identifier) {\n        const pickedFromProps = pickResource(identifier, resources);\n        if (pickedFromProps) {\n            resource = pickedFromProps;\n        } else {\n            resource = {\n                name: identifier as string,\n            };\n        }\n    } else if (params?.resource) {\n        resource = params.resource;\n    }\n\n    return {\n        resources,\n        resource,\n        resourceName: resource?.name,\n        id: params.id,\n        action: params.action,\n        select,\n        identifier: resource?.identifier ?? resource?.name,\n    };\n}\n","import React from \"react\";\n\nimport { IResourceContext } from \"./IResourceContext\";\nimport {\n    IResourceItem,\n    ResourceProps,\n} from \"../../interfaces/bindings/resource\";\nimport { useDeepMemo } from \"@hooks/deepMemo\";\nimport { legacyResourceTransform } from \"@definitions/helpers\";\n\nexport {\n    IResourceItem,\n    IResourceComponents,\n    IResourceComponentsProps,\n    IResourceContext,\n} from \"../../interfaces/bindings/resource\";\n\nexport const ResourceContext = React.createContext<IResourceContext>({\n    resources: [],\n});\n\nexport const ResourceContextProvider: React.FC<\n    React.PropsWithChildren<{ resources: ResourceProps[] }>\n> = ({ resources: providedResources, children }) => {\n    const resources: IResourceItem[] = useDeepMemo(() => {\n        return legacyResourceTransform(providedResources ?? []);\n    }, [providedResources]);\n\n    return (\n        <ResourceContext.Provider value={{ resources }}>\n            {children}\n        </ResourceContext.Provider>\n    );\n};\n","import React, { useMemo } from \"react\";\nimport { useMemoized } from \"@hooks/memoized\";\n\n/**\n * Hook that memoizes the given dependency array and checks the consecutive calls with deep equality and returns the same value as the first call if dependencies are not changed.\n * @internal\n */\nexport const useDeepMemo = <T,>(\n    fn: () => T,\n    dependencies: React.DependencyList,\n): T => {\n    const memoizedDependencies = useMemoized(dependencies);\n\n    const value = useMemo(fn, memoizedDependencies);\n\n    return value;\n};\n","import { useRef } from \"react\";\nimport isEqual from \"lodash/isEqual\";\n\n/**\n * Hook that memoizes the given value with deep equality.\n * @internal\n */\nexport const useMemoized = <T = unknown,>(value: T): T => {\n    const ref = useRef(value);\n\n    if (!isEqual(ref.current, value)) {\n        ref.current = value;\n    }\n\n    return ref.current;\n};\n","import React from \"react\";\n\n/**\n * This context is used to determine which router to use.\n *\n * This is a temporary solution until we remove the legacy router.\n */\n\nexport const RouterPickerContext = React.createContext<\"legacy\" | \"new\">(\"new\");\n\nexport const RouterPickerProvider = RouterPickerContext.Provider;\n\n/**\n * This is a temporary hook to determine which router to use.\n * It will be removed once the legacy router is removed.\n * @internal This is an internal hook.\n */\nexport const useRouterType = () => {\n    const value = React.useContext(RouterPickerContext);\n    return value;\n};\n","import React from \"react\";\nimport { useParse } from \"../use-parse\";\n\nexport const useParsed = <\n    TParams extends Record<string, any> = Record<string, any>,\n>() => {\n    const parse = useParse();\n\n    const parsed = React.useMemo(() => parse<TParams>(), [parse]);\n\n    return parsed;\n};\n","import React, { createContext, PropsWithChildren } from \"react\";\nimport { RouterBindings } from \"src/interfaces\";\n\nconst defaultBindings = {};\n\nexport const RouterBindingsContext =\n    createContext<RouterBindings>(defaultBindings);\n\nexport const RouterBindingsProvider: React.FC<\n    PropsWithChildren<{ router?: RouterBindings }>\n> = ({ children, router }) => {\n    return (\n        <RouterBindingsContext.Provider value={router ?? defaultBindings}>\n            {children}\n        </RouterBindingsContext.Provider>\n    );\n};\n","import { RouterBindingsContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\nimport { ParseFunction, ParseResponse } from \"src/interfaces\";\n\ntype UseParseType = () => <\n    TParams extends Record<string, any> = Record<string, any>,\n>() => ParseResponse<TParams>;\n\nexport const useParse: UseParseType = () => {\n    const bindings = useContext(RouterBindingsContext);\n\n    const useParse = React.useMemo(\n        () =>\n            bindings?.parse ??\n            (() =>\n                (() => {\n                    return {};\n                }) as ParseFunction),\n        [bindings?.parse],\n    );\n\n    const parse = useParse();\n\n    return parse as ReturnType<UseParseType>;\n};\n","import { useContext, useCallback } from \"react\";\nimport { ResourceContext } from \"@contexts/resource\";\nimport { IResourceItem } from \"../../../interfaces\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\n\nexport type UseResourceWithRouteReturnType = (route: string) => IResourceItem;\n\n/**\n * @deprecated Use `useResource` hook instead.\n * @internal This hook is for internal use only. And is kept for backward compatibility.\n */\nexport const useResourceWithRoute = (): UseResourceWithRouteReturnType => {\n    const { resources } = useContext(ResourceContext);\n\n    const resourceWithRoute = useCallback(\n        (route: string) => {\n            const picked = pickResource(route, resources, true);\n            if (picked) {\n                return picked;\n            }\n            return { name: route, route: route } as IResourceItem;\n        },\n        [resources],\n    );\n\n    return resourceWithRoute;\n};\n","import { useCallback } from \"react\";\nimport {\n    InvalidateOptions,\n    InvalidateQueryFilters,\n    useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { useResource } from \"@hooks/resource\";\nimport { pickDataProvider } from \"@definitions\";\nimport { BaseKey, IQueryKeys } from \"../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseInvalidateProp = {\n    resource?: string;\n    id?: BaseKey;\n    dataProviderName?: string;\n    invalidates: Array<keyof IQueryKeys> | false;\n    invalidationFilters?: InvalidateQueryFilters;\n    invalidationOptions?: InvalidateOptions;\n};\n\nexport const useInvalidate = (): ((\n    props: UseInvalidateProp,\n) => Promise<void>) => {\n    const { resources } = useResource();\n    const queryClient = useQueryClient();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const invalidate = useCallback(\n        async ({\n            resource,\n            dataProviderName,\n            invalidates,\n            id,\n            invalidationFilters = { type: \"all\", refetchType: \"active\" },\n            invalidationOptions = { cancelRefetch: false },\n        }: UseInvalidateProp) => {\n            if (invalidates === false) {\n                return;\n            }\n            const dp = pickDataProvider(resource, dataProviderName, resources);\n\n            const queryKey = keys()\n                .data(dp)\n                .resource(resource ?? \"\");\n\n            await Promise.all(\n                invalidates.map((key) => {\n                    switch (key) {\n                        case \"all\":\n                            return queryClient.invalidateQueries(\n                                keys().data(dp).get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        case \"list\":\n                            return queryClient.invalidateQueries(\n                                queryKey.action(\"list\").get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        case \"many\":\n                            return queryClient.invalidateQueries(\n                                queryKey.action(\"many\").get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        case \"resourceAll\":\n                            return queryClient.invalidateQueries(\n                                queryKey.get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        case \"detail\":\n                            return queryClient.invalidateQueries(\n                                queryKey\n                                    .action(\"one\")\n                                    .id(id || \"\")\n                                    .get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        default:\n                            return;\n                    }\n                }),\n            );\n\n            return;\n        },\n        [],\n    );\n\n    return invalidate;\n};\n","import { useContext } from \"react\";\nimport { LiveModeProps, IRefineContext } from \"../../../interfaces\";\nimport { RefineContext } from \"@contexts/refine\";\n\nexport const useLiveMode = (\n    liveMode: LiveModeProps[\"liveMode\"],\n): LiveModeProps[\"liveMode\"] => {\n    const { liveMode: liveModeFromContext } =\n        useContext<IRefineContext>(RefineContext);\n\n    return liveMode ?? liveModeFromContext;\n};\n","import { useContext, useEffect } from \"react\";\n\nimport { LiveContext } from \"@contexts/live\";\nimport {\n    BaseKey,\n    CrudFilters,\n    CrudSorting,\n    ILiveContext,\n    LiveEvent,\n    MetaQuery,\n    Pagination,\n} from \"../../../interfaces\";\n\nexport type UseSubscriptionProps = {\n    /**\n     * Channel name to subscribe.\n     */\n    channel: string;\n    /**\n     * Callback that is run when new events from subscription arrive.\n     */\n    onLiveEvent: (event: LiveEvent) => void;\n    /**\n     * Type of events to subscribe. `\"*\"` means all events.\n     * @type Array<\"deleted\" | \"updated\" | \"created\" | \"*\" | string>\n     */\n    types?: LiveEvent[\"type\"][];\n    /**\n     * Determines subscription should subscribe or not.\n     * @type Array<\"deleted\" | \"updated\" | \"created\" | \"*\" | string>\n     */\n    enabled?: boolean;\n    params?: {\n        ids?: BaseKey[];\n        id?: BaseKey;\n        meta?: MetaQuery;\n        /**\n         * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n         */\n        metaData?: MetaQuery;\n        pagination?: Pagination;\n        /**\n         * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n         */\n        hasPagination?: boolean;\n        /**\n         * @deprecated `sort` is deprecated, use `sorters` instead.\n         */\n        sort?: CrudSorting;\n        sorters?: CrudSorting;\n        filters?: CrudFilters;\n        subscriptionType?: \"useList\" | \"useOne\" | \"useMany\";\n        resource?: string;\n        [key: string]: any;\n    };\n};\n\nexport const useSubscription = ({\n    params,\n    channel,\n    types = [\"*\"],\n    enabled = true,\n    onLiveEvent,\n}: UseSubscriptionProps): void => {\n    const liveDataContext = useContext<ILiveContext>(LiveContext);\n\n    useEffect(() => {\n        let subscription: any;\n\n        if (enabled) {\n            subscription = liveDataContext?.subscribe({\n                channel,\n                params,\n                types,\n                callback: onLiveEvent,\n            });\n        }\n\n        return () => {\n            if (subscription) {\n                liveDataContext?.unsubscribe(subscription);\n            }\n        };\n    }, [enabled]);\n};\n","import { useContext } from \"react\";\n\nimport { LiveContext } from \"@contexts/live\";\nimport { ILiveContext } from \"../../../interfaces\";\n\nexport const usePublish: () => NonNullable<ILiveContext>[\"publish\"] = () => {\n    const liveContext = useContext<ILiveContext>(LiveContext);\n\n    return liveContext?.publish;\n};\n","import { useContext } from \"react\";\n\nimport { UndoableQueueContext } from \"@contexts/undoableQueue\";\nimport { IUndoableQueue, IUndoableQueueContext } from \"../../../interfaces\";\n\nexport type UseCancelNotificationType = () => {\n    notifications: IUndoableQueue[];\n    notificationDispatch: React.Dispatch<any>;\n};\n\nexport const useCancelNotification: UseCancelNotificationType = () => {\n    const { notifications, notificationDispatch } =\n        useContext<IUndoableQueueContext>(UndoableQueueContext);\n\n    return { notifications, notificationDispatch };\n};\n","import { useContext } from \"react\";\n\nimport { NotificationContext } from \"@contexts/notification\";\nimport { INotificationContext } from \"../../../interfaces\";\n\nexport const useNotification = (): INotificationContext => {\n    const { open, close } = useContext(NotificationContext);\n\n    return { open, close };\n};\n","import React, { createContext } from \"react\";\n\nimport { INotificationContext } from \"./INotificationContext\";\n\n/** @deprecated default value for notification context has no use and is an empty object.  */\nexport const defaultNotificationProvider: INotificationContext = {};\n\nexport const NotificationContext = createContext<INotificationContext>({});\n\nexport const NotificationContextProvider: React.FC<\n    INotificationContext & {\n        children?: React.ReactNode;\n    }\n> = ({ open, close, children }) => {\n    return (\n        <NotificationContext.Provider value={{ open, close }}>\n            {children}\n        </NotificationContext.Provider>\n    );\n};\n","import { useCallback } from \"react\";\n\nimport { OpenNotificationParams } from \"../../../interfaces\";\nimport { useNotification } from \"@hooks\";\n\nexport const useHandleNotification = (): typeof handleNotification => {\n    const { open } = useNotification();\n\n    const handleNotification = useCallback(\n        (\n            notification: OpenNotificationParams | false | undefined,\n            fallbackNotification?: OpenNotificationParams,\n        ) => {\n            if (notification !== false) {\n                if (notification) {\n                    open?.(notification);\n                } else if (fallbackNotification) {\n                    open?.(fallbackNotification);\n                }\n            }\n        },\n        [],\n    );\n\n    return handleNotification;\n};\n","import { useCallback, useContext } from \"react\";\nimport { TranslationContext } from \"@contexts/translation\";\n\n/**\n * If you need to change the locale at runtime, refine provides the `useSetLocale` hook.\n * It returns the changeLocale method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useSetLocale} for more details.\n */\nexport const useSetLocale = () => {\n    const { i18nProvider } = useContext(TranslationContext);\n\n    return useCallback((lang: string) => i18nProvider?.changeLocale(lang), []);\n};\n","import React from \"react\";\n\nimport { ITranslationContext } from \"../../interfaces\";\n\n/** @deprecated default value for translation context has no use and is an empty object.  */\nexport const defaultProvider: ITranslationContext = {};\n\nexport const TranslationContext = React.createContext<ITranslationContext>({});\n\nexport const TranslationContextProvider: React.FC<\n    ITranslationContext & {\n        children?: React.ReactNode;\n    }\n> = ({ children, i18nProvider }) => {\n    return (\n        <TranslationContext.Provider\n            value={{\n                i18nProvider: i18nProvider,\n            }}\n        >\n            {children}\n        </TranslationContext.Provider>\n    );\n};\n","import { useContext, useMemo } from \"react\";\nimport { TranslationContext } from \"@contexts/translation\";\n\n/**\n * If you need to translate the texts in your own components, refine provides the `useTranslate` hook.\n * It returns the translate method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useTranslate} for more details.\n */\nexport const useTranslate = () => {\n    const { i18nProvider } = useContext(TranslationContext);\n\n    const fn = useMemo(() => {\n        function translate(\n            key: string,\n            options?: any,\n            defaultMessage?: string,\n        ): string;\n        function translate(key: string, defaultMessage?: string): string;\n\n        function translate(\n            key: string,\n            options?: string | any,\n            defaultMessage?: string,\n        ) {\n            return (\n                i18nProvider?.translate(key, options, defaultMessage) ??\n                defaultMessage ??\n                (typeof options === \"string\" &&\n                typeof defaultMessage === \"undefined\"\n                    ? options\n                    : key)\n            );\n        }\n\n        return translate;\n    }, [i18nProvider]);\n\n    return fn;\n};\n","import { useContext, useCallback } from \"react\";\nimport { TranslationContext } from \"@contexts/translation\";\n\nexport type UseGetLocaleType = () => () => string | undefined;\n\n/**\n * If you need to know the current locale, refine provides the `useGetLocale` hook.\n * It returns the `getLocale` method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useGetLocale} for more details.\n */\nexport const useGetLocale: UseGetLocaleType = () => {\n    const { i18nProvider } = useContext(TranslationContext);\n\n    return useCallback(() => i18nProvider?.getLocale(), []);\n};\n","import { useState } from \"react\";\nimport { useResource, useDataProvider, useMeta } from \"@hooks\";\nimport {\n    BaseRecord,\n    MapDataFn,\n    CrudSorting,\n    CrudFilters,\n    MetaQuery,\n} from \"../../interfaces\";\nimport {\n    useUserFriendlyName,\n    pickDataProvider,\n    pickNotDeprecated,\n} from \"@definitions\";\nimport { ExportToCsv, Options } from \"export-to-csv-fix-source-map\";\n\ntype UseExportOptionsType<\n    TData extends BaseRecord = BaseRecord,\n    TVariables = any,\n> = {\n    /**\n     * Resource name for API data interactions\n     * @default Resource name that it reads from route\n     * @deprecated `resourceName` is deprecated. Use `resource` instead.\n     */\n    resourceName?: string;\n    /**\n     * Resource name for API data interactions\n     * @default Resource name that it reads from route\n     */\n    resource?: string;\n    /**\n     * A mapping function that runs for every record. Mapped data will be included in the file contents\n     */\n    mapData?: MapDataFn<TData, TVariables>;\n    /**\n     *  Sorts records\n     *  @deprecated `sorter` is deprecated. Use `sorters` instead.\n     */\n    sorter?: CrudSorting;\n    /**\n     *  Sorts records\n     */\n    sorters?: CrudSorting;\n    /**\n     *  Filters records\n     */\n    filters?: CrudFilters;\n    maxItemCount?: number;\n    /**\n     *  Requests to fetch data are made as batches by page size. By default, it is 20. Used for `getList` method of `DataProvider`\n     */\n    pageSize?: number;\n    /**\n     *  Used for exporting options\n     *  @type [Options](https://github.com/alexcaza/export-to-csv)\n     */\n    exportOptions?: Options;\n    /**\n     *  Metadata query for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     *  Metadata query for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n    /**\n     *  Callback to handle error events of this hook\n     */\n    onError?: (error: any) => void;\n};\n\ntype UseExportReturnType = {\n    isLoading: boolean;\n    triggerExport: () => Promise<void>;\n};\n\n/**\n * `useExport` hook allows you to make your resources exportable.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useExport} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TVariables - Values for params.\n *\n */\nexport const useExport = <\n    TData extends BaseRecord = BaseRecord,\n    TVariables = any,\n>({\n    resourceName,\n    resource: resourceFromProps,\n    sorter,\n    sorters,\n    filters,\n    maxItemCount,\n    pageSize = 20,\n    mapData = (item) => item as any,\n    exportOptions,\n    meta,\n    metaData,\n    dataProviderName,\n    onError,\n}: UseExportOptionsType<TData, TVariables> = {}): UseExportReturnType => {\n    const [isLoading, setIsLoading] = useState(false);\n\n    const dataProvider = useDataProvider();\n    const getMeta = useMeta();\n    const { resource, resources, identifier } = useResource(\n        pickNotDeprecated(resourceFromProps, resourceName),\n    );\n    const getFriendlyName = useUserFriendlyName();\n\n    const filename = `${getFriendlyName(\n        identifier,\n        \"plural\",\n    )}-${new Date().toLocaleString()}`;\n\n    const { getList } = dataProvider(\n        pickDataProvider(identifier, dataProviderName, resources),\n    );\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    const triggerExport = async () => {\n        setIsLoading(true);\n\n        let rawData: BaseRecord[] = [];\n\n        let current = 1;\n        let preparingData = true;\n        while (preparingData) {\n            try {\n                const { data, total } = await getList<TData>({\n                    resource: resource?.name ?? \"\",\n                    filters,\n                    sort: pickNotDeprecated(sorters, sorter),\n                    sorters: pickNotDeprecated(sorters, sorter),\n                    pagination: {\n                        current,\n                        pageSize,\n                        mode: \"server\",\n                    },\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                });\n\n                current++;\n\n                rawData.push(...data);\n\n                if (maxItemCount && rawData.length >= maxItemCount) {\n                    rawData = rawData.slice(0, maxItemCount);\n                    preparingData = false;\n                }\n\n                if (total === rawData.length) {\n                    preparingData = false;\n                }\n            } catch (error) {\n                setIsLoading(false);\n                preparingData = false;\n\n                onError?.(error);\n\n                return;\n            }\n        }\n\n        const csvExporter = new ExportToCsv({\n            filename,\n            useKeysAsHeaders: true,\n            ...exportOptions,\n        });\n\n        csvExporter.generateCsv(rawData.map(mapData as any));\n\n        setIsLoading(false);\n    };\n\n    return {\n        isLoading,\n        triggerExport,\n    };\n};\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport warnOnce from \"warn-once\";\nimport debounce from \"lodash/debounce\";\n\nimport {\n    useWarnAboutChange,\n    useCreate,\n    useUpdate,\n    useRedirectionAfterSubmission,\n    useMutationMode,\n    useOne,\n    useRefineContext,\n    useMeta,\n    useInvalidate,\n} from \"@hooks\";\n\nimport {\n    BaseRecord,\n    CreateResponse,\n    GetOneResponse,\n    HttpError,\n    LiveModeProps,\n    RedirectAction,\n    SuccessErrorNotification,\n    UpdateResponse,\n    MutationMode,\n    BaseKey,\n    IQueryKeys,\n    FormAction,\n    MetaQuery,\n    AutoSaveProps,\n    AutoSaveReturnType,\n    OptimisticUpdateMapType,\n} from \"../../interfaces\";\nimport {\n    UpdateParams,\n    UseUpdateProps,\n    UseUpdateReturnType,\n} from \"../data/useUpdate\";\nimport { UseCreateProps, UseCreateReturnType } from \"../data/useCreate\";\nimport { redirectPage } from \"@definitions/helpers\";\nimport { useResource } from \"../resource/useResource\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type ActionParams = {\n    /**\n     * Type of the form mode\n     * @default Action that it reads from route otherwise \"create\" is used\n     */\n    action?: FormAction;\n};\n\ntype ActionFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = {\n    /**\n     * Resource name for API data interactions\n     * @default Resource name that it reads from route\n     */\n    resource?: string;\n    /**\n     * Record id for fetching\n     * @default Id that it reads from the URL\n     */\n    id?: BaseKey;\n    /**\n     * Page to redirect after a succesfull mutation\n     * @type `\"show\" | \"edit\" | \"list\" | \"create\" | false`\n     * @default `\"list\"`\n     */\n    redirect?: RedirectAction;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * Metadata query for dataProvider\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * Metadata to pass for the `useOne` query\n     */\n    queryMeta?: MetaQuery;\n    /**\n     * Metadata to pass for the mutation (`useCreate` for `create` and `clone` actions, `useUpdate` for `edit` action)\n     */\n    mutationMeta?: MetaQuery;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     * @default `\"pessimistic\"*`\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Called when a mutation is successful\n     */\n    onMutationSuccess?: (\n        data: CreateResponse<TResponse> | UpdateResponse<TResponse>,\n        variables: TVariables,\n        context: any,\n        isAutoSave?: boolean,\n    ) => void;\n    /**\n     * Called when a mutation encounters an error\n     */\n    onMutationError?: (\n        error: TResponseError,\n        variables: TVariables,\n        context: any,\n        isAutoSave?: boolean,\n    ) => void;\n    /**\n     * Duration to wait before executing mutations when `mutationMode = \"undoable\"`\n     * @default `5000*`\n     */\n    undoableTimeout?: number;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n    /**\n     * You can use it to manage the invalidations that will occur at the end of the mutation.\n     * @type  `all`, `resourceAll`, `list`, `many`, `detail`, `false`\n     * @default `[\"list\", \"many\", \"detail\"]`\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options of useOne hook used while in edit mode.\n     */\n    queryOptions?: UseQueryOptions<\n        GetOneResponse<TQueryFnData>,\n        TError,\n        GetOneResponse<TData>\n    >;\n    /**\n     * react-query's [useMutation](https://tanstack.com/query/v4/docs/reference/useMutation) options of useCreate hook used while submitting in create and clone modes.\n     */\n    createMutationOptions?: UseCreateProps<\n        TResponse,\n        TResponseError,\n        TVariables\n    >[\"mutationOptions\"];\n    /**\n     * react-query's [useMutation](https://tanstack.com/query/v4/docs/reference/useMutation) options of useUpdate hook used while submitting in edit mode.\n     */\n    updateMutationOptions?: UseUpdateProps<\n        TResponse,\n        TResponseError,\n        TVariables\n    >[\"mutationOptions\"];\n    /**\n     * If you customize the [`optimisticUpdateMap`](https://refine.dev/docs/api-reference/core/hooks/data/useUpdateMany/#optimisticupdatemap) option, you can use it to manage the invalidations that will occur at the end of the mutation.\n     * @default {\n     *   list: true,\n     *   many: true,\n     *   detail: true,\n     * }\n     */\n    optimisticUpdateMap?: OptimisticUpdateMapType<TResponse, TVariables>;\n} & SuccessErrorNotification<\n    UpdateResponse<TResponse> | CreateResponse<TResponse>,\n    TResponseError,\n    { id: BaseKey; values: TVariables } | TVariables\n> &\n    ActionParams &\n    LiveModeProps;\n\nexport type UseFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = ActionFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> &\n    ActionParams &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps &\n    AutoSaveProps<TVariables>;\n\nexport type UseFormReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = {\n    id?: BaseKey;\n    setId: Dispatch<SetStateAction<BaseKey | undefined>>;\n    queryResult?: QueryObserverResult<GetOneResponse<TData>>;\n    mutationResult:\n        | UseUpdateReturnType<TResponse, TResponseError, TVariables>\n        | UseCreateReturnType<TResponse, TResponseError, TVariables>;\n    formLoading: boolean;\n    onFinish: (\n        values: TVariables,\n    ) => Promise<CreateResponse<TResponse> | UpdateResponse<TResponse> | void>;\n    redirect: (\n        redirect: RedirectAction,\n        idFromFunction?: BaseKey | undefined,\n        routeParams?: Record<string, string | number>,\n    ) => void;\n} & UseLoadingOvertimeReturnType &\n    AutoSaveReturnType<TResponse, TResponseError, TVariables>;\n\n/**\n * `useForm` is used to manage forms. It uses Ant Design {@link https://ant.design/components/form/ Form} data scope management under the hood and returns the required props for managing the form actions.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useForm} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n * @typeParam TResponse - Result data returned by the mutation function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TData`\n * @typeParam TResponseError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}. Defaults to `TError`\n *\n */\nexport const useForm = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n>({\n    resource: resourceFromProps,\n    action: actionFromProps,\n    id: idFromProps,\n    onMutationSuccess,\n    onMutationError,\n    redirect: redirectFromProps,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    queryMeta,\n    mutationMeta,\n    mutationMode: mutationModeProp,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    undoableTimeout,\n    dataProviderName,\n    invalidates,\n    queryOptions,\n    createMutationOptions,\n    updateMutationOptions,\n    overtimeOptions,\n    autoSave,\n    optimisticUpdateMap,\n}: UseFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> = {}): UseFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> => {\n    const invalidate = useInvalidate();\n    const { options } = useRefineContext();\n    const getMeta = useMeta();\n\n    const {\n        resource,\n        id: idFromRoute,\n        action: actionFromRoute,\n        identifier,\n    } = useResource(resourceFromProps);\n    const { identifier: inferredIdentifier } = useResource();\n\n    /** We only accept `id` from URL params if `resource` is not explicitly passed. */\n    /** This is done to avoid sending wrong requests for custom `resource` and an async `id` */\n    const getDefaultId = () => {\n        const idFromPropsOrRoute = idFromProps ?? idFromRoute;\n\n        if (resourceFromProps && resourceFromProps !== inferredIdentifier) {\n            return idFromProps;\n        }\n\n        return idFromPropsOrRoute;\n    };\n    const defaultId = getDefaultId();\n\n    // id state is needed to determine selected record in a context for example useModal\n    const [id, setId] = React.useState<BaseKey | undefined>(defaultId);\n\n    /**\n     * In some cases, `id` from the router params is not available at the first render.\n     *\n     * (e.g. when using `Next.js` and client-side-rendering, `router` is not ready to use at the first render)\n     *\n     * We're watching for `defaultId` changes and setting `id` state if it's not equal to `defaultId`.\n     */\n    React.useEffect(() => {\n        setId(defaultId);\n    }, [defaultId]);\n\n    const getAction = () => {\n        if (actionFromProps) return actionFromProps;\n        else if (actionFromRoute === \"edit\" || actionFromRoute === \"clone\")\n            return actionFromRoute;\n        else return \"create\";\n    };\n    const action = getAction();\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    const { mutationMode: mutationModeContext } = useMutationMode();\n    const mutationMode = mutationModeProp ?? mutationModeContext;\n\n    const isCreate = action === \"create\";\n    const isEdit = action === \"edit\";\n    const isClone = action === \"clone\";\n\n    warnOnce(\n        (isClone || isEdit) &&\n            Boolean(resourceFromProps) &&\n            !Boolean(idFromProps) &&\n            queryOptions?.enabled !== false,\n        `[useForm]: action: \"${action}\", resource: \"${identifier}\", id: ${id} \\n\\n` +\n            `If you don't use the \\`setId\\` method to set the \\`id\\`, you should pass the \\`id\\` prop to \\`useForm\\`. Otherwise, \\`useForm\\` will not be able to infer the \\`id\\` from the current URL. \\n\\n` +\n            `See https://refine.dev/docs/api-reference/core/hooks/useForm/#resource`,\n    );\n\n    /**\n     * Designated `redirect` route\n     */\n    const designatedRedirectAction = redirectPage({\n        redirectFromProps,\n        action,\n        redirectOptions: options.redirect,\n    });\n\n    const enableQuery = id !== undefined && (isEdit || isClone);\n\n    const queryResult = useOne<TQueryFnData, TError, TData>({\n        resource: identifier,\n        id: id ?? \"\",\n        queryOptions: {\n            enabled: enableQuery,\n            ...queryOptions,\n        },\n        liveMode,\n        onLiveEvent,\n        liveParams,\n        meta: { ...combinedMeta, ...queryMeta },\n        metaData: { ...combinedMeta, ...queryMeta },\n        dataProviderName,\n    });\n\n    const { isFetching: isFetchingQuery } = queryResult;\n\n    const mutationResultCreate = useCreate<\n        TResponse,\n        TResponseError,\n        TVariables\n    >({\n        mutationOptions: createMutationOptions,\n    });\n    const { mutate: mutateCreate, isLoading: isLoadingCreate } =\n        mutationResultCreate;\n\n    const mutationResultUpdate = useUpdate<\n        TResponse,\n        TResponseError,\n        TVariables\n    >({\n        mutationOptions: updateMutationOptions,\n    });\n    const { mutate: mutateUpdate, isLoading: isLoadingUpdate } =\n        mutationResultUpdate;\n\n    const autoSaveMutation = useUpdate<TResponse, TResponseError, TVariables>(\n        {},\n    );\n\n    const { setWarnWhen } = useWarnAboutChange();\n\n    const handleSubmitWithRedirect = useRedirectionAfterSubmission();\n\n    const onFinishCreate = async (values: TVariables) => {\n        setWarnWhen(false);\n\n        const onSuccess = (id?: BaseKey) => {\n            handleSubmitWithRedirect({\n                redirect: designatedRedirectAction,\n                resource,\n                id,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n        };\n\n        if (mutationMode !== \"pessimistic\") {\n            setTimeout(() => {\n                onSuccess();\n            });\n        }\n\n        return new Promise<CreateResponse<TResponse> | void>(\n            (resolve, reject) => {\n                if (mutationMode !== \"pessimistic\") {\n                    resolve();\n                }\n\n                if (!resource) return;\n\n                return mutateCreate(\n                    {\n                        values,\n                        resource: identifier ?? resource.name,\n                        successNotification,\n                        errorNotification,\n                        meta: { ...combinedMeta, ...mutationMeta },\n                        metaData: { ...combinedMeta, ...mutationMeta },\n                        dataProviderName,\n                        invalidates,\n                    },\n                    {\n                        onSuccess: (data, _, context) => {\n                            if (onMutationSuccess) {\n                                onMutationSuccess(data, values, context);\n                            }\n\n                            const responseId = data?.data?.id;\n\n                            onSuccess(responseId);\n\n                            resolve(data);\n                        },\n                        onError: (error: TResponseError, _, context) => {\n                            if (onMutationError) {\n                                return onMutationError(error, values, context);\n                            }\n                            reject();\n                        },\n                    },\n                );\n            },\n        );\n    };\n\n    React.useEffect(() => {\n        return () => {\n            if (\n                autoSave?.invalidateOnUnmount &&\n                autoSaveMutation.status === \"success\"\n            ) {\n                invalidate({\n                    id,\n                    invalidates: invalidates || [\"list\", \"many\", \"detail\"],\n                    dataProviderName,\n                    resource: identifier,\n                });\n            }\n        };\n    }, [autoSave?.invalidateOnUnmount, autoSaveMutation.status]);\n\n    const onFinishAutoSaveMutation = (\n        values: TVariables,\n    ): Promise<UpdateResponse<TResponse> | void> | void => {\n        if (!resource || !isEdit) return;\n\n        const variables: UpdateParams<TResponse, TResponseError, TVariables> = {\n            id: id ?? \"\",\n            values,\n            resource: identifier ?? resource.name,\n            successNotification: false,\n            errorNotification: false,\n            meta: { ...combinedMeta, ...mutationMeta },\n            metaData: { ...combinedMeta, ...mutationMeta },\n            dataProviderName,\n            invalidates: [],\n            mutationMode: \"pessimistic\",\n        };\n\n        return autoSaveMutation.mutate(variables, {\n            onSuccess: (data, _, context) => {\n                if (onMutationSuccess) {\n                    onMutationSuccess(data, values, context, true);\n                }\n            },\n            onError: (error: TResponseError, _, context) => {\n                if (onMutationError) {\n                    return onMutationError(error, values, context, true);\n                }\n            },\n        });\n    };\n\n    const onFinishAutoSave = debounce((allValues) => {\n        return onFinishAutoSaveMutation(allValues);\n    }, autoSave?.debounce || 1000);\n\n    const onFinishUpdate = async (values: TVariables) => {\n        setWarnWhen(false);\n\n        if (!resource) return;\n\n        const variables: UpdateParams<TResponse, TResponseError, TVariables> = {\n            id: id ?? \"\",\n            values,\n            resource: identifier ?? resource.name,\n            mutationMode,\n            undoableTimeout,\n            successNotification,\n            errorNotification,\n            meta: { ...combinedMeta, ...mutationMeta },\n            metaData: { ...combinedMeta, ...mutationMeta },\n            dataProviderName,\n            invalidates,\n            optimisticUpdateMap,\n        };\n\n        const onSuccess = () => {\n            handleSubmitWithRedirect({\n                redirect: designatedRedirectAction,\n                resource,\n                id,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n        };\n\n        // setWarnWhen is set to \"false\" at the start of the mutation. With the help of setTimeout we guarantee that the value false is set.\n        if (mutationMode !== \"pessimistic\") {\n            setTimeout(() => {\n                onSuccess();\n            });\n        }\n\n        // setTimeout is required to make onSuccess e.g. callbacks to work if component unmounts i.e. on route change\n        return new Promise<UpdateResponse<TResponse> | void>(\n            (resolve, reject) => {\n                if (mutationMode !== \"pessimistic\") {\n                    resolve();\n                }\n                return setTimeout(() => {\n                    mutateUpdate(variables, {\n                        onSuccess: (data, _, context) => {\n                            if (onMutationSuccess) {\n                                onMutationSuccess(data, values, context);\n                            }\n\n                            if (mutationMode === \"pessimistic\") {\n                                onSuccess();\n                            }\n\n                            resolve(data);\n                        },\n                        onError: (error: TResponseError, _, context) => {\n                            if (onMutationError) {\n                                return onMutationError(error, values, context);\n                            }\n                            reject();\n                        },\n                    });\n                });\n            },\n        );\n    };\n\n    const createResult = {\n        formLoading: isFetchingQuery || isLoadingCreate,\n        mutationResult: mutationResultCreate,\n        onFinish: onFinishCreate,\n    };\n\n    const editResult = {\n        formLoading: isFetchingQuery || isLoadingUpdate,\n        mutationResult: mutationResultUpdate,\n        onFinish: onFinishUpdate,\n    };\n\n    const result = isCreate || isClone ? createResult : editResult;\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: result.mutationResult.isLoading || queryResult.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return {\n        ...result,\n        queryResult,\n        onFinishAutoSave,\n        autoSaveProps: {\n            status: autoSaveMutation.status,\n            data: autoSaveMutation.data,\n            error: autoSaveMutation.error,\n        },\n        id,\n        setId,\n        redirect: (redirect, idFromFunction?: BaseKey | undefined) => {\n            handleSubmitWithRedirect({\n                redirect:\n                    redirect !== undefined\n                        ? redirect\n                        : isEdit\n                        ? \"list\"\n                        : \"edit\",\n                resource,\n                id: idFromFunction ?? id,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n        },\n        overtime: {\n            elapsedTime,\n        },\n    };\n};\n","import { useCallback } from \"react\";\n\nimport {\n    BaseKey,\n    IResourceItem,\n    MetaDataQuery,\n    RedirectAction,\n} from \"../../interfaces\";\nimport { useNavigation } from \"@hooks\";\n\nexport type UseRedirectionAfterSubmissionType = () => (options: {\n    redirect: RedirectAction;\n    resource?: IResourceItem;\n    id?: BaseKey;\n    meta?: MetaDataQuery;\n}) => void;\n\nexport const useRedirectionAfterSubmission: UseRedirectionAfterSubmissionType =\n    () => {\n        const { show, edit, list, create } = useNavigation();\n\n        const handleSubmitWithRedirect = useCallback(\n            ({\n                redirect,\n                resource,\n                id,\n                meta = {},\n            }: {\n                redirect: RedirectAction;\n                resource?: IResourceItem;\n                id?: BaseKey;\n                meta?: MetaDataQuery;\n            }) => {\n                if (redirect && resource) {\n                    if (!!resource.show && redirect === \"show\" && id) {\n                        return show(resource, id, undefined, meta);\n                    }\n\n                    if (!!resource.edit && redirect === \"edit\" && id) {\n                        return edit(resource, id, undefined, meta);\n                    }\n\n                    if (!!resource.create && redirect === \"create\") {\n                        return create(resource, undefined, meta);\n                    }\n\n                    return list(resource, \"push\", meta);\n                } else {\n                    return;\n                }\n            },\n            [],\n        );\n\n        return handleSubmitWithRedirect;\n    };\n","import { RouterBindingsContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\n\nexport const useGo = () => {\n    const bindings = useContext(RouterBindingsContext);\n\n    const useGo = React.useMemo(\n        () => bindings?.go ?? (() => () => undefined),\n        [bindings?.go],\n    );\n\n    const go = useGo();\n\n    return go;\n};\n","import { RouterBindingsContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\n\nexport const useBack = () => {\n    const bindings = useContext(RouterBindingsContext);\n\n    const useBack = React.useMemo(\n        () => bindings?.back ?? (() => () => undefined),\n        [bindings?.back],\n    );\n\n    const back = useBack();\n\n    return back;\n};\n","import { useRouterContext, useResource } from \"@hooks\";\nimport { BaseKey, IResourceItem, MetaDataQuery } from \"../../interfaces\";\nimport { useGo } from \"@hooks/router/use-go\";\nimport { useParsed } from \"@hooks/router/use-parsed\";\nimport { useRouterType } from \"@contexts/router-picker\";\nimport { getActionRoutesFromResource } from \"@definitions/helpers/router\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\nimport { composeRoute } from \"@definitions/helpers/router/compose-route\";\nimport { useBack } from \"@hooks/router/use-back\";\n\nexport type HistoryType = \"push\" | \"replace\";\n\n/**\n * `refine` uses {@link https://reactrouter.com/en/hooks/use-navigate `React Router`} and comes with all redirects out of the box.\n * It allows you to manage your routing operations in refine.\n * Using this hook, you can manage all the routing operations of your application very easily.\n *\n * @internal This is an internal hook of refine. Do not use it directly.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation} for more details.\n */\nexport const useNavigation = () => {\n    const { resources } = useResource();\n    const routerType = useRouterType();\n    const { useHistory } = useRouterContext();\n    const history = useHistory();\n    const parsed = useParsed();\n    const go = useGo();\n    const back = useBack();\n\n    const handleUrl = (url: string, type: HistoryType = \"push\") => {\n        if (routerType === \"legacy\") {\n            history[type](url);\n        } else {\n            go({ to: url, type });\n        }\n    };\n\n    const createUrl = (\n        resource: string | IResourceItem,\n        meta: MetaDataQuery = {},\n    ) => {\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const createActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"create\");\n\n            if (!createActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                createActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                meta,\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const createActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"create\")?.route;\n\n            if (!createActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(\n                    createActionRoute,\n                    resourceItem?.meta,\n                    parsed,\n                    meta,\n                ),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const editUrl = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        meta: MetaDataQuery = {},\n    ) => {\n        const encodedId = encodeURIComponent(id);\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const editActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"edit\");\n\n            if (!editActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                editActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                {\n                    ...meta,\n                    id: encodedId,\n                },\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const editActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"edit\")?.route;\n\n            if (!editActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(editActionRoute, resourceItem?.meta, parsed, {\n                    ...meta,\n                    id: encodedId,\n                }),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const cloneUrl = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        meta: MetaDataQuery = {},\n    ) => {\n        const encodedId = encodeURIComponent(id);\n\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const cloneActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"clone\");\n\n            if (!cloneActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                cloneActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                {\n                    ...meta,\n                    id: encodedId,\n                },\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const cloneActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"clone\")?.route;\n\n            if (!cloneActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(cloneActionRoute, resourceItem?.meta, parsed, {\n                    ...meta,\n                    id: encodedId,\n                }),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const showUrl = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        meta: MetaDataQuery = {},\n    ) => {\n        const encodedId = encodeURIComponent(id);\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const showActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"show\");\n\n            if (!showActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                showActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                {\n                    ...meta,\n                    id: encodedId,\n                },\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const showActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"show\")?.route;\n\n            if (!showActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(showActionRoute, resourceItem?.meta, parsed, {\n                    ...meta,\n                    id: encodedId,\n                }),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const listUrl = (\n        resource: string | IResourceItem,\n        meta: MetaDataQuery = {},\n    ) => {\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const listActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"list\");\n\n            if (!listActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                listActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                meta,\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const listActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"list\")?.route;\n\n            if (!listActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(\n                    listActionRoute,\n                    resourceItem?.meta,\n                    parsed,\n                    meta,\n                ),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const create = (\n        resource: string | IResourceItem,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(createUrl(resource, meta), type);\n    };\n\n    const edit = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(editUrl(resource, id, meta), type);\n    };\n\n    const clone = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(cloneUrl(resource, id, meta), type);\n    };\n\n    const show = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(showUrl(resource, id, meta), type);\n    };\n\n    const list = (\n        resource: string | IResourceItem,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(listUrl(resource, meta), type);\n    };\n\n    /**\n     * @deprecated Please use `useGo` hook instead.\n     */\n    const push = (path: string, ...rest: unknown[]) => {\n        if (routerType === \"legacy\") {\n            history.push(path, ...rest);\n        } else {\n            go({ to: path, type: \"push\" });\n        }\n    };\n\n    /**\n     * @deprecated Please use `useGo` hook instead.\n     */\n    const replace = (path: string, ...rest: unknown[]) => {\n        if (routerType === \"legacy\") {\n            history.replace(path, ...rest);\n        } else {\n            go({ to: path, type: \"replace\" });\n        }\n    };\n\n    /**\n     * @deprecated Please use `useBack` hook instead.\n     */\n    const goBack = () => {\n        if (routerType === \"legacy\") {\n            history.goBack();\n        } else {\n            back();\n        }\n    };\n\n    return {\n        create,\n        createUrl,\n        edit,\n        editUrl,\n        clone,\n        cloneUrl,\n        show,\n        showUrl,\n        list,\n        listUrl,\n        push,\n        replace,\n        goBack,\n    };\n};\n","import React, { useState } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport warnOnce from \"warn-once\";\n\nimport { useMeta, useOne } from \"@hooks\";\n\nimport {\n    BaseRecord,\n    GetOneResponse,\n    SuccessErrorNotification,\n    MetaQuery,\n    LiveModeProps,\n    BaseKey,\n    HttpError,\n    Prettify,\n} from \"../../interfaces\";\nimport { useResource } from \"../resource/useResource\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type useShowReturnType<TData extends BaseRecord = BaseRecord> = {\n    queryResult: QueryObserverResult<GetOneResponse<TData>>;\n    showId?: BaseKey;\n    setShowId: React.Dispatch<React.SetStateAction<BaseKey | undefined>>;\n} & UseLoadingOvertimeReturnType;\n\nexport type useShowProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n> = {\n    /**\n     * Resource name for API data interactions\n     * @default Reads `:resource` from the URL\n     */\n    resource?: string;\n    /**\n     * Data item ID for API data interactions\n     * @default Reads `:id` from the URL\n     */\n    id?: BaseKey;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetOneResponse<TQueryFnData>,\n        TError,\n        GetOneResponse<TData>\n    >;\n    /**\n     * Additional meta data to pass to the data provider's `getOne`\n     */\n    meta?: MetaQuery;\n    /**\n     * Additional meta data to pass to the data provider's `getOne`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * Target data provider name for API call to be made\n     * @default `\"default\"`\n     */\n    dataProviderName?: string;\n} & LiveModeProps &\n    SuccessErrorNotification<\n        GetOneResponse<TData>,\n        TError,\n        Prettify<{ id?: BaseKey } & MetaQuery>\n    > &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useShow` hook allows you to fetch the desired record.\n * It uses `getOne` method as query function from the dataProvider that is\n * passed to {@link https://refine.dev/docs/api-reference/core/components/refine-config/ `<Refine>`}.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/show/useShow} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useShow = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    id,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    dataProviderName,\n    queryOptions,\n    overtimeOptions,\n}: useShowProps<\n    TQueryFnData,\n    TError,\n    TData\n> = {}): useShowReturnType<TData> => {\n    const {\n        resource,\n        id: idFromRoute,\n        identifier,\n    } = useResource(resourceFromProp);\n    const { identifier: inferredIdentifier } = useResource();\n    const getMeta = useMeta();\n\n    const getDefaultId = () => {\n        const idFromPropsOrRoute = id ?? idFromRoute;\n\n        if (resourceFromProp && resourceFromProp !== inferredIdentifier) {\n            return id;\n        }\n\n        return idFromPropsOrRoute;\n    };\n    const defaultId = getDefaultId();\n\n    const [showId, setShowId] = useState<BaseKey | undefined>(defaultId);\n\n    React.useEffect(() => {\n        setShowId(defaultId);\n    }, [defaultId]);\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    warnOnce(\n        Boolean(resourceFromProp) && !Boolean(id),\n        `[useShow]: resource: \"${identifier}\", id: ${id} \\n\\n` +\n            `If you don't use the \\`setShowId\\` method to set the \\`showId\\`, you should pass the \\`id\\` prop to \\`useShow\\`. Otherwise, \\`useShow\\` will not be able to infer the \\`id\\` from the current URL. \\n\\n` +\n            `See https://refine.dev/docs/api-reference/core/hooks/show/useShow/#resource`,\n    );\n\n    const queryResult = useOne<TQueryFnData, TError, TData>({\n        resource: identifier,\n        id: showId ?? \"\",\n        queryOptions: {\n            enabled: showId !== undefined,\n            ...queryOptions,\n        },\n        successNotification,\n        errorNotification,\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        liveMode,\n        onLiveEvent,\n        dataProviderName,\n    });\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResult.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return {\n        queryResult,\n        showId,\n        setShowId,\n        overtime: { elapsedTime },\n    };\n};\n","import { useEffect, useState } from \"react\";\nimport { parse, ParseConfig } from \"papaparse\";\nimport chunk from \"lodash/chunk\";\n\nimport { useCreate, useCreateMany, useMeta, useResource } from \"@hooks\";\nimport { MapDataFn, BaseRecord, HttpError, MetaQuery } from \"../../interfaces\";\nimport {\n    importCSVMapper,\n    sequentialPromises,\n    pickNotDeprecated,\n} from \"@definitions\";\nimport { UseCreateReturnType } from \"../../hooks/data/useCreate\";\nimport { UseCreateManyReturnType } from \"../../hooks/data/useCreateMany\";\n\nexport type ImportSuccessResult<TVariables, TData> = {\n    request: TVariables[];\n    type: \"success\";\n    response: TData[];\n};\n\nexport type ImportErrorResult<TVariables> = {\n    request: TVariables[];\n    type: \"error\";\n    response: HttpError[];\n};\n\nexport type OnFinishParams<TVariables, TData> = {\n    succeeded: ImportSuccessResult<TVariables, TData>[];\n    errored: ImportErrorResult<TVariables>[];\n};\n\nexport type OnProgressParams = {\n    totalAmount: number;\n    processedAmount: number;\n};\n\nexport type ImportOptions<\n    TItem,\n    TVariables = any,\n    TData extends BaseRecord = BaseRecord,\n> = {\n    /**\n     * Resource name for API data interactions.\n     * @default Resource name that it reads from route\n     * @deprecated `resourceName` is deprecated. Use `resource` instead.\n     */\n    resourceName?: string;\n    /**\n     * Resource name for API data interactions.\n     * @default Resource name that it reads from route\n     */\n    resource?: string;\n    /**\n     * A mapping function that runs for every record. Mapped data will be included in the file contents.\n     */\n    mapData?: MapDataFn<TItem, TVariables>;\n    /**\n     * Custom Papa Parse options.\n     * @type [`ParseConfig`](https://www.papaparse.com/docs)\n     */\n    paparseOptions?: ParseConfig;\n    /**\n     * Requests batch size. If it is 1, all records are sent one by one. By default, it is [`Number.MAX_SAFE_INTEGER`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER) to send all records in one batch. If it is more than 1, `createMany` should be implemented on DataProvider.\n     */\n    batchSize?: number;\n    /**\n     * Called with errors and successful responses when all requests are sent.\n     */\n    onFinish?: (results: OnFinishParams<TVariables, TData>) => void;\n    /**\n     *  Metadata query for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     *  Metadata query for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     *  A callback function that returns a current state of uploading process.\n     *\n     *  Ex: `percentage = onProgressParams.processedAmount / onProgressParams.totalAmount * 100`\n     */\n    onProgress?: (onProgressParams: OnProgressParams) => void;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n};\n\nexport type CreatedValuesType<TVariables, TData> =\n    | ImportSuccessResult<TVariables, TData>\n    | ImportErrorResult<TVariables>;\n\nexport type HandleChangeType<TVariables, TData> = (onChangeParams: {\n    file: Partial<File>;\n}) => Promise<CreatedValuesType<TVariables, TData>[]>;\n\nexport type UseImportInputPropsType = {\n    type: \"file\";\n    accept: string;\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport type UseImportReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TVariables = {},\n    TError extends HttpError = HttpError,\n> = {\n    inputProps: UseImportInputPropsType;\n    mutationResult:\n        | UseCreateReturnType<TData, TError, TVariables>\n        | UseCreateManyReturnType<TData, TError, TVariables>;\n    isLoading: boolean;\n    handleChange: HandleChangeType<TVariables, TData>;\n};\n\n/**\n * `useImport` hook allows you to handle your csv import logic easily.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useImport} for more details.\n *\n * @typeParam TItem - Interface of parsed csv data\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useImport = <\n    TItem = any,\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = any,\n>({\n    resourceName,\n    resource: resourceFromProps,\n    mapData = (item) => item as unknown as TVariables,\n    paparseOptions,\n    batchSize = Number.MAX_SAFE_INTEGER,\n    onFinish,\n    meta,\n    metaData,\n    onProgress,\n    dataProviderName,\n}: ImportOptions<TItem, TVariables, TData> = {}): UseImportReturnType<\n    TData,\n    TVariables,\n    TError\n> => {\n    const [processedAmount, setProcessedAmount] = useState<number>(0);\n    const [totalAmount, setTotalAmount] = useState<number>(0);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const { resource, identifier } = useResource(\n        resourceFromProps ?? resourceName,\n    );\n\n    const getMeta = useMeta();\n\n    const createMany = useCreateMany<TData, TError, TVariables>();\n    const create = useCreate<TData, TError, TVariables>();\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    let mutationResult:\n        | UseCreateReturnType<TData, TError, TVariables>\n        | UseCreateManyReturnType<TData, TError, TVariables>;\n\n    if (batchSize === 1) {\n        mutationResult = create;\n    } else {\n        mutationResult = createMany;\n    }\n\n    const handleCleanup = () => {\n        setTotalAmount(0);\n        setProcessedAmount(0);\n        setIsLoading(false);\n    };\n\n    const handleFinish = (\n        createdValues: CreatedValuesType<TVariables, TData>[],\n    ) => {\n        const result = {\n            succeeded: createdValues.filter(\n                (item) => item.type === \"success\",\n            ) as unknown as ImportSuccessResult<TVariables, TData>[],\n            errored: createdValues.filter(\n                (item) => item.type === \"error\",\n            ) as unknown as ImportErrorResult<TVariables>[],\n        };\n\n        onFinish?.(result);\n        setIsLoading(false);\n    };\n\n    useEffect(() => {\n        onProgress?.({ totalAmount, processedAmount });\n    }, [totalAmount, processedAmount]);\n\n    const handleChange: HandleChangeType<TVariables, TData> = ({ file }) => {\n        handleCleanup();\n        return new Promise<CreatedValuesType<TVariables, TData>[]>(\n            (resolve) => {\n                setIsLoading(true);\n                parse(file as any, {\n                    complete: async ({ data }: { data: unknown[][] }) => {\n                        const values = importCSVMapper(data, mapData);\n\n                        setTotalAmount(values.length);\n\n                        if (batchSize === 1) {\n                            // Create Processor Functions\n                            const valueFns = values.map((value) => {\n                                const fn = async () => {\n                                    const response = await create.mutateAsync({\n                                        resource: identifier ?? \"\",\n                                        values: value,\n                                        successNotification: false,\n                                        errorNotification: false,\n                                        dataProviderName,\n                                        meta: combinedMeta,\n                                        metaData: combinedMeta,\n                                    });\n\n                                    return { response, value };\n                                };\n                                return fn;\n                            });\n                            // Sequentially run processor functions and process resolves/rejects\n                            const createdValues = await sequentialPromises(\n                                valueFns,\n                                ({ response, value }) => {\n                                    setProcessedAmount((currentAmount) => {\n                                        return currentAmount + 1;\n                                    });\n\n                                    return {\n                                        response: [response.data],\n                                        type: \"success\",\n                                        request: [value],\n                                    } as ImportSuccessResult<TVariables, TData>;\n                                },\n                                (error: HttpError, index) => {\n                                    return {\n                                        response: [error],\n                                        type: \"error\",\n                                        request: [values[index]],\n                                    } as ImportErrorResult<TVariables>;\n                                },\n                            );\n                            // Resolve with created values\n                            resolve(createdValues);\n                        } else {\n                            // Create Chunks\n                            const chunks = chunk(values, batchSize);\n                            // Create Chunk Processor Functions\n                            const chunkedFns = chunks.map((chunkedValues) => {\n                                const fn = async () => {\n                                    const response =\n                                        await createMany.mutateAsync({\n                                            resource: identifier ?? \"\",\n                                            values: chunkedValues,\n                                            successNotification: false,\n                                            errorNotification: false,\n                                            dataProviderName,\n                                            meta: combinedMeta,\n                                            metaData: combinedMeta,\n                                        });\n\n                                    return {\n                                        response,\n                                        value: chunkedValues,\n                                        currentBatchLength:\n                                            chunkedValues.length,\n                                    };\n                                };\n\n                                return fn;\n                            });\n                            // Sequentially run chunked functions and process resolves/rejects\n                            const createdValues = await sequentialPromises(\n                                chunkedFns,\n                                ({ response, currentBatchLength, value }) => {\n                                    setProcessedAmount((currentAmount) => {\n                                        return (\n                                            currentAmount + currentBatchLength\n                                        );\n                                    });\n\n                                    return {\n                                        response: response.data,\n                                        type: \"success\",\n                                        request: value,\n                                    } as ImportSuccessResult<TVariables, TData>;\n                                },\n                                (error: HttpError, index) => {\n                                    return {\n                                        response: [error],\n                                        type: \"error\",\n                                        request: chunks[index],\n                                    } as ImportErrorResult<TVariables>;\n                                },\n                            );\n                            // resolve with all created values\n                            resolve(createdValues);\n                        }\n                    },\n\n                    ...paparseOptions,\n                });\n            },\n        ).then((createdValues) => {\n            handleFinish(createdValues);\n            return createdValues;\n        });\n    };\n\n    return {\n        inputProps: {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: (event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.files && event.target.files.length > 0) {\n                    handleChange({ file: event.target.files[0] });\n                }\n            },\n        },\n        mutationResult,\n        isLoading,\n        handleChange,\n    };\n};\n","import { useCallback, useState } from \"react\";\n\nexport type useModalReturnType = {\n    visible: boolean;\n    show: () => void;\n    close: () => void;\n};\n\nexport type useModalProps = {\n    /**\n     * Initial state of the modal\n     */\n    defaultVisible?: boolean;\n};\n\nexport const useModal = ({\n    defaultVisible = false,\n}: useModalProps = {}): useModalReturnType => {\n    const [visible, setVisible] = useState(defaultVisible);\n\n    const show = useCallback(() => setVisible(true), [visible]);\n    const close = useCallback(() => setVisible(false), [visible]);\n\n    return {\n        visible,\n        show,\n        close,\n    };\n};\n","import React from \"react\";\nimport { useResource } from \"../../resource\";\nimport { Action, IResourceItem } from \"../../../interfaces\";\nimport { getActionRoutesFromResource } from \"../../../definitions/helpers/router\";\nimport { useParsed } from \"../use-parsed\";\nimport { composeRoute } from \"../../../definitions/helpers/router/compose-route\";\nimport { useRouterType } from \"./../../../contexts/router-picker\";\n\ntype UseToPathParams = {\n    resource?: IResourceItem;\n    action: Action;\n    meta?: Record<string, unknown>;\n    legacy?: boolean;\n};\n\ntype GetToPathFn = (params: UseToPathParams) => string | undefined;\n\n/**\n * Returns a function to get the route for a given action and resource.\n * If resource is not provided, it will use the resource from the route.\n * If the resource is not found, it will return undefined.\n * If the action is not found, it will return undefined.\n * `meta` can be provided to compose the routes with parameters. (Can be used for nested routes.)\n */\nexport const useGetToPath = (): GetToPathFn => {\n    const routerType = useRouterType();\n    const { resource: resourceFromRoute, resources } = useResource();\n    const parsed = useParsed();\n\n    const fn = React.useCallback(\n        ({ resource, action, meta }: UseToPathParams): string | undefined => {\n            const selectedResource = resource || resourceFromRoute;\n\n            if (!selectedResource) {\n                return undefined;\n            }\n\n            const actionRoutes = getActionRoutesFromResource(\n                selectedResource,\n                resources,\n                routerType === \"legacy\",\n            );\n\n            const actionRoute = actionRoutes.find(\n                (item) => item.action === action,\n            )?.route;\n\n            if (!actionRoute) {\n                return undefined;\n            }\n\n            const composed = composeRoute(\n                actionRoute,\n                selectedResource?.meta,\n                parsed,\n                meta,\n            );\n\n            return composed;\n        },\n        [resources, resourceFromRoute, parsed],\n    );\n\n    return fn;\n};\n","import { Action, IResourceItem } from \"../../../interfaces\";\nimport { useGetToPath } from \"../use-get-to-path\";\n\ntype UseToPathParams = {\n    resource?: IResourceItem;\n    action: Action;\n    meta?: Record<string, unknown>;\n    legacy?: boolean;\n};\n\n/**\n * Returns the route for a given action and resource.\n * If resource is not provided, it will use the resource from the route.\n * If the resource is not found, it will return undefined.\n * If the action is not found, it will return undefined.\n * `meta` can be provided to compose the routes with parameters. (Can be used for nested routes.)\n */\nexport const useToPath = ({\n    resource,\n    action,\n    meta,\n    legacy,\n}: UseToPathParams): string | undefined => {\n    const getToPath = useGetToPath();\n\n    return getToPath({ resource, action, meta, legacy });\n};\n","import { RouterBindingsContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\n\nexport const useLink = () => {\n    const bindings = useContext(RouterBindingsContext);\n\n    if (bindings?.Link) {\n        return bindings.Link;\n    }\n\n    const FallbackLink: Required<typeof bindings>[\"Link\"] = ({\n        to,\n        ...rest\n    }) => <a href={to} {...rest} />;\n\n    return FallbackLink;\n};\n","import { useContext } from \"react\";\nimport { RouterContext, defaultProvider } from \"@contexts/legacy-router\";\n\nexport const useRouterContext = () => {\n    const routerContextValues = useContext(RouterContext);\n\n    const { useHistory, useLocation, useParams, Prompt, Link, routes } =\n        routerContextValues ?? defaultProvider;\n\n    return {\n        useHistory,\n        useLocation,\n        useParams,\n        Prompt,\n        Link,\n        routes,\n    };\n};\n","import React from \"react\";\n\nimport { IRouterContext } from \"../../interfaces\";\n\nexport const defaultProvider: IRouterContext = {\n    useHistory: () => false,\n    useLocation: () => false,\n    useParams: () => ({} as any),\n    Prompt: () => null,\n    Link: () => null,\n};\n\nexport const LegacyRouterContext =\n    React.createContext<IRouterContext>(defaultProvider);\n\nexport const RouterContext = LegacyRouterContext;\n\nexport const LegacyRouterContextProvider: React.FC<\n    Partial<IRouterContext> & {\n        children?: React.ReactNode;\n    }\n> = ({\n    children,\n    useHistory,\n    useLocation,\n    useParams,\n    Prompt,\n    Link,\n    routes,\n}) => {\n    return (\n        <RouterContext.Provider\n            value={{\n                useHistory: useHistory ?? defaultProvider.useHistory,\n                useLocation: useLocation ?? defaultProvider.useLocation,\n                useParams: useParams ?? defaultProvider.useParams,\n                Prompt: Prompt ?? defaultProvider.Prompt,\n                Link: Link ?? defaultProvider.Link,\n                routes: routes ?? defaultProvider.routes,\n            }}\n        >\n            {children}\n        </RouterContext.Provider>\n    );\n};\n","import {\n    useQuery,\n    UseQueryOptions,\n    UseQueryResult,\n} from \"@tanstack/react-query\";\nimport { useContext } from \"react\";\n\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\nimport { CanParams, CanReturnType } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nexport type UseCanProps = CanParams & {\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<CanReturnType>;\n};\n\n/**\n * `useCan` uses the `can` as the query function for `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`}. It takes the parameters that `can` takes. It can also be configured with `queryOptions` for `useQuery`. Returns the result of `useQuery`.\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/accessControl/useCan} for more details.\n *\n * @typeParam CanParams {@link https://refine.dev/docs/core/interfaceReferences#canparams}\n * @typeParam CanReturnType {@link https://refine.dev/docs/core/interfaceReferences#canreturntype}\n *\n */\nexport const useCan = ({\n    action,\n    resource,\n    params,\n    queryOptions,\n}: UseCanProps): UseQueryResult<CanReturnType> => {\n    const { can } = useContext(AccessControlContext);\n    const { keys, preferLegacyKeys } = useKeys();\n\n    /**\n     * Since `react-query` stringifies the query keys, it will throw an error for a circular dependency if we include `React.ReactNode` elements inside the keys.\n     * The feature in #2220(https://github.com/refinedev/refine/issues/2220) includes such change and to fix this, we need to remove `icon` property in the `resource`\n     */\n    const { resource: _resource, ...paramsRest } = params ?? {};\n\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const sanitizedResource = sanitizeResource(_resource);\n\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    const queryResponse = useQuery<CanReturnType>(\n        keys()\n            .access()\n            .resource(resource)\n            .action(action)\n            .params({\n                params: { ...paramsRest, resource: sanitizedResource },\n                enabled: queryOptions?.enabled,\n            })\n            .get(preferLegacyKeys),\n        // Enabled check for `can` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        () =>\n            can?.({\n                action,\n                resource,\n                params: { ...paramsRest, resource: sanitizedResource },\n            }) ?? Promise.resolve({ can: true }),\n        {\n            enabled: typeof can !== \"undefined\",\n            ...queryOptions,\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useCan\", preferLegacyKeys),\n            },\n            retry: false,\n        },\n    );\n\n    return typeof can === \"undefined\"\n        ? ({ data: { can: true } } as typeof queryResponse)\n        : queryResponse;\n};\n","import React from \"react\";\n\nimport {\n    IAccessControlContext,\n    IAccessControlContextReturnType,\n} from \"./IAccessControlContext\";\n\n/** @deprecated default value for access control context has no use and is an empty object. */\nexport const defaultAccessControlContext: IAccessControlContext = {};\n\nexport const AccessControlContext =\n    React.createContext<IAccessControlContextReturnType>({\n        options: {\n            buttons: { enableAccessControl: true, hideIfUnauthorized: false },\n        },\n    });\n\nexport { IAccessControlContext };\n\nexport const AccessControlContextProvider: React.FC<\n    IAccessControlContext & {\n        children?: React.ReactNode;\n    }\n> = ({ can, children, options }) => {\n    return (\n        <AccessControlContext.Provider\n            value={{\n                can,\n                options: options\n                    ? {\n                          ...options,\n                          buttons: {\n                              enableAccessControl: true,\n                              hideIfUnauthorized: false,\n                              ...options.buttons,\n                          },\n                      }\n                    : {\n                          buttons: {\n                              enableAccessControl: true,\n                              hideIfUnauthorized: false,\n                          },\n                      },\n            }}\n        >\n            {children}\n        </AccessControlContext.Provider>\n    );\n};\n","import { IResourceItem } from \"../../../interfaces/bindings/resource\";\n\n/**\n * Remove all properties that are non-serializable from a resource object.\n */\nexport const sanitizeResource = (\n    resource?: Partial<IResourceItem> &\n        Required<Pick<IResourceItem, \"name\">> & { children?: unknown },\n):\n    | (Partial<IResourceItem> & Required<Pick<IResourceItem, \"name\">>)\n    | undefined => {\n    if (!resource) {\n        return undefined;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const {\n        icon,\n        list,\n        edit,\n        create,\n        show,\n        clone,\n        children,\n        meta,\n        options,\n        ...restResource\n    } = resource;\n\n    const { icon: _metaIcon, ...restMeta } = meta ?? {};\n    const { icon: _optionsIcon, ...restOptions } = options ?? {};\n\n    return {\n        ...restResource,\n        ...(meta ? { meta: restMeta } : {}),\n        ...(options ? { options: restOptions } : {}),\n    };\n};\n","import React from \"react\";\n\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\nimport { IAccessControlContext } from \"../../interfaces\";\n\nexport const useCanWithoutCache = (): IAccessControlContext => {\n    const { can: canFromContext } = React.useContext(AccessControlContext);\n\n    const can = React.useMemo(() => {\n        if (!canFromContext) {\n            return undefined;\n        }\n\n        const canWithSanitizedResource: NonNullable<\n            typeof canFromContext\n        > = async ({ params, ...rest }) => {\n            const sanitizedResource = params?.resource\n                ? sanitizeResource(params.resource)\n                : undefined;\n\n            return canFromContext({\n                ...rest,\n                ...(params\n                    ? {\n                          params: {\n                              ...params,\n                              resource: sanitizedResource,\n                          },\n                      }\n                    : {}),\n            });\n        };\n\n        return canWithSanitizedResource;\n    }, [canFromContext]);\n\n    return { can };\n};\n","import { useCallback, useMemo, useState } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport uniqBy from \"lodash/uniqBy\";\nimport debounce from \"lodash/debounce\";\nimport get from \"lodash/get\";\n\nimport { useList, useMany, useMeta } from \"@hooks\";\nimport {\n    CrudSorting,\n    Option,\n    BaseRecord,\n    GetManyResponse,\n    GetListResponse,\n    CrudFilters,\n    SuccessErrorNotification,\n    HttpError,\n    LiveModeProps,\n    BaseKey,\n    Pagination,\n    MetaQuery,\n    Prettify,\n} from \"../../interfaces\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\nimport { useResource } from \"../resource/useResource/index\";\nimport { BaseListProps } from \"../data/useList\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type UseSelectProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * Set the option's value\n     * @default `\"title\"`\n     */\n    optionLabel?: keyof TQueryFnData extends string\n        ? keyof TQueryFnData\n        : never;\n    /**\n     * Set the option's label value\n     * @default `\"id\"`\n     */\n    optionValue?: keyof TQueryFnData extends string\n        ? keyof TQueryFnData\n        : never;\n    /**\n     * Allow us to sort the options\n     * @deprecated Use `sorters` instead\n     */\n    sort?: CrudSorting;\n    /**\n     * Allow us to sort the options\n     */\n    sorters?: CrudSorting;\n    /**\n     * Resource name for API data interactions\n     */\n    filters?: CrudFilters;\n    /**\n     * Adds extra `options`\n     */\n    defaultValue?: BaseKey | BaseKey[];\n    /**\n     * The number of milliseconds to delay\n     * @default `300`\n     */\n    debounce?: number;\n    /**\n     * react-query [useQuery](https://react-query.tanstack.com/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >;\n    /**\n     * Pagination option from [`useList()`](/docs/api-reference/core/hooks/data/useList/)\n     * @type {  current?: number; pageSize?: number;}\n     * @default `undefined`\n     */\n    pagination?: Prettify<\n        Omit<Pagination, \"mode\"> & {\n            /**\n             * Whether to use server side pagination or not.\n             * @default \"off\"\n             */\n            mode?: Pagination[\"mode\"];\n        }\n    >;\n    /**\n     * Disabling pagination option from [`useList()`](/docs/api-reference/core/hooks/data/useList/)\n     * @type boolean\n     * @default `false`\n     * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * react-query [useQuery](https://react-query.tanstack.com/reference/useQuery) options\n     */\n    defaultValueQueryOptions?: UseQueryOptions<\n        GetManyResponse<TQueryFnData>,\n        TError\n    >;\n    /**\n     * If defined, this callback allows us to override all filters for every search request.\n     * @default `undefined`\n     */\n    onSearch?: (value: string) => CrudFilters;\n    /**\n     * Additional meta data to pass to the `useMany` from the data provider\n     */\n    meta?: MetaQuery;\n    /**\n     * Additional meta data to pass to the `useMany` from the data provider\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default `default`\n     */\n    dataProviderName?: string;\n    /**\n     * Amount of records to fetch in select box list.\n     * @deprecated use [`pagination`](https://refine.dev/docs/api-reference/core/interfaceReferences/#pagination) instead\n     * @default `undefined`\n     */\n    fetchSize?: number;\n} & SuccessErrorNotification<\n    GetListResponse<TData>,\n    TError,\n    Prettify<BaseListProps>\n> &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\nexport type UseSelectReturnType<TData extends BaseRecord = BaseRecord> = {\n    queryResult: QueryObserverResult<GetListResponse<TData>>;\n    defaultValueQueryResult: QueryObserverResult<GetManyResponse<TData>>;\n    onSearch: (value: string) => void;\n    options: Option[];\n} & UseLoadingOvertimeReturnType;\n\n/**\n * `useSelect` hook is used to fetch data from the dataProvider and return the options for the select box.\n *\n * It uses `getList` method as query function from the dataProvider that is\n * passed to {@link https://refine.dev/docs/api-reference/core/components/refine-config/ `<Refine>`}.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useSelect} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useSelect = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>(\n    props: UseSelectProps<TQueryFnData, TError, TData>,\n): UseSelectReturnType<TData> => {\n    const [search, setSearch] = useState<CrudFilters>([]);\n    const [options, setOptions] = useState<Option[]>([]);\n    const [selectedOptions, setSelectedOptions] = useState<Option[]>([]);\n\n    const {\n        resource: resourceFromProps,\n        sort,\n        sorters,\n        filters = [],\n        optionLabel = \"title\",\n        optionValue = \"id\",\n        debounce: debounceValue = 300,\n        successNotification,\n        errorNotification,\n        defaultValueQueryOptions: defaultValueQueryOptionsFromProps,\n        queryOptions,\n        fetchSize,\n        pagination,\n        hasPagination = false,\n        liveMode,\n        defaultValue = [],\n        onLiveEvent,\n        onSearch: onSearchFromProp,\n        liveParams,\n        meta,\n        metaData,\n        dataProviderName,\n        overtimeOptions,\n    } = props;\n\n    const { resource, identifier } = useResource(resourceFromProps);\n\n    const getMeta = useMeta();\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    const defaultValues = Array.isArray(defaultValue)\n        ? defaultValue\n        : [defaultValue];\n\n    const defaultValueQueryOnSuccess = useCallback(\n        (data: GetManyResponse<TData>) => {\n            setSelectedOptions(\n                data.data.map((item) => ({\n                    label: get(item, optionLabel) as string,\n                    value: get(item, optionValue) as string,\n                })),\n            );\n        },\n        [optionLabel, optionValue],\n    );\n\n    const defaultValueQueryOptions =\n        defaultValueQueryOptionsFromProps ?? (queryOptions as any);\n\n    const defaultValueQueryResult = useMany<TQueryFnData, TError, TData>({\n        resource: identifier,\n        ids: defaultValues,\n        queryOptions: {\n            ...defaultValueQueryOptions,\n            enabled:\n                defaultValues.length > 0 &&\n                (defaultValueQueryOptions?.enabled ?? true),\n            onSuccess: (data) => {\n                defaultValueQueryOnSuccess(data);\n                defaultValueQueryOptions?.onSuccess?.(data);\n            },\n        },\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        liveMode: \"off\",\n        dataProviderName,\n    });\n\n    const defaultQueryOnSuccess = useCallback(\n        (data: GetListResponse<TData>) => {\n            {\n                setOptions(\n                    data.data.map((item) => ({\n                        label: get(item, optionLabel) as string,\n                        value: get(item, optionValue) as string,\n                    })),\n                );\n            }\n        },\n        [optionLabel, optionValue],\n    );\n\n    const queryResult = useList<TQueryFnData, TError, TData>({\n        resource: identifier,\n        sorters: pickNotDeprecated(sorters, sort),\n        filters: filters.concat(search),\n        pagination: {\n            current: pagination?.current,\n            pageSize: pagination?.pageSize ?? fetchSize,\n            mode: pagination?.mode,\n        },\n        hasPagination,\n        queryOptions: {\n            ...queryOptions,\n            onSuccess: (data) => {\n                defaultQueryOnSuccess(data);\n                queryOptions?.onSuccess?.(data);\n            },\n        },\n        successNotification,\n        errorNotification,\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        liveMode,\n        liveParams,\n        onLiveEvent,\n        dataProviderName,\n    });\n\n    const onSearch = (value: string) => {\n        if (onSearchFromProp) {\n            setSearch(onSearchFromProp(value));\n            return;\n        }\n\n        if (!value) {\n            setSearch([]);\n            return;\n        } else {\n            setSearch([\n                {\n                    field: optionLabel,\n                    operator: \"contains\",\n                    value,\n                },\n            ]);\n        }\n    };\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResult.isFetching || defaultValueQueryResult.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return {\n        queryResult,\n        defaultValueQueryResult,\n        options: useMemo(\n            () => uniqBy([...options, ...selectedOptions], \"value\"),\n            [options, selectedOptions],\n        ),\n        onSearch: debounce(onSearch, debounceValue),\n        overtime: { elapsedTime },\n    };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport qs from \"qs\";\nimport differenceWith from \"lodash/differenceWith\";\nimport isEqual from \"lodash/isEqual\";\nimport warnOnce from \"warn-once\";\n\nimport {\n    useRouterContext,\n    useSyncWithLocation,\n    useNavigation,\n    useList,\n    useLiveMode,\n    useRouterType,\n    useResource,\n    useParsed,\n    useMeta,\n} from \"@hooks\";\nimport {\n    stringifyTableParams,\n    parseTableParams,\n    unionFilters,\n    setInitialFilters,\n    setInitialSorters,\n    unionSorters,\n} from \"@definitions/table\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\n\nimport {\n    BaseRecord,\n    CrudFilters,\n    CrudSorting,\n    GetListResponse,\n    SuccessErrorNotification,\n    HttpError,\n    MetaQuery,\n    LiveModeProps,\n    Pagination,\n    Prettify,\n} from \"../../interfaces\";\nimport { useGo } from \"@hooks/router/use-go\";\nimport { BaseListProps } from \"../data/useList\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\ntype SetFilterBehavior = \"merge\" | \"replace\";\n\nexport type useTableProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     * @default Resource name that it reads from route\n     */\n    resource?: string;\n    /**\n     * Configuration for pagination\n     */\n    pagination?: Pagination;\n    /**\n     * Initial page index\n     * @default 1\n     * @deprecated `initialCurrent` property is deprecated. Use `pagination.current` instead.\n     */\n    initialCurrent?: number;\n    /**\n     * Initial number of items per page\n     * @default 10\n     * @deprecated `initialPageSize` property is deprecated. Use `pagination.pageSize` instead.\n     */\n    initialPageSize?: number;\n    /**\n     * Sort configs\n     */\n    sorters?: {\n        /**\n         * Initial sorter state\n         */\n        initial?: CrudSorting;\n        /**\n         * Default and unchangeable sorter state\n         *  @default `[]`\n         */\n        permanent?: CrudSorting;\n        /**\n         * Whether to use server side sorting or not.\n         * @default \"server\"\n         */\n        mode?: \"server\" | \"off\";\n    };\n    /**\n     * Initial sorter state\n     * @deprecated `initialSorter` property is deprecated. Use `sorters.initial` instead.\n     */\n    initialSorter?: CrudSorting;\n    /**\n     * Default and unchangeable sorter state\n     *  @default `[]`\n     *  @deprecated `permanentSorter` property is deprecated. Use `sorters.permanent` instead.\n     */\n    permanentSorter?: CrudSorting;\n    /**\n     * Filter configs\n     */\n    filters?: {\n        /**\n         * Initial filter state\n         */\n        initial?: CrudFilters;\n        /**\n         * Default and unchangeable filter state\n         *  @default `[]`\n         */\n        permanent?: CrudFilters;\n        /**\n         * Default behavior of the `setFilters` function\n         * @default `\"merge\"`\n         */\n        defaultBehavior?: SetFilterBehavior;\n        /**\n         * Whether to use server side filter or not.\n         * @default \"server\"\n         */\n        mode?: \"server\" | \"off\";\n    };\n    /**\n     * Initial filter state\n     * @deprecated `initialFilter` property is deprecated. Use `filters.initial` instead.\n     */\n    initialFilter?: CrudFilters;\n    /**\n     * Default and unchangeable filter state\n     * @default `[]`\n     * @deprecated `permanentFilter` property is deprecated. Use `filters.permanent` instead.\n     */\n    permanentFilter?: CrudFilters;\n    /**\n     * Default behavior of the `setFilters` function\n     * @default `\"merge\"`\n     * @deprecated `defaultSetFilterBehavior` property is deprecated. Use `filters.defaultBehavior` instead.\n     */\n    defaultSetFilterBehavior?: SetFilterBehavior;\n    /**\n     * Whether to use server side pagination or not.\n     * @default `true`\n     * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * Sortings, filters, page index and records shown per page are tracked by browser history\n     * @default Value set in [Refine](/docs/api-reference/core/components/refine-config/#syncwithlocation). If a custom resource is given, it will be `false`\n     */\n    syncWithLocation?: boolean;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * Metadata query for dataProvider\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n} & SuccessErrorNotification<\n    GetListResponse<TData>,\n    TError,\n    Prettify<BaseListProps>\n> &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\ntype ReactSetState<T> = React.Dispatch<React.SetStateAction<T>>;\n\ntype SyncWithLocationParams = {\n    pagination: { current?: number; pageSize?: number };\n    /**\n     * @deprecated `sorter` is deprecated. Use `sorters` instead.\n     */\n    sorter?: CrudSorting;\n    sorters: CrudSorting;\n    filters: CrudFilters;\n};\n\nexport type useTableReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n> = {\n    tableQueryResult: QueryObserverResult<GetListResponse<TData>, TError>;\n    /**\n     * @deprecated `sorter` is deprecated. Use `sorters` instead.\n     */\n    sorter: CrudSorting;\n    sorters: CrudSorting;\n    /**\n     * @deprecated `setSorter` is deprecated. Use `setSorters` instead.\n     */\n    setSorter: (sorter: CrudSorting) => void;\n    setSorters: (sorter: CrudSorting) => void;\n    filters: CrudFilters;\n    setFilters: ((filters: CrudFilters, behavior?: SetFilterBehavior) => void) &\n        ((setter: (prevFilters: CrudFilters) => CrudFilters) => void);\n    createLinkForSyncWithLocation: (params: SyncWithLocationParams) => string;\n    current: number;\n    setCurrent: ReactSetState<useTableReturnType[\"current\"]>;\n    pageSize: number;\n    setPageSize: ReactSetState<useTableReturnType[\"pageSize\"]>;\n    pageCount: number;\n} & UseLoadingOvertimeReturnType;\n\n/**\n * By using useTable, you are able to get properties that are compatible with\n * Ant Design {@link https://ant.design/components/table/ `<Table>`} component.\n * All features such as sorting, filtering and pagination comes as out of box.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useTable} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nconst defaultPermanentFilter: CrudFilters = [];\nconst defaultPermanentSorter: CrudSorting = [];\n\nexport function useTable<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    initialCurrent,\n    initialPageSize,\n    hasPagination = true,\n    pagination,\n    initialSorter,\n    permanentSorter = defaultPermanentSorter,\n    defaultSetFilterBehavior,\n    initialFilter,\n    permanentFilter = defaultPermanentFilter,\n    filters: filtersFromProp,\n    sorters: sortersFromProp,\n    syncWithLocation: syncWithLocationProp,\n    resource: resourceFromProp,\n    successNotification,\n    errorNotification,\n    queryOptions,\n    liveMode: liveModeFromProp,\n    onLiveEvent,\n    liveParams,\n    meta,\n    metaData,\n    dataProviderName,\n    overtimeOptions,\n}: useTableProps<TQueryFnData, TError, TData> = {}): useTableReturnType<\n    TData,\n    TError\n> {\n    const { syncWithLocation: syncWithLocationContext } = useSyncWithLocation();\n\n    const syncWithLocation = syncWithLocationProp ?? syncWithLocationContext;\n\n    const liveMode = useLiveMode(liveModeFromProp);\n\n    const routerType = useRouterType();\n    const { useLocation } = useRouterContext();\n    const { search, pathname } = useLocation();\n    const getMeta = useMeta();\n    const parsedParams = useParsed();\n\n    const isServerSideFilteringEnabled =\n        (filtersFromProp?.mode || \"server\") === \"server\";\n    const isServerSideSortingEnabled =\n        (sortersFromProp?.mode || \"server\") === \"server\";\n    const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n    const isPaginationEnabled =\n        (pagination?.mode ?? hasPaginationString) !== \"off\";\n    const prefferedCurrent = pickNotDeprecated(\n        pagination?.current,\n        initialCurrent,\n    );\n    const prefferedPageSize = pickNotDeprecated(\n        pagination?.pageSize,\n        initialPageSize,\n    );\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n\n    /** `parseTableParams` is redundant with the new routing */\n    // We want to always parse the query string even when syncWithLocation is\n    // deactivated, for hotlinking to work properly\n    const { parsedCurrent, parsedPageSize, parsedSorter, parsedFilters } =\n        parseTableParams(search ?? \"?\");\n\n    const preferredInitialFilters = pickNotDeprecated(\n        filtersFromProp?.initial,\n        initialFilter,\n    );\n    const preferredPermanentFilters =\n        pickNotDeprecated(filtersFromProp?.permanent, permanentFilter) ??\n        defaultPermanentFilter;\n\n    const preferredInitialSorters = pickNotDeprecated(\n        sortersFromProp?.initial,\n        initialSorter,\n    );\n    const preferredPermanentSorters =\n        pickNotDeprecated(sortersFromProp?.permanent, permanentSorter) ??\n        defaultPermanentSorter;\n\n    const prefferedFilterBehavior =\n        pickNotDeprecated(\n            filtersFromProp?.defaultBehavior,\n            defaultSetFilterBehavior,\n        ) ?? \"merge\";\n\n    let defaultCurrent: number;\n    let defaultPageSize: number;\n    let defaultSorter: CrudSorting | undefined;\n    let defaultFilter: CrudFilters | undefined;\n\n    if (syncWithLocation) {\n        defaultCurrent =\n            parsedParams?.params?.current ||\n            parsedCurrent ||\n            prefferedCurrent ||\n            1;\n        defaultPageSize =\n            parsedParams?.params?.pageSize ||\n            parsedPageSize ||\n            prefferedPageSize ||\n            10;\n        defaultSorter =\n            parsedParams?.params?.sorters ||\n            (parsedSorter.length ? parsedSorter : preferredInitialSorters);\n        defaultFilter =\n            parsedParams?.params?.filters ||\n            (parsedFilters.length ? parsedFilters : preferredInitialFilters);\n    } else {\n        defaultCurrent = prefferedCurrent || 1;\n        defaultPageSize = prefferedPageSize || 10;\n        defaultSorter = preferredInitialSorters;\n        defaultFilter = preferredInitialFilters;\n    }\n\n    const { replace } = useNavigation();\n    /** New way of `replace` calls to the router is using `useGo` */\n    const go = useGo();\n\n    const { resource, identifier } = useResource(resourceFromProp);\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: preferredMeta,\n    });\n\n    React.useEffect(() => {\n        warnOnce(\n            typeof identifier === \"undefined\",\n            `useTable: \\`resource\\` is not defined.`,\n        );\n    }, [identifier]);\n\n    const [sorters, setSorters] = useState<CrudSorting>(\n        setInitialSorters(preferredPermanentSorters, defaultSorter ?? []),\n    );\n    const [filters, setFilters] = useState<CrudFilters>(\n        setInitialFilters(preferredPermanentFilters, defaultFilter ?? []),\n    );\n    const [current, setCurrent] = useState<number>(defaultCurrent);\n    const [pageSize, setPageSize] = useState<number>(defaultPageSize);\n\n    const createLinkForSyncWithLocation = ({\n        pagination: { current, pageSize },\n        sorter,\n        filters,\n    }: SyncWithLocationParams) => {\n        if (routerType === \"new\") {\n            return (\n                go({\n                    type: \"path\",\n                    options: {\n                        keepHash: true,\n                        keepQuery: true,\n                    },\n                    query: {\n                        ...(isPaginationEnabled ? { current, pageSize } : {}),\n                        sorters: sorter,\n                        filters,\n                        ...currentQueryParams(),\n                    },\n                }) ?? \"\"\n            );\n        } else {\n            const currentQueryParams = qs.parse(search?.substring(1)); // remove first ? character\n\n            const stringifyParams = stringifyTableParams({\n                pagination: {\n                    pageSize,\n                    current,\n                },\n                sorters: sorters ?? sorter,\n                filters,\n                ...currentQueryParams,\n            });\n            return `${pathname ?? \"\"}?${stringifyParams ?? \"\"}`;\n        }\n    };\n\n    useEffect(() => {\n        if (search === \"\") {\n            setCurrent(defaultCurrent);\n            setPageSize(defaultPageSize);\n            setSorters(\n                setInitialSorters(\n                    preferredPermanentSorters,\n                    defaultSorter ?? [],\n                ),\n            );\n            setFilters(\n                setInitialFilters(\n                    preferredPermanentFilters,\n                    defaultFilter ?? [],\n                ),\n            );\n        }\n    }, [search]);\n\n    const currentQueryParams = (): object => {\n        if (routerType === \"new\") {\n            // We get QueryString parameters that are uncontrolled by refine.\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const { sorters, filters, pageSize, current, ...rest } =\n                parsedParams?.params ?? {};\n\n            return rest;\n        } else {\n            // We get QueryString parameters that are uncontrolled by refine.\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const { sorter, filters, pageSize, current, ...rest } = qs.parse(\n                search,\n                {\n                    ignoreQueryPrefix: true,\n                },\n            );\n\n            return rest;\n        }\n    };\n\n    useEffect(() => {\n        if (syncWithLocation) {\n            // Careful! This triggers render\n            const queryParams = currentQueryParams();\n\n            if (routerType === \"new\") {\n                go({\n                    type: \"replace\",\n                    options: {\n                        keepQuery: true,\n                    },\n                    query: {\n                        ...(isPaginationEnabled ? { pageSize, current } : {}),\n                        sorters: differenceWith(\n                            sorters,\n                            preferredPermanentSorters,\n                            isEqual,\n                        ),\n                        filters: differenceWith(\n                            filters,\n                            preferredPermanentFilters,\n                            isEqual,\n                        ),\n                        // ...queryParams,\n                    },\n                });\n            } else {\n                const stringifyParams = stringifyTableParams({\n                    ...(isPaginationEnabled\n                        ? {\n                              pagination: {\n                                  pageSize,\n                                  current,\n                              },\n                          }\n                        : {}),\n                    sorters: differenceWith(\n                        sorters,\n                        preferredPermanentSorters,\n                        isEqual,\n                    ),\n                    filters: differenceWith(\n                        filters,\n                        preferredPermanentFilters,\n                        isEqual,\n                    ),\n                    ...queryParams,\n                });\n                return replace?.(`${pathname}?${stringifyParams}`, undefined, {\n                    shallow: true,\n                });\n            }\n        }\n    }, [syncWithLocation, current, pageSize, sorters, filters]);\n\n    const queryResult = useList<TQueryFnData, TError, TData>({\n        resource: identifier,\n        hasPagination,\n        pagination: { current, pageSize, mode: pagination?.mode },\n        filters: isServerSideFilteringEnabled\n            ? unionFilters(preferredPermanentFilters, filters)\n            : undefined,\n        sorters: isServerSideSortingEnabled\n            ? unionSorters(preferredPermanentSorters, sorters)\n            : undefined,\n        queryOptions,\n        successNotification,\n        errorNotification,\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        liveMode,\n        liveParams,\n        onLiveEvent,\n        dataProviderName,\n    });\n\n    const setFiltersAsMerge = (newFilters: CrudFilters) => {\n        setFilters((prevFilters) =>\n            unionFilters(preferredPermanentFilters, newFilters, prevFilters),\n        );\n    };\n\n    const setFiltersAsReplace = (newFilters: CrudFilters) => {\n        setFilters(unionFilters(preferredPermanentFilters, newFilters));\n    };\n\n    const setFiltersWithSetter = (\n        setter: (prevFilters: CrudFilters) => CrudFilters,\n    ) => {\n        setFilters((prev) =>\n            unionFilters(preferredPermanentFilters, setter(prev)),\n        );\n    };\n\n    const setFiltersFn: useTableReturnType<TQueryFnData>[\"setFilters\"] = (\n        setterOrFilters,\n        behavior: SetFilterBehavior = prefferedFilterBehavior,\n    ) => {\n        if (typeof setterOrFilters === \"function\") {\n            setFiltersWithSetter(setterOrFilters);\n        } else {\n            if (behavior === \"replace\") {\n                setFiltersAsReplace(setterOrFilters);\n            } else {\n                setFiltersAsMerge(setterOrFilters);\n            }\n        }\n    };\n\n    const setSortWithUnion = (newSorter: CrudSorting) => {\n        setSorters(() => unionSorters(preferredPermanentSorters, newSorter));\n    };\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResult.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return {\n        tableQueryResult: queryResult,\n        sorters,\n        setSorters: setSortWithUnion,\n        sorter: sorters,\n        setSorter: setSortWithUnion,\n        filters,\n        setFilters: setFiltersFn,\n        current,\n        setCurrent,\n        pageSize,\n        setPageSize,\n        pageCount: pageSize\n            ? Math.ceil((queryResult.data?.total ?? 0) / pageSize)\n            : 1,\n        createLinkForSyncWithLocation,\n        overtime: {\n            elapsedTime,\n        },\n    };\n}\n","import { useContext } from \"react\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n    useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { ResourceContext } from \"@contexts/resource\";\nimport { useGetIdentity } from \"@hooks/auth\";\nimport { BaseKey, LogParams } from \"../../../interfaces\";\nimport { hasPermission, pickNotDeprecated } from \"@definitions/helpers\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\ntype LogRenameData =\n    | {\n          resource?: string;\n      }\n    | undefined;\n\nexport type UseLogReturnType<TLogData, TLogRenameData> = {\n    log: UseMutationResult<TLogData, Error, LogParams>;\n    rename: UseMutationResult<\n        TLogRenameData,\n        Error,\n        {\n            id: BaseKey;\n            name: string;\n        }\n    >;\n};\n\nexport type UseLogMutationProps<\n    TLogData,\n    TLogRenameData extends LogRenameData = LogRenameData,\n> = {\n    logMutationOptions?: Omit<\n        UseMutationOptions<TLogData, Error, LogParams, unknown>,\n        \"mutationFn\"\n    >;\n    renameMutationOptions?: Omit<\n        UseMutationOptions<\n            TLogRenameData,\n            Error,\n            { id: BaseKey; name: string },\n            unknown\n        >,\n        \"mutationFn\" | \"onSuccess\"\n    >;\n};\n\n/**\n * useLog is used to `create` a new and `rename` the existing audit log.\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/audit-log/useLog} for more details.\n */\n\nexport const useLog = <\n    TLogData,\n    TLogRenameData extends LogRenameData = LogRenameData,\n>({\n    logMutationOptions,\n    renameMutationOptions,\n}: UseLogMutationProps<TLogData, TLogRenameData> = {}): UseLogReturnType<\n    TLogData,\n    TLogRenameData\n> => {\n    const queryClient = useQueryClient();\n    const auditLogContext = useContext(AuditLogContext);\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const authProvider = useActiveAuthProvider();\n\n    const { resources } = useContext(ResourceContext);\n    const {\n        data: identityData,\n        refetch,\n        isLoading,\n    } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n        queryOptions: {\n            enabled: !!auditLogContext,\n        },\n    });\n\n    const log = useMutation<TLogData, Error, LogParams, unknown>(\n        async (params) => {\n            const resource = pickResource(params.resource, resources);\n            const logPermissions = pickNotDeprecated(\n                resource?.meta?.audit,\n                resource?.options?.audit,\n                resource?.options?.auditLog?.permissions,\n            );\n\n            if (logPermissions) {\n                if (!hasPermission(logPermissions, params.action)) {\n                    return;\n                }\n            }\n\n            let authorData;\n            if (isLoading) {\n                authorData = await refetch();\n            }\n\n            return await auditLogContext.create?.({\n                ...params,\n                author: identityData ?? authorData?.data,\n            });\n        },\n        {\n            mutationKey: keys().audit().action(\"log\").get(),\n            ...logMutationOptions,\n            meta: {\n                ...logMutationOptions?.meta,\n                ...getXRay(\"useLog\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const rename = useMutation<\n        TLogRenameData,\n        Error,\n        { id: BaseKey; name: string },\n        unknown\n    >(\n        async (params) => {\n            return await auditLogContext.update?.(params);\n        },\n        {\n            onSuccess: (data) => {\n                if (data?.resource) {\n                    queryClient.invalidateQueries(\n                        keys()\n                            .audit()\n                            .resource(data?.resource ?? \"\")\n                            .action(\"list\")\n                            .get(preferLegacyKeys),\n                    );\n                }\n            },\n            mutationKey: keys().audit().action(\"rename\").get(),\n            ...renameMutationOptions,\n            meta: {\n                ...renameMutationOptions?.meta,\n                ...getXRay(\"useLog\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return { log, rename };\n};\n","import React from \"react\";\n\nimport { IAuditLogContext } from \"./IAuditLogContext\";\n\nexport const AuditLogContext = React.createContext<IAuditLogContext>({});\n\nexport const AuditLogContextProvider: React.FC<\n    IAuditLogContext & {\n        children: React.ReactNode;\n    }\n> = ({ create, get, update, children }) => {\n    return (\n        <AuditLogContext.Provider value={{ create, get, update }}>\n            {children}\n        </AuditLogContext.Provider>\n    );\n};\n","import { useContext } from \"react\";\nimport {\n    useQuery,\n    UseQueryResult,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\n\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { HttpError, MetaQuery } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nexport type UseLogProps<TQueryFnData, TError, TData> = {\n    resource: string;\n    action?: string;\n    meta?: Record<number | string, any>;\n    author?: Record<number | string, any>;\n    queryOptions?: UseQueryOptions<TQueryFnData, TError, TData>;\n    metaData?: MetaQuery;\n};\n\n/**\n * useLogList is used to get and filter audit logs.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/audit-log/useLogList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function.\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Defaults to `TQueryFnData`\n *\n */\nexport const useLogList = <\n    TQueryFnData = any,\n    TError extends HttpError = HttpError,\n    TData = TQueryFnData,\n>({\n    resource,\n    action,\n    meta,\n    author,\n    metaData,\n    queryOptions,\n}: UseLogProps<TQueryFnData, TError, TData>): UseQueryResult<TData> => {\n    const { get } = useContext(AuditLogContext);\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const queryResponse = useQuery<TQueryFnData, TError, TData>(\n        keys()\n            .audit()\n            .resource(resource)\n            .action(\"list\")\n            .params(meta)\n            .get(preferLegacyKeys),\n        () =>\n            get?.({\n                resource,\n                action,\n                author,\n                meta,\n                metaData,\n            }) ?? Promise.resolve([]),\n        {\n            enabled: typeof get !== \"undefined\",\n            ...queryOptions,\n            retry: false,\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useLogList\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return queryResponse;\n};\n","import React, { useContext } from \"react\";\nimport warnOnce from \"warn-once\";\n\nimport { useRefineContext, useResource, useTranslate } from \"@hooks\";\nimport { TranslationContext } from \"@contexts/translation\";\nimport { pickNotDeprecated } from \"@definitions\";\n\nimport { IResourceItem } from \"../../interfaces\";\nimport { useRouterType } from \"@contexts/router-picker\";\nimport { getActionRoutesFromResource } from \"@definitions/helpers/router\";\nimport { pickResource } from \"../../definitions/helpers/pick-resource/index\";\nimport { composeRoute } from \"@definitions/helpers/router/compose-route\";\nimport { useParsed } from \"@hooks/router/use-parsed\";\n\nexport type BreadcrumbsType = {\n    label: string;\n    href?: string;\n    icon?: React.ReactNode;\n};\n\ntype UseBreadcrumbReturnType = {\n    breadcrumbs: BreadcrumbsType[];\n};\n\ntype UseBreadcrumbProps = {\n    /**\n     * Additional params to be used in the route generation process.\n     */\n    meta?: Record<string, string | number>;\n};\n\nexport const useBreadcrumb = ({\n    meta: metaFromProps = {},\n}: UseBreadcrumbProps = {}): UseBreadcrumbReturnType => {\n    const routerType = useRouterType();\n    const { i18nProvider } = useContext(TranslationContext);\n    const parsed = useParsed();\n    const translate = useTranslate();\n    const { resources, resource, action } = useResource();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n\n    const breadcrumbs: BreadcrumbsType[] = [];\n\n    if (!resource?.name) {\n        return { breadcrumbs };\n    }\n\n    const addBreadcrumb = (parentName: string | IResourceItem) => {\n        const parentResource =\n            typeof parentName === \"string\"\n                ? pickResource(\n                      parentName,\n                      resources,\n                      routerType === \"legacy\",\n                  ) ?? { name: parentName }\n                : parentName;\n\n        if (parentResource) {\n            const grandParentName = pickNotDeprecated(\n                parentResource?.meta?.parent,\n                parentResource?.parentName,\n            );\n            if (grandParentName) {\n                addBreadcrumb(grandParentName);\n            }\n            const listActionOfResource = getActionRoutesFromResource(\n                parentResource,\n                resources,\n                routerType === \"legacy\",\n            ).find((r) => r.action === \"list\");\n\n            const hrefRaw = listActionOfResource?.resource?.list\n                ? listActionOfResource?.route\n                : undefined;\n\n            const href = hrefRaw\n                ? routerType === \"legacy\"\n                    ? hrefRaw\n                    : composeRoute(\n                          hrefRaw,\n                          parentResource?.meta,\n                          parsed,\n                          metaFromProps,\n                      )\n                : undefined;\n\n            breadcrumbs.push({\n                label:\n                    pickNotDeprecated(\n                        parentResource.meta?.label,\n                        parentResource.options?.label,\n                    ) ??\n                    translate(\n                        `${parentResource.name}.${parentResource.name}`,\n                        textTransformers.humanize(parentResource.name),\n                    ),\n                href: href,\n                icon: pickNotDeprecated(\n                    parentResource.meta?.icon,\n                    parentResource.options?.icon,\n                    parentResource.icon,\n                ),\n            });\n        }\n    };\n\n    addBreadcrumb(resource);\n\n    if (action && action !== \"list\") {\n        const key = `actions.${action}`;\n        const actionLabel = translate(key);\n        if (typeof i18nProvider !== \"undefined\" && actionLabel === key) {\n            warnOnce(\n                true,\n                `[useBreadcrumb]: Breadcrumb missing translate key for the \"${action}\" action. Please add \"actions.${action}\" key to your translation file.\\nFor more information, see https://refine.dev/docs/api-reference/core/hooks/useBreadcrumb/#i18n-support`,\n            );\n            breadcrumbs.push({\n                label: translate(\n                    `buttons.${action}`,\n                    textTransformers.humanize(action),\n                ),\n            });\n        } else {\n            breadcrumbs.push({\n                label: translate(key, textTransformers.humanize(action)),\n            });\n        }\n    }\n\n    return {\n        breadcrumbs,\n    };\n};\n","import React from \"react\";\nimport { useTranslate, useResource, useParsed, useRouterContext } from \"..\";\nimport { useUserFriendlyName, pickNotDeprecated } from \"@definitions\";\nimport { useRouterType } from \"../../contexts/router-picker\";\nimport { createResourceKey } from \"../../definitions/helpers/menu/create-resource-key\";\nimport { useGetToPath } from \"../router/use-get-to-path/index\";\nimport { getParentResource } from \"@definitions/helpers/router\";\nimport {\n    FlatTreeItem,\n    createTree,\n} from \"@definitions/helpers/menu/create-tree\";\n\ntype UseMenuReturnType = {\n    defaultOpenKeys: string[];\n    selectedKey: string;\n    menuItems: TreeMenuItem[];\n};\n\nexport type UseMenuProps = {\n    meta?: Record<string, any>;\n    hideOnMissingParameter?: boolean;\n};\n\nexport type TreeMenuItem = FlatTreeItem & {\n    route?: string;\n    icon?: React.ReactNode;\n    label?: string;\n    children: TreeMenuItem[];\n};\n\nconst getCleanPath = (pathname: string) => {\n    return pathname\n        .split(\"?\")[0]\n        .split(\"#\")[0]\n        .replace(/(.+)(\\/$)/, \"$1\");\n};\n\n/**\n * `useMenu` is used to get menu items of the default sidebar.\n * These items include a link to dashboard page (if it exists) and links to the user defined resources\n * (passed as children to {@link https://refine.dev/docs/core/components/refine-config `<Refine>`}).\n * This hook can also be used to build custom menus, which is also used by default sidebar to show menu items.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/ui/useMenu} for more details.\n */\nexport const useMenu = (\n    { meta, hideOnMissingParameter }: UseMenuProps = {\n        hideOnMissingParameter: true,\n    },\n): UseMenuReturnType => {\n    const translate = useTranslate();\n\n    const getToPath = useGetToPath();\n    const routerType = useRouterType();\n    const { resource, resources } = useResource();\n    const { pathname } = useParsed();\n    const { useLocation } = useRouterContext();\n    const { pathname: legacyPath } = useLocation();\n    const getFriendlyName = useUserFriendlyName();\n\n    const cleanPathname =\n        routerType === \"legacy\"\n            ? getCleanPath(legacyPath)\n            : pathname\n            ? getCleanPath(pathname)\n            : undefined;\n\n    const cleanRoute = `/${(cleanPathname ?? \"\").replace(/^\\//, \"\")}`;\n\n    const selectedKey = resource\n        ? createResourceKey(resource, resources, routerType === \"legacy\")\n        : cleanRoute ?? \"\";\n\n    const defaultOpenKeys = React.useMemo(() => {\n        if (!resource) return [];\n        let parent = getParentResource(resource, resources);\n        const keys = [createResourceKey(resource, resources)];\n        while (parent) {\n            keys.push(createResourceKey(parent, resources));\n            parent = getParentResource(parent, resources);\n        }\n        return keys;\n    }, []);\n\n    const prepareItem = React.useCallback(\n        (item: FlatTreeItem): TreeMenuItem | undefined => {\n            if (item?.meta?.hide ?? item?.options?.hide) return undefined;\n            if (!item?.list && item.children.length === 0) return undefined;\n\n            const composed = item.list\n                ? getToPath({\n                      resource: item,\n                      action: \"list\",\n                      legacy: routerType === \"legacy\",\n                      meta,\n                  })\n                : undefined;\n\n            if (\n                hideOnMissingParameter &&\n                composed &&\n                composed.match(/(\\/|^):(.+?)(\\/|$){1}/)\n            )\n                return undefined;\n\n            return {\n                ...item,\n                route: composed,\n                icon: pickNotDeprecated(\n                    item.meta?.icon,\n                    item.options?.icon,\n                    item.icon,\n                ),\n                label:\n                    pickNotDeprecated(\n                        item?.meta?.label,\n                        item?.options?.label,\n                    ) ??\n                    translate(\n                        `${item.name}.${item.name}`,\n                        getFriendlyName(item.name, \"plural\"),\n                    ),\n            };\n        },\n        [routerType, meta, translate, hideOnMissingParameter],\n    );\n\n    const treeItems = React.useMemo(() => {\n        const treeMenuItems = createTree(resources, routerType === \"legacy\");\n\n        // add paths to items and their nodes recursively\n        const prepare = (items: TreeMenuItem[]): TreeMenuItem[] => {\n            return items.flatMap((item) => {\n                const preparedNodes = prepare(item.children);\n                const newItem = prepareItem({\n                    ...item,\n                    children: preparedNodes,\n                });\n\n                if (!newItem) return [];\n\n                return [newItem];\n            });\n        };\n\n        return prepare(treeMenuItems);\n    }, [resources, routerType, prepareItem]);\n\n    return {\n        defaultOpenKeys,\n        selectedKey,\n        menuItems: treeItems,\n    };\n};\n","import { IResourceItem } from \"../../../interfaces\";\nimport {\n    getParentResource,\n    removeLeadingTrailingSlashes,\n} from \"../../helpers/router\";\n\nexport const createResourceKey = (\n    resource: IResourceItem,\n    resources: IResourceItem[],\n    legacy = false,\n) => {\n    const parents: IResourceItem[] = [];\n\n    let currentParentResource = getParentResource(resource, resources);\n    while (currentParentResource) {\n        parents.push(currentParentResource);\n        currentParentResource = getParentResource(\n            currentParentResource,\n            resources,\n        );\n    }\n    parents.reverse();\n\n    const key = [...parents, resource]\n        .map((r) =>\n            removeLeadingTrailingSlashes(\n                (legacy ? r.route : undefined) ?? r.identifier ?? r.name,\n            ),\n        )\n        .join(\"/\");\n\n    return `/${key.replace(/^\\//, \"\")}`;\n};\n","import { IResourceItem } from \"@contexts/resource\";\nimport { getParentResource } from \"../router\";\nimport { createResourceKey } from \"./create-resource-key\";\n\nexport type Tree = {\n    item: IResourceItem;\n    children: { [key: string]: Tree };\n};\n\nexport type FlatTreeItem = IResourceItem & {\n    key: string;\n    children: FlatTreeItem[];\n};\n\nexport const createTree = (\n    resources: IResourceItem[],\n    legacy = false,\n): FlatTreeItem[] => {\n    const root: Tree = {\n        item: {\n            name: \"__root__\",\n        },\n        children: {},\n    };\n\n    resources.forEach((resource) => {\n        const parents: IResourceItem[] = [];\n\n        let currentParent = getParentResource(resource, resources);\n        while (currentParent) {\n            parents.push(currentParent);\n            currentParent = getParentResource(currentParent, resources);\n        }\n        parents.reverse();\n\n        let currentTree = root;\n\n        parents.forEach((parent) => {\n            const key =\n                (legacy ? parent.route : undefined) ??\n                parent.identifier ??\n                parent.name;\n\n            if (!currentTree.children[key]) {\n                currentTree.children[key] = {\n                    item: parent,\n                    children: {},\n                };\n            }\n            currentTree = currentTree.children[key];\n        });\n\n        const key =\n            (legacy ? resource.route : undefined) ??\n            resource.identifier ??\n            resource.name;\n\n        if (!currentTree.children[key]) {\n            currentTree.children[key] = {\n                item: resource,\n                children: {},\n            };\n        }\n    });\n\n    const flatten = (tree: Tree): FlatTreeItem[] => {\n        const items: FlatTreeItem[] = [];\n\n        Object.keys(tree.children).forEach((key) => {\n            const itemKey = createResourceKey(\n                tree.children[key].item,\n                resources,\n                legacy,\n            );\n            const item: FlatTreeItem = {\n                ...tree.children[key].item,\n                key: itemKey,\n                children: flatten(tree.children[key]),\n            };\n            items.push(item);\n        });\n\n        return items;\n    };\n\n    return flatten(root);\n};\n","import { useParsed } from \"@hooks/router\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\nimport { IResourceItem, MetaQuery } from \"../../interfaces\";\n\n/**\n * Hook that returns a function to get meta.\n * The meta is a combination of the resource meta, hook meta and query params.\n * @internal\n */\nexport const useMeta = () => {\n    const { params } = useParsed();\n\n    const getMetaFn = ({\n        resource,\n        meta: metaFromProp,\n    }: {\n        resource?: IResourceItem;\n        meta?: MetaQuery;\n    } = {}) => {\n        const { meta } = sanitizeResource(resource) ?? { meta: {} };\n\n        // this fields came from the query params and should be removed from the meta because they are not part of the meta.\n        const {\n            filters: _filters,\n            sorters: _sorters,\n            current: _current,\n            pageSize: _pageSize,\n            ...additionalParams\n        } = params ?? {};\n\n        return { ...meta, ...additionalParams, ...metaFromProp };\n    };\n\n    return getMetaFn;\n};\n","import React, { useState } from \"react\";\n\nimport { useLogin, useTranslate } from \"@hooks\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\nexport interface ILoginForm {\n    username: string;\n    password: string;\n}\n\n/**\n * @deprecated LoginPage is deprecated. Use AuthPage instead. @see {@link https://refine.dev/docs/core/components/auth-page} for more details.\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#loginpage} for more details.\n */\nexport const LoginPage: React.FC = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const translate = useTranslate();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login } = useLogin<ILoginForm>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    return (\n        <>\n            <h1>{translate(\"pages.login.title\", \"Sign in your account\")}</h1>\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    login({ username, password });\n                }}\n            >\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>\n                                {translate(\n                                    \"pages.login.username\",\n                                    undefined,\n                                    \"username\",\n                                )}\n                                :\n                            </td>\n                            <td>\n                                <input\n                                    type=\"text\"\n                                    size={20}\n                                    autoCorrect=\"off\"\n                                    spellCheck={false}\n                                    autoCapitalize=\"off\"\n                                    autoFocus\n                                    required\n                                    value={username}\n                                    onChange={(e) =>\n                                        setUsername(e.target.value)\n                                    }\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {translate(\n                                    \"pages.login.password\",\n                                    undefined,\n                                    \"password\",\n                                )}\n                                :\n                            </td>\n                            <td>\n                                <input\n                                    type=\"password\"\n                                    required\n                                    size={20}\n                                    value={password}\n                                    onChange={(e) =>\n                                        setPassword(e.target.value)\n                                    }\n                                />\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <br />\n                <input type=\"submit\" value=\"login\" />\n            </form>\n        </>\n    );\n};\n","import React, {\n    DetailedHTMLProps,\n    HTMLAttributes,\n    FormHTMLAttributes,\n} from \"react\";\n\nimport {\n    LoginPage,\n    RegisterPage,\n    ForgotPasswordPage,\n    UpdatePasswordPage,\n} from \"./components\";\n\nimport { AuthPageProps } from \"../../../interfaces\";\n\nexport type DivPropsType = DetailedHTMLProps<\n    HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n>;\nexport type FormPropsType = DetailedHTMLProps<\n    FormHTMLAttributes<HTMLFormElement>,\n    HTMLFormElement\n>;\n\nexport type AuthProps = AuthPageProps<\n    DivPropsType,\n    DivPropsType,\n    FormPropsType\n>;\n\n/**\n * **refine** has a default auth page form which is served on `/login` route when the `authProvider` configuration is provided.\n * @param title is not implemented yet.\n * @see {@link https://refine.dev/docs/api-reference/core/components/auth-page/} for more details.\n */\nexport const AuthPage: React.FC<AuthProps> = (props) => {\n    const { type } = props;\n    const renderView = () => {\n        switch (type) {\n            case \"register\":\n                return <RegisterPage {...props} />;\n            case \"forgotPassword\":\n                return <ForgotPasswordPage {...props} />;\n            case \"updatePassword\":\n                return <UpdatePasswordPage {...props} />;\n            default:\n                return <LoginPage {...props} />;\n        }\n    };\n\n    return <>{renderView()}</>;\n};\n","import React, { useState } from \"react\";\nimport { LoginPageProps, LoginFormTypes } from \"../../../../../interfaces\";\n\nimport { useRouterContext, useLink, useRouterType, useLogin } from \"@hooks\";\nimport { useTranslate } from \"@hooks/translate\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\n\ntype LoginProps = LoginPageProps<DivPropsType, DivPropsType, FormPropsType>;\n\nexport const LoginPage: React.FC<LoginProps> = ({\n    providers,\n    registerLink,\n    forgotPasswordLink,\n    rememberMe,\n    contentProps,\n    wrapperProps,\n    renderContent,\n    formProps,\n    title = undefined,\n}) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [remember, setRemember] = useState(false);\n\n    const translate = useTranslate();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login } = useLogin<LoginFormTypes>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const renderLink = (link: string, text?: string) => {\n        return <ActiveLink to={link}>{text}</ActiveLink>;\n    };\n\n    const renderProviders = () => {\n        if (providers) {\n            return providers.map((provider) => (\n                <div\n                    key={provider.name}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        marginBottom: \"1rem\",\n                    }}\n                >\n                    <button\n                        onClick={() =>\n                            login({\n                                providerName: provider.name,\n                            })\n                        }\n                        style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        {provider?.icon}\n                        {provider.label ?? <label>{provider.label}</label>}\n                    </button>\n                </div>\n            ));\n        }\n        return null;\n    };\n\n    const content = (\n        <div {...contentProps}>\n            <h1 style={{ textAlign: \"center\" }}>\n                {translate(\"pages.login.title\", \"Sign in to your account\")}\n            </h1>\n            {renderProviders()}\n            <hr />\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    login({ email, password, remember });\n                }}\n                {...formProps}\n            >\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        padding: 25,\n                    }}\n                >\n                    <label htmlFor=\"email-input\">\n                        {translate(\"pages.login.fields.email\", \"Email\")}\n                    </label>\n                    <input\n                        id=\"email-input\"\n                        name=\"email\"\n                        type=\"text\"\n                        size={20}\n                        autoCorrect=\"off\"\n                        spellCheck={false}\n                        autoCapitalize=\"off\"\n                        required\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                    <label htmlFor=\"password-input\">\n                        {translate(\"pages.login.fields.password\", \"Password\")}\n                    </label>\n                    <input\n                        id=\"password-input\"\n                        type=\"password\"\n                        name=\"password\"\n                        required\n                        size={20}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                    {rememberMe ?? (\n                        <>\n                            <label htmlFor=\"remember-me-input\">\n                                {translate(\n                                    \"pages.login.buttons.rememberMe\",\n                                    \"Remember me\",\n                                )}\n                                <input\n                                    id=\"remember-me-input\"\n                                    name=\"remember\"\n                                    type=\"checkbox\"\n                                    size={20}\n                                    checked={remember}\n                                    value={remember.toString()}\n                                    onChange={() => {\n                                        setRemember(!remember);\n                                    }}\n                                />\n                            </label>\n                        </>\n                    )}\n                    <br />\n                    {forgotPasswordLink ??\n                        renderLink(\n                            \"/forgot-password\",\n                            translate(\n                                \"pages.login.buttons.forgotPassword\",\n                                \"Forgot password?\",\n                            ),\n                        )}\n                    <input\n                        type=\"submit\"\n                        value={translate(\"pages.login.signin\", \"Sign in\")}\n                    />\n                    {registerLink ?? (\n                        <span>\n                            {translate(\n                                \"pages.login.buttons.noAccount\",\n                                \"Don’t have an account?\",\n                            )}{\" \"}\n                            {renderLink(\n                                \"/register\",\n                                translate(\"pages.login.register\", \"Sign up\"),\n                            )}\n                        </span>\n                    )}\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <div {...wrapperProps}>\n            {renderContent ? renderContent(content, title) : content}\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\nimport { RegisterPageProps } from \"../../../../../interfaces\";\n\nimport {\n    useTranslate,\n    useRouterContext,\n    useLink,\n    useRouterType,\n    useRegister,\n} from \"@hooks\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\n\ntype RegisterProps = RegisterPageProps<\n    DivPropsType,\n    DivPropsType,\n    FormPropsType\n>;\n\nexport const RegisterPage: React.FC<RegisterProps> = ({\n    providers,\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title = undefined,\n}) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const translate = useTranslate();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: register, isLoading } = useRegister({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const renderLink = (link: string, text?: string) => {\n        return <ActiveLink to={link}>{text}</ActiveLink>;\n    };\n\n    const renderProviders = () => {\n        if (providers) {\n            return providers.map((provider) => (\n                <div\n                    key={provider.name}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        marginBottom: \"1rem\",\n                    }}\n                >\n                    <button\n                        onClick={() =>\n                            register({\n                                providerName: provider.name,\n                            })\n                        }\n                        style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        {provider?.icon}\n                        {provider.label ?? <label>{provider.label}</label>}\n                    </button>\n                </div>\n            ));\n        }\n        return null;\n    };\n\n    const content = (\n        <div {...contentProps}>\n            <h1 style={{ textAlign: \"center\" }}>\n                {translate(\"pages.register.title\", \"Sign up for your account\")}\n            </h1>\n            {renderProviders()}\n            <hr />\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    register({ email, password });\n                }}\n                {...formProps}\n            >\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        padding: 25,\n                    }}\n                >\n                    <label htmlFor=\"email-input\">\n                        {translate(\"pages.register.fields.email\", \"Email\")}\n                    </label>\n                    <input\n                        id=\"email-input\"\n                        name=\"email\"\n                        type=\"email\"\n                        size={20}\n                        autoCorrect=\"off\"\n                        spellCheck={false}\n                        autoCapitalize=\"off\"\n                        required\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                    <label htmlFor=\"password-input\">\n                        {translate(\n                            \"pages.register.fields.password\",\n                            \"Password\",\n                        )}\n                    </label>\n                    <input\n                        id=\"password-input\"\n                        name=\"password\"\n                        type=\"password\"\n                        required\n                        size={20}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                    <input\n                        type=\"submit\"\n                        value={translate(\n                            \"pages.register.buttons.submit\",\n                            \"Sign up\",\n                        )}\n                        disabled={isLoading}\n                    />\n                    {loginLink ?? (\n                        <>\n                            <span>\n                                {translate(\n                                    \"pages.login.buttons.haveAccount\",\n                                    \"Have an account?\",\n                                )}{\" \"}\n                                {renderLink(\n                                    \"/login\",\n                                    translate(\"pages.login.signin\", \"Sign in\"),\n                                )}\n                            </span>\n                        </>\n                    )}\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <div {...wrapperProps}>\n            {renderContent ? renderContent(content, title) : content}\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\n\nimport {\n    useTranslate,\n    useRouterContext,\n    useLink,\n    useRouterType,\n    useForgotPassword,\n} from \"@hooks\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport {\n    ForgotPasswordFormTypes,\n    ForgotPasswordPageProps,\n} from \"../../../../../interfaces\";\n\ntype ForgotPasswordProps = ForgotPasswordPageProps<\n    DivPropsType,\n    DivPropsType,\n    FormPropsType\n>;\n\nexport const ForgotPasswordPage: React.FC<ForgotPasswordProps> = ({\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title = undefined,\n}) => {\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const [email, setEmail] = useState(\"\");\n\n    const { mutate: forgotPassword, isLoading } =\n        useForgotPassword<ForgotPasswordFormTypes>();\n\n    const renderLink = (link: string, text?: string) => {\n        return <ActiveLink to={link}>{text}</ActiveLink>;\n    };\n\n    const content = (\n        <div {...contentProps}>\n            <h1 style={{ textAlign: \"center\" }}>\n                {translate(\n                    \"pages.forgotPassword.title\",\n                    \"Forgot your password?\",\n                )}\n            </h1>\n            <hr />\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    forgotPassword({ email });\n                }}\n                {...formProps}\n            >\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        padding: 25,\n                    }}\n                >\n                    <label htmlFor=\"email-input\">\n                        {translate(\n                            \"pages.forgotPassword.fields.email\",\n                            \"Email\",\n                        )}\n                    </label>\n                    <input\n                        id=\"email-input\"\n                        name=\"email\"\n                        type=\"mail\"\n                        autoCorrect=\"off\"\n                        spellCheck={false}\n                        autoCapitalize=\"off\"\n                        required\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                    <input\n                        type=\"submit\"\n                        disabled={isLoading}\n                        value={translate(\n                            \"pages.forgotPassword.buttons.submit\",\n                            \"Send reset instructions\",\n                        )}\n                    />\n                    <br />\n                    {loginLink ?? (\n                        <span>\n                            {translate(\n                                \"pages.register.buttons.haveAccount\",\n                                \"Have an account? \",\n                            )}{\" \"}\n                            {renderLink(\n                                \"/login\",\n                                translate(\"pages.login.signin\", \"Sign in\"),\n                            )}\n                        </span>\n                    )}\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <div {...wrapperProps}>\n            {renderContent ? renderContent(content, title) : content}\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\nimport {\n    UpdatePasswordFormTypes,\n    UpdatePasswordPageProps,\n} from \"../../../../../interfaces\";\n\nimport { useTranslate, useUpdatePassword } from \"@hooks\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\n\ntype UpdatePasswordProps = UpdatePasswordPageProps<\n    DivPropsType,\n    DivPropsType,\n    FormPropsType\n>;\n\nexport const UpdatePasswordPage: React.FC<UpdatePasswordProps> = ({\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title = undefined,\n}) => {\n    const translate = useTranslate();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: updatePassword, isLoading } =\n        useUpdatePassword<UpdatePasswordFormTypes>({\n            v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n        });\n\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const content = (\n        <div {...contentProps}>\n            <h1 style={{ textAlign: \"center\" }}>\n                {translate(\"pages.updatePassword.title\", \"Update Password\")}\n            </h1>\n            <hr />\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    updatePassword({\n                        password: newPassword,\n                        confirmPassword,\n                    });\n                }}\n                {...formProps}\n            >\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        padding: 25,\n                    }}\n                >\n                    <label htmlFor=\"password-input\">\n                        {translate(\n                            \"pages.updatePassword.fields.password\",\n                            \"New Password\",\n                        )}\n                    </label>\n                    <input\n                        id=\"password-input\"\n                        name=\"password\"\n                        type=\"password\"\n                        required\n                        size={20}\n                        value={newPassword}\n                        onChange={(e) => setNewPassword(e.target.value)}\n                    />\n                    <label htmlFor=\"confirm-password-input\">\n                        {translate(\n                            \"pages.updatePassword.fields.confirmPassword\",\n                            \"Confirm New Password\",\n                        )}\n                    </label>\n                    <input\n                        id=\"confirm-password-input\"\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        required\n                        size={20}\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    />\n                    <input\n                        type=\"submit\"\n                        disabled={isLoading}\n                        value={translate(\n                            \"pages.updatePassword.buttons.submit\",\n                            \"Update\",\n                        )}\n                    />\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <div {...wrapperProps}>\n            {renderContent ? renderContent(content, title) : content}\n        </div>\n    );\n};\n","import React from \"react\";\n\n/**\n * **refine** shows a default ready page on root route when no `resources` is passed to the `<Refine>` component as a property.\n *\n * @deprecated `ReadyPage` is deprecated and will be removed in the next major release.\n */\nexport const ReadyPage: React.FC = () => {\n    return (\n        <>\n            <h1>Welcome on board</h1>\n            <p>Your configuration is completed.</p>\n            <p>\n                Now you can get started by adding your resources to the{\" \"}\n                <code>`resources`</code> property of <code>{\"`<Refine>`\"}</code>\n            </p>\n            <div style={{ display: \"flex\", gap: 8 }}>\n                <a href=\"https://refine.dev\" target=\"_blank\" rel=\"noreferrer\">\n                    <button>Documentation</button>\n                </a>\n                <a\n                    href=\"https://refine.dev/examples\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    <button>Examples</button>\n                </a>\n                <a\n                    href=\"https://discord.gg/refine\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    <button>Community</button>\n                </a>\n            </div>\n        </>\n    );\n};\n","import React, { useState } from \"react\";\n\nimport { useMediaQuery } from \"@definitions/helpers\";\n\ntype CardInfo = {\n    title: string;\n    description: string;\n    link: string;\n    icon: React.ReactNode;\n};\n\nconst CARDS: CardInfo[] = [\n    {\n        title: \"Documentation\",\n        description:\n            \"Learn about the technical details of using refine in your projects.\",\n        link: \"https://refine.dev/\",\n        icon: (\n            <svg\n                width=\"14\"\n                height=\"16\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path\n                    d=\"M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V5a1 1 0 0 0-1-1H3a1 1 0 0 1 0-2h10a1 1 0 1 0 0-2H2Z\"\n                    fill=\"#fff\"\n                />\n            </svg>\n        ),\n    },\n    {\n        title: \"Tutorial\",\n        description:\n            \"Learn how to use refine by building a fully-functioning CRUD app, from scratch to full launch.\",\n        link: \"https://refine.dev/docs/tutorial/introduction/index/\",\n        icon: (\n            <svg\n                width=\"16\"\n                height=\"14\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path\n                    d=\"M0 4.573c0-.475.163-.948.53-1.25a4.57 4.57 0 0 1 .854-.553L5.956.485a4.571 4.571 0 0 1 4.088 0l4.572 2.285c.308.154.594.34.853.553.306.251.47.62.517 1.01.01.055.014.112.014.169v6.5a1 1 0 0 1-2 0V6.684l-3.956 1.978a4.571 4.571 0 0 1-4.088 0L1.384 6.376a4.57 4.57 0 0 1-.853-.553C.163 5.522 0 5.05 0 4.573Z\"\n                    fill=\"#fff\"\n                />\n                <path\n                    d=\"M5.061 13.305 3 12.274V9.42l2.061 1.031a6.571 6.571 0 0 0 5.878 0L13 9.421v2.853l-2.061 1.03a6.571 6.571 0 0 1-5.878 0Z\"\n                    fill=\"#fff\"\n                />\n            </svg>\n        ),\n    },\n    {\n        title: \"Examples\",\n        description:\n            \"A collection of reference applications you can use as a starting point.\",\n        link: \"https://refine.dev/examples\",\n        icon: (\n            <svg\n                width=\"16\"\n                height=\"16\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    d=\"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4H0V2Zm3 2a1 1 0 1 0 0-2 1 1 0 0 0 0 2Zm4-1a1 1 0 1 1-2 0 1 1 0 0 1 2 0Zm2 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z\"\n                    fill=\"#fff\"\n                />\n                <path\n                    d=\"M0 14V8h16v6a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2Z\"\n                    fill=\"#fff\"\n                />\n            </svg>\n        ),\n    },\n    {\n        title: \"Community\",\n        description:\n            \"Join our Discord community and keep up with the latest news.\",\n        link: \"https://discord.gg/refine\",\n        icon: (\n            <svg\n                width=\"16\"\n                height=\"12\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path\n                    d=\"M13.553 1.005A13.334 13.334 0 0 0 10.253 0c-.156.276-.298.56-.423.85a12.42 12.42 0 0 0-3.664 0A8.975 8.975 0 0 0 5.744 0 13.43 13.43 0 0 0 2.44 1.007C.351 4.066-.215 7.05.068 9.99A13.36 13.36 0 0 0 4.116 12c.328-.436.618-.9.867-1.384a8.647 8.647 0 0 1-1.365-.645c.115-.082.227-.167.335-.249a9.594 9.594 0 0 0 8.094 0c.11.089.222.173.335.25-.436.254-.894.47-1.368.646.249.484.539.946.867 1.382a13.3 13.3 0 0 0 4.051-2.01c.332-3.41-.568-6.365-2.379-8.985Zm-8.21 7.176c-.79 0-1.442-.709-1.442-1.58 0-.872.63-1.587 1.439-1.587s1.456.715 1.442 1.586c-.014.872-.636 1.58-1.44 1.58Zm5.315 0c-.79 0-1.44-.709-1.44-1.58 0-.872.63-1.587 1.44-1.587.81 0 1.452.715 1.438 1.586-.014.872-.634 1.58-1.438 1.58Z\"\n                    fill=\"#fff\"\n                />\n            </svg>\n        ),\n    },\n];\n\n/**\n * It is a page that welcomes you after the configuration is completed.\n */\nexport const WelcomePage: React.FC = () => {\n    const isTablet = useMediaQuery(\"(max-width: 1010px)\");\n    const isMobile = useMediaQuery(\"(max-width: 650px)\");\n\n    const getGridTemplateColumns = () => {\n        if (isMobile) {\n            return \"1, 280px\";\n        } else if (isTablet) {\n            return \"2, 280px\";\n        } else {\n            return \"4, 208px\";\n        }\n    };\n\n    const getHeaderFontSize = () => {\n        if (isMobile) {\n            return \"32px\";\n        } else if (isTablet) {\n            return \"40px\";\n        } else {\n            return \"48px\";\n        }\n    };\n\n    const getSubHeaderFontSize = () => {\n        if (isMobile) {\n            return \"16px\";\n        } else if (isTablet) {\n            return \"20px\";\n        } else {\n            return \"24px\";\n        }\n    };\n\n    return (\n        <div\n            style={{\n                backgroundImage:\n                    \"url(https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/welcome-page.webp)\",\n                backgroundPosition: \"center top\",\n                backgroundSize: \"cover\",\n                backgroundRepeat: \"no-repeat\",\n                minHeight: \"100vh\",\n                backgroundColor: \"#0D0D12\",\n                fontFamily: \"Arial\",\n                color: \"#FFFFFF\",\n            }}\n        >\n            <div style={{ height: \"89px\" }}></div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <img\n                    src=\"https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/welcome-logo.webp\"\n                    width=\"198\"\n                    height=\"54\"\n                />\n            </div>\n            <div\n                style={{\n                    height: isTablet ? \"270px\" : \"22vw\",\n                    minHeight: isTablet ? \"270px\" : \"313px\",\n                }}\n            ></div>\n            <div\n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"16px\",\n                    textAlign: \"center\",\n                }}\n            >\n                <h1\n                    style={{\n                        fontSize: getHeaderFontSize(),\n                        fontWeight: 700,\n                        margin: \"0px\",\n                    }}\n                >\n                    Welcome Aboard!\n                </h1>\n                <h4\n                    style={{\n                        fontSize: getSubHeaderFontSize(),\n                        fontWeight: 400,\n                        margin: \"0px\",\n                    }}\n                >\n                    Your configuration is completed.\n                </h4>\n            </div>\n            <div style={{ height: \"64px\" }}></div>\n            <div\n                style={{\n                    display: \"grid\",\n                    gridTemplateColumns: `repeat(${getGridTemplateColumns()})`,\n                    justifyContent: \"center\",\n                    gap: \"48px\",\n                    paddingRight: \"16px\",\n                    paddingLeft: \"16px\",\n                    maxWidth: \"976px\",\n                    margin: \"auto\",\n                }}\n            >\n                {CARDS.map((card) => (\n                    <Card key={`welcome-page-${card.title}`} card={card} />\n                ))}\n            </div>\n            <div style={{ height: \"64px\" }}></div>\n        </div>\n    );\n};\n\ntype CardProps = {\n    card: CardInfo;\n};\n\nconst Card: React.FC<CardProps> = ({ card }) => {\n    const { title, description, icon, link } = card;\n\n    const [isHover, setIsHover] = useState(false);\n\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"16px\",\n            }}\n        >\n            <div\n                style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                }}\n            >\n                <a\n                    onPointerEnter={() => setIsHover(true)}\n                    onPointerLeave={() => setIsHover(false)}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        color: \"#fff\",\n                        textDecoration: \"none\",\n                    }}\n                    href={link}\n                >\n                    {icon}\n                    <span\n                        style={{\n                            fontSize: \"16px\",\n                            fontWeight: 700,\n                            marginLeft: \"13px\",\n                            marginRight: \"14px\",\n                        }}\n                    >\n                        {title}\n                    </span>\n                    <svg\n                        style={{\n                            transition:\n                                \"transform 0.5s ease-in-out, opacity 0.2s ease-in-out\",\n                            ...(isHover && {\n                                transform: \"translateX(4px)\",\n                                opacity: 1,\n                            }),\n                        }}\n                        width=\"12\"\n                        height=\"8\"\n                        fill=\"none\"\n                        opacity=\"0.5\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M7.293.293a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1 0 1.414l-3 3a1 1 0 0 1-1.414-1.414L8.586 5H1a1 1 0 0 1 0-2h7.586L7.293 1.707a1 1 0 0 1 0-1.414Z\"\n                            fill=\"#fff\"\n                        />\n                    </svg>\n                </a>\n            </div>\n            <span\n                style={{\n                    fontSize: \"12px\",\n                    opacity: 0.5,\n                    lineHeight: \"16px\",\n                }}\n            >\n                {description}\n            </span>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { useQuerySubscription } from \"@refinedev/devtools-internal\";\n\nimport { ReadyPage as DefaultReadyPage, RouteChangeHandler } from \"@components\";\nimport { Telemetry } from \"@components/telemetry\";\nimport { AccessControlContextProvider } from \"@contexts/accessControl\";\nimport { AuditLogContextProvider } from \"@contexts/auditLog\";\nimport {\n    AuthBindingsContextProvider,\n    LegacyAuthContextProvider,\n} from \"@contexts/auth\";\nimport { DataContextProvider } from \"@contexts/data\";\nimport { LegacyRouterContextProvider } from \"@contexts/legacy-router\";\nimport { LiveContextProvider } from \"@contexts/live\";\nimport { NotificationContextProvider } from \"@contexts/notification\";\nimport { RefineContextProvider } from \"@contexts/refine\";\nimport { ResourceContextProvider } from \"@contexts/resource\";\nimport { TranslationContextProvider } from \"@contexts/translation\";\nimport { UndoableQueueContextProvider } from \"@contexts/undoableQueue\";\nimport { UnsavedWarnContextProvider } from \"@contexts/unsavedWarn\";\nimport { handleRefineOptions } from \"@definitions\";\nimport { useDeepMemo } from \"@hooks/deepMemo\";\nimport { RouterBindings } from \"src/interfaces/bindings\";\n\nimport { RouterPickerProvider } from \"@contexts/router-picker\";\nimport { RouterBindingsProvider } from \"../../../contexts/router\";\nimport { useRouterMisuseWarning } from \"../../../hooks/router/use-router-misuse-warning/index\";\nimport {\n    AccessControlProvider,\n    AuditLogProvider,\n    AuthBindings,\n    DashboardPageProps,\n    I18nProvider,\n    IDataContextProvider,\n    IDataMultipleContextProvider,\n    ILiveContext,\n    INotificationContext,\n    IRefineOptions,\n    IRouterProvider,\n    LayoutProps,\n    LegacyAuthProvider,\n    LiveModeProps,\n    NotificationProvider,\n    TitleProps,\n} from \"../../../interfaces\";\nimport { ResourceProps } from \"../../../interfaces/bindings/resource\";\n\nexport interface RefineProps {\n    children?: React.ReactNode;\n    /**\n     * `resources` is the predefined interaction points for a refine app. A resource represents an entity in an endpoint in the API.\n     * While this is not a required property, it is used in resource detection and creation of routes for the app.\n     * @type [`ResourceProps[]`](https://refine.dev/docs/api-reference/core/components/refine-config/#resources)\n     */\n    resources?: ResourceProps[];\n    /**\n     * **refine** needs some router functions to create resource pages, handle navigation, etc. This provider allows you to use the router library you want\n     * @type [`IRouterProvider`](https://refine.dev/docs/api-reference/core/providers/router-provider/)\n     * @deprecated This property is deprecated and was the legacy way of routing. Please use `routerProvider` with new router bindings instead.\n     */\n    legacyRouterProvider?: IRouterProvider;\n    /**\n     * Router bindings for **refine**. A simple interface for **refine** to interact with your router in a flexible way.\n     * @type [`RouterBindings`](https://refine.dev/docs/api-reference/core/bindings/router/)\n     */\n    routerProvider?: RouterBindings;\n    /**\n     * A `dataProvider` is the place where a refine app communicates with an API. Data providers also act as adapters for refine, making it possible for it to consume different API's and data services.\n     * @type [`IDataContextProvider` | `IDataMultipleContextProvider`](https://refine.dev/docs/api-reference/core/providers/data-provider/)\n     */\n    dataProvider: IDataContextProvider | IDataMultipleContextProvider;\n    /**\n     * `authProvider` handles authentication logic like login, logout flow and checking user credentials. It is an object with methods that refine uses when necessary.\n     * @type [`AuthBindings`](https://refine.dev/docs/api-reference/core/providers/auth-provider/)\n     */\n    authProvider?: AuthBindings;\n    /**\n     * `legacyAuthProvider` handles authentication logic like login, logout flow and checking user credentials. It is an object with methods that refine uses when necessary.\n     * @type [`AuthProvider`](https://refine.dev/docs/api-reference/core/providers/auth-provider/)\n     * @deprecated `legacyAuthProvider` is deprecated with refine@4, use `authProvider` instead.\n     */\n    legacyAuthProvider?: LegacyAuthProvider;\n    /**\n     * **refine** lets you add Realtime support to your app via `liveProvider`. It can be used to update and show data in Realtime throughout your app.\n     * @type [`ILiveContext`](https://refine.dev/docs/api-reference/core/providers/live-provider/)\n     */\n    liveProvider?: ILiveContext;\n    /**\n     * `notificationProvider` handles notification logics. It is an object with methods that refine uses when necessary.\n     * @type [`NotificationProvider` | `(() => NotificationProvider)`](https://refine.dev/docs/api-reference/core/providers/notification-provider/)\n     */\n    notificationProvider?: NotificationProvider | (() => NotificationProvider);\n    /**\n     * `accessControlProvider` is the entry point for implementing access control for refine apps.\n     * @type [`AccessControlProvider`](https://refine.dev/docs/api-reference/core/providers/accessControl-provider/)\n     */\n    accessControlProvider?: AccessControlProvider;\n    /**\n     * **refine** allows you to track changes in your data and keep track of who made the changes.\n     * @type [`AuditLogProvider`](https://refine.dev/docs/api-reference/core/providers/audit-log-provider#overview)\n     */\n    auditLogProvider?: AuditLogProvider;\n    /**\n     * `i18nProvider` property lets you add i18n support to your app. Making you able to use any i18n framework.\n     * @type [`i18nProvider`](https://refine.dev/docs/api-reference/core/providers/i18n-provider/)\n     */\n    i18nProvider?: I18nProvider;\n    /**\n     * A custom error component.\n     * @type [`ReactNode`](https://refine.dev/docs/api-reference/core/components/refine-config/#catchall)\n     * @deprecated Please use the `catchAll` element in your routes instead.\n     */\n    catchAll?: React.ReactNode;\n    /**\n     * Custom login component can be passed to the `LoginPage` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#loginpage)\n     * @deprecated Please use the `LoginPage` component in your routes instead.\n     */\n    LoginPage?: React.FC;\n    /**\n     * A custom dashboard page can be passed to the `DashboardPage` prop which is accessible on root route.\n     * @type [`React.FC<DashboardPageProps>`](https://refine.dev/docs/api-reference/core/components/refine-config/#dashboardpage)\n     * @deprecated Please use the `DashboardPage` component in your routes instead.\n     */\n    DashboardPage?: React.FC<DashboardPageProps>;\n    /**\n     * Custom ready page component can be set by passing to `ReadyPage` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#readypage)\n     * @deprecated This component is only used with the legacy router and will be removed in the future.\n     */\n    ReadyPage?: React.FC;\n    /**\n     * Default layout can be customized by passing the `Layout` property.\n     * @type [`React.FC<LayoutProps>`](https://refine.dev/docs/api-reference/core/components/refine-config/#layout)\n     * @deprecated Please use the `Layout` component as a children instead of a prop.\n     */\n    Layout?: React.FC<LayoutProps>;\n    /**\n     * The default sidebar can be customized by using refine hooks and passing custom components to `Sider` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#sider)\n     * @deprecated Please pass the `Sider` component to your `Layout` component.\n     */\n    Sider?: React.FC;\n    /**\n     * The default app header can be customized by passing the `Header` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#header)\n     * @deprecated Please pass the `Header` component to your `Layout` component.\n     */\n    Header?: React.FC;\n    /**\n     *The default app footer can be customized by passing the `Footer` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#footer)\n     * @deprecated Please pass the `Footer` component to your `Layout` component.\n     */\n    Footer?: React.FC;\n    /**\n     * The component wanted to be placed out of app layout structure can be set by passing to `OffLayoutArea` prop.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#offlayoutarea)\n     * @deprecated Please use your `OffLayoutArea` component as a children instead of a prop.\n     */\n    OffLayoutArea?: React.FC;\n    /**\n     * TThe app title can be set by passing the `Title` property.\n     * @type [`React.FC<TitleProps>`](https://refine.dev/docs/api-reference/core/components/refine-config/#title)\n     * @deprecated Please pass the `Title` component to your `Layout` component.\n     */\n    Title?: React.FC<TitleProps>;\n    /**\n     * Callback to handle all live events.\n     * @type [`(event: LiveEvent) => void`](https://refine.dev/docs/api-reference/core/providers/live-provider/#onliveevent)\n     */\n    onLiveEvent?: LiveModeProps[\"onLiveEvent\"];\n    /**\n     * `options` is used to configure the app.\n     * @type [`IRefineOptions`](https://refine.dev/docs/api-reference/core/components/refine-config/#options)\n     * */\n    options?: IRefineOptions;\n}\n\n/**\n * {@link https://refine.dev/docs/api-reference/core/components/refine-config `<Refine> component`} is the entry point of a refine app.\n * It is where the highest level of configuration of the app occurs.\n * Only a dataProvider is required to bootstrap the app. After adding a dataProvider, resources can be added as property.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config} for more details.\n */\nexport const Refine: React.FC<RefineProps> = ({\n    legacyAuthProvider,\n    authProvider,\n    dataProvider,\n    legacyRouterProvider,\n    routerProvider,\n    notificationProvider,\n    accessControlProvider,\n    auditLogProvider,\n    resources,\n    DashboardPage,\n    ReadyPage,\n    LoginPage,\n    catchAll,\n    children,\n    liveProvider,\n    i18nProvider,\n    Title,\n    Layout,\n    Sider,\n    Header,\n    Footer,\n    OffLayoutArea,\n    onLiveEvent,\n    options,\n}) => {\n    const {\n        optionsWithDefaults,\n        disableTelemetryWithDefault,\n        reactQueryWithDefaults,\n    } = handleRefineOptions({\n        options,\n    });\n\n    const queryClient = useDeepMemo(() => {\n        if (reactQueryWithDefaults.clientConfig instanceof QueryClient) {\n            return reactQueryWithDefaults.clientConfig;\n        }\n\n        return new QueryClient({\n            ...reactQueryWithDefaults.clientConfig,\n            defaultOptions: {\n                ...reactQueryWithDefaults.clientConfig.defaultOptions,\n                queries: {\n                    refetchOnWindowFocus: false,\n                    keepPreviousData: true,\n                    ...reactQueryWithDefaults.clientConfig.defaultOptions\n                        ?.queries,\n                },\n            },\n        });\n    }, [reactQueryWithDefaults.clientConfig]);\n\n    useQuerySubscription(queryClient);\n\n    const useNotificationProviderValues = React.useMemo(() => {\n        return typeof notificationProvider === \"function\"\n            ? notificationProvider\n            : () => notificationProvider ?? ({} as INotificationContext);\n    }, [notificationProvider]);\n\n    const notificationProviderContextValues = useNotificationProviderValues();\n\n    /**\n     * Warn our users if they are using the old way of routing in the wrong prop.\n     */\n    useRouterMisuseWarning(routerProvider);\n    /** */\n\n    /**\n     * `<ReadyPage />` is only used in the legacy routing and is not used in the new routing.\n     * If `legacyRouterProvider` is provided and `routerProvider` is not, we'll check for the `resources` prop to be empty.\n     * If `resources` is empty, then we'll render `<ReadyPage />` component.\n     */\n    if (\n        legacyRouterProvider &&\n        !routerProvider &&\n        (resources ?? []).length === 0\n    ) {\n        return ReadyPage ? <ReadyPage /> : <DefaultReadyPage />;\n    }\n\n    /** Router\n     *\n     * Handle routing from `RouterBindingsProvider` and `router` prop for the brand new way\n     * If `router` is not provided, then we'r checking for `routerProvider` prop\n     * If `routerProvider` is provided, then `RouterContextProvider` is used\n     * If none of them is provided, then `RouterBindingsProvider` is used because it supports undefined router\n     *\n     * `RouterContextProvider` is skipped whenever possible and by this way,\n     * we can achieve backward compability only when its provided by user\n     *\n     */\n    const { RouterComponent = React.Fragment } = !routerProvider\n        ? legacyRouterProvider ?? {}\n        : {};\n    /** */\n\n    return (\n        <QueryClientProvider client={queryClient}>\n            <NotificationContextProvider {...notificationProviderContextValues}>\n                <LegacyAuthContextProvider\n                    {...(legacyAuthProvider ?? {})}\n                    isProvided={Boolean(legacyAuthProvider)}\n                >\n                    <AuthBindingsContextProvider\n                        {...(authProvider ?? {})}\n                        isProvided={Boolean(authProvider)}\n                    >\n                        <DataContextProvider {...dataProvider}>\n                            <LiveContextProvider liveProvider={liveProvider}>\n                                <RouterPickerProvider\n                                    value={\n                                        legacyRouterProvider && !routerProvider\n                                            ? \"legacy\"\n                                            : \"new\"\n                                    }\n                                >\n                                    <RouterBindingsProvider\n                                        router={routerProvider}\n                                    >\n                                        <LegacyRouterContextProvider\n                                            {...legacyRouterProvider}\n                                        >\n                                            <ResourceContextProvider\n                                                resources={resources ?? []}\n                                            >\n                                                <TranslationContextProvider\n                                                    i18nProvider={i18nProvider}\n                                                >\n                                                    <AccessControlContextProvider\n                                                        {...(accessControlProvider ??\n                                                            {})}\n                                                    >\n                                                        <AuditLogContextProvider\n                                                            {...(auditLogProvider ??\n                                                                {})}\n                                                        >\n                                                            <UndoableQueueContextProvider>\n                                                                <RefineContextProvider\n                                                                    mutationMode={\n                                                                        optionsWithDefaults.mutationMode\n                                                                    }\n                                                                    warnWhenUnsavedChanges={\n                                                                        optionsWithDefaults.warnWhenUnsavedChanges\n                                                                    }\n                                                                    syncWithLocation={\n                                                                        optionsWithDefaults.syncWithLocation\n                                                                    }\n                                                                    Title={\n                                                                        Title\n                                                                    }\n                                                                    undoableTimeout={\n                                                                        optionsWithDefaults.undoableTimeout\n                                                                    }\n                                                                    catchAll={\n                                                                        catchAll\n                                                                    }\n                                                                    DashboardPage={\n                                                                        DashboardPage\n                                                                    }\n                                                                    LoginPage={\n                                                                        LoginPage\n                                                                    }\n                                                                    Layout={\n                                                                        Layout\n                                                                    }\n                                                                    Sider={\n                                                                        Sider\n                                                                    }\n                                                                    Footer={\n                                                                        Footer\n                                                                    }\n                                                                    Header={\n                                                                        Header\n                                                                    }\n                                                                    OffLayoutArea={\n                                                                        OffLayoutArea\n                                                                    }\n                                                                    hasDashboard={\n                                                                        !!DashboardPage\n                                                                    }\n                                                                    liveMode={\n                                                                        optionsWithDefaults.liveMode\n                                                                    }\n                                                                    onLiveEvent={\n                                                                        onLiveEvent\n                                                                    }\n                                                                    options={\n                                                                        optionsWithDefaults\n                                                                    }\n                                                                >\n                                                                    <UnsavedWarnContextProvider>\n                                                                        <RouterComponent>\n                                                                            {\n                                                                                children\n                                                                            }\n                                                                            {!disableTelemetryWithDefault && (\n                                                                                <Telemetry />\n                                                                            )}\n                                                                            <RouteChangeHandler />\n                                                                        </RouterComponent>\n                                                                    </UnsavedWarnContextProvider>\n                                                                </RefineContextProvider>\n                                                            </UndoableQueueContextProvider>\n                                                        </AuditLogContextProvider>\n                                                    </AccessControlContextProvider>\n                                                </TranslationContextProvider>\n                                            </ResourceContextProvider>\n                                        </LegacyRouterContextProvider>\n                                    </RouterBindingsProvider>\n                                </RouterPickerProvider>\n                            </LiveContextProvider>\n                        </DataContextProvider>\n                    </AuthBindingsContextProvider>\n                </LegacyAuthContextProvider>\n            </NotificationContextProvider>\n        </QueryClientProvider>\n    );\n};\n","import React from \"react\";\n\nimport { useTelemetryData } from \"@hooks/useTelemetryData\";\n\nimport { ITelemetryData } from \"../../interfaces/telemetry\";\n\nconst encode = (payload: ITelemetryData): string | undefined => {\n    try {\n        const stringifiedPayload = JSON.stringify(payload || {});\n\n        if (typeof btoa !== \"undefined\") {\n            return btoa(stringifiedPayload);\n        }\n\n        return Buffer.from(stringifiedPayload).toString(\"base64\");\n    } catch (err) {\n        return undefined;\n    }\n};\n\nconst throughImage = (src: string) => {\n    const img = new Image();\n\n    img.src = src;\n};\n\nconst throughFetch = (src: string) => {\n    fetch(src);\n};\n\nconst transport = (src: string) => {\n    if (typeof Image !== \"undefined\") {\n        throughImage(src);\n    } else if (typeof fetch !== \"undefined\") {\n        throughFetch(src);\n    }\n};\n\nexport const Telemetry: React.FC<{}> = () => {\n    const payload = useTelemetryData();\n    const sent = React.useRef(false);\n\n    React.useEffect(() => {\n        if (sent.current) {\n            return;\n        }\n        const encoded = encode(payload);\n\n        if (!encoded) {\n            return;\n        }\n\n        transport(`https://telemetry.refine.dev/telemetry?payload=${encoded}`);\n        sent.current = true;\n    }, []);\n\n    return null;\n};\n","import { useContext } from \"react\";\n\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { LiveContext } from \"@contexts/live\";\nimport { RouterContext } from \"@contexts/legacy-router\";\nimport { DataContext } from \"@contexts/data\";\nimport { TranslationContext } from \"@contexts/translation\";\nimport { NotificationContext } from \"@contexts/notification\";\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { useResource } from \"@hooks/resource\";\n\nimport { ITelemetryData } from \"../../interfaces/telemetry\";\nimport { useIsExistAuthentication, useRefineContext } from \"..\";\n\n// It reads and updates from package.json during build. ref: tsup.config.ts\nconst REFINE_VERSION = \"4.42.4\";\n\nexport const useTelemetryData = (): ITelemetryData => {\n    const auth = useIsExistAuthentication();\n    const auditLogContext = useContext(AuditLogContext);\n    const liveContext = useContext(LiveContext);\n    const routerContext = useContext(RouterContext);\n    const dataContext = useContext(DataContext);\n    const { i18nProvider } = useContext(TranslationContext);\n    const notificationContext = useContext(NotificationContext);\n    const accessControlContext = useContext(AccessControlContext);\n    const { resources } = useResource();\n    const refineOptions = useRefineContext();\n\n    const auditLog =\n        !!auditLogContext.create ||\n        !!auditLogContext.get ||\n        !!auditLogContext.update;\n\n    const live =\n        !!liveContext?.publish ||\n        !!liveContext?.subscribe ||\n        !!liveContext?.unsubscribe;\n\n    const router =\n        !!routerContext.useHistory ||\n        !!routerContext.Link ||\n        !!routerContext.Prompt ||\n        !!routerContext.useLocation ||\n        !!routerContext.useParams;\n\n    const data = !!dataContext;\n\n    const i18n =\n        !!i18nProvider?.changeLocale ||\n        !!i18nProvider?.getLocale ||\n        !!i18nProvider?.translate;\n\n    const notification =\n        !!notificationContext.close || !!notificationContext.open;\n\n    const accessControl = !!accessControlContext.can;\n\n    const projectId = refineOptions?.options?.projectId;\n\n    return {\n        providers: {\n            auth,\n            auditLog,\n            live,\n            router,\n            data,\n            i18n,\n            notification,\n            accessControl,\n        },\n        version: REFINE_VERSION,\n        resourceCount: resources.length,\n        projectId,\n    };\n};\n","import { IRouterProvider, RouterBindings } from \"src/interfaces\";\n\nexport const checkRouterPropMisuse = (\n    value: IRouterProvider | RouterBindings,\n) => {\n    // check if `routerProvider` prop is passed with legacy properties.\n    // If yes, console.warn the user to use `legacyRuterProvider` prop instead.\n    const bindings = [\"go\", \"parse\", \"back\", \"Link\"];\n\n    // check if `value` contains properties other than `bindings`\n    const otherProps = Object.keys(value).filter(\n        (key) => !bindings.includes(key),\n    );\n\n    const hasOtherProps = otherProps.length > 0;\n\n    if (hasOtherProps) {\n        console.warn(\n            `Unsupported properties are found in \\`routerProvider\\` prop. You provided \\`${otherProps.join(\n                \", \",\n            )}\\`. Supported properties are \\`${bindings.join(\n                \", \",\n            )}\\`. You may wanted to use \\`legacyRouterProvider\\` prop instead.`,\n        );\n\n        return true;\n    }\n\n    return false;\n};\n","import { checkRouterPropMisuse } from \"@definitions/helpers/check-router-prop-misuse\";\nimport React from \"react\";\nimport { RouterBindings } from \"src/interfaces\";\n\nexport const useRouterMisuseWarning = (value?: RouterBindings) => {\n    const warned = React.useRef(false);\n\n    React.useEffect(() => {\n        if (warned.current === false) {\n            if (value) {\n                const warn = checkRouterPropMisuse(value);\n                if (warn) {\n                    warned.current = true;\n                }\n            }\n        }\n    }, [value]);\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport { useCancelNotification, useNotification, useTranslate } from \"@hooks\";\nimport { IUndoableQueue } from \"../../interfaces\";\n\nimport { userFriendlySecond } from \"@definitions/helpers\";\n\nexport const UndoableQueue: React.FC<{\n    notification: IUndoableQueue;\n}> = ({ notification }) => {\n    const translate = useTranslate();\n\n    const { notificationDispatch } = useCancelNotification();\n    const { open } = useNotification();\n\n    const [timeoutId, setTimeoutId] = useState<number | undefined>();\n\n    const cancelNotification = () => {\n        if (notification.isRunning === true) {\n            if (notification.seconds === 0) {\n                notification.doMutation();\n            }\n            if (!notification.isSilent) {\n                open?.({\n                    key: `${notification.id}-${notification.resource}-notification`,\n                    type: \"progress\",\n                    message: translate(\n                        \"notifications.undoable\",\n                        {\n                            seconds: userFriendlySecond(notification.seconds),\n                        },\n                        `You have ${userFriendlySecond(\n                            notification.seconds,\n                        )} seconds to undo`,\n                    ),\n                    cancelMutation: notification.cancelMutation,\n                    undoableTimeout: userFriendlySecond(notification.seconds),\n                });\n            }\n\n            if (notification.seconds > 0) {\n                if (timeoutId) {\n                    clearTimeout(timeoutId);\n                }\n\n                const newTimeoutId = setTimeout(() => {\n                    notificationDispatch({\n                        type: ActionTypes.DECREASE_NOTIFICATION_SECOND,\n                        payload: {\n                            id: notification.id,\n                            seconds: notification.seconds,\n                            resource: notification.resource,\n                        },\n                    });\n                }, 1000) as unknown as number;\n\n                setTimeoutId(newTimeoutId);\n            }\n        }\n    };\n\n    useEffect(() => {\n        cancelNotification();\n    }, [notification]);\n\n    return null;\n};\n","import React, { useEffect } from \"react\";\n\nimport {\n    useRefineContext,\n    useRouterContext,\n    useTranslate,\n    useWarnAboutChange,\n} from \"@hooks\";\nimport { LayoutProps, TitleProps } from \"../../interfaces\";\n\nexport interface LayoutWrapperProps {\n    /**\n     * Outer component that renders other components\n     * @default *\n     */\n    Layout?: React.FC<LayoutProps>;\n    /**\n     * [Custom sider to use](/api-reference/core/components/refine-config.md#sider)\n     * @default *\n     */\n    Sider?: React.FC;\n    /**\n     * [Custom header to use](/api-reference/core/components/refine-config.md#header)\n     * @default *\n     */\n    Header?: React.FC;\n    /**\n     * [Custom title to use](/api-reference/core/components/refine-config.md#title)\n     * @default *\n     */\n    Title?: React.FC<TitleProps>;\n    /**\n     * [Custom footer to use](/api-reference/core/components/refine-config.md#footer)\n     * @default *\n     */\n    Footer?: React.FC;\n    /**\n     * [Custom off layout area to use](/api-reference/core/components/refine-config.md#offlayoutarea)\n     * @default *\n     */\n    OffLayoutArea?: React.FC;\n    children: React.ReactNode;\n}\n\n/**\n * `<LayoutWrapper>` wraps its contents in **refine's** layout with all customizations made in {@link https://refine.dev/docs/core/components/refine-config `<Refine>`} component.\n * It is the default layout used in resource pages.\n * It can be used in custom pages to use global layout.\n *\n * @see {@link https://refine.dev/docs/core/components/layout-wrapper} for more details.\n *\n * @deprecated This component is obsolete and only works with the legacy router providers.\n */\nexport const LayoutWrapper: React.FC<LayoutWrapperProps> = ({\n    children,\n    Layout: LayoutFromProps,\n    Sider: SiderFromProps,\n    Header: HeaderFromProps,\n    Title: TitleFromProps,\n    Footer: FooterFromProps,\n    OffLayoutArea: OffLayoutAreaFromProps,\n}) => {\n    const { Layout, Footer, Header, Sider, Title, OffLayoutArea } =\n        useRefineContext();\n\n    const LayoutToRender = LayoutFromProps ?? Layout;\n\n    return (\n        <LayoutToRender\n            Sider={SiderFromProps ?? Sider}\n            Header={HeaderFromProps ?? Header}\n            Footer={FooterFromProps ?? Footer}\n            Title={TitleFromProps ?? Title}\n            OffLayoutArea={OffLayoutAreaFromProps ?? OffLayoutArea}\n        >\n            {children}\n            <UnsavedPrompt />\n        </LayoutToRender>\n    );\n};\n\nconst UnsavedPrompt: React.FC = () => {\n    const { Prompt } = useRouterContext();\n\n    const translate = useTranslate();\n\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n\n    const warnWhenListener = (e: {\n        preventDefault: () => void;\n        returnValue: string;\n    }) => {\n        e.preventDefault();\n\n        e.returnValue = translate(\n            \"warnWhenUnsavedChanges\",\n            \"Are you sure you want to leave? You have unsaved changes.\",\n        );\n\n        return e.returnValue;\n    };\n\n    useEffect(() => {\n        if (warnWhen) {\n            window.addEventListener(\"beforeunload\", warnWhenListener);\n        }\n\n        return window.removeEventListener(\"beforeunload\", warnWhenListener);\n    }, [warnWhen]);\n\n    return (\n        <Prompt\n            when={warnWhen}\n            message={translate(\n                \"warnWhenUnsavedChanges\",\n                \"Are you sure you want to leave? You have unsaved changes.\",\n            )}\n            setWarnWhen={setWarnWhen}\n        />\n    );\n};\n","import React from \"react\";\n\nimport {\n    useGo,\n    useNavigation,\n    useParsed,\n    useRouterContext,\n    useRouterType,\n    useIsAuthenticated,\n} from \"@hooks\";\nimport { useActiveAuthProvider } from \"@definitions/index\";\nimport { GoConfig } from \"src/interfaces\";\n\n/**\n * This hook is used to avoid React's invalid setState call warning.\n * When `go` is called during the render phase, it's updating the internal router state before the render phase is finished.\n * This causes React to throw an error. This hook is used to defer the `go` call to the effect calls.\n */\nconst useDeferredGo = () => {\n    const go = useGo();\n\n    const [config, setConfig] = React.useState<GoConfig | undefined>(undefined);\n\n    React.useEffect(() => {\n        if (config) {\n            go(config);\n        }\n    }, [config]);\n\n    const cb = React.useCallback(\n        (props: GoConfig) => {\n            if (!config) {\n                setConfig(props);\n            }\n        },\n        [config],\n    );\n\n    return cb;\n};\n\nexport type AuthenticatedCommonProps = {\n    /**\n     * Whether to redirect user if not logged in or not.\n     * If not set, user will be redirected to `redirectTo` property of the `check` function's response.\n     * This behavior is only available for new auth providers.\n     * Legacy auth providers will redirect to `/login` by default if this property is not set.\n     * If set to a string, user will be redirected to that string.\n     *\n     * This property only works if `fallback` is **not set**.\n     */\n    redirectOnFail?: string | true;\n    /**\n     * Whether to append current path to search params of the redirect url at `to` property.\n     *\n     * By default, `to` parameter is used by successful invocations of the `useLogin` hook.\n     * If `to` present, it will be used as the redirect url after successful login.\n     */\n    appendCurrentPathToQuery?: boolean;\n    /**\n     * Content to show if user is not logged in.\n     */\n    fallback?: React.ReactNode;\n    /**\n     * Content to show while checking whether user is logged in or not.\n     */\n    loading?: React.ReactNode;\n    /**\n     * Content to show if user is logged in\n     */\n    children?: React.ReactNode;\n};\n\nexport type LegacyAuthenticatedProps = {\n    v3LegacyAuthProviderCompatible: true;\n} & AuthenticatedCommonProps;\n\nexport type AuthenticatedProps = {\n    v3LegacyAuthProviderCompatible?: false;\n} & AuthenticatedCommonProps;\n\nexport function Authenticated(\n    props: LegacyAuthenticatedProps,\n): JSX.Element | null;\n\nexport function Authenticated(props: AuthenticatedProps): JSX.Element | null;\n\n/**\n * `<Authenticated>` is the component form of {@link https://refine.dev/docs/api-reference/core/hooks/auth/useAuthenticated `useAuthenticated`}. It internally uses `useAuthenticated` to provide it's functionality.\n *\n * @see {@link https://refine.dev/docs/core/components/auth/authenticated `<Authenticated>`} component for more details.\n */\nexport function Authenticated({\n    redirectOnFail = true,\n    appendCurrentPathToQuery = true,\n    children,\n    fallback: fallbackContent,\n    loading: loadingContent,\n}: AuthenticatedProps | LegacyAuthenticatedProps): JSX.Element | null {\n    const activeAuthProvider = useActiveAuthProvider();\n    const routerType = useRouterType();\n\n    const hasAuthProvider = Boolean(activeAuthProvider?.isProvided);\n    const isLegacyAuth = Boolean(activeAuthProvider?.isLegacy);\n    const isLegacyRouter = routerType === \"legacy\";\n\n    const parsed = useParsed();\n    const go = useGo();\n    const deferredGo = useDeferredGo();\n    const { replace } = useNavigation();\n    const { useLocation } = useRouterContext();\n    const legacyLocation = useLocation();\n\n    const {\n        isLoading,\n        isFetching,\n        // isRefetching,\n        isSuccess,\n        data: {\n            authenticated: isAuthenticatedStatus,\n            redirectTo: authenticatedRedirect,\n        } = {},\n        refetch,\n    } = useIsAuthenticated({\n        v3LegacyAuthProviderCompatible: isLegacyAuth,\n    });\n\n    React.useEffect(() => {\n        /**\n         * Refetch the authentication status if the content is changed (e.g. redirected or updated)\n         *\n         * This is done to avoid re-rendering the wrappers with the same content.\n         */\n\n        refetch();\n    }, [children, fallbackContent]);\n\n    const state = React.useRef<{\n        status: \"initial\" | \"pending\" | \"settled\";\n        content: React.ReactNode;\n    }>({\n        status: isLoading ? \"initial\" : \"pending\",\n        content: loadingContent ?? null,\n    });\n\n    /**\n     * Update state when fetching the authentication response.\n     */\n    if (isFetching) {\n        state.current.status = \"pending\";\n    } else if (!isFetching) {\n        state.current.status = \"settled\";\n    }\n\n    /**\n     * Authentication status\n     */\n    const isAuthenticated = hasAuthProvider\n        ? isLegacyAuth\n            ? isSuccess\n            : isAuthenticatedStatus\n        : true;\n\n    if (state.current.status === \"settled\") {\n        /**\n         * If the state is settled, and query is resolved.\n         */\n        if (isAuthenticated) {\n            /**\n             * If user is authenticated, show the children.\n             */\n            state.current.content = <>{children ?? null}</>;\n        } else if (typeof fallbackContent !== \"undefined\") {\n            /**\n             * If user is not authenticated, and `fallback` is present, show the fallback content.\n             */\n            state.current.content = <>{fallbackContent}</>;\n        } else {\n            /**\n             * If there's no `fallback` content, redirect will be applied.\n             */\n\n            /**\n             * Current pathname to append to the redirect url.\n             */\n            const pathname = `${\n                isLegacyRouter ? legacyLocation?.pathname : parsed.pathname\n            }`.replace(/(\\?.*|#.*)$/, \"\");\n\n            /**\n             * Redirect url to use, if `redirectOnFail` is set to a string,\n             * it will be used instead of `redirectTo` property of the `check` function's response.\n             */\n            const appliedRedirect = isLegacyAuth\n                ? typeof redirectOnFail === \"string\"\n                    ? redirectOnFail\n                    : \"/login\"\n                : typeof redirectOnFail === \"string\"\n                ? redirectOnFail\n                : (authenticatedRedirect as string | undefined);\n\n            /**\n             * Redirect if `appliedRedirect` is set.\n             */\n            if (appliedRedirect) {\n                if (isLegacyRouter) {\n                    const toQuery = appendCurrentPathToQuery\n                        ? `?to=${encodeURIComponent(pathname)}`\n                        : \"\";\n                    replace(`${appliedRedirect}${toQuery}`);\n                } else {\n                    deferredGo({\n                        to: appliedRedirect,\n                        query: appendCurrentPathToQuery\n                            ? {\n                                  to: parsed.params?.to\n                                      ? parsed.params.to\n                                      : go({\n                                            to: pathname,\n                                            options: { keepQuery: true },\n                                            type: \"path\",\n                                        }),\n                              }\n                            : undefined,\n                        type: \"replace\",\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * If there's no `authProvider` set, we don't need to check whether user is logged in or not.\n     */\n    if (!hasAuthProvider) {\n        return <>{children ?? null}</>;\n    }\n\n    /**\n     * Returning the content based on the state, `fallback` or `children`.\n     */\n    return <>{state.current.content}</>;\n}\n","import { useEffect } from \"react\";\nimport { useRouterContext } from \"@hooks\";\nimport { useLegacyAuthContext } from \"@contexts/auth\";\n\nexport const RouteChangeHandler: React.FC = () => {\n    const { useLocation } = useRouterContext();\n\n    const { checkAuth } = useLegacyAuthContext();\n    const location = useLocation();\n\n    useEffect(() => {\n        checkAuth?.().catch(() => false);\n    }, [location?.pathname]);\n\n    return null;\n};\n","import React, { useEffect } from \"react\";\n\nimport { useCan, useResource } from \"@hooks\";\nimport { BaseKey, IResourceItem, ITreeMenu } from \"../../interfaces\";\n\ntype CanParams = {\n    resource?: IResourceItem & { children?: ITreeMenu[] };\n    id?: BaseKey;\n    [key: string]: any;\n};\n\ntype OnUnauthorizedProps = {\n    resource?: string;\n    reason?: string;\n    action: string;\n    params: CanParams;\n};\n\ntype CanAccessBaseProps = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource?: string;\n    /**\n     * Intended action on resource\n     */\n    action: string;\n    /**\n     * Parameters associated with the resource\n     * @type { resource?: [IResourceItem](https://refine.dev/docs/api-reference/core/interfaceReferences/#canparams), id?: [BaseKey](https://refine.dev/docs/api-reference/core/interfaceReferences/#basekey), [key: string]: any }\n     */\n    params?: CanParams;\n    /**\n     * Content to show if access control returns `false`\n     */\n    fallback?: React.ReactNode;\n    /**\n     * Callback function to be called if access control returns `can: false`\n     */\n    onUnauthorized?: (props: OnUnauthorizedProps) => void;\n    children: React.ReactNode;\n};\n\ntype CanAccessWithoutParamsProps = {\n    [key in Exclude<\n        keyof CanAccessBaseProps,\n        \"fallback\" | \"children\"\n    >]?: undefined;\n} & {\n    [key in \"fallback\" | \"children\"]?: CanAccessBaseProps[key];\n};\n\nexport type CanAccessProps = CanAccessBaseProps | CanAccessWithoutParamsProps;\n\nexport const CanAccess: React.FC<CanAccessProps> = ({\n    resource: resourceFromProp,\n    action: actionFromProp,\n    params: paramsFromProp,\n    fallback,\n    onUnauthorized,\n    children,\n    ...rest\n}) => {\n    const {\n        resource,\n        id: idFromRoute,\n        action: actionFromRoute,\n    } = useResource(resourceFromProp);\n    const { identifier } = useResource();\n\n    const getDefaultId = () => {\n        const idFromPropsOrRoute = paramsFromProp?.id ?? idFromRoute;\n\n        if (resourceFromProp && resourceFromProp !== identifier) {\n            return paramsFromProp?.id;\n        }\n\n        return idFromPropsOrRoute;\n    };\n    const defaultId = getDefaultId();\n\n    const resourceName = resourceFromProp ?? resource?.name;\n    const action = actionFromProp ?? actionFromRoute ?? \"\";\n    const params = paramsFromProp ?? {\n        id: defaultId,\n        resource: resource,\n    };\n\n    const { data } = useCan({\n        resource: resourceName,\n        action,\n        params,\n    });\n\n    useEffect(() => {\n        if (onUnauthorized && data?.can === false) {\n            onUnauthorized({\n                resource: resourceName,\n                action,\n                reason: data?.reason,\n                params,\n            });\n        }\n    }, [data?.can]);\n\n    if (data?.can) {\n        if (React.isValidElement(children)) {\n            const Children = React.cloneElement(children, rest);\n            return Children;\n        }\n\n        return <>{children}</>;\n    }\n\n    if (data?.can === false) {\n        return <>{fallback ?? null}</>;\n    }\n\n    return null;\n};\n","import React, { useEffect } from \"react\";\nimport { CSSRules } from \"./styles\";\n\nexport const GitHubBanner = () => {\n    useEffect(() => {\n        const styleTag = document.createElement(\"style\");\n        document.head.appendChild(styleTag);\n        CSSRules.forEach((rule) =>\n            styleTag.sheet?.insertRule(rule, styleTag.sheet.cssRules.length),\n        );\n    }, []);\n\n    return (\n        <div\n            className=\"banner\"\n            style={{\n                flexDirection: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                position: \"relative\",\n                padding: \"8px 16px\",\n                backgroundColor: \"#0d0d0d\",\n                borderBottom: \"1px solid rgba(255, 255, 255, 0.15)\",\n            }}\n        >\n            {/* sider offset for center alignment */}\n            <div\n                style={{\n                    width: \"200px\",\n                }}\n            />\n            <a\n                className=\"gh-link\"\n                href=\"https://s.refine.dev/github-support\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n            >\n                <div\n                    className=\"content\"\n                    style={{\n                        position: \"relative\",\n                        zIndex: 2,\n                        color: \"#fff\",\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        gap: \"8px\",\n                    }}\n                >\n                    <span\n                        className=\"wizard\"\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            width: \"32px\",\n                            height: \"32px\",\n                            fontSize: \"32px\",\n                            lineHeight: \"32px\",\n                        }}\n                    >\n                        🧙‍♂️\n                    </span>\n                    <span\n                        className=\"text\"\n                        style={{\n                            padding: \"4px 0\",\n                            fontSize: \"16px\",\n                            lineHeight: \"24px\",\n                            textShadow: \"0px 0px 4px rgba(255, 255, 255, 0.5)\",\n                        }}\n                    >\n                        refine grants your wishes! Please give us a ⭐️ on\n                        GitHub to keep the magic going.\n                    </span>\n                </div>\n            </a>\n        </div>\n    );\n};\n","export const CSSRules = [\n    `\n    .banner {\n        display: flex;\n        @media (max-width: 1000px) {\n            display: none;\n        }\n    }`,\n    `\n    .banner::before,\n    .banner::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n    }\n    `,\n    `\n    .banner::before {\n        background-image: linear-gradient(\n            270deg,\n            rgba(255, 76, 77, 0.35) 0%,\n            rgba(255, 153, 51, 0.35) 12.5%,\n            rgba(255, 191, 0, 0.35) 25%,\n            rgba(38, 217, 127, 0.35) 37.5%,\n            rgba(71, 235, 235, 0.35) 50%,\n            rgba(0, 128, 255, 0.35) 62.5%,\n            rgba(51, 51, 255, 0.35) 75%,\n            rgba(128, 0, 255, 0.35) 87.5%,\n            rgba(237, 94, 201, 0.35) 100%\n        );\n        background-position: 0 0;\n        background-size: 200% 100%;\n        background-repeat: repeat-x;\n        animation: bgpos 4s linear infinite;\n      }\n    `,\n    `\n    .banner::after {\n        background: linear-gradient(\n          180deg,\n          rgba(13, 13, 13, 0.85) 0%,\n          rgba(13, 13, 13, 0) 100%\n        );\n    }\n    `,\n    `\n    @keyframes bgpos {\n        0% {\n            background-position: 0 0;\n        }\n\n        100% {\n            background-position: -200% 0;\n        }\n    }\n    `,\n    `\n    .gh-link, .gh-link:hover, .gh-link:active, .gh-link:visited, .gh-link:focus {\n        text-decoration: none;\n        z-index: 9;\n    }\n    `,\n];\n","export type { RefineBreadcrumbProps } from \"./types\";\n\nexport type {\n    RefineButtonCommonProps,\n    RefineButtonDataProps,\n    RefineButtonLinkingProps,\n    RefineButtonResourceProps,\n    RefineButtonSingleProps,\n    RefineCloneButtonProps,\n    RefineCreateButtonProps,\n    RefineDeleteButtonProps,\n    RefineEditButtonProps,\n    RefineExportButtonProps,\n    RefineImportButtonProps,\n    RefineListButtonProps,\n    RefineRefreshButtonProps,\n    RefineSaveButtonProps,\n    RefineShowButtonProps,\n} from \"./types\";\n\nexport type {\n    RefineCrudCreateProps,\n    RefineCrudEditProps,\n    RefineCrudListProps,\n    RefineCrudShowProps,\n    ActionButtonRenderer,\n} from \"./types\";\n\nexport type { RefineErrorPageProps, RefineReadyPageProps } from \"./types\";\n\nexport type {\n    RefineFieldBooleanProps,\n    RefineFieldCommonProps,\n    RefineFieldDateProps,\n    RefineFieldEmailProps,\n    RefineFieldFileProps,\n    RefineFieldImageProps,\n    RefineFieldUrlProps,\n    RefineFieldMarkdownProps,\n    RefineFieldNumberProps,\n    RefineFieldTagProps,\n    RefineFieldTextProps,\n    RefineFieldTooltipProps,\n} from \"./types\";\n\nexport type {\n    RefineLayoutFooterProps,\n    RefineLayoutHeaderProps,\n    RefineLayoutLayoutProps,\n    RefineLayoutSiderProps,\n    RefineLayoutTitleProps,\n    RefineThemedLayoutSiderProps,\n    RefineThemedLayoutHeaderProps,\n    RefineThemedLayoutProps,\n    RefineLayoutThemedTitleProps,\n    RefineThemedLayoutV2Props,\n    RefineThemedLayoutV2SiderProps,\n    RefineThemedLayoutV2HeaderProps,\n} from \"./types\";\n\nexport { RefineButtonTestIds } from \"./ids\";\nexport * from \"./classNames\";\n","export const RefineButtonTestIds = {\n    CloneButton: \"refine-clone-button\",\n    DeleteButton: \"refine-delete-button\",\n    EditButton: \"refine-edit-button\",\n    SaveButton: \"refine-save-button\",\n    CreateButton: \"refine-create-button\",\n    ImportButton: \"refine-import-button\",\n    ExportButton: \"refine-export-button\",\n    ListButton: \"refine-list-button\",\n    RefreshButton: \"refine-refresh-button\",\n    ShowButton: \"refine-show-button\",\n};\n","export const RefinePageHeaderClassNames = {\n    Title: \"refine-pageHeader-title\",\n    SubTitle: \"refine-pageHeader-subTitle\",\n};\n\nexport const RefineButtonClassNames = {\n    CloneButton: \"refine-clone-button\",\n    DeleteButton: \"refine-delete-button\",\n    EditButton: \"refine-edit-button\",\n    SaveButton: \"refine-save-button\",\n    CreateButton: \"refine-create-button\",\n    ImportButton: \"refine-import-button\",\n    ExportButton: \"refine-export-button\",\n    ListButton: \"refine-list-button\",\n    RefreshButton: \"refine-refresh-button\",\n    ShowButton: \"refine-show-button\",\n};\n","import \"./types/theme\";\n\nexport * from \"./components\";\nexport * from \"./providers\";\nexport * from \"./hooks\";\nexport * from \"./theme\";\nexport * from \"./definitions\";\nexport * from \"./contexts\";\n","import React from \"react\";\nimport { RingProgress, Text } from \"@mantine/core\";\n\nexport type RingCountdownProps = {\n    undoableTimeout: number;\n};\n\nexport const RingCountdown: React.FC<RingCountdownProps> = ({\n    undoableTimeout,\n}) => {\n    return (\n        <RingProgress\n            size={55}\n            thickness={4}\n            roundCaps\n            sections={[{ value: undoableTimeout * 20, color: \"primary\" }]}\n            label={\n                <Text weight={700} align=\"center\">\n                    {undoableTimeout}\n                </Text>\n            }\n        />\n    );\n};\n","import React from \"react\";\nimport { Text } from \"@mantine/core\";\n\nimport { TextFieldProps } from \"../types\";\n\n/**\n * This field lets you show basic text. It uses Mantine {@link https://mantine.dev/core/text `<Text>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/fields/text} for more details.\n */\nexport const TextField: React.FC<TextFieldProps> = ({ value, ...rest }) => {\n    return <Text {...rest}>{value}</Text>;\n};\n","import React from \"react\";\nimport { Chip } from \"@mantine/core\";\n\nimport { TagFieldProps } from \"../types\";\n\n/**\n * This field lets you display a value in a tag. It uses Mantine {@link https://mantine.dev/core/chip `<Chip>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/fields/tag} for more details.\n */\nexport const TagField: React.FC<TagFieldProps> = ({ value, ...rest }) => {\n    return (\n        <Chip checked={false} {...rest}>\n            {value?.toString()}\n        </Chip>\n    );\n};\n","import React from \"react\";\nimport { Anchor } from \"@mantine/core\";\n\nimport { EmailFieldProps } from \"../types\";\n\n/**\n * This field is used to display email values. It uses the {@link https://mantine.dev/core/text `<Text>` }\n * and {@link https://mantine.dev/core/anchor <Anchor>`} components from Mantine.\n *\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/fields/email} for more details.\n */\nexport const EmailField: React.FC<EmailFieldProps> = ({ value, ...rest }) => {\n    return (\n        <Anchor href={`mailto:${value}`} {...rest}>\n            {value}\n        </Anchor>\n    );\n};\n","import React from \"react\";\nimport { Tooltip } from \"@mantine/core\";\nimport { IconX, IconCheck } from \"@tabler/icons\";\n\nimport { BooleanFieldProps } from \"../types\";\n\n/**\n * This field is used to display boolean values. It uses the {@link https://mantine.dev/core/tooltip `<Tooltip>`} values from Mantine.\n *\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/fields/boolean} for more details.\n */\nexport const BooleanField: React.FC<BooleanFieldProps> = ({\n    value,\n    valueLabelTrue = \"true\",\n    valueLabelFalse = \"false\",\n    trueIcon,\n    falseIcon,\n    svgIconProps,\n    ...rest\n}) => {\n    return (\n        <Tooltip label={value ? valueLabelTrue : valueLabelFalse} {...rest}>\n            <span>\n                {value\n                    ? trueIcon ?? <IconCheck size={18} {...svgIconProps} />\n                    : falseIcon ?? <IconX size={18} {...svgIconProps} />}\n            </span>\n        </Tooltip>\n    );\n};\n","import React from \"react\";\n\nimport dayjs from \"dayjs\";\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat\";\n\nimport { Text } from \"@mantine/core\";\n\ndayjs.extend(LocalizedFormat);\n\nconst defaultLocale = dayjs.locale();\n\nimport { DateFieldProps } from \"../types\";\n\n/**\n * This field is used to display dates. It uses {@link https://day.js.org/docs/en/display/format `Day.js`} to display date format and\n * Mantine {@link https://mantine.dev/core/text `<Text>`} component\n *\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/fields/date} for more details.\n */\nexport const DateField: React.FC<DateFieldProps> = ({\n    value,\n    locales,\n    format: dateFormat = \"L\",\n    ...rest\n}) => {\n    return (\n        <Text {...rest}>\n            {dayjs(value)\n                .locale(locales || defaultLocale)\n                .format(dateFormat)}\n        </Text>\n    );\n};\n","import React from \"react\";\n\nimport { UrlField } from \"@components\";\n\nimport { FileFieldProps } from \"../types\";\n\nexport const FileField: React.FC<FileFieldProps> = ({\n    title,\n    src,\n    ...rest\n}) => {\n    return (\n        <UrlField value={src} title={title} {...rest}>\n            {title ?? src}\n        </UrlField>\n    );\n};\n","import React from \"react\";\nimport { Anchor } from \"@mantine/core\";\n\nimport { UrlFieldProps } from \"../types\";\n\n/**\n * This field is used to display email values. It uses the {@link https://mantine.dev/core/text `<Text>` }\n * and {@link https://mantine.dev/core/anchor <Anchor>`} components from Mantine.\n * You can pass a URL in its `value` property and you can show a text in its place by passing any `children`.\n *\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/fields/url} for more details.\n */\nexport const UrlField: React.FC<UrlFieldProps> = ({\n    children,\n    value,\n    title,\n    ...rest\n}) => {\n    return (\n        <Anchor href={value} title={title} {...rest}>\n            {children ?? value}\n        </Anchor>\n    );\n};\n","import React from \"react\";\nimport { Text } from \"@mantine/core\";\n\nimport { NumberFieldProps } from \"../types\";\n\nfunction toLocaleStringSupportsOptions() {\n    return !!(\n        typeof Intl == \"object\" &&\n        Intl &&\n        typeof Intl.NumberFormat == \"function\"\n    );\n}\n/**\n * This field is used to display a number formatted according to the browser locale, right aligned. and uses {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl `Intl`} to display date format\n * and Mantine {@link https://mantine.dev/core/text `<Text>`} component.\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/fields/number/} for more details.\n */\nexport const NumberField: React.FC<NumberFieldProps> = ({\n    value,\n    locale,\n    options,\n    ...rest\n}) => {\n    const number = Number(value);\n\n    return (\n        <Text {...rest}>\n            {toLocaleStringSupportsOptions()\n                ? number.toLocaleString(locale, options)\n                : number}\n        </Text>\n    );\n};\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\n\nimport { MarkdownFieldProps } from \"../types\";\n\n/**\n * This field lets you display markdown content. It supports {@link https://github.github.com/gfm/ GitHub Flavored Markdown}.\n *\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/fields/markdown} for more details.\n */\nexport const MarkdownField: React.FC<MarkdownFieldProps> = ({\n    value = \"\",\n    ...rest\n}) => {\n    return (\n        <ReactMarkdown plugins={[gfm]} {...rest}>\n            {value}\n        </ReactMarkdown>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useNavigation,\n    useTranslate,\n    useCan,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { ActionIcon, Anchor, Button } from \"@mantine/core\";\nimport { IconSquarePlus } from \"@tabler/icons\";\n\nimport { mapButtonVariantToActionIconVariant } from \"@definitions/button\";\nimport { CreateButtonProps } from \"../types\";\n\nexport const CreateButton: React.FC<CreateButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { createUrl: generateCreateUrl } = useNavigation();\n\n    const { resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"create\",\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n        params: {\n            resource,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const createUrl = resource ? generateCreateUrl(resource, meta) : \"\";\n\n    const { variant, styles, ...commonProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <Anchor\n            component={ActiveLink as any}\n            to={createUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            {hideText ? (\n                <ActionIcon\n                    title={disabledTitle()}\n                    disabled={data?.can === false}\n                    color=\"primary\"\n                    {...(variant\n                        ? {\n                              variant:\n                                  mapButtonVariantToActionIconVariant(variant),\n                          }\n                        : { variant: \"filled\" })}\n                    data-testid={RefineButtonTestIds.CreateButton}\n                    className={RefineButtonClassNames.CreateButton}\n                    {...commonProps}\n                >\n                    <IconSquarePlus size={18} {...svgIconProps} />\n                </ActionIcon>\n            ) : (\n                <Button\n                    disabled={data?.can === false}\n                    leftIcon={<IconSquarePlus size={18} {...svgIconProps} />}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.CreateButton}\n                    className={RefineButtonClassNames.CreateButton}\n                    color=\"primary\"\n                    variant=\"filled\"\n                    {...rest}\n                >\n                    {children ?? translate(\"buttons.create\", \"Create\")}\n                </Button>\n            )}\n        </Anchor>\n    );\n};\n","import { ActionIconVariant, ButtonVariant } from \"@mantine/core\";\n\nexport const mapButtonVariantToActionIconVariant = (\n    variant?: ButtonVariant,\n): ActionIconVariant | undefined => {\n    switch (variant) {\n        case \"white\":\n            return \"default\";\n        default:\n            return variant;\n    }\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { ActionIcon, Anchor, Button } from \"@mantine/core\";\nimport { IconPencil } from \"@tabler/icons\";\n\nimport { mapButtonVariantToActionIconVariant } from \"@definitions/button\";\nimport { EditButtonProps } from \"../types\";\n\n/**\n * `<EditButton>` uses Mantine {@link https://mantine.dev/core/button `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#edit `edit`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the edit page with the record id route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/buttons/edit-button} for more details.\n */\nexport const EditButton: React.FC<EditButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n    const translate = useTranslate();\n\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { editUrl: generateEditUrl } = useNavigation();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"edit\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const editUrl =\n        resource && (recordItemId ?? id)\n            ? generateEditUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    const { variant, styles, ...commonProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <Anchor\n            component={ActiveLink as any}\n            to={editUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            {hideText ? (\n                <ActionIcon\n                    title={disabledTitle()}\n                    disabled={data?.can === false}\n                    data-testid={RefineButtonTestIds.EditButton}\n                    className={RefineButtonClassNames.EditButton}\n                    {...(variant\n                        ? {\n                              variant:\n                                  mapButtonVariantToActionIconVariant(variant),\n                          }\n                        : { variant: \"default\" })}\n                    {...commonProps}\n                >\n                    <IconPencil size={18} {...svgIconProps} />\n                </ActionIcon>\n            ) : (\n                <Button\n                    variant=\"default\"\n                    disabled={data?.can === false}\n                    leftIcon={<IconPencil size={18} {...svgIconProps} />}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.EditButton}\n                    className={RefineButtonClassNames.EditButton}\n                    {...rest}\n                >\n                    {children ?? translate(\"buttons.edit\", \"Edit\")}\n                </Button>\n            )}\n        </Anchor>\n    );\n};\n","import React, { useContext, useState } from \"react\";\nimport {\n    useDelete,\n    useTranslate,\n    useMutationMode,\n    useCan,\n    useResource,\n    pickNotDeprecated,\n    useWarnAboutChange,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { Group, Text, Button, Popover, ActionIcon } from \"@mantine/core\";\nimport { IconTrash } from \"@tabler/icons\";\n\nimport { mapButtonVariantToActionIconVariant } from \"@definitions/button\";\nimport { DeleteButtonProps } from \"../types\";\n\n/**\n * `<DeleteButton>` uses Mantine {@link https://mantine.dev/core/button `<Button>`} and {@link https://mantine.dev/core/modal `<Modal>`} components.\n * When you try to delete something, a dialog modal shows up and asks for confirmation. When confirmed it executes the `useDelete` method provided by your `dataProvider`.\n *\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/buttons/delete-button} for more details.\n */\nexport const DeleteButton: React.FC<DeleteButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    onSuccess,\n    mutationMode: mutationModeProp,\n    children,\n    successNotification,\n    errorNotification,\n    hideText = false,\n    accessControl,\n    meta,\n    metaData,\n    dataProviderName,\n    confirmTitle,\n    confirmOkText,\n    confirmCancelText,\n    svgIconProps,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n    const translate = useTranslate();\n\n    const { id, resource, identifier } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { mutationMode: mutationModeContext } = useMutationMode();\n\n    const mutationMode = mutationModeProp ?? mutationModeContext;\n\n    const { mutate, isLoading, variables } = useDelete();\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"delete\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const [opened, setOpened] = useState(false);\n\n    const onConfirm = () => {\n        if ((recordItemId ?? id) && identifier) {\n            setWarnWhen(false);\n            setOpened(false);\n            mutate(\n                {\n                    id: recordItemId ?? id ?? \"\",\n                    resource: identifier,\n                    mutationMode,\n                    successNotification,\n                    errorNotification,\n                    meta: pickNotDeprecated(meta, metaData),\n                    metaData: pickNotDeprecated(meta, metaData),\n                    dataProviderName,\n                },\n                {\n                    onSuccess: (value) => {\n                        onSuccess && onSuccess(value);\n                    },\n                },\n            );\n        }\n    };\n\n    const { variant, styles, ...commonProps } = rest;\n\n    const { setWarnWhen } = useWarnAboutChange();\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <Popover\n            opened={opened}\n            onChange={setOpened}\n            withArrow\n            withinPortal\n            disabled={\n                typeof rest?.disabled !== \"undefined\"\n                    ? rest.disabled\n                    : data?.can === false\n            }\n        >\n            <Popover.Target>\n                {hideText ? (\n                    <ActionIcon\n                        color=\"red\"\n                        onClick={() => setOpened((o) => !o)}\n                        disabled={isLoading || data?.can === false}\n                        loading={\n                            (recordItemId ?? id) === variables?.id && isLoading\n                        }\n                        data-testid={RefineButtonTestIds.DeleteButton}\n                        className={RefineButtonClassNames.DeleteButton}\n                        {...(variant\n                            ? {\n                                  variant:\n                                      mapButtonVariantToActionIconVariant(\n                                          variant,\n                                      ),\n                              }\n                            : { variant: \"outline\" })}\n                        {...commonProps}\n                    >\n                        <IconTrash size={18} {...svgIconProps} />\n                    </ActionIcon>\n                ) : (\n                    <Button\n                        color=\"red\"\n                        variant=\"outline\"\n                        onClick={() => setOpened((o) => !o)}\n                        disabled={isLoading || data?.can === false}\n                        loading={\n                            (recordItemId ?? id) === variables?.id && isLoading\n                        }\n                        title={disabledTitle()}\n                        leftIcon={<IconTrash size={18} {...svgIconProps} />}\n                        data-testid={RefineButtonTestIds.DeleteButton}\n                        className={RefineButtonClassNames.DeleteButton}\n                        {...rest}\n                    >\n                        {children ?? translate(\"buttons.delete\", \"Delete\")}\n                    </Button>\n                )}\n            </Popover.Target>\n            <Popover.Dropdown py=\"xs\">\n                <Text size=\"sm\" weight=\"bold\">\n                    {confirmTitle ??\n                        translate(\"buttons.confirm\", \"Are you sure?\")}\n                </Text>\n                <Group position=\"center\" noWrap spacing=\"xs\" mt=\"xs\">\n                    <Button\n                        onClick={() => setOpened(false)}\n                        variant=\"default\"\n                        size=\"xs\"\n                    >\n                        {confirmCancelText ??\n                            translate(\"buttons.cancel\", \"Cancel\")}\n                    </Button>\n                    <Button color=\"red\" onClick={onConfirm} autoFocus size=\"xs\">\n                        {confirmOkText ?? translate(\"buttons.delete\", \"Delete\")}\n                    </Button>\n                </Group>\n            </Popover.Dropdown>\n        </Popover>\n    );\n};\n","import React from \"react\";\nimport {\n    useTranslate,\n    useResource,\n    useInvalidate,\n    queryKeys,\n    pickDataProvider,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { ActionIcon, Button } from \"@mantine/core\";\nimport { IconRefresh } from \"@tabler/icons\";\n\nimport { mapButtonVariantToActionIconVariant } from \"@definitions/button\";\nimport { RefreshButtonProps } from \"../types\";\n\nimport { useQueryClient } from \"@tanstack/react-query\";\n\n/**\n * `<RefreshButton>` uses Mantine {@link https://mantine.dev/core/button `<Button> `} component.\n * to update the data shown on the page via the {@link https://refine.dev/docs/api-reference/core/hooks/invalidate/useInvalidate `useInvalidate`} hook.\n *\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/buttons/refresh-button} for more details.\n */\nexport const RefreshButton: React.FC<RefreshButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName: propResourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    dataProviderName,\n    svgIconProps,\n    children,\n    onClick,\n    meta: _meta,\n    metaData: _metaData,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const queryClient = useQueryClient();\n    const invalidates = useInvalidate();\n\n    const { resources, identifier, id } = useResource(\n        resourceNameFromProps ?? propResourceNameOrRouteName,\n    );\n\n    const isInvalidating = !!queryClient.isFetching({\n        queryKey: queryKeys(\n            identifier,\n            pickDataProvider(identifier, dataProviderName, resources),\n        ).detail(recordItemId ?? id),\n    });\n\n    const handleInvalidate = () => {\n        invalidates({\n            id: recordItemId ?? id,\n            invalidates: [\"detail\"],\n            dataProviderName,\n            resource: identifier,\n        });\n    };\n\n    const { variant, styles: _styles, ...commonProps } = rest;\n\n    return hideText ? (\n        <ActionIcon\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                onClick ? onClick(e) : handleInvalidate();\n            }}\n            loading={isInvalidating}\n            data-testid={RefineButtonTestIds.RefreshButton}\n            className={RefineButtonClassNames.RefreshButton}\n            {...(variant\n                ? {\n                      variant: mapButtonVariantToActionIconVariant(variant),\n                  }\n                : { variant: \"default\" })}\n            {...commonProps}\n        >\n            <IconRefresh size={18} {...svgIconProps} />\n        </ActionIcon>\n    ) : (\n        <Button\n            variant=\"default\"\n            leftIcon={<IconRefresh size={18} {...svgIconProps} />}\n            loading={isInvalidating}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                onClick ? onClick(e) : handleInvalidate();\n            }}\n            data-testid={RefineButtonTestIds.RefreshButton}\n            className={RefineButtonClassNames.RefreshButton}\n            {...rest}\n        >\n            {children ?? translate(\"buttons.refresh\", \"Refresh\")}\n        </Button>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { ActionIcon, Anchor, Button } from \"@mantine/core\";\nimport { IconEye } from \"@tabler/icons\";\n\nimport { mapButtonVariantToActionIconVariant } from \"@definitions/button\";\nimport { ShowButtonProps } from \"../types\";\n\n/**\n * `<ShowButton>` uses Mantine {@link https://mantine.dev/core/button `<Button> `} component.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#show `show`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when red sirecting the app to the show page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/buttons/show-button} for more details.\n */\nexport const ShowButton: React.FC<ShowButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n    const { showUrl: generateShowUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"show\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const showUrl =\n        resource && (recordItemId || id)\n            ? generateShowUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    const { variant, styles, ...commonProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <Anchor\n            component={ActiveLink as any}\n            to={showUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            {hideText ? (\n                <ActionIcon\n                    {...(variant\n                        ? {\n                              variant:\n                                  mapButtonVariantToActionIconVariant(variant),\n                          }\n                        : { variant: \"default\" })}\n                    disabled={data?.can === false}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.ShowButton}\n                    className={RefineButtonClassNames.ShowButton}\n                    {...commonProps}\n                >\n                    <IconEye size={18} {...svgIconProps} />\n                </ActionIcon>\n            ) : (\n                <Button\n                    variant=\"default\"\n                    disabled={data?.can === false}\n                    leftIcon={<IconEye size={18} {...svgIconProps} />}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.ShowButton}\n                    className={RefineButtonClassNames.ShowButton}\n                    {...rest}\n                >\n                    {children ?? translate(\"buttons.show\", \"Show\")}\n                </Button>\n            )}\n        </Anchor>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    pickNotDeprecated,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { ActionIcon, Anchor, Button } from \"@mantine/core\";\nimport { IconList } from \"@tabler/icons\";\n\nimport { mapButtonVariantToActionIconVariant } from \"@definitions/button\";\nimport { ListButtonProps } from \"../types\";\n\n/**\n * `<ListButton>` is using uses Mantine {@link https://mantine.dev/core/button `<Button> `} component.\n * It uses the  {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#list `list`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the list page route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/buttons/list-button} for more details.\n **/\nexport const ListButton: React.FC<ListButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n    const { listUrl: generateListUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { resource, identifier } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"list\",\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n        params: {\n            resource,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const listUrl = resource ? generateListUrl(resource, meta) : \"\";\n\n    const { variant, styles, ...commonProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <Anchor\n            component={ActiveLink as any}\n            to={listUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            {hideText ? (\n                <ActionIcon\n                    {...(variant\n                        ? {\n                              variant:\n                                  mapButtonVariantToActionIconVariant(variant),\n                          }\n                        : { variant: \"default\" })}\n                    disabled={data?.can === false}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.ListButton}\n                    className={RefineButtonClassNames.ListButton}\n                    {...commonProps}\n                >\n                    <IconList size={18} {...svgIconProps} />\n                </ActionIcon>\n            ) : (\n                <Button\n                    variant=\"default\"\n                    disabled={data?.can === false}\n                    leftIcon={<IconList size={18} {...svgIconProps} />}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.ListButton}\n                    className={RefineButtonClassNames.ListButton}\n                    {...rest}\n                >\n                    {children ??\n                        translate(\n                            `${\n                                identifier ??\n                                resourceNameFromProps ??\n                                resourceNameOrRouteName\n                            }.titles.list`,\n                            getUserFriendlyName(\n                                resource?.meta?.label ??\n                                    resource?.label ??\n                                    identifier ??\n                                    pickNotDeprecated(\n                                        resourceNameFromProps,\n                                        resourceNameOrRouteName,\n                                    ),\n                                \"plural\",\n                            ),\n                        )}\n                </Button>\n            )}\n        </Anchor>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { ActionIcon, Button } from \"@mantine/core\";\nimport { IconFileExport } from \"@tabler/icons\";\n\nimport { mapButtonVariantToActionIconVariant } from \"@definitions/button\";\nimport { ExportButtonProps } from \"../types\";\n\n/**\n * `<ExportButton>` uses Mantine {@link https://mantine.dev/core/button `<Button> `} component with a default export icon and a default text with \"Export\".\n * It only has presentational value.\n *\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/buttons/export-button} for more details.\n */\nexport const ExportButton: React.FC<ExportButtonProps> = ({\n    hideText = false,\n    children,\n    loading = false,\n    svgIconProps,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const { variant, styles, ...commonProps } = rest;\n\n    return hideText ? (\n        <ActionIcon\n            {...(variant\n                ? {\n                      variant: mapButtonVariantToActionIconVariant(variant),\n                  }\n                : { variant: \"default\" })}\n            loading={loading}\n            data-testid={RefineButtonTestIds.ExportButton}\n            className={RefineButtonClassNames.ExportButton}\n            {...commonProps}\n        >\n            <IconFileExport size={18} {...svgIconProps} />\n        </ActionIcon>\n    ) : (\n        <Button\n            variant=\"default\"\n            loading={loading}\n            leftIcon={<IconFileExport size={18} {...svgIconProps} />}\n            data-testid={RefineButtonTestIds.ExportButton}\n            className={RefineButtonClassNames.ExportButton}\n            {...rest}\n        >\n            {children ?? translate(\"buttons.export\", \"Export\")}\n        </Button>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { ActionIcon, Button } from \"@mantine/core\";\nimport { IconDeviceFloppy } from \"@tabler/icons\";\n\nimport { mapButtonVariantToActionIconVariant } from \"@definitions/button\";\nimport { SaveButtonProps } from \"../types\";\n\n/**\n * `<SaveButton>` uses Mantine {@link https://mantine.dev/core/button `<Button> `}.\n * It uses it for presantation purposes only. Some of the hooks that refine has adds features to this button.\n *\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/buttons/save-button} for more details.\n */\nexport const SaveButton: React.FC<SaveButtonProps> = ({\n    hideText = false,\n    svgIconProps,\n    children,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const { variant, styles, ...commonProps } = rest;\n\n    return hideText ? (\n        <ActionIcon\n            {...(variant\n                ? {\n                      variant: mapButtonVariantToActionIconVariant(variant),\n                  }\n                : { variant: \"filled\", color: \"primary\" })}\n            data-testid={RefineButtonTestIds.SaveButton}\n            className={RefineButtonClassNames.SaveButton}\n            {...commonProps}\n        >\n            <IconDeviceFloppy size={18} {...svgIconProps} />\n        </ActionIcon>\n    ) : (\n        <Button\n            variant=\"filled\"\n            leftIcon={<IconDeviceFloppy size={18} {...svgIconProps} />}\n            data-testid={RefineButtonTestIds.SaveButton}\n            className={RefineButtonClassNames.SaveButton}\n            {...rest}\n        >\n            {children ?? translate(\"buttons.save\", \"Save\")}\n        </Button>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { ActionIcon, Anchor, Button } from \"@mantine/core\";\nimport { IconSquarePlus } from \"@tabler/icons\";\n\nimport { mapButtonVariantToActionIconVariant } from \"@definitions/button\";\nimport { CloneButtonProps } from \"../types\";\n\n/**\n * `<CloneButton>` uses Mantine {@link https://mantine.dev/core/button `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#clone `clone`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation useNavigation} under the hood.\n * It can be useful when redirecting the app to the create page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/buttons/clone-button} for more details.\n *\n */\nexport const CloneButton: React.FC<CloneButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const { cloneUrl: generateCloneUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"create\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const cloneUrl =\n        resource && (recordItemId || id)\n            ? generateCloneUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    const { variant, styles, ...commonProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <Anchor\n            component={ActiveLink as any}\n            to={cloneUrl}\n            replace={false}\n            onClick={(e: React.PointerEvent<HTMLButtonElement>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n        >\n            {hideText ? (\n                <ActionIcon\n                    disabled={data?.can === false}\n                    title={disabledTitle()}\n                    {...(variant\n                        ? {\n                              variant:\n                                  mapButtonVariantToActionIconVariant(variant),\n                          }\n                        : { variant: \"default\" })}\n                    data-testid={RefineButtonTestIds.CloneButton}\n                    className={RefineButtonClassNames.CloneButton}\n                    {...commonProps}\n                >\n                    <IconSquarePlus size={18} {...svgIconProps} />\n                </ActionIcon>\n            ) : (\n                <Button\n                    disabled={data?.can === false}\n                    variant=\"default\"\n                    leftIcon={<IconSquarePlus size={18} {...svgIconProps} />}\n                    title={disabledTitle()}\n                    data-testid={RefineButtonTestIds.CloneButton}\n                    className={RefineButtonClassNames.CloneButton}\n                    {...rest}\n                >\n                    {children ?? translate(\"buttons.clone\", \"Clone\")}\n                </Button>\n            )}\n        </Anchor>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\nimport { ActionIcon, Button } from \"@mantine/core\";\nimport { IconFileImport } from \"@tabler/icons\";\n\nimport { mapButtonVariantToActionIconVariant } from \"@definitions/button\";\nimport { ImportButtonProps } from \"../types\";\n\n/**\n * `<ImportButton>` is compatible with the {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useImport/ `useImport`} core hook.\n * It uses uses Mantine {@link https://mantine.dev/core/button `<Button> component`} and native html {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input  `<input>`} element.\n *\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/buttons/import-button} for more details.\n */\nexport const ImportButton: React.FC<ImportButtonProps> = ({\n    inputProps,\n    hideText = false,\n    loading = false,\n    svgIconProps,\n    children,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const { variant, styles, ...commonProps } = rest;\n\n    return (\n        <label htmlFor=\"contained-button-file\">\n            <input {...inputProps} id=\"contained-button-file\" multiple hidden />\n            {hideText ? (\n                <ActionIcon\n                    {...(variant\n                        ? {\n                              variant:\n                                  mapButtonVariantToActionIconVariant(variant),\n                          }\n                        : { variant: \"default\" })}\n                    component=\"span\"\n                    loading={loading}\n                    data-testid={RefineButtonTestIds.ImportButton}\n                    className={RefineButtonClassNames.ImportButton}\n                    {...commonProps}\n                >\n                    <IconFileImport size={18} {...svgIconProps} />\n                </ActionIcon>\n            ) : (\n                <Button\n                    variant=\"default\"\n                    component=\"span\"\n                    leftIcon={<IconFileImport size={18} {...svgIconProps} />}\n                    loading={loading}\n                    data-testid={RefineButtonTestIds.ImportButton}\n                    className={RefineButtonClassNames.ImportButton}\n                    {...rest}\n                >\n                    {children ?? translate(\"buttons.import\", \"Import\")}\n                </Button>\n            )}\n        </label>\n    );\n};\n","import React from \"react\";\nimport { Box, Card, Group, Stack, Title } from \"@mantine/core\";\nimport {\n    useRefineContext,\n    useResource,\n    useUserFriendlyName,\n    useRouterType,\n    useTranslate,\n} from \"@refinedev/core\";\n\nimport { CreateButton, Breadcrumb, CreateButtonProps } from \"@components\";\nimport { ListProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\nexport const List: React.FC<ListProps> = (props) => {\n    const {\n        canCreate,\n        children,\n        createButtonProps: createButtonPropsFromProps,\n        resource: resourceFromProps,\n        wrapperProps,\n        contentProps,\n        headerProps,\n        headerButtonProps,\n        headerButtons: headerButtonsFromProps,\n        breadcrumb: breadcrumbFromProps,\n        title,\n    } = props;\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const { resource, identifier } = useResource(resourceFromProps);\n\n    const isCreateButtonVisible =\n        canCreate ??\n        ((resource?.canCreate ?? !!resource?.create) ||\n            createButtonPropsFromProps);\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const createButtonProps: CreateButtonProps | undefined =\n        isCreateButtonVisible\n            ? ({\n                  size: \"sm\",\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  ...createButtonPropsFromProps,\n              } as const)\n            : undefined;\n\n    const defaultHeaderButtons = isCreateButtonVisible ? (\n        <CreateButton {...createButtonProps} />\n    ) : null;\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const headerButtons = headerButtonsFromProps\n        ? typeof headerButtonsFromProps === \"function\"\n            ? headerButtonsFromProps({\n                  defaultButtons: defaultHeaderButtons,\n                  createButtonProps,\n              })\n            : headerButtonsFromProps\n        : defaultHeaderButtons;\n\n    return (\n        <Card p=\"md\" {...wrapperProps}>\n            <Group position=\"apart\" align=\"center\" {...headerProps}>\n                <Stack spacing=\"xs\">\n                    {breadcrumbComponent}\n                    {title ?? (\n                        <Title\n                            order={3}\n                            transform=\"capitalize\"\n                            className={RefinePageHeaderClassNames.Title}\n                        >\n                            {translate(\n                                `${identifier}.titles.list`,\n                                getUserFriendlyName(\n                                    resource?.meta?.label ??\n                                        resource?.options?.label ??\n                                        resource?.label ??\n                                        identifier,\n                                    \"plural\",\n                                ),\n                            )}\n                        </Title>\n                    )}\n                </Stack>\n                <Group spacing=\"xs\" {...headerButtonProps}>\n                    {headerButtons}\n                </Group>\n            </Group>\n            <Box pt=\"sm\" {...contentProps}>\n                {children}\n            </Box>\n        </Card>\n    );\n};\n","import React from \"react\";\nimport {\n    Box,\n    Card,\n    Group,\n    ActionIcon,\n    Stack,\n    Title,\n    LoadingOverlay,\n} from \"@mantine/core\";\nimport {\n    useBack,\n    useGo,\n    useNavigation,\n    useRefineContext,\n    useResource,\n    useUserFriendlyName,\n    useRouterType,\n    useToPath,\n    useTranslate,\n} from \"@refinedev/core\";\nimport { IconArrowLeft } from \"@tabler/icons\";\n\nimport {\n    DeleteButton,\n    EditButton,\n    ListButton,\n    RefreshButton,\n    Breadcrumb,\n    ListButtonProps,\n    EditButtonProps,\n    DeleteButtonProps,\n    RefreshButtonProps,\n} from \"@components\";\nimport { ShowProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\nexport const Show: React.FC<ShowProps> = (props) => {\n    const {\n        children,\n        resource: resourceFromProps,\n        recordItemId,\n        canDelete,\n        canEdit,\n        dataProviderName,\n        isLoading,\n        footerButtons: footerButtonsFromProps,\n        footerButtonProps,\n        headerButtons: headerButtonsFromProps,\n        headerButtonProps,\n        wrapperProps,\n        contentProps,\n        headerProps,\n        goBack: goBackFromProps,\n        breadcrumb: breadcrumbFromProps,\n        title,\n    } = props;\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const go = useGo();\n    const { goBack, list: legacyGoList } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const {\n        resource,\n        action,\n        id: idFromParams,\n        identifier,\n    } = useResource(resourceFromProps);\n\n    const goListPath = useToPath({\n        resource,\n        action: \"list\",\n    });\n\n    const id = recordItemId ?? idFromParams;\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const hasList = resource?.list && !recordItemId;\n    const isDeleteButtonVisible =\n        canDelete ?? resource?.meta?.canDelete ?? resource?.canDelete;\n    const isEditButtonVisible =\n        canEdit ?? resource?.canEdit ?? !!resource?.edit;\n\n    const listButtonProps: ListButtonProps | undefined = hasList\n        ? {\n              ...(isLoading ? { disabled: true } : {}),\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n          }\n        : undefined;\n    const editButtonProps: EditButtonProps | undefined = isEditButtonVisible\n        ? {\n              ...(isLoading ? { disabled: true } : {}),\n              color: \"primary\",\n              variant: \"filled\",\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n              recordItemId: id,\n          }\n        : undefined;\n    const deleteButtonProps: DeleteButtonProps | undefined =\n        isDeleteButtonVisible\n            ? {\n                  ...(isLoading ? { disabled: true } : {}),\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  recordItemId: id,\n                  onSuccess: () => {\n                      if (routerType === \"legacy\") {\n                          legacyGoList(resource?.route ?? resource?.name ?? \"\");\n                      } else {\n                          go({ to: goListPath });\n                      }\n                  },\n                  dataProviderName,\n              }\n            : undefined;\n    const refreshButtonProps: RefreshButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        recordItemId: id,\n        dataProviderName,\n    };\n\n    const loadingOverlayVisible = isLoading ?? false;\n\n    const defaultHeaderButtons = (\n        <>\n            {hasList && <ListButton {...listButtonProps} />}\n            {isEditButtonVisible && <EditButton {...editButtonProps} />}\n            {isDeleteButtonVisible && <DeleteButton {...deleteButtonProps} />}\n            <RefreshButton {...refreshButtonProps} />\n        </>\n    );\n\n    const buttonBack =\n        goBackFromProps === (false || null) ? null : (\n            <ActionIcon\n                onClick={\n                    action !== \"list\" && typeof action !== \"undefined\"\n                        ? routerType === \"legacy\"\n                            ? goBack\n                            : back\n                        : undefined\n                }\n            >\n                {typeof goBackFromProps !== \"undefined\" ? (\n                    goBackFromProps\n                ) : (\n                    <IconArrowLeft />\n                )}\n            </ActionIcon>\n        );\n\n    const headerButtons = headerButtonsFromProps\n        ? typeof headerButtonsFromProps === \"function\"\n            ? headerButtonsFromProps({\n                  defaultButtons: defaultHeaderButtons,\n                  deleteButtonProps,\n                  editButtonProps,\n                  listButtonProps,\n                  refreshButtonProps,\n              })\n            : headerButtonsFromProps\n        : defaultHeaderButtons;\n\n    const footerButtons = footerButtonsFromProps\n        ? typeof footerButtonsFromProps === \"function\"\n            ? footerButtonsFromProps({ defaultButtons: null })\n            : footerButtonsFromProps\n        : null;\n\n    return (\n        <Card p=\"md\" {...wrapperProps}>\n            <LoadingOverlay visible={loadingOverlayVisible} />\n            <Group position=\"apart\" align=\"center\" {...headerProps}>\n                <Stack spacing=\"xs\">\n                    {breadcrumbComponent}\n                    <Group spacing=\"xs\">\n                        {buttonBack}\n                        {title ?? (\n                            <Title\n                                order={3}\n                                transform=\"capitalize\"\n                                className={RefinePageHeaderClassNames.Title}\n                            >\n                                {translate(\n                                    `${identifier}.titles.show`,\n                                    `Show ${getUserFriendlyName(\n                                        resource?.meta?.label ??\n                                            resource?.options?.label ??\n                                            resource?.label ??\n                                            identifier,\n                                        \"singular\",\n                                    )}`,\n                                )}\n                            </Title>\n                        )}\n                    </Group>\n                </Stack>\n                <Group spacing=\"xs\" {...headerButtonProps}>\n                    {headerButtons}\n                </Group>\n            </Group>\n            <Box pt=\"sm\" {...contentProps}>\n                {children}\n            </Box>\n            <Group position=\"right\" spacing=\"xs\" mt=\"md\" {...footerButtonProps}>\n                {footerButtons}\n            </Group>\n        </Card>\n    );\n};\n","import React from \"react\";\nimport {\n    Box,\n    Card,\n    Group,\n    ActionIcon,\n    Stack,\n    Title,\n    LoadingOverlay,\n} from \"@mantine/core\";\nimport {\n    useBack,\n    useGo,\n    useMutationMode,\n    useNavigation,\n    useRefineContext,\n    useResource,\n    useUserFriendlyName,\n    useRouterType,\n    useToPath,\n    useTranslate,\n} from \"@refinedev/core\";\nimport { IconArrowLeft } from \"@tabler/icons\";\nimport {\n    DeleteButton,\n    ListButton,\n    RefreshButton,\n    SaveButton,\n    Breadcrumb,\n    ListButtonProps,\n    RefreshButtonProps,\n    DeleteButtonProps,\n    SaveButtonProps,\n    AutoSaveIndicator,\n} from \"@components\";\nimport { EditProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\nexport const Edit: React.FC<EditProps> = (props) => {\n    const {\n        children,\n        resource: resourceFromProps,\n        recordItemId,\n        deleteButtonProps: deleteButtonPropsFromProps,\n        mutationMode: mutationModeFromProps,\n        saveButtonProps: saveButtonPropsFromProps,\n        canDelete,\n        dataProviderName,\n        isLoading,\n        footerButtons: footerButtonsFromProps,\n        footerButtonProps,\n        headerButtons: headerButtonsFromProps,\n        headerButtonProps,\n        wrapperProps,\n        contentProps,\n        headerProps,\n        goBack: goBackFromProps,\n        breadcrumb: breadcrumbFromProps,\n        title,\n        autoSaveProps,\n    } = props;\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n    const { mutationMode: mutationModeContext } = useMutationMode();\n    const mutationMode = mutationModeFromProps ?? mutationModeContext;\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const go = useGo();\n    const { goBack, list: legacyGoList } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const {\n        resource,\n        action,\n        id: idFromParams,\n        identifier,\n    } = useResource(resourceFromProps);\n\n    const goListPath = useToPath({\n        resource,\n        action: \"list\",\n    });\n\n    const id = recordItemId ?? idFromParams;\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const hasList = resource?.list && !recordItemId;\n\n    const isDeleteButtonVisible =\n        canDelete ??\n        ((resource?.meta?.canDelete ?? resource?.canDelete) ||\n            deleteButtonPropsFromProps);\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const loadingOverlayVisible =\n        isLoading ?? saveButtonPropsFromProps?.disabled ?? false;\n\n    const listButtonProps: ListButtonProps | undefined = hasList\n        ? {\n              ...(isLoading ? { disabled: true } : {}),\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n          }\n        : undefined;\n\n    const refreshButtonProps: RefreshButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        recordItemId: id,\n        dataProviderName,\n    };\n\n    const deleteButtonProps: DeleteButtonProps | undefined =\n        isDeleteButtonVisible\n            ? ({\n                  ...(isLoading ? { disabled: true } : {}),\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  mutationMode,\n                  onSuccess: () => {\n                      if (routerType === \"legacy\") {\n                          legacyGoList(resource?.route ?? resource?.name ?? \"\");\n                      } else {\n                          go({ to: goListPath });\n                      }\n                  },\n                  recordItemId: id,\n                  dataProviderName,\n                  ...deleteButtonPropsFromProps,\n              } as const)\n            : undefined;\n\n    const saveButtonProps: SaveButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        ...saveButtonPropsFromProps,\n    };\n\n    const defaultHeaderButtons = (\n        <>\n            {autoSaveProps && <AutoSaveIndicator {...autoSaveProps} />}\n            {hasList && <ListButton {...listButtonProps} />}\n            <RefreshButton {...refreshButtonProps} />\n        </>\n    );\n\n    const defaultFooterButtons = (\n        <>\n            {isDeleteButtonVisible && <DeleteButton {...deleteButtonProps} />}\n            <SaveButton {...saveButtonProps} />\n        </>\n    );\n\n    const buttonBack =\n        goBackFromProps === (false || null) ? null : (\n            <ActionIcon\n                onClick={\n                    action !== \"list\" && typeof action !== \"undefined\"\n                        ? routerType === \"legacy\"\n                            ? goBack\n                            : back\n                        : undefined\n                }\n            >\n                {typeof goBackFromProps !== \"undefined\" ? (\n                    goBackFromProps\n                ) : (\n                    <IconArrowLeft />\n                )}\n            </ActionIcon>\n        );\n\n    const headerButtons = headerButtonsFromProps\n        ? typeof headerButtonsFromProps === \"function\"\n            ? headerButtonsFromProps({\n                  defaultButtons: defaultHeaderButtons,\n                  listButtonProps,\n                  refreshButtonProps,\n              })\n            : headerButtonsFromProps\n        : defaultHeaderButtons;\n\n    const footerButtons = footerButtonsFromProps\n        ? typeof footerButtonsFromProps === \"function\"\n            ? footerButtonsFromProps({\n                  defaultButtons: defaultFooterButtons,\n                  deleteButtonProps,\n                  saveButtonProps,\n              })\n            : footerButtonsFromProps\n        : defaultFooterButtons;\n\n    return (\n        <Card p=\"md\" {...wrapperProps}>\n            <LoadingOverlay visible={loadingOverlayVisible} />\n            <Group position=\"apart\" {...headerProps}>\n                <Stack spacing=\"xs\">\n                    {breadcrumbComponent}\n                    <Group spacing=\"xs\">\n                        {buttonBack}\n                        {title ?? (\n                            <Title\n                                order={3}\n                                transform=\"capitalize\"\n                                className={RefinePageHeaderClassNames.Title}\n                            >\n                                {translate(\n                                    `${identifier}.titles.edit`,\n                                    `Edit ${getUserFriendlyName(\n                                        resource?.meta?.label ??\n                                            resource?.options?.label ??\n                                            resource?.label ??\n                                            identifier,\n                                        \"singular\",\n                                    )}`,\n                                )}\n                            </Title>\n                        )}\n                    </Group>\n                </Stack>\n                <Group spacing=\"xs\" {...headerButtonProps}>\n                    {headerButtons}\n                </Group>\n            </Group>\n            <Box pt=\"sm\" {...contentProps}>\n                {children}\n            </Box>\n            <Group position=\"right\" spacing=\"xs\" mt=\"md\" {...footerButtonProps}>\n                {footerButtons}\n            </Group>\n        </Card>\n    );\n};\n","import React from \"react\";\nimport {\n    Box,\n    Card,\n    Group,\n    ActionIcon,\n    Stack,\n    Title,\n    LoadingOverlay,\n} from \"@mantine/core\";\nimport {\n    useBack,\n    useNavigation,\n    useRefineContext,\n    useResource,\n    useUserFriendlyName,\n    useRouterType,\n    useTranslate,\n} from \"@refinedev/core\";\nimport { IconArrowLeft } from \"@tabler/icons\";\nimport { SaveButton, Breadcrumb, SaveButtonProps } from \"@components\";\nimport { CreateProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\nexport const Create: React.FC<CreateProps> = (props) => {\n    const {\n        children,\n        saveButtonProps: saveButtonPropsFromProps,\n        isLoading,\n        resource: resourceFromProps,\n        footerButtons: footerButtonsFromProps,\n        footerButtonProps,\n        headerButtons: headerButtonsFromProps,\n        headerButtonProps,\n        wrapperProps,\n        contentProps,\n        headerProps,\n        goBack: goBackFromProps,\n        breadcrumb: breadcrumbFromProps,\n        title,\n    } = props;\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const { goBack } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const { resource, action, identifier } = useResource(resourceFromProps);\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const saveButtonProps: SaveButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        ...saveButtonPropsFromProps,\n    };\n\n    const loadingOverlayVisible =\n        isLoading ?? saveButtonProps?.disabled ?? false;\n\n    const defaultFooterButtons = <SaveButton {...saveButtonProps} />;\n\n    const buttonBack =\n        goBackFromProps === (false || null) ? null : (\n            <ActionIcon\n                onClick={\n                    action !== \"list\" || typeof action !== \"undefined\"\n                        ? routerType === \"legacy\"\n                            ? goBack\n                            : back\n                        : undefined\n                }\n            >\n                {typeof goBackFromProps !== \"undefined\" ? (\n                    goBackFromProps\n                ) : (\n                    <IconArrowLeft />\n                )}\n            </ActionIcon>\n        );\n\n    const headerButtons = headerButtonsFromProps\n        ? typeof headerButtonsFromProps === \"function\"\n            ? headerButtonsFromProps({\n                  defaultButtons: null,\n              })\n            : headerButtonsFromProps\n        : null;\n\n    const footerButtons = footerButtonsFromProps\n        ? typeof footerButtonsFromProps === \"function\"\n            ? footerButtonsFromProps({\n                  defaultButtons: defaultFooterButtons,\n                  saveButtonProps,\n              })\n            : footerButtonsFromProps\n        : defaultFooterButtons;\n\n    return (\n        <Card p=\"md\" {...wrapperProps}>\n            <LoadingOverlay visible={loadingOverlayVisible} />\n            <Group position=\"apart\" align=\"center\" {...headerProps}>\n                <Stack spacing=\"xs\">\n                    {breadcrumbComponent}\n                    <Group spacing=\"xs\">\n                        {buttonBack}\n                        {title ?? (\n                            <Title\n                                order={3}\n                                transform=\"capitalize\"\n                                className={RefinePageHeaderClassNames.Title}\n                            >\n                                {translate(\n                                    `${identifier}.titles.create`,\n                                    `Create ${getUserFriendlyName(\n                                        resource?.meta?.label ??\n                                            resource?.options?.label ??\n                                            resource?.label ??\n                                            identifier,\n                                        \"singular\",\n                                    )}`,\n                                )}\n                            </Title>\n                        )}\n                    </Group>\n                </Stack>\n                <Group spacing=\"xs\" {...headerButtonProps}>\n                    {headerButtons}\n                </Group>\n            </Group>\n            <Box pt=\"sm\" {...contentProps}>\n                {children}\n            </Box>\n            <Group position=\"right\" spacing=\"xs\" mt=\"md\" {...footerButtonProps}>\n                {footerButtons}\n            </Group>\n        </Card>\n    );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { RefineErrorPageProps } from \"@refinedev/ui-types\";\nimport {\n    useNavigation,\n    useTranslate,\n    useGo,\n    useResource,\n    useRouterType,\n} from \"@refinedev/core\";\nimport {\n    Box,\n    Title,\n    Text,\n    Group,\n    Tooltip,\n    ActionIcon,\n    Button,\n    Space,\n} from \"@mantine/core\";\nimport { IconInfoCircle } from \"@tabler/icons\";\n\nexport const ErrorComponent: React.FC<RefineErrorPageProps> = () => {\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const translate = useTranslate();\n    const { push } = useNavigation();\n    const go = useGo();\n    const routerType = useRouterType();\n\n    const { resource, action } = useResource();\n\n    useEffect(() => {\n        if (resource && action) {\n            setErrorMessage(\n                translate(\n                    \"pages.error.info\",\n                    {\n                        action,\n                        resource: resource?.name,\n                    },\n                    `You may have forgotten to add the \"${action}\" component to \"${resource?.name}\" resource.`,\n                ),\n            );\n        }\n    }, [resource, action]);\n\n    return (\n        <Box\n            sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                textAlign: \"center\",\n                boxSizing: \"border-box\",\n                minHeight: \"calc(100vh - 150px)\",\n            }}\n        >\n            <Title\n                sx={(theme) => ({\n                    textAlign: \"center\",\n                    fontWeight: 900,\n                    fontSize: 220,\n                    lineHeight: 1,\n                    color:\n                        theme.colorScheme === \"dark\"\n                            ? theme.colors.dark[4]\n                            : theme.colors.gray[2],\n\n                    [theme.fn.smallerThan(\"sm\")]: {\n                        fontSize: 120,\n                    },\n                })}\n            >\n                404\n            </Title>\n            <Group spacing={4} align=\"center\" sx={{ justifyContent: \"center\" }}>\n                <Text\n                    color=\"dimmed\"\n                    size=\"lg\"\n                    align=\"center\"\n                    sx={{ maxWidth: 500 }}\n                >\n                    {translate(\n                        \"pages.error.404\",\n                        \"Sorry, the page you visited does not exist.\",\n                    )}\n                </Text>\n                {errorMessage && (\n                    <Tooltip openDelay={0} label={errorMessage}>\n                        <ActionIcon data-testid=\"error-component-tooltip\">\n                            <IconInfoCircle />\n                        </ActionIcon>\n                    </Tooltip>\n                )}\n            </Group>\n            <Space h=\"md\" />\n            <Button\n                variant=\"subtle\"\n                size=\"md\"\n                onClick={() => {\n                    if (routerType === \"legacy\") {\n                        push(\"/\");\n                    } else {\n                        go({ to: \"/\" });\n                    }\n                }}\n            >\n                {translate(\"pages.error.backHome\", \"Back Home\")}\n            </Button>\n        </Box>\n    );\n};\n","import * as React from \"react\";\nimport { RefineReadyPageProps } from \"@refinedev/ui-types\";\nimport {\n    BackgroundImage,\n    Code,\n    Title,\n    Text,\n    Group,\n    Space,\n    Button,\n    Anchor,\n} from \"@mantine/core\";\n\n/**\n * @deprecated `ReadyPage` is deprecated and will be removed in the next major release.\n */\nexport const ReadyPage: React.FC<RefineReadyPageProps> = () => {\n    return (\n        <BackgroundImage\n            sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                minHeight: \"100vh\",\n                backgroundColor: \"#2A132E\",\n            }}\n            py=\"xl\"\n            px=\"sm\"\n            src=\"https://refine.ams3.cdn.digitaloceanspaces.com/login-background/background.png\"\n        >\n            <img\n                src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                alt=\"Refine Logo\"\n            />\n            <Space h={24} />\n            <Title align=\"center\" sx={{ color: \"white\", fontSize: \"3rem\" }}>\n                Welcome on board\n            </Title>\n            <Text size=\"xl\" sx={{ color: \"white\" }} mt=\"md\" align=\"center\">\n                Your configuration is completed.\n            </Text>\n            <Text size=\"lg\" sx={{ color: \"white\" }} mt=\"md\" align=\"center\">\n                Now you can get started by adding your resources to the{\" \"}\n                <Code>resources</Code> property of <Code>Refine</Code>.\n            </Text>\n            <Space h={48} />\n            <Group position=\"center\">\n                <Anchor\n                    href=\"https://refine.dev\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    <Button variant=\"default\">Documentation</Button>\n                </Anchor>\n                <Anchor\n                    href=\"https://refine.dev/examples\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    <Button variant=\"default\">Examples</Button>\n                </Anchor>\n                <Anchor\n                    href=\"https://discord.gg/refine\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    <Button variant=\"default\">Community</Button>\n                </Anchor>\n            </Group>\n        </BackgroundImage>\n    );\n};\n","import React from \"react\";\nimport { WelcomePage as WelcomePageFromCore } from \"@refinedev/core\";\n\n/**\n * It is a page that welcomes you after the configuration is completed.\n * @deprecated `WelcomePage` is deprecated. Use `WelcomePage` from `@refinedev/core` instead.\n */\nexport const WelcomePage: React.FC = () => {\n    return <WelcomePageFromCore />;\n};\n","import React from \"react\";\nimport { AuthPageProps } from \"@refinedev/core\";\nimport { BoxProps, CardProps } from \"@mantine/core\";\nimport { UseFormInput } from \"@mantine/form/lib/types\";\n\nimport {\n    LoginPage,\n    RegisterPage,\n    ForgotPasswordPage,\n    UpdatePasswordPage,\n} from \"./components\";\n\nexport type FormPropsType = UseFormInput<unknown> & {\n    onSubmit?: (values: any) => void;\n};\n\nexport type AuthProps = AuthPageProps<BoxProps, CardProps, FormPropsType>;\n\n/**\n * **refine** has a default auth page form served on the `/login` route when the `authProvider` configuration is provided.\n * @param title is not implemented yet.\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/mantine-auth-page/} for more details.\n */\nexport const AuthPage: React.FC<AuthProps> = (props) => {\n    const { type } = props;\n\n    const renderView = () => {\n        switch (type) {\n            case \"register\":\n                return <RegisterPage {...props} />;\n            case \"forgotPassword\":\n                return <ForgotPasswordPage {...props} />;\n            case \"updatePassword\":\n                return <UpdatePasswordPage {...props} />;\n            default:\n                return <LoginPage {...props} />;\n        }\n    };\n\n    return <>{renderView()}</>;\n};\n","import React from \"react\";\nimport {\n    LoginPageProps,\n    LoginFormTypes,\n    useRouterType,\n    useLink,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport { useLogin, useTranslate, useRouterContext } from \"@refinedev/core\";\nimport {\n    Box,\n    Card,\n    Checkbox,\n    PasswordInput,\n    Space,\n    TextInput,\n    Title,\n    Anchor,\n    Button,\n    Text,\n    Divider,\n    Stack,\n    BoxProps,\n    CardProps,\n    useMantineTheme,\n} from \"@mantine/core\";\n\nimport { ThemedTitle } from \"@components\";\nimport { FormContext } from \"@contexts/form-context\";\nimport {\n    layoutStyles,\n    cardStyles,\n    titleStyles,\n    pageTitleStyles,\n} from \"../styles\";\nimport { FormPropsType } from \"../..\";\n\ntype LoginProps = LoginPageProps<BoxProps, CardProps, FormPropsType>;\n\n/**\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/mantine-auth-page/#login} for more details.\n */\nexport const LoginPage: React.FC<LoginProps> = ({\n    providers,\n    registerLink,\n    forgotPasswordLink,\n    rememberMe,\n    contentProps,\n    wrapperProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const theme = useMantineTheme();\n    const { useForm, FormProvider } = FormContext;\n    const { onSubmit: onSubmitProp, ...useFormProps } = formProps || {};\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const form = useForm({\n        initialValues: {\n            email: \"\",\n            password: \"\",\n            remember: false,\n        },\n        validate: {\n            email: (value: any) =>\n                /^\\S+@\\S+$/.test(value)\n                    ? null\n                    : translate(\n                          \"pages.login.errors.validEmail\",\n                          \"Invalid email address\",\n                      ),\n            password: (value: any) => value === \"\",\n        },\n        ...useFormProps,\n    });\n    const { onSubmit, getInputProps } = form;\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login, isLoading } = useLogin<LoginFormTypes>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const PageTitle =\n        title === false ? null : (\n            <div style={pageTitleStyles}>\n                {title ?? <ThemedTitle collapsed={false} />}\n            </div>\n        );\n\n    const renderProviders = () => {\n        if (providers && providers.length > 0) {\n            return (\n                <>\n                    <Stack spacing={8}>\n                        {providers.map((provider) => {\n                            return (\n                                <Button\n                                    key={provider.name}\n                                    variant=\"default\"\n                                    fullWidth\n                                    leftIcon={provider.icon}\n                                    onClick={() =>\n                                        login({\n                                            providerName: provider.name,\n                                        })\n                                    }\n                                >\n                                    {provider.label}\n                                </Button>\n                            );\n                        })}\n                    </Stack>\n                    <Divider\n                        my=\"md\"\n                        labelPosition=\"center\"\n                        label={translate(\"pages.login.divider\", \"or\")}\n                    />\n                </>\n            );\n        }\n        return null;\n    };\n\n    const CardContent = (\n        <Card style={cardStyles} {...(contentProps ?? {})}>\n            <Title\n                style={titleStyles}\n                color={theme.colorScheme === \"dark\" ? \"brand.5\" : \"brand.8\"}\n            >\n                {translate(\"pages.login.title\", \"Sign in to your account\")}\n            </Title>\n            <Space h=\"sm\" />\n            <Space h=\"lg\" />\n            {renderProviders()}\n            <FormProvider form={form}>\n                <form\n                    onSubmit={onSubmit((values: any) => {\n                        if (onSubmitProp) {\n                            return onSubmitProp(values);\n                        }\n                        return login(values);\n                    })}\n                >\n                    <TextInput\n                        name=\"email\"\n                        label={translate(\"pages.login.fields.email\", \"Email\")}\n                        placeholder={translate(\n                            \"pages.login.fields.email\",\n                            \"Email\",\n                        )}\n                        {...getInputProps(\"email\")}\n                    />\n                    <PasswordInput\n                        name=\"password\"\n                        mt=\"md\"\n                        label={translate(\n                            \"pages.login.fields.password\",\n                            \"Password\",\n                        )}\n                        placeholder=\"●●●●●●●●\"\n                        {...getInputProps(\"password\")}\n                    />\n                    <Box\n                        mt=\"md\"\n                        sx={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                        }}\n                    >\n                        {rememberMe ?? (\n                            <Checkbox\n                                label={translate(\n                                    \"pages.login.buttons.rememberMe\",\n                                    \"Remember me\",\n                                )}\n                                size=\"xs\"\n                                {...getInputProps(\"remember\", {\n                                    type: \"checkbox\",\n                                })}\n                            />\n                        )}\n                        {forgotPasswordLink ?? (\n                            <Anchor\n                                component={ActiveLink as any}\n                                to=\"/forgot-password\"\n                                size=\"xs\"\n                            >\n                                {translate(\n                                    \"pages.login.buttons.forgotPassword\",\n                                    \"Forgot password?\",\n                                )}\n                            </Anchor>\n                        )}\n                    </Box>\n                    <Button\n                        mt=\"md\"\n                        fullWidth\n                        size=\"md\"\n                        type=\"submit\"\n                        loading={isLoading}\n                    >\n                        {translate(\"pages.login.signin\", \"Sign in\")}\n                    </Button>\n                </form>\n            </FormProvider>\n\n            {registerLink ?? (\n                <Text mt=\"md\" size=\"xs\" align=\"center\">\n                    {translate(\n                        \"pages.login.buttons.noAccount\",\n                        \"Don’t have an account?\",\n                    )}{\" \"}\n                    <Anchor\n                        component={ActiveLink as any}\n                        to=\"/register\"\n                        weight={700}\n                    >\n                        {translate(\"pages.login.signup\", \"Sign up\")}\n                    </Anchor>\n                </Text>\n            )}\n        </Card>\n    );\n\n    return (\n        <Box style={layoutStyles} {...(wrapperProps ?? {})}>\n            {renderContent ? (\n                renderContent(CardContent, PageTitle)\n            ) : (\n                <>\n                    {PageTitle}\n                    {CardContent}\n                </>\n            )}\n        </Box>\n    );\n};\n","import { createFormContext } from \"@mantine/form\";\n\nconst [FormProvider, useFormContext, useForm] = createFormContext<unknown>();\n\nexport const FormContext = { FormProvider, useFormContext, useForm };\n","import { CSSProperties } from \"react\";\n\nexport const layoutStyles: CSSProperties = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    minHeight: \"100vh\",\n};\n\nexport const cardStyles: CSSProperties = {\n    width: \"400px\",\n    padding: \"32px\",\n    boxShadow:\n        \"0px 17px 17px -7px rgba(0, 0, 0, 0.16), 0px 36px 28px -7px rgba(0, 0, 0, 0.2), 0px 1px 3px rgba(0, 0, 0, 0.2)\",\n};\n\nexport const titleStyles: CSSProperties = {\n    textAlign: \"center\",\n    fontSize: \"26px\",\n    fontWeight: 700,\n};\n\nexport const pageTitleStyles: CSSProperties = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    marginBottom: \"32px\",\n    fontSize: \"22px\",\n    fontWeight: 700,\n};\n","import React from \"react\";\nimport {\n    RegisterPageProps,\n    RegisterFormTypes,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport {\n    useTranslate,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    useRegister,\n} from \"@refinedev/core\";\nimport {\n    Box,\n    Card,\n    PasswordInput,\n    Space,\n    TextInput,\n    Title,\n    Anchor,\n    Button,\n    Text,\n    BoxProps,\n    CardProps,\n    Group,\n    Stack,\n    Divider,\n    useMantineTheme,\n} from \"@mantine/core\";\n\nimport { ThemedTitle } from \"@components\";\nimport { FormContext } from \"@contexts/form-context\";\nimport {\n    layoutStyles,\n    cardStyles,\n    titleStyles,\n    pageTitleStyles,\n} from \"../styles\";\nimport { FormPropsType } from \"../..\";\n\ntype RegisterProps = RegisterPageProps<BoxProps, CardProps, FormPropsType>;\n\n/**\n * The register page will be used to register new users. You can use the following props for the <AuthPage> component when the type is \"register\".\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/mantine-auth-page/#register} for more details.\n */\nexport const RegisterPage: React.FC<RegisterProps> = ({\n    loginLink,\n    contentProps,\n    wrapperProps,\n    renderContent,\n    formProps,\n    providers,\n    title,\n}) => {\n    const theme = useMantineTheme();\n    const { useForm, FormProvider } = FormContext;\n    const { onSubmit: onSubmitProp, ...useFormProps } = formProps || {};\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const form = useForm({\n        initialValues: {\n            email: \"\",\n            password: \"\",\n        },\n        validate: {\n            email: (value: any) =>\n                /^\\S+@\\S+$/.test(value)\n                    ? null\n                    : translate(\n                          \"pages.register.errors.validEmail\",\n                          \"Invalid email address\",\n                      ),\n            password: (value: any) => value === \"\",\n        },\n        ...useFormProps,\n    });\n    const { onSubmit, getInputProps } = form;\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: register, isLoading } = useRegister<RegisterFormTypes>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const PageTitle =\n        title === false ? null : (\n            <div style={pageTitleStyles}>\n                {title ?? <ThemedTitle collapsed={false} />}\n            </div>\n        );\n\n    const renderProviders = () => {\n        if (providers && providers.length > 0) {\n            return (\n                <>\n                    <Stack spacing={8}>\n                        {providers.map((provider) => {\n                            return (\n                                <Button\n                                    key={provider.name}\n                                    variant=\"default\"\n                                    fullWidth\n                                    leftIcon={provider.icon}\n                                    onClick={() =>\n                                        register({\n                                            providerName: provider.name,\n                                        })\n                                    }\n                                >\n                                    {provider.label}\n                                </Button>\n                            );\n                        })}\n                    </Stack>\n                    <Divider\n                        my=\"md\"\n                        labelPosition=\"center\"\n                        label={translate(\"pages.login.divider\", \"or\")}\n                    />\n                </>\n            );\n        }\n        return null;\n    };\n\n    const CardContent = (\n        <Card style={cardStyles} {...(contentProps ?? {})}>\n            <Title\n                style={titleStyles}\n                color={theme.colorScheme === \"dark\" ? \"brand.5\" : \"brand.8\"}\n            >\n                {translate(\"pages.register.title\", \"Sign up for your account\")}\n            </Title>\n            <Space h=\"sm\" />\n            <Space h=\"lg\" />\n            {renderProviders()}\n            <FormProvider form={form}>\n                <form\n                    onSubmit={onSubmit((values: any) => {\n                        if (onSubmitProp) {\n                            return onSubmitProp(values);\n                        }\n                        return register(values);\n                    })}\n                >\n                    <TextInput\n                        name=\"email\"\n                        label={translate(\n                            \"pages.register.fields.email\",\n                            \"Email\",\n                        )}\n                        placeholder={translate(\n                            \"pages.register.fields.email\",\n                            \"Email\",\n                        )}\n                        {...getInputProps(\"email\")}\n                    />\n                    <PasswordInput\n                        mt=\"md\"\n                        name=\"password\"\n                        label={translate(\n                            \"pages.register.fields.password\",\n                            \"Password\",\n                        )}\n                        placeholder=\"●●●●●●●●\"\n                        {...getInputProps(\"password\")}\n                    />\n                    <Button\n                        mt=\"md\"\n                        fullWidth\n                        size=\"md\"\n                        type=\"submit\"\n                        loading={isLoading}\n                    >\n                        {translate(\"pages.register.buttons.submit\", \"Sign up\")}\n                    </Button>\n\n                    {loginLink ?? (\n                        <Group mt=\"md\" position=\"center\">\n                            <Text size=\"xs\">\n                                {translate(\n                                    \"pages.register.buttons.haveAccount\",\n                                    \"Have an account?\",\n                                )}{\" \"}\n                                <Anchor\n                                    component={ActiveLink as any}\n                                    to=\"/login\"\n                                    weight={700}\n                                >\n                                    {translate(\n                                        \"pages.register.signin\",\n                                        \"Sign in\",\n                                    )}\n                                </Anchor>\n                            </Text>\n                        </Group>\n                    )}\n                </form>\n            </FormProvider>\n        </Card>\n    );\n\n    return (\n        <Box style={layoutStyles} {...(wrapperProps ?? {})}>\n            {renderContent ? (\n                renderContent(CardContent, PageTitle)\n            ) : (\n                <>\n                    {PageTitle}\n                    {CardContent}\n                </>\n            )}\n        </Box>\n    );\n};\n","import React from \"react\";\nimport {\n    ForgotPasswordPageProps,\n    ForgotPasswordFormTypes,\n    useRouterType,\n    useLink,\n} from \"@refinedev/core\";\nimport {\n    useTranslate,\n    useRouterContext,\n    useForgotPassword,\n} from \"@refinedev/core\";\nimport {\n    Box,\n    Card,\n    Space,\n    TextInput,\n    Title,\n    Anchor,\n    Button,\n    Text,\n    BoxProps,\n    CardProps,\n    Group,\n    useMantineTheme,\n} from \"@mantine/core\";\n\nimport { ThemedTitle } from \"@components\";\nimport { FormContext } from \"@contexts/form-context\";\nimport {\n    layoutStyles,\n    cardStyles,\n    titleStyles,\n    pageTitleStyles,\n} from \"../styles\";\nimport { FormPropsType } from \"../..\";\n\ntype ResetPassworProps = ForgotPasswordPageProps<\n    BoxProps,\n    CardProps,\n    FormPropsType\n>;\n\n/**\n * The forgotPassword type is a page that allows users to reset their passwords. You can use this page to reset your password.\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/mantine-auth-page/#forgot-password} for more details.\n */\nexport const ForgotPasswordPage: React.FC<ResetPassworProps> = ({\n    loginLink,\n    contentProps,\n    wrapperProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const theme = useMantineTheme();\n    const { useForm, FormProvider } = FormContext;\n    const { onSubmit: onSubmitProp, ...useFormProps } = formProps || {};\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const form = useForm({\n        initialValues: {\n            email: \"\",\n        },\n        validate: {\n            email: (value: any) =>\n                /^\\S+@\\S+$/.test(value)\n                    ? null\n                    : translate(\n                          \"pages.forgotPassword.errors.validEmail\",\n                          \"Invalid email address\",\n                      ),\n        },\n        ...useFormProps,\n    });\n    const { getInputProps, onSubmit } = form;\n\n    const { mutate: forgotPassword, isLoading } =\n        useForgotPassword<ForgotPasswordFormTypes>();\n\n    const PageTitle =\n        title === false ? null : (\n            <div style={pageTitleStyles}>\n                {title ?? <ThemedTitle collapsed={false} />}\n            </div>\n        );\n\n    const CardContent = (\n        <Card style={cardStyles} {...(contentProps ?? {})}>\n            <Title\n                style={titleStyles}\n                color={theme.colorScheme === \"dark\" ? \"brand.5\" : \"brand.8\"}\n            >\n                {translate(\n                    \"pages.forgotPassword.title\",\n                    \"Forgot your password?\",\n                )}\n            </Title>\n            <Space h=\"lg\" />\n            <FormProvider form={form}>\n                <form\n                    onSubmit={onSubmit((values: any) => {\n                        if (onSubmitProp) {\n                            return onSubmitProp(values);\n                        }\n                        return forgotPassword(values);\n                    })}\n                >\n                    <TextInput\n                        name=\"email\"\n                        label={translate(\n                            \"pages.forgotPassword.fields.email\",\n                            \"Email\",\n                        )}\n                        placeholder={translate(\n                            \"pages.forgotPassword.fields.email\",\n                            \"Email\",\n                        )}\n                        {...getInputProps(\"email\")}\n                    />\n\n                    {loginLink ?? (\n                        <Group mt=\"md\" position={loginLink ? \"left\" : \"right\"}>\n                            <Text size=\"xs\">\n                                {translate(\n                                    \"pages.login.forgotPassword.haveAccount\",\n                                    \"Have an account?\",\n                                )}{\" \"}\n                                <Anchor\n                                    component={ActiveLink as any}\n                                    to=\"/login\"\n                                    weight={700}\n                                >\n                                    {translate(\n                                        \"pages.forgotPassword.signin\",\n                                        \"Sign in\",\n                                    )}\n                                </Anchor>\n                            </Text>\n                        </Group>\n                    )}\n                    <Button\n                        mt=\"lg\"\n                        fullWidth\n                        size=\"md\"\n                        type=\"submit\"\n                        loading={isLoading}\n                    >\n                        {translate(\n                            \"pages.forgotPassword.buttons.submit\",\n                            \"Send reset instructions\",\n                        )}\n                    </Button>\n                </form>\n            </FormProvider>\n        </Card>\n    );\n\n    return (\n        <Box style={layoutStyles} {...(wrapperProps ?? {})}>\n            {renderContent ? (\n                renderContent(CardContent, PageTitle)\n            ) : (\n                <>\n                    {PageTitle}\n                    {CardContent}\n                </>\n            )}\n        </Box>\n    );\n};\n","import React from \"react\";\nimport {\n    UpdatePasswordPageProps,\n    UpdatePasswordFormTypes,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport { useUpdatePassword, useTranslate } from \"@refinedev/core\";\nimport {\n    Box,\n    Card,\n    Space,\n    TextInput,\n    Title,\n    Button,\n    BoxProps,\n    CardProps,\n    useMantineTheme,\n} from \"@mantine/core\";\n\nimport { FormContext } from \"@contexts/form-context\";\nimport {\n    layoutStyles,\n    cardStyles,\n    titleStyles,\n    pageTitleStyles,\n} from \"../styles\";\nimport { FormPropsType } from \"../..\";\nimport { ThemedTitle } from \"@components\";\n\ntype UpdatePassworProps = UpdatePasswordPageProps<\n    BoxProps,\n    CardProps,\n    FormPropsType\n>;\n\n/**\n * The updatePassword type is the page used to update the password of the user.\n * @see {@link https://refine.dev/docs/api-reference/mantine/components/mantine-auth-page/#update-password} for more details.\n */\nexport const UpdatePasswordPage: React.FC<UpdatePassworProps> = ({\n    contentProps,\n    wrapperProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const theme = useMantineTheme();\n    const { useForm, FormProvider } = FormContext;\n    const { onSubmit: onSubmitProp, ...useFormProps } = formProps || {};\n    const translate = useTranslate();\n\n    const form = useForm({\n        initialValues: {\n            password: \"\",\n            confirmPassword: \"\",\n        },\n        validate: {\n            password: (value: any) => value === \"\",\n            confirmPassword: (value: any, values: any) =>\n                value !== values.password\n                    ? translate(\n                          \"pages.updatePassword.errors.confirmPasswordNotMatch\",\n                          \"Passwords do not match\",\n                      )\n                    : null,\n        },\n        ...useFormProps,\n    });\n    const { getInputProps, onSubmit } = form;\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: updatePassword, isLoading } =\n        useUpdatePassword<UpdatePasswordFormTypes>({\n            v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n        });\n\n    const PageTitle =\n        title === false ? null : (\n            <div style={pageTitleStyles}>\n                {title ?? <ThemedTitle collapsed={false} />}\n            </div>\n        );\n\n    const CardContent = (\n        <Card style={cardStyles} {...(contentProps ?? {})}>\n            <Title\n                style={titleStyles}\n                color={theme.colorScheme === \"dark\" ? \"brand.5\" : \"brand.8\"}\n            >\n                {translate(\"pages.updatePassword.title\", \"Set New Password\")}\n            </Title>\n            <Space h=\"lg\" />\n            <FormProvider form={form}>\n                <form\n                    onSubmit={onSubmit((values: any) => {\n                        if (onSubmitProp) {\n                            return onSubmitProp(values);\n                        }\n                        return updatePassword(values);\n                    })}\n                >\n                    <TextInput\n                        name=\"password\"\n                        type=\"password\"\n                        label={translate(\n                            \"pages.updatePassword.fields.password\",\n                            \"New Password\",\n                        )}\n                        placeholder=\"●●●●●●●●\"\n                        {...getInputProps(\"password\")}\n                    />\n                    <TextInput\n                        mt=\"md\"\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        label={translate(\n                            \"pages.updatePassword.fields.confirmPassword\",\n                            \"Confirm New Password\",\n                        )}\n                        placeholder=\"●●●●●●●●\"\n                        {...getInputProps(\"confirmPassword\")}\n                    />\n                    <Button\n                        mt=\"lg\"\n                        fullWidth\n                        size=\"md\"\n                        type=\"submit\"\n                        loading={isLoading}\n                    >\n                        {translate(\n                            \"pages.updatePassword.buttons.submit\",\n                            \"Update\",\n                        )}\n                    </Button>\n                </form>\n            </FormProvider>\n        </Card>\n    );\n\n    return (\n        <Box style={layoutStyles} {...(wrapperProps ?? {})}>\n            {renderContent ? (\n                renderContent(CardContent, PageTitle)\n            ) : (\n                <>\n                    {PageTitle}\n                    {CardContent}\n                </>\n            )}\n        </Box>\n    );\n};\n","import React from \"react\";\nimport {\n    matchResourceFromRoute,\n    useBreadcrumb,\n    useLink,\n    useRefineContext,\n    useResource,\n    useRouterContext,\n    useRouterType,\n} from \"@refinedev/core\";\nimport { RefineBreadcrumbProps } from \"@refinedev/ui-types\";\n\nimport {\n    Text,\n    Breadcrumbs,\n    BreadcrumbsProps as MantineBreadcrumbProps,\n    Anchor,\n    Group,\n} from \"@mantine/core\";\nimport { IconHome } from \"@tabler/icons\";\n\nexport type BreadcrumbProps = RefineBreadcrumbProps<MantineBreadcrumbProps>;\n\nexport const Breadcrumb: React.FC<BreadcrumbProps> = ({\n    breadcrumbProps,\n    showHome = true,\n    hideIcons = false,\n    meta,\n}) => {\n    const routerType = useRouterType();\n    const { breadcrumbs } = useBreadcrumb({ meta });\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const { hasDashboard } = useRefineContext();\n\n    const { resources } = useResource();\n\n    const rootRouteResource = matchResourceFromRoute(\"/\", resources);\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    if (breadcrumbs.length === 1) {\n        return null;\n    }\n\n    return (\n        <Breadcrumbs\n            aria-label=\"breadcrumb\"\n            styles={{\n                separator: { marginRight: 8, marginLeft: 8, color: \"dimgray\" },\n            }}\n            {...breadcrumbProps}\n        >\n            {showHome && (hasDashboard || rootRouteResource.found) && (\n                <Anchor component={ActiveLink as any} color=\"dimmed\" to=\"/\">\n                    {rootRouteResource?.resource?.meta?.icon ?? (\n                        <IconHome size={18} />\n                    )}\n                </Anchor>\n            )}\n            {breadcrumbs.map(({ label, icon, href }) => {\n                return (\n                    <Group key={label} spacing={4} align=\"center\" noWrap>\n                        {!hideIcons && icon}\n                        {href ? (\n                            <Anchor\n                                component={ActiveLink as any}\n                                color=\"dimmed\"\n                                to={href}\n                                size=\"sm\"\n                            >\n                                {label}\n                            </Anchor>\n                        ) : (\n                            <Text color=\"dimmed\" size=\"sm\">\n                                {label}\n                            </Text>\n                        )}\n                    </Group>\n                );\n            })}\n        </Breadcrumbs>\n    );\n};\n","import React from \"react\";\nimport { Box } from \"@mantine/core\";\n\nimport { RefineLayoutLayoutProps } from \"./types\";\nimport { Sider as DefaultSider } from \"./sider\";\nimport { Header as DefaultHeader } from \"./header\";\n\n/**\n * @deprecated use `<ThemedLayout>` instead with 100% backward compatibility.\n * @see https://refine.dev/docs/api-reference/mantine/components/mantine-themed-layout\n **/\nexport const Layout: React.FC<RefineLayoutLayoutProps> = ({\n    Sider,\n    Header,\n    Title,\n    Footer,\n    OffLayoutArea,\n    children,\n}) => {\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n\n    return (\n        <Box sx={{ display: \"flex\" }}>\n            <SiderToRender Title={Title} />\n            <Box\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    flex: 1,\n                    overflow: \"auto\",\n                }}\n            >\n                <HeaderToRender />\n                <Box\n                    component=\"main\"\n                    sx={(theme) => ({\n                        padding: theme.spacing.sm,\n                        backgroundColor:\n                            theme.colorScheme === \"dark\"\n                                ? theme.colors.dark[8]\n                                : theme.colors.gray[0],\n                        minHeight: \"100vh\",\n                    })}\n                >\n                    {children}\n                </Box>\n                {Footer && <Footer />}\n            </Box>\n            {OffLayoutArea && <OffLayoutArea />}\n        </Box>\n    );\n};\n","import React, { useState } from \"react\";\nimport {\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useLink,\n    useLogout,\n    useMenu,\n    useActiveAuthProvider,\n    useRefineContext,\n    useRouterContext,\n    useRouterType,\n    useTitle,\n    useTranslate,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\nimport {\n    ActionIcon,\n    Box,\n    Drawer,\n    Navbar,\n    NavLink,\n    NavLinkStylesNames,\n    NavLinkStylesParams,\n    ScrollArea,\n    MediaQuery,\n    Button,\n    Tooltip,\n    TooltipProps,\n    Styles,\n} from \"@mantine/core\";\nimport {\n    IconList,\n    IconMenu2,\n    IconChevronRight,\n    IconChevronLeft,\n    IconPower,\n    IconDashboard,\n} from \"@tabler/icons\";\nimport { RefineLayoutSiderProps } from \"../types\";\n\nimport { RefineTitle as DefaultTitle } from \"@components\";\n\nconst defaultNavIcon = <IconList size={18} />;\n\nexport const Sider: React.FC<RefineLayoutSiderProps> = ({\n    render,\n    meta,\n    Title: TitleFromProps,\n}) => {\n    const [collapsed, setCollapsed] = useState(false);\n    const [opened, setOpened] = useState(false);\n\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n\n    const { defaultOpenKeys, menuItems, selectedKey } = useMenu({ meta });\n    const TitleFromContext = useTitle();\n    const isExistAuthentication = useIsExistAuthentication();\n    const t = useTranslate();\n    const { hasDashboard } = useRefineContext();\n    const authProvider = useActiveAuthProvider();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n    const drawerWidth = () => {\n        if (collapsed) return 80;\n        return 200;\n    };\n\n    const commonNavLinkStyles: Styles<NavLinkStylesNames, NavLinkStylesParams> =\n        {\n            root: {\n                display: \"flex\",\n                color: \"white\",\n                fontWeight: 500,\n                \"&:hover\": {\n                    backgroundColor: \"unset\",\n                },\n                \"&[data-active]\": {\n                    backgroundColor: \"#ffffff1a\",\n                    color: \"white\",\n                    fontWeight: 700,\n                    \"&:hover\": {\n                        backgroundColor: \"#ffffff1a\",\n                    },\n                },\n                justifyContent: collapsed && !opened ? \"center\" : \"flex-start\",\n            },\n            icon: {\n                marginRight: collapsed && !opened ? 0 : 12,\n            },\n            body: {\n                display: collapsed && !opened ? \"none\" : \"flex\",\n            },\n        };\n\n    const commonTooltipProps: Partial<TooltipProps> = {\n        disabled: !collapsed || opened,\n        position: \"right\",\n        withinPortal: true,\n        withArrow: true,\n        arrowSize: 8,\n        arrowOffset: 12,\n        offset: 4,\n    };\n\n    const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n        return tree.map((item) => {\n            const { icon, label, route, name, children } = item;\n\n            const isSelected = item.key === selectedKey;\n            const isParent = children.length > 0;\n\n            const additionalLinkProps = isParent\n                ? {}\n                : { component: Link as any, to: route };\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{\n                        resource: item,\n                    }}\n                >\n                    <Tooltip label={label} {...commonTooltipProps}>\n                        <NavLink\n                            key={item.key}\n                            label={collapsed && !opened ? null : label}\n                            icon={icon ?? defaultNavIcon}\n                            active={isSelected}\n                            childrenOffset={collapsed && !opened ? 0 : 12}\n                            defaultOpened={defaultOpenKeys.includes(\n                                item.key || \"\",\n                            )}\n                            styles={commonNavLinkStyles}\n                            {...additionalLinkProps}\n                        >\n                            {isParent && renderTreeView(children, selectedKey)}\n                        </NavLink>\n                    </Tooltip>\n                </CanAccess>\n            );\n        });\n    };\n\n    const items = renderTreeView(menuItems, selectedKey);\n\n    const dashboard = hasDashboard ? (\n        <CanAccess resource=\"dashboard\" action=\"list\">\n            <Tooltip\n                label={t(\"dashboard.title\", \"Dashboard\")}\n                {...commonTooltipProps}\n            >\n                <NavLink\n                    key=\"dashboard\"\n                    label={\n                        collapsed && !opened\n                            ? null\n                            : t(\"dashboard.title\", \"Dashboard\")\n                    }\n                    icon={<IconDashboard size={18} />}\n                    component={Link as any}\n                    to=\"/\"\n                    active={selectedKey === \"/\"}\n                    styles={commonNavLinkStyles}\n                />\n            </Tooltip>\n        </CanAccess>\n    ) : null;\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                t(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Tooltip label={t(\"buttons.logout\", \"Logout\")} {...commonTooltipProps}>\n            <NavLink\n                key=\"logout\"\n                label={\n                    collapsed && !opened ? null : t(\"buttons.logout\", \"Logout\")\n                }\n                icon={<IconPower size={18} />}\n                onClick={handleLogout}\n                styles={commonNavLinkStyles}\n            />\n        </Tooltip>\n    );\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                logout,\n                items,\n                collapsed,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    return (\n        <>\n            <MediaQuery largerThan=\"md\" styles={{ display: \"none\" }}>\n                <Box sx={{ position: \"fixed\", top: 64, left: 0, zIndex: 1199 }}>\n                    <ActionIcon\n                        color=\"white\"\n                        size={36}\n                        sx={{\n                            borderRadius: \"0 6px 6px 0\",\n                            backgroundColor: \"#2A132E\",\n                            color: \"white\",\n                            \"&:hover\": {\n                                backgroundColor: \"#2A132E\",\n                            },\n                        }}\n                        onClick={() => setOpened((prev) => !prev)}\n                    >\n                        <IconMenu2 />\n                    </ActionIcon>\n                </Box>\n            </MediaQuery>\n\n            <MediaQuery largerThan=\"md\" styles={{ display: \"none\" }}>\n                <Drawer\n                    opened={opened}\n                    onClose={() => setOpened(false)}\n                    size={200}\n                    zIndex={1200}\n                    withCloseButton={false}\n                    styles={{\n                        drawer: {\n                            overflow: \"hidden\",\n                            backgroundColor: \"#2A132E\",\n                        },\n                    }}\n                >\n                    <Navbar.Section px=\"xs\">\n                        <RenderToTitle collapsed={false} />\n                    </Navbar.Section>\n                    <Navbar.Section\n                        grow\n                        component={ScrollArea}\n                        mx=\"-xs\"\n                        px=\"xs\"\n                    >\n                        {renderSider()}\n                    </Navbar.Section>\n                </Drawer>\n            </MediaQuery>\n\n            <MediaQuery smallerThan=\"md\" styles={{ display: \"none\" }}>\n                <Box\n                    sx={{\n                        width: drawerWidth(),\n                        transition: \"width 200ms ease, min-width 200ms ease\",\n                        flexShrink: 0,\n                    }}\n                />\n            </MediaQuery>\n\n            <MediaQuery smallerThan=\"md\" styles={{ display: \"none\" }}>\n                <Navbar\n                    width={{ base: drawerWidth() }}\n                    sx={{\n                        overflow: \"hidden\",\n                        transition: \"width 200ms ease, min-width 200ms ease\",\n                        backgroundColor: \"#2A132E\",\n                        position: \"fixed\",\n                        top: 0,\n                        height: \"100vh\",\n                    }}\n                >\n                    <Navbar.Section px=\"xs\">\n                        <RenderToTitle collapsed={collapsed} />\n                    </Navbar.Section>\n                    <Navbar.Section\n                        grow\n                        mt=\"sm\"\n                        component={ScrollArea}\n                        mx=\"-xs\"\n                        px=\"xs\"\n                    >\n                        {renderSider()}\n                    </Navbar.Section>\n                    <Navbar.Section>\n                        <Button\n                            sx={{\n                                background: \"rgba(0,0,0,.5)\",\n                                borderRadius: 0,\n                                borderTop: \"1px solid #ffffff1a\",\n                            }}\n                            size=\"md\"\n                            variant=\"gradient\"\n                            fullWidth\n                            onClick={() => setCollapsed((prev) => !prev)}\n                        >\n                            {collapsed ? (\n                                <IconChevronRight />\n                            ) : (\n                                <IconChevronLeft />\n                            )}\n                        </Button>\n                    </Navbar.Section>\n                </Navbar>\n            </MediaQuery>\n        </>\n    );\n};\n","import React from \"react\";\nimport { useGetIdentity, useActiveAuthProvider } from \"@refinedev/core\";\nimport { Avatar, Group, Header as MantineHeader, Title } from \"@mantine/core\";\n\nimport { RefineLayoutHeaderProps } from \"../types\";\n\nexport const Header: React.FC<RefineLayoutHeaderProps> = () => {\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const shouldRenderHeader = user && (user.name || user.avatar);\n\n    return shouldRenderHeader ? (\n        <MantineHeader height={50} py={6} px=\"sm\">\n            <Group position=\"right\">\n                <Title order={6}>{user?.name}</Title>\n                <Avatar src={user?.avatar} alt={user?.name} radius=\"xl\" />\n            </Group>\n        </MantineHeader>\n    ) : null;\n};\n","import React from \"react\";\nimport {\n    useRouterContext,\n    TitleProps,\n    useRouterType,\n    useLink,\n} from \"@refinedev/core\";\nimport { Center } from \"@mantine/core\";\n\nexport const Title: React.FC<TitleProps> = ({ collapsed }) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <ActiveLink to=\"/\">\n            <Center p=\"xs\">\n                {collapsed ? (\n                    <img\n                        src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine-mini.svg\"\n                        alt=\"Refine\"\n                        style={{ maxHeight: \"38px\" }}\n                    />\n                ) : (\n                    <img\n                        src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                        alt=\"Refine\"\n                        width=\"140px\"\n                    />\n                )}\n            </Center>\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport { Box } from \"@mantine/core\";\n\nimport { RefineThemedLayoutProps } from \"./types\";\nimport { ThemedSider as DefaultSider } from \"./sider\";\nimport { ThemedHeader as DefaultHeader } from \"./header\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/mantine/components/mantine-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedLayout: React.FC<RefineThemedLayoutProps> = ({\n    Sider,\n    Header,\n    Title,\n    Footer,\n    OffLayoutArea,\n    children,\n}) => {\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n\n    return (\n        <Box sx={{ display: \"flex\" }}>\n            <SiderToRender Title={Title} />\n            <Box\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    flex: 1,\n                    overflow: \"auto\",\n                }}\n            >\n                <HeaderToRender />\n                <Box\n                    component=\"main\"\n                    sx={(theme) => ({\n                        padding: theme.spacing.sm,\n                    })}\n                >\n                    {children}\n                </Box>\n                {Footer && <Footer />}\n            </Box>\n            {OffLayoutArea && <OffLayoutArea />}\n        </Box>\n    );\n};\n","import React, { useState } from \"react\";\nimport {\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useLink,\n    useLogout,\n    useMenu,\n    useActiveAuthProvider,\n    useRefineContext,\n    useRouterContext,\n    useRouterType,\n    useTitle,\n    useTranslate,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\nimport {\n    ActionIcon,\n    Box,\n    Drawer,\n    Navbar,\n    NavLink,\n    NavLinkStylesNames,\n    NavLinkStylesParams,\n    ScrollArea,\n    MediaQuery,\n    Button,\n    Tooltip,\n    TooltipProps,\n    Styles,\n    useMantineTheme,\n    Flex,\n} from \"@mantine/core\";\nimport {\n    IconList,\n    IconMenu2,\n    IconIndentDecrease,\n    IconIndentIncrease,\n    IconPower,\n    IconDashboard,\n} from \"@tabler/icons\";\nimport { RefineThemedLayoutSiderProps } from \"../types\";\n\nimport { ThemedTitle as DefaultTitle } from \"@components\";\n\nconst defaultNavIcon = <IconList size={20} />;\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/mantine/components/mantine-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedSider: React.FC<RefineThemedLayoutSiderProps> = ({\n    render,\n    meta,\n    Title: TitleFromProps,\n}) => {\n    const theme = useMantineTheme();\n    const [collapsed, setCollapsed] = useState(false);\n    const [opened, setOpened] = useState(false);\n\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n\n    const { defaultOpenKeys, menuItems, selectedKey } = useMenu({ meta });\n    const TitleFromContext = useTitle();\n    const isExistAuthentication = useIsExistAuthentication();\n    const t = useTranslate();\n    const { hasDashboard } = useRefineContext();\n    const authProvider = useActiveAuthProvider();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n    const drawerWidth = () => {\n        if (collapsed) return 80;\n        return 200;\n    };\n\n    const borderColor =\n        theme.colorScheme === \"dark\"\n            ? theme.colors.dark[6]\n            : theme.colors.gray[2];\n\n    const commonNavLinkStyles: Styles<NavLinkStylesNames, NavLinkStylesParams> =\n        {\n            root: {\n                display: \"flex\",\n                marginTop: \"12px\",\n                justifyContent: collapsed && !opened ? \"center\" : \"flex-start\",\n            },\n            icon: {\n                marginRight: collapsed && !opened ? 0 : 12,\n            },\n            body: {\n                display: collapsed && !opened ? \"none\" : \"flex\",\n            },\n        };\n\n    const commonTooltipProps: Partial<TooltipProps> = {\n        disabled: !collapsed || opened,\n        position: \"right\",\n        withinPortal: true,\n        withArrow: true,\n        arrowSize: 8,\n        arrowOffset: 12,\n        offset: 4,\n    };\n\n    const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n        return tree.map((item) => {\n            const { icon, label, route, name, children } = item;\n\n            const isSelected = item.key === selectedKey;\n            const isParent = children.length > 0;\n\n            const additionalLinkProps = isParent\n                ? {}\n                : { component: Link as any, to: route };\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{\n                        resource: item,\n                    }}\n                >\n                    <Tooltip label={label} {...commonTooltipProps}>\n                        <NavLink\n                            key={item.key}\n                            label={collapsed && !opened ? null : label}\n                            icon={icon ?? defaultNavIcon}\n                            active={isSelected}\n                            childrenOffset={collapsed && !opened ? 0 : 12}\n                            defaultOpened={defaultOpenKeys.includes(\n                                item.key || \"\",\n                            )}\n                            pl={collapsed || opened ? \"12px\" : \"18px\"}\n                            styles={commonNavLinkStyles}\n                            {...additionalLinkProps}\n                        >\n                            {isParent && renderTreeView(children, selectedKey)}\n                        </NavLink>\n                    </Tooltip>\n                </CanAccess>\n            );\n        });\n    };\n\n    const items = renderTreeView(menuItems, selectedKey);\n\n    const dashboard = hasDashboard ? (\n        <CanAccess resource=\"dashboard\" action=\"list\">\n            <Tooltip\n                label={t(\"dashboard.title\", \"Dashboard\")}\n                {...commonTooltipProps}\n            >\n                <NavLink\n                    key=\"dashboard\"\n                    label={\n                        collapsed && !opened\n                            ? null\n                            : t(\"dashboard.title\", \"Dashboard\")\n                    }\n                    icon={<IconDashboard size={20} />}\n                    component={Link as any}\n                    to=\"/\"\n                    active={selectedKey === \"/\"}\n                    styles={commonNavLinkStyles}\n                />\n            </Tooltip>\n        </CanAccess>\n    ) : null;\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                t(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Tooltip label={t(\"buttons.logout\", \"Logout\")} {...commonTooltipProps}>\n            <NavLink\n                key=\"logout\"\n                label={\n                    collapsed && !opened ? null : t(\"buttons.logout\", \"Logout\")\n                }\n                icon={<IconPower size={20} />}\n                pl={collapsed || opened ? \"12px\" : \"18px\"}\n                onClick={handleLogout}\n                styles={commonNavLinkStyles}\n            />\n        </Tooltip>\n    );\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                logout,\n                items,\n                collapsed,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    return (\n        <>\n            <MediaQuery largerThan=\"md\" styles={{ display: \"none\" }}>\n                <Box\n                    sx={{ position: \"fixed\", top: 16, left: 16, zIndex: 1199 }}\n                >\n                    <ActionIcon\n                        color=\"gray\"\n                        variant=\"filled\"\n                        size={32}\n                        onClick={() => setOpened((prev) => !prev)}\n                    >\n                        <IconMenu2 />\n                    </ActionIcon>\n                </Box>\n            </MediaQuery>\n\n            <MediaQuery largerThan=\"md\" styles={{ display: \"none\" }}>\n                <Drawer\n                    opened={opened}\n                    onClose={() => setOpened(false)}\n                    size={200}\n                    zIndex={1200}\n                    withCloseButton={false}\n                    styles={{\n                        drawer: {\n                            overflow: \"hidden\",\n                        },\n                    }}\n                >\n                    <Navbar.Section\n                        pl={8}\n                        sx={{\n                            height: \"64px\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            paddingLeft: \"10px\",\n                            borderBottom: `1px solid ${borderColor}`,\n                        }}\n                    >\n                        <RenderToTitle collapsed={false} />\n                    </Navbar.Section>\n                    <Navbar.Section\n                        component={ScrollArea}\n                        grow\n                        mx=\"-xs\"\n                        px=\"xs\"\n                    >\n                        {renderSider()}\n                    </Navbar.Section>\n                </Drawer>\n            </MediaQuery>\n\n            <MediaQuery smallerThan=\"md\" styles={{ display: \"none\" }}>\n                <Box\n                    sx={{\n                        width: drawerWidth(),\n                        transition: \"width 200ms ease, min-width 200ms ease\",\n                        flexShrink: 0,\n                    }}\n                />\n            </MediaQuery>\n\n            <MediaQuery smallerThan=\"md\" styles={{ display: \"none\" }}>\n                <Navbar\n                    width={{ base: drawerWidth() }}\n                    sx={{\n                        overflow: \"hidden\",\n                        transition: \"width 200ms ease, min-width 200ms ease\",\n                        position: \"fixed\",\n                        top: 0,\n                        height: \"100vh\",\n                        borderRight: 0,\n                        zIndex: 199,\n                    }}\n                >\n                    <Flex\n                        h=\"64px\"\n                        pl={collapsed ? 0 : \"16px\"}\n                        align=\"center\"\n                        justify={collapsed ? \"center\" : \"flex-start\"}\n                        sx={{\n                            borderBottom: `1px solid ${borderColor}`,\n                        }}\n                    >\n                        <RenderToTitle collapsed={collapsed} />\n                    </Flex>\n                    <Navbar.Section\n                        grow\n                        component={ScrollArea}\n                        mx=\"-xs\"\n                        px=\"xs\"\n                        sx={{\n                            \".mantine-ScrollArea-viewport\": {\n                                borderRight: `1px solid ${borderColor}`,\n                                borderBottom: `1px solid ${borderColor}`,\n                            },\n                        }}\n                    >\n                        {renderSider()}\n                    </Navbar.Section>\n                    <Navbar.Section\n                        sx={{\n                            borderRadius: 0,\n                            borderRight: `1px solid ${borderColor}`,\n                        }}\n                    >\n                        <Button\n                            variant=\"subtle\"\n                            color=\"gray\"\n                            size=\"md\"\n                            fullWidth\n                            sx={{\n                                border: \"none\",\n                            }}\n                            onClick={() => setCollapsed((prev) => !prev)}\n                        >\n                            {collapsed ? (\n                                <IconIndentIncrease size={16} />\n                            ) : (\n                                <IconIndentDecrease size={16} />\n                            )}\n                        </Button>\n                    </Navbar.Section>\n                </Navbar>\n            </MediaQuery>\n        </>\n    );\n};\n","import React from \"react\";\nimport { useGetIdentity, useActiveAuthProvider } from \"@refinedev/core\";\nimport {\n    Avatar,\n    Group,\n    Header as MantineHeader,\n    Title,\n    useMantineTheme,\n} from \"@mantine/core\";\n\nimport { RefineThemedLayoutHeaderProps } from \"../types\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/mantine/components/mantine-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedHeader: React.FC<RefineThemedLayoutHeaderProps> = () => {\n    const theme = useMantineTheme();\n\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const borderColor =\n        theme.colorScheme === \"dark\"\n            ? theme.colors.dark[6]\n            : theme.colors.gray[2];\n\n    return (\n        <MantineHeader\n            zIndex={199}\n            height={64}\n            py={6}\n            px=\"sm\"\n            sx={{\n                borderBottom: `1px solid ${borderColor}`,\n            }}\n        >\n            <Group\n                position=\"right\"\n                align=\"center\"\n                sx={{\n                    height: \"100%\",\n                }}\n            >\n                <Title\n                    order={6}\n                    sx={{\n                        cursor: \"pointer\",\n                    }}\n                >\n                    {user?.name}\n                </Title>\n                <Avatar src={user?.avatar} alt={user?.name} radius=\"xl\" />\n            </Group>\n        </MantineHeader>\n    );\n};\n","import React from \"react\";\nimport { useRouterContext, useRouterType, useLink } from \"@refinedev/core\";\nimport { Center, Text, useMantineTheme } from \"@mantine/core\";\nimport { RefineLayoutThemedTitleProps } from \"../types\";\n\nconst defaultText = \"refine Project\";\n\nconst defaultIcon = (\n    <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-testid=\"refine-logo\"\n    >\n        <path\n            d=\"M12 9C13.6569 9 15 7.65685 15 6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6C9 7.65685 10.3431 9 12 9Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM8 6C8 3.79086 9.79086 2 12 2C14.2091 2 16 3.79086 16 6V18C16 20.2091 14.2091 22 12 22C9.79086 22 8 20.2091 8 18V6Z\"\n            fill=\"currentColor\"\n        />\n    </svg>\n);\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/mantine/components/mantine-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedTitle: React.FC<RefineLayoutThemedTitleProps> = ({\n    collapsed,\n    icon = defaultIcon,\n    text = defaultText,\n    wrapperStyles = {},\n}) => {\n    const theme = useMantineTheme();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <ActiveLink to=\"/\" style={{ all: \"unset\" }}>\n            <Center\n                style={{\n                    cursor: \"pointer\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: collapsed ? \"center\" : \"flex-start\",\n                    gap: \"8px\",\n                    ...wrapperStyles,\n                }}\n            >\n                <Text\n                    lh={0}\n                    fz=\"inherit\"\n                    color={theme.colorScheme === \"dark\" ? \"brand.5\" : \"brand.6\"}\n                >\n                    {icon}\n                </Text>\n                {!collapsed && (\n                    <Text\n                        fz=\"inherit\"\n                        color={theme.colorScheme === \"dark\" ? \"white\" : \"black\"}\n                    >\n                        {text}\n                    </Text>\n                )}\n            </Center>\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport { Box } from \"@mantine/core\";\n\nimport { RefineThemedLayoutV2Props } from \"./types\";\nimport { ThemedSiderV2 as DefaultSider } from \"./sider\";\nimport { ThemedHeaderV2 as DefaultHeader } from \"./header\";\nimport { ThemedLayoutContextProvider } from \"../../contexts\";\n\nexport const ThemedLayoutV2: React.FC<RefineThemedLayoutV2Props> = ({\n    Sider,\n    Header,\n    Title,\n    Footer,\n    OffLayoutArea,\n    initialSiderCollapsed,\n    children,\n}) => {\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n\n    return (\n        <ThemedLayoutContextProvider\n            initialSiderCollapsed={initialSiderCollapsed}\n        >\n            <Box sx={{ display: \"flex\" }}>\n                <SiderToRender Title={Title} />\n                <Box\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        flex: 1,\n                    }}\n                >\n                    <HeaderToRender />\n                    <Box\n                        component=\"main\"\n                        sx={(theme) => ({\n                            padding: theme.spacing.sm,\n                        })}\n                    >\n                        {children}\n                    </Box>\n                    {Footer && <Footer />}\n                </Box>\n                {OffLayoutArea && <OffLayoutArea />}\n            </Box>\n        </ThemedLayoutContextProvider>\n    );\n};\n","import React, { CSSProperties } from \"react\";\nimport {\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useLink,\n    useLogout,\n    useMenu,\n    useActiveAuthProvider,\n    useRefineContext,\n    useRouterContext,\n    useRouterType,\n    useTitle,\n    useTranslate,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\nimport {\n    Box,\n    Drawer,\n    Navbar,\n    NavLink,\n    NavLinkStylesNames,\n    NavLinkStylesParams,\n    ScrollArea,\n    MediaQuery,\n    Tooltip,\n    TooltipProps,\n    Styles,\n    useMantineTheme,\n    Flex,\n} from \"@mantine/core\";\nimport { IconList, IconPower, IconDashboard } from \"@tabler/icons\";\n\nimport { ThemedTitleV2 as DefaultTitle } from \"@components\";\nimport { useThemedLayoutContext } from \"@hooks\";\n\nimport { RefineThemedLayoutV2SiderProps } from \"../types\";\n\nconst defaultNavIcon = <IconList size={20} />;\n\nexport const ThemedSiderV2: React.FC<RefineThemedLayoutV2SiderProps> = ({\n    render,\n    meta,\n    Title: TitleFromProps,\n    activeItemDisabled = false,\n}) => {\n    const theme = useMantineTheme();\n    const { siderCollapsed, mobileSiderOpen, setMobileSiderOpen } =\n        useThemedLayoutContext();\n\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const Link = routerType === \"legacy\" ? LegacyLink : NewLink;\n\n    const { defaultOpenKeys, menuItems, selectedKey } = useMenu({ meta });\n    const TitleFromContext = useTitle();\n    const isExistAuthentication = useIsExistAuthentication();\n    const t = useTranslate();\n    const { hasDashboard } = useRefineContext();\n    const authProvider = useActiveAuthProvider();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n    const drawerWidth = () => {\n        if (siderCollapsed) return 80;\n        return 200;\n    };\n\n    const borderColor =\n        theme.colorScheme === \"dark\"\n            ? theme.colors.dark[6]\n            : theme.colors.gray[2];\n\n    const commonNavLinkStyles: Styles<NavLinkStylesNames, NavLinkStylesParams> =\n        {\n            root: {\n                display: \"flex\",\n                marginTop: \"12px\",\n                justifyContent:\n                    siderCollapsed && !mobileSiderOpen\n                        ? \"center\"\n                        : \"flex-start\",\n            },\n            icon: {\n                marginRight: siderCollapsed && !mobileSiderOpen ? 0 : 12,\n            },\n            body: {\n                display: siderCollapsed && !mobileSiderOpen ? \"none\" : \"flex\",\n            },\n        };\n\n    const commonTooltipProps: Partial<TooltipProps> = {\n        disabled: !siderCollapsed || mobileSiderOpen,\n        position: \"right\",\n        withinPortal: true,\n        withArrow: true,\n        arrowSize: 8,\n        arrowOffset: 12,\n        offset: 4,\n    };\n\n    const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n        return tree.map((item) => {\n            const { icon, label, route, name, children } = item;\n\n            const isSelected = item.key === selectedKey;\n            const isParent = children.length > 0;\n\n            const additionalLinkProps = isParent\n                ? {}\n                : { component: Link as any, to: route };\n\n            const disablePointerStyle: CSSProperties =\n                activeItemDisabled && isSelected\n                    ? { pointerEvents: \"none\" }\n                    : {};\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{\n                        resource: item,\n                    }}\n                >\n                    <Tooltip label={label} {...commonTooltipProps}>\n                        <NavLink\n                            key={item.key}\n                            label={\n                                siderCollapsed && !mobileSiderOpen\n                                    ? null\n                                    : label\n                            }\n                            icon={icon ?? defaultNavIcon}\n                            active={isSelected}\n                            childrenOffset={\n                                siderCollapsed && !mobileSiderOpen ? 0 : 12\n                            }\n                            defaultOpened={defaultOpenKeys.includes(\n                                item.key || \"\",\n                            )}\n                            pl={\n                                siderCollapsed || mobileSiderOpen\n                                    ? \"12px\"\n                                    : \"18px\"\n                            }\n                            styles={commonNavLinkStyles}\n                            style={disablePointerStyle}\n                            {...additionalLinkProps}\n                        >\n                            {isParent && renderTreeView(children, selectedKey)}\n                        </NavLink>\n                    </Tooltip>\n                </CanAccess>\n            );\n        });\n    };\n\n    const items = renderTreeView(menuItems, selectedKey);\n\n    const dashboard = hasDashboard ? (\n        <CanAccess resource=\"dashboard\" action=\"list\">\n            <Tooltip\n                label={t(\"dashboard.title\", \"Dashboard\")}\n                {...commonTooltipProps}\n            >\n                <NavLink\n                    key=\"dashboard\"\n                    label={\n                        siderCollapsed && !mobileSiderOpen\n                            ? null\n                            : t(\"dashboard.title\", \"Dashboard\")\n                    }\n                    icon={<IconDashboard size={20} />}\n                    component={Link as any}\n                    to=\"/\"\n                    active={selectedKey === \"/\"}\n                    styles={commonNavLinkStyles}\n                />\n            </Tooltip>\n        </CanAccess>\n    ) : null;\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                t(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Tooltip label={t(\"buttons.logout\", \"Logout\")} {...commonTooltipProps}>\n            <NavLink\n                key=\"logout\"\n                label={\n                    siderCollapsed && !mobileSiderOpen\n                        ? null\n                        : t(\"buttons.logout\", \"Logout\")\n                }\n                icon={<IconPower size={20} />}\n                pl={siderCollapsed || mobileSiderOpen ? \"12px\" : \"18px\"}\n                onClick={handleLogout}\n                styles={commonNavLinkStyles}\n            />\n        </Tooltip>\n    );\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                logout,\n                items,\n                collapsed: siderCollapsed,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    return (\n        <>\n            <MediaQuery largerThan=\"md\" styles={{ display: \"none\" }}>\n                <Drawer\n                    opened={mobileSiderOpen}\n                    onClose={() => setMobileSiderOpen(false)}\n                    size={200}\n                    zIndex={1200}\n                    withCloseButton={false}\n                    styles={{\n                        drawer: {\n                            overflow: \"hidden\",\n                        },\n                    }}\n                >\n                    <Navbar.Section\n                        pl={8}\n                        sx={{\n                            height: \"64px\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            paddingLeft: \"10px\",\n                            borderBottom: `1px solid ${borderColor}`,\n                        }}\n                    >\n                        <RenderToTitle collapsed={false} />\n                    </Navbar.Section>\n                    <Navbar.Section\n                        component={ScrollArea}\n                        grow\n                        mx=\"-xs\"\n                        px=\"xs\"\n                    >\n                        {renderSider()}\n                    </Navbar.Section>\n                </Drawer>\n            </MediaQuery>\n\n            <MediaQuery smallerThan=\"md\" styles={{ display: \"none\" }}>\n                <Box\n                    sx={{\n                        width: drawerWidth(),\n                        transition: \"width 200ms ease, min-width 200ms ease\",\n                        flexShrink: 0,\n                    }}\n                />\n            </MediaQuery>\n\n            <MediaQuery smallerThan=\"md\" styles={{ display: \"none\" }}>\n                <Navbar\n                    width={{ base: drawerWidth() }}\n                    sx={{\n                        overflow: \"hidden\",\n                        transition: \"width 200ms ease, min-width 200ms ease\",\n                        position: \"fixed\",\n                        top: 0,\n                        height: \"100vh\",\n                        borderRight: 0,\n                        zIndex: 199,\n                    }}\n                >\n                    <Flex\n                        h=\"64px\"\n                        pl={siderCollapsed ? 0 : \"16px\"}\n                        align=\"center\"\n                        justify={siderCollapsed ? \"center\" : \"flex-start\"}\n                        sx={{\n                            borderBottom: `1px solid ${borderColor}`,\n                        }}\n                    >\n                        <RenderToTitle collapsed={siderCollapsed} />\n                    </Flex>\n                    <Navbar.Section\n                        grow\n                        component={ScrollArea}\n                        mx=\"-xs\"\n                        px=\"xs\"\n                        sx={{\n                            \".mantine-ScrollArea-viewport\": {\n                                borderRight: `1px solid ${borderColor}`,\n                                borderBottom: `1px solid ${borderColor}`,\n                            },\n                        }}\n                    >\n                        {renderSider()}\n                    </Navbar.Section>\n                </Navbar>\n            </MediaQuery>\n        </>\n    );\n};\n","import React, { useEffect } from \"react\";\nimport {\n    useForm as useMantineForm,\n    UseFormReturnType as UseMantineFormReturnType,\n} from \"@mantine/form\";\nimport { UseFormInput } from \"@mantine/form/lib/types\";\nimport {\n    BaseRecord,\n    HttpError,\n    useForm as useFormCore,\n    useWarnAboutChange,\n    UseFormProps as UseFormCoreProps,\n    UseFormReturnType as UseFormReturnTypeCore,\n    useTranslate,\n    useRefineContext,\n} from \"@refinedev/core\";\n\ntype FormVariableType<TVariables, TTransformed> = ReturnType<\n    NonNullable<\n        UseFormInput<\n            TVariables,\n            (values: TVariables) => TTransformed\n        >[\"transformValues\"]\n    >\n>;\n\nexport type UseFormReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = Record<string, unknown>,\n    TTransformed = TVariables,\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseMantineFormReturnType<\n    TVariables,\n    (values: TVariables) => TTransformed\n> & {\n    refineCore: UseFormReturnTypeCore<\n        TQueryFnData,\n        TError,\n        FormVariableType<TVariables, TTransformed>,\n        TData,\n        TResponse,\n        TResponseError\n    >;\n    saveButtonProps: {\n        disabled: boolean;\n        onClick: (e: React.PointerEvent<HTMLButtonElement>) => void;\n    };\n};\n\nexport type UseFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = Record<string, unknown>,\n    TTransformed = TVariables,\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = {\n    refineCoreProps?: UseFormCoreProps<\n        TQueryFnData,\n        TError,\n        FormVariableType<TVariables, TTransformed>,\n        TData,\n        TResponse,\n        TResponseError\n    > & {\n        warnWhenUnsavedChanges?: boolean;\n    };\n} & UseFormInput<TVariables, (values: TVariables) => TTransformed> & {\n        /**\n         * Disables server-side validation\n         * @default false\n         * @see {@link https://refine.dev/docs/advanced-tutorials/forms/server-side-form-validation/}\n         */\n        disableServerSideValidation?: boolean;\n    };\n\nexport const useForm = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = Record<string, unknown>,\n    TTransformed = TVariables,\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n>({\n    refineCoreProps,\n    disableServerSideValidation: disableServerSideValidationProp = false,\n    ...rest\n}: UseFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TTransformed,\n    TData,\n    TResponse,\n    TResponseError\n> = {}): UseFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TTransformed,\n    TData,\n    TResponse,\n    TResponseError\n> => {\n    const { options } = useRefineContext();\n    const disableServerSideValidation =\n        options?.disableServerSideValidation || disableServerSideValidationProp;\n\n    const translate = useTranslate();\n\n    const warnWhenUnsavedChangesProp = refineCoreProps?.warnWhenUnsavedChanges;\n\n    const {\n        warnWhenUnsavedChanges: warnWhenUnsavedChangesRefine,\n        setWarnWhen,\n    } = useWarnAboutChange();\n    const warnWhenUnsavedChanges =\n        warnWhenUnsavedChangesProp ?? warnWhenUnsavedChangesRefine;\n\n    const useMantineFormResult = useMantineForm<\n        TVariables,\n        (values: TVariables) => TTransformed\n    >({\n        ...rest,\n    });\n\n    const {\n        setValues,\n        onSubmit: onMantineSubmit,\n        isDirty,\n        resetDirty,\n        setFieldError,\n        values,\n    } = useMantineFormResult;\n\n    const useFormCoreResult = useFormCore<\n        TQueryFnData,\n        TError,\n        FormVariableType<TVariables, TTransformed>,\n        TData,\n        TResponse,\n        TResponseError\n    >({\n        ...refineCoreProps,\n        onMutationError: (error, _variables, _context) => {\n            if (disableServerSideValidation) {\n                refineCoreProps?.onMutationError?.(error, _variables, _context);\n                return;\n            }\n\n            const errors = error?.errors;\n\n            for (const key in errors) {\n                const fieldError = errors[key];\n\n                let newError = \"\";\n\n                if (Array.isArray(fieldError)) {\n                    newError = fieldError.join(\" \");\n                }\n\n                if (typeof fieldError === \"string\") {\n                    newError = fieldError;\n                }\n\n                if (typeof fieldError === \"boolean\") {\n                    newError = \"Field is not valid.\";\n                }\n\n                if (typeof fieldError === \"object\" && \"key\" in fieldError) {\n                    const translatedMessage = translate(\n                        fieldError.key,\n                        fieldError.message,\n                    );\n\n                    newError = translatedMessage;\n                }\n                setFieldError(key, newError);\n            }\n\n            refineCoreProps?.onMutationError?.(error, _variables, _context);\n        },\n    });\n\n    const { queryResult, formLoading, onFinish, onFinishAutoSave } =\n        useFormCoreResult;\n\n    useEffect(() => {\n        if (typeof queryResult?.data !== \"undefined\") {\n            const fields: any = {};\n            const registeredFields = Object.keys(rest.initialValues ?? {});\n            Object.entries(queryResult?.data?.data || {}).forEach(\n                ([key, value]) => {\n                    if (registeredFields.includes(key)) {\n                        fields[key] = value;\n                    }\n                },\n            );\n            setValues(fields);\n            resetDirty(fields);\n        }\n    }, [queryResult?.data]);\n\n    const isValuesChanged = isDirty();\n\n    useEffect(() => {\n        if (warnWhenUnsavedChanges) {\n            setWarnWhen(isValuesChanged);\n        }\n    }, [isValuesChanged]);\n\n    useEffect(() => {\n        if (isValuesChanged && refineCoreProps?.autoSave && values) {\n            setWarnWhen(false);\n\n            const transformedValues = rest.transformValues\n                ? rest.transformValues(values)\n                : (values as unknown as TTransformed);\n\n            onFinishAutoSave(transformedValues);\n        }\n    }, [values]);\n\n    const onSubmit: (typeof useMantineFormResult)[\"onSubmit\"] =\n        (handleSubmit, handleValidationFailure) => async (e) => {\n            setWarnWhen(false);\n            return await onMantineSubmit(\n                handleSubmit,\n                handleValidationFailure,\n            )(e);\n        };\n\n    const saveButtonProps = {\n        disabled: formLoading,\n        onClick: (e: React.PointerEvent<HTMLButtonElement>) => {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-expect-error event type is not compatible with pointer event\n            onSubmit(onFinish, () => false)(e);\n        },\n    };\n\n    return {\n        ...useMantineFormResult,\n        onSubmit,\n        refineCore: useFormCoreResult,\n        saveButtonProps,\n    };\n};\n","import { useCallback } from \"react\";\nimport {\n    BaseKey,\n    BaseRecord,\n    FormWithSyncWithLocationParams,\n    HttpError,\n    useGo,\n    useModal,\n    useParsed,\n    useResource,\n    useUserFriendlyName,\n    useTranslate,\n    useWarnAboutChange,\n    useInvalidate,\n} from \"@refinedev/core\";\n\nimport { useForm, UseFormProps, UseFormReturnType } from \"../useForm\";\nimport { UseFormInput } from \"@mantine/form/lib/types\";\nimport React from \"react\";\n\nexport type UseModalFormReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = Record<string, unknown>,\n    TTransformed = TVariables,\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TTransformed,\n    TData,\n    TResponse,\n    TResponseError\n> & {\n    modal: {\n        submit: (\n            values: ReturnType<\n                NonNullable<\n                    UseFormInput<\n                        TVariables,\n                        (values: TVariables) => TTransformed\n                    >[\"transformValues\"]\n                >\n            >,\n        ) => void;\n        close: () => void;\n        show: (id?: BaseKey) => void;\n        visible: boolean;\n        title: string;\n    };\n};\n\nexport type UseModalFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = Record<string, unknown>,\n    TTransformed = TVariables,\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TTransformed,\n    TData,\n    TResponse,\n    TResponseError\n> & {\n    modalProps?: {\n        defaultVisible?: boolean;\n        autoSubmitClose?: boolean;\n        autoResetForm?: boolean;\n    };\n} & FormWithSyncWithLocationParams;\n\nexport const useModalForm = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = Record<string, unknown>,\n    TTransformed = TVariables,\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n>({\n    modalProps,\n    refineCoreProps,\n    syncWithLocation,\n    ...rest\n}: UseModalFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TTransformed,\n    TData,\n    TResponse,\n    TResponseError\n> = {}): UseModalFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TTransformed,\n    TData,\n    TResponse,\n    TResponseError\n> => {\n    const [initiallySynced, setInitiallySynced] = React.useState(false);\n    const invalidate = useInvalidate();\n\n    const translate = useTranslate();\n\n    const {\n        resource: resourceProp,\n        action: actionProp,\n        autoSave,\n        invalidates,\n        dataProviderName,\n    } = refineCoreProps ?? {};\n    const {\n        defaultVisible = false,\n        autoSubmitClose = true,\n        autoResetForm = true,\n    } = modalProps ?? {};\n\n    const {\n        resource,\n        action: actionFromParams,\n        identifier,\n    } = useResource(resourceProp);\n\n    const parsed = useParsed();\n    const go = useGo();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const action = actionProp ?? actionFromParams ?? \"\";\n\n    const syncingId = !(\n        typeof syncWithLocation === \"object\" &&\n        syncWithLocation?.syncId === false\n    );\n\n    const syncWithLocationKey =\n        typeof syncWithLocation === \"object\" && \"key\" in syncWithLocation\n            ? syncWithLocation.key\n            : resource && action && syncWithLocation\n            ? `modal-${identifier}-${action}`\n            : undefined;\n\n    const useMantineFormResult = useForm<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TTransformed,\n        TData,\n        TResponse,\n        TResponseError\n    >({\n        refineCoreProps: {\n            ...refineCoreProps,\n            meta: {\n                ...(syncWithLocationKey\n                    ? { [syncWithLocationKey]: undefined }\n                    : {}),\n                ...refineCoreProps?.meta,\n            },\n        },\n        ...rest,\n    });\n\n    const {\n        reset,\n        refineCore: { onFinish, id, setId, autoSaveProps },\n        saveButtonProps,\n        onSubmit,\n    } = useMantineFormResult;\n\n    const { visible, show, close } = useModal({\n        defaultVisible,\n    });\n\n    React.useEffect(() => {\n        if (initiallySynced === false && syncWithLocationKey) {\n            const openStatus = parsed?.params?.[syncWithLocationKey]?.open;\n            if (typeof openStatus === \"boolean\") {\n                if (openStatus) {\n                    show();\n                }\n            } else if (typeof openStatus === \"string\") {\n                if (openStatus === \"true\") {\n                    show();\n                }\n            }\n\n            if (syncingId) {\n                const idFromParams = parsed?.params?.[syncWithLocationKey]?.id;\n                if (idFromParams) {\n                    setId?.(idFromParams);\n                }\n            }\n\n            setInitiallySynced(true);\n        }\n    }, [syncWithLocationKey, parsed, syncingId, setId]);\n\n    React.useEffect(() => {\n        if (initiallySynced === true) {\n            if (visible && syncWithLocationKey) {\n                go({\n                    query: {\n                        [syncWithLocationKey]: {\n                            ...parsed?.params?.[syncWithLocationKey],\n                            open: true,\n                            ...(syncingId && id && { id }),\n                        },\n                    },\n                    options: { keepQuery: true },\n                    type: \"replace\",\n                });\n            } else if (syncWithLocationKey && !visible) {\n                go({\n                    query: {\n                        [syncWithLocationKey]: undefined,\n                    },\n                    options: { keepQuery: true },\n                    type: \"replace\",\n                });\n            }\n        }\n    }, [id, visible, show, syncWithLocationKey, syncingId]);\n\n    const submit = async (\n        values: ReturnType<\n            NonNullable<\n                UseFormInput<\n                    TVariables,\n                    (values: TVariables) => TTransformed\n                >[\"transformValues\"]\n            >\n        >,\n    ) => {\n        await onFinish(values);\n\n        if (autoSubmitClose) {\n            close();\n        }\n\n        if (autoResetForm) {\n            reset();\n        }\n    };\n\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const handleClose = useCallback(() => {\n        if (autoSaveProps.status === \"success\" && autoSave?.invalidateOnClose) {\n            invalidate({\n                id,\n                invalidates: invalidates || [\"list\", \"many\", \"detail\"],\n                dataProviderName,\n                resource: identifier,\n            });\n        }\n\n        if (warnWhen) {\n            const warnWhenConfirm = window.confirm(\n                translate(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (warnWhenConfirm) {\n                setWarnWhen(false);\n            } else {\n                return;\n            }\n        }\n\n        setId?.(undefined);\n        close();\n    }, [warnWhen, autoSaveProps.status]);\n\n    const handleShow = useCallback(\n        (showId?: BaseKey) => {\n            if (typeof showId !== \"undefined\") {\n                setId?.(showId);\n            }\n            const needsIdToOpen = action === \"edit\" || action === \"clone\";\n            const hasId =\n                typeof showId !== \"undefined\" || typeof id !== \"undefined\";\n            if (needsIdToOpen ? hasId : true) {\n                show();\n            }\n        },\n        [id],\n    );\n\n    const title = translate(\n        `${identifier}.titles.${actionProp}`,\n        undefined,\n        `${getUserFriendlyName(\n            `${actionProp} ${\n                resource?.meta?.label ??\n                resource?.options?.label ??\n                resource?.label ??\n                identifier\n            }`,\n            \"singular\",\n        )}`,\n    );\n\n    return {\n        modal: {\n            submit,\n            close: handleClose,\n            show: handleShow,\n            visible,\n            title,\n        },\n        ...useMantineFormResult,\n        saveButtonProps: {\n            ...saveButtonProps,\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-expect-error event type is not compatible with pointer event\n            onClick: (e) => onSubmit(submit)(e),\n        },\n    };\n};\n","import { useState } from \"react\";\nimport { BaseRecord, HttpError } from \"@refinedev/core\";\n\nimport { useForm, UseFormProps, UseFormReturnType } from \"../useForm\";\n\nexport type UseStepsFormReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = Record<string, unknown>,\n    TTransformed = TVariables,\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TTransformed,\n    TData,\n    TResponse,\n    TResponseError\n> & {\n    steps: {\n        currentStep: number;\n        gotoStep: (step: number) => void;\n    };\n};\n\nexport type UseStepsFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = Record<string, unknown>,\n    TTransformed = TVariables,\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TTransformed,\n    TData,\n    TResponse,\n    TResponseError\n> & {\n    /**\n     * @description Configuration object for the steps.\n     * `defaultStep`: Allows you to set the initial step.\n     * \n     * `isBackValidate`: Whether to validation the current step when going back.\n     * @type `{\n      defaultStep?: number;\n      isBackValidate?: boolean;\n      }`\n     * @default `defaultStep = 0` `isBackValidate = false`\n     */\n    stepsProps?: {\n        defaultStep?: number;\n        isBackValidate?: boolean;\n    };\n};\n\nexport const useStepsForm = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = Record<string, unknown>,\n    TTransformed = TVariables,\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n>({\n    stepsProps,\n    ...rest\n}: UseStepsFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TTransformed,\n    TData,\n    TResponse,\n    TResponseError\n> = {}): UseStepsFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TTransformed,\n    TData,\n    TResponse,\n    TResponseError\n> => {\n    const { defaultStep = 0, isBackValidate = false } = stepsProps ?? {};\n    const [current, setCurrent] = useState(defaultStep);\n\n    const useMantineFormResult = useForm<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TTransformed,\n        TData,\n        TResponse,\n        TResponseError\n    >({\n        ...rest,\n    });\n\n    const { validate } = useMantineFormResult;\n\n    const go = (step: number) => {\n        let targetStep = step;\n\n        if (step < 0) {\n            targetStep = 0;\n        }\n\n        setCurrent(targetStep);\n    };\n\n    const gotoStep = (step: number) => {\n        if (step === current) {\n            return;\n        }\n\n        if (step < current && !isBackValidate) {\n            go(step);\n            return;\n        }\n\n        const isValid = !validate().hasErrors;\n        if (isValid) {\n            go(step);\n        }\n    };\n\n    return {\n        ...useMantineFormResult,\n        steps: {\n            currentStep: current,\n            gotoStep,\n        },\n    };\n};\n","import { SelectProps } from \"@mantine/core\";\nimport { QueryObserverResult } from \"@tanstack/react-query\";\n\nimport {\n    useSelect as useSelectCore,\n    BaseRecord,\n    GetManyResponse,\n    GetListResponse,\n    HttpError,\n    UseSelectProps,\n} from \"@refinedev/core\";\n\nexport type UseSelectReturnType<TData extends BaseRecord = BaseRecord> = {\n    selectProps: SelectProps;\n    queryResult: QueryObserverResult<GetListResponse<TData>>;\n    defaultValueQueryResult: QueryObserverResult<GetManyResponse<TData>>;\n};\n\n/**\n * `useSelect` hook is used to fetch data from the dataProvider and return the options for the select box.\n *\n * It uses `getList` method as query function from the dataProvider that is\n * passed to {@link https://refine.dev/docs/api-reference/core/components/refine-config `<Refine>`}.\n *\n * @see {@link https://refine.dev/docs/api-reference/mantine/hooks/useSelect} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useSelect = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>(\n    props: UseSelectProps<TQueryFnData, TError, TData>,\n): UseSelectReturnType<TData> => {\n    const { queryResult, defaultValueQueryResult, onSearch, options } =\n        useSelectCore<TQueryFnData, TError, TData>(props);\n\n    return {\n        selectProps: {\n            data: options,\n            onSearchChange: onSearch,\n            searchable: true,\n            filterDataOnExactSearchMatch: true,\n            clearable: true,\n        },\n        queryResult,\n        defaultValueQueryResult,\n    };\n};\n","import { useContext } from \"react\";\n\nimport { ThemedLayoutContext } from \"@contexts\";\n\nexport type UseSiderVisibleType = {\n    siderVisible: boolean;\n    drawerSiderVisible: boolean;\n    setSiderVisible: (visible: boolean) => void;\n    setDrawerSiderVisible: (visible: boolean) => void;\n};\n\n/**\n * @deprecated Please use `useThemedLayoutContext` instead.\n */\nexport const useSiderVisible = (): UseSiderVisibleType => {\n    const {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    } = useContext(ThemedLayoutContext);\n\n    return {\n        siderVisible: mobileSiderOpen,\n        setSiderVisible: setMobileSiderOpen,\n        drawerSiderVisible: siderCollapsed,\n        setDrawerSiderVisible: setSiderCollapsed,\n    };\n};\n","import React, { ReactNode, useState } from \"react\";\n\nimport { IThemedLayoutContext } from \"./IThemedLayoutContext\";\n\nexport const ThemedLayoutContext = React.createContext<IThemedLayoutContext>({\n    siderCollapsed: false,\n    mobileSiderOpen: false,\n    setSiderCollapsed: () => undefined,\n    setMobileSiderOpen: () => undefined,\n});\n\nexport const ThemedLayoutContextProvider: React.FC<{\n    children: ReactNode;\n    initialSiderCollapsed?: boolean;\n}> = ({ children, initialSiderCollapsed }) => {\n    const [siderCollapsed, setSiderCollapsed] = useState(\n        initialSiderCollapsed ?? false,\n    );\n    const [mobileSiderOpen, setMobileSiderOpen] = useState(false);\n\n    return (\n        <ThemedLayoutContext.Provider\n            value={{\n                siderCollapsed,\n                mobileSiderOpen,\n                setSiderCollapsed,\n                setMobileSiderOpen,\n            }}\n        >\n            {children}\n        </ThemedLayoutContext.Provider>\n    );\n};\n","import { useContext } from \"react\";\n\nimport { ThemedLayoutContext } from \"@contexts\";\nimport { IThemedLayoutContext } from \"@contexts/themedLayoutContext/IThemedLayoutContext\";\n\nexport type UseThemedLayoutContextType = IThemedLayoutContext;\n\nexport const useThemedLayoutContext = (): UseThemedLayoutContextType => {\n    const {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    } = useContext(ThemedLayoutContext);\n\n    return {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    };\n};\n","import React from \"react\";\nimport {\n    useGetIdentity,\n    useActiveAuthProvider,\n    pickNotDeprecated,\n} from \"@refinedev/core\";\nimport {\n    Avatar,\n    Flex,\n    Header as MantineHeader,\n    Sx,\n    Title,\n    useMantineTheme,\n} from \"@mantine/core\";\n\nimport { RefineThemedLayoutV2HeaderProps } from \"../types\";\nimport { HamburgerMenu } from \"../hamburgerMenu\";\n\nexport const ThemedHeaderV2: React.FC<RefineThemedLayoutV2HeaderProps> = ({\n    isSticky,\n    sticky,\n}) => {\n    const theme = useMantineTheme();\n\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const borderColor =\n        theme.colorScheme === \"dark\"\n            ? theme.colors.dark[6]\n            : theme.colors.gray[2];\n\n    let stickyStyles: Sx = {};\n    if (pickNotDeprecated(sticky, isSticky)) {\n        stickyStyles = {\n            position: `sticky`,\n            top: 0,\n            zIndex: 1,\n        };\n    }\n\n    return (\n        <MantineHeader\n            zIndex={199}\n            height={64}\n            py={6}\n            px=\"sm\"\n            sx={{\n                borderBottom: `1px solid ${borderColor}`,\n                ...stickyStyles,\n            }}\n        >\n            <Flex\n                align=\"center\"\n                justify=\"space-between\"\n                sx={{\n                    height: \"100%\",\n                }}\n            >\n                <HamburgerMenu />\n                <Flex align=\"center\" gap=\"sm\">\n                    {user?.name && (\n                        <Title order={6} data-testid=\"header-user-name\">\n                            {user?.name}\n                        </Title>\n                    )}\n                    {user?.avatar && (\n                        <Avatar\n                            src={user?.avatar}\n                            alt={user?.name}\n                            radius=\"xl\"\n                        />\n                    )}\n                </Flex>\n            </Flex>\n        </MantineHeader>\n    );\n};\n","import React from \"react\";\nimport { ActionIcon, MediaQuery } from \"@mantine/core\";\nimport {\n    IconMenu2,\n    IconIndentDecrease,\n    IconIndentIncrease,\n} from \"@tabler/icons\";\n\nimport { useThemedLayoutContext } from \"@hooks\";\n\nexport const HamburgerMenu: React.FC = () => {\n    const {\n        siderCollapsed,\n        setSiderCollapsed,\n        mobileSiderOpen,\n        setMobileSiderOpen,\n    } = useThemedLayoutContext();\n\n    return (\n        <>\n            <MediaQuery smallerThan=\"md\" styles={{ display: \"none\" }}>\n                <ActionIcon\n                    variant=\"subtle\"\n                    color=\"gray\"\n                    sx={{\n                        border: \"none\",\n                    }}\n                    size=\"lg\"\n                    onClick={() => setSiderCollapsed(!siderCollapsed)}\n                >\n                    {siderCollapsed ? (\n                        <IconIndentIncrease size={20} />\n                    ) : (\n                        <IconIndentDecrease size={20} />\n                    )}\n                </ActionIcon>\n            </MediaQuery>\n            <MediaQuery largerThan=\"md\" styles={{ display: \"none\" }}>\n                <ActionIcon\n                    variant=\"subtle\"\n                    color=\"gray\"\n                    sx={{\n                        border: \"none\",\n                    }}\n                    size=\"lg\"\n                    onClick={() => setMobileSiderOpen(!mobileSiderOpen)}\n                >\n                    <IconMenu2 size={20} />\n                </ActionIcon>\n            </MediaQuery>\n        </>\n    );\n};\n","import React from \"react\";\nimport { useRouterContext, useRouterType, useLink } from \"@refinedev/core\";\nimport { Center, Text, useMantineTheme } from \"@mantine/core\";\nimport { RefineLayoutThemedTitleProps } from \"../types\";\n\nconst defaultText = \"refine Project\";\n\nconst defaultIcon = (\n    <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-testid=\"refine-logo\"\n    >\n        <path\n            d=\"M12 9C13.6569 9 15 7.65685 15 6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6C9 7.65685 10.3431 9 12 9Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM8 6C8 3.79086 9.79086 2 12 2C14.2091 2 16 3.79086 16 6V18C16 20.2091 14.2091 22 12 22C9.79086 22 8 20.2091 8 18V6Z\"\n            fill=\"currentColor\"\n        />\n    </svg>\n);\n\nexport const ThemedTitleV2: React.FC<RefineLayoutThemedTitleProps> = ({\n    collapsed,\n    icon = defaultIcon,\n    text = defaultText,\n    wrapperStyles = {},\n}) => {\n    const theme = useMantineTheme();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <ActiveLink to=\"/\" style={{ all: \"unset\" }}>\n            <Center\n                style={{\n                    cursor: \"pointer\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: collapsed ? \"center\" : \"flex-start\",\n                    gap: \"8px\",\n                    ...wrapperStyles,\n                }}\n            >\n                <Text\n                    lh={0}\n                    fz=\"inherit\"\n                    color={theme.colorScheme === \"dark\" ? \"brand.5\" : \"brand.6\"}\n                >\n                    {icon}\n                </Text>\n                {!collapsed && (\n                    <Text\n                        fz=\"inherit\"\n                        color={theme.colorScheme === \"dark\" ? \"white\" : \"black\"}\n                    >\n                        {text}\n                    </Text>\n                )}\n            </Center>\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport { AutoSaveIndicatorProps, useTranslate } from \"@refinedev/core\";\nimport { Text } from \"@mantine/core\";\nimport {\n    IconDots,\n    IconRefresh,\n    IconCircleCheck,\n    IconExclamationCircle,\n} from \"@tabler/icons\";\n\nexport const AutoSaveIndicator: React.FC<AutoSaveIndicatorProps> = ({\n    status,\n}) => {\n    const translate = useTranslate();\n    let message = null;\n    let icon = <IconDots size=\"18px\" />;\n\n    switch (status) {\n        case \"success\":\n            message = translate(\"autoSave.success\", \"saved\");\n            icon = <IconCircleCheck size=\"18px\" />;\n            break;\n        case \"error\":\n            message = translate(\"autoSave.error\", \"auto save failure\");\n            icon = <IconExclamationCircle size=\"18px\" />;\n            break;\n        case \"loading\":\n            message = translate(\"autoSave.loading\", \"saving...\");\n            icon = <IconRefresh size=\"18px\" />;\n            break;\n        default:\n            // for idle\n            message = translate(\"autoSave.idle\", \"waiting for changes\");\n            break;\n    }\n\n    return (\n        <Text size=\"sm\" display=\"flex\" align=\"center\" mr=\"2\" color=\"gray\">\n            {message}\n            <span\n                style={{ position: \"relative\", top: \"3px\", marginLeft: \"3px\" }}\n            >\n                {icon}\n            </span>\n        </Text>\n    );\n};\n","import React from \"react\";\nimport { NotificationProvider } from \"@refinedev/core\";\nimport {\n    showNotification,\n    updateNotification,\n    hideNotification,\n} from \"@mantine/notifications\";\nimport { ActionIcon, Box, Group, Text } from \"@mantine/core\";\nimport { IconCheck, IconRotate2, IconX } from \"@tabler/icons\";\n\nimport { RingCountdown } from \"@components\";\n\nexport const notificationProvider = (): NotificationProvider => {\n    const activeNotifications: string[] = [];\n\n    const isNotificationActive = (key?: string) => {\n        return activeNotifications.includes(key as string);\n    };\n\n    const addNotification = (key?: string) => {\n        if (key) {\n            const index = activeNotifications.indexOf(key);\n            if (index === -1) {\n                activeNotifications.push(key);\n            }\n        }\n    };\n\n    const removeNotification = (key?: string) => {\n        if (key) {\n            const index = activeNotifications.indexOf(key);\n            if (index > -1) {\n                activeNotifications.splice(index, 1);\n            }\n        }\n    };\n\n    const notificationProvider: NotificationProvider = {\n        open: ({\n            message,\n            description,\n            type,\n            undoableTimeout,\n            key,\n            cancelMutation,\n        }) => {\n            if (type === \"progress\") {\n                if (isNotificationActive(key)) {\n                    updateNotification({\n                        id: key!,\n                        message: (\n                            <Group position=\"apart\" noWrap>\n                                <Group spacing=\"xs\" position=\"center\">\n                                    <RingCountdown\n                                        undoableTimeout={undoableTimeout ?? 0}\n                                    />\n                                    <Box>\n                                        <Text>{message}</Text>\n                                        {description && (\n                                            <Text>{description}</Text>\n                                        )}\n                                    </Box>\n                                </Group>\n                                <ActionIcon\n                                    variant=\"default\"\n                                    onClick={() => {\n                                        cancelMutation?.();\n                                        if (key) {\n                                            removeNotification(key);\n                                            hideNotification(key);\n                                        }\n                                    }}\n                                >\n                                    <IconRotate2 size={18} />\n                                </ActionIcon>\n                            </Group>\n                        ),\n                        styles: {\n                            root: {\n                                paddingLeft: \"8px\",\n                                paddingTop: \"0px\",\n                                paddingBottom: \"0px\",\n                                \"&::before\": { display: \"none\" },\n                            },\n                        },\n                        disallowClose: true,\n                        autoClose: false,\n                    });\n                } else {\n                    addNotification(key);\n                    showNotification({\n                        id: key,\n                        message: (\n                            <Group position=\"apart\" noWrap>\n                                <Group spacing=\"xs\" position=\"center\">\n                                    <RingCountdown\n                                        undoableTimeout={undoableTimeout ?? 0}\n                                    />\n                                    <Box>\n                                        <Text>{message}</Text>\n                                        {description && (\n                                            <Text>{description}</Text>\n                                        )}\n                                    </Box>\n                                </Group>\n                                <ActionIcon\n                                    variant=\"default\"\n                                    onClick={() => {\n                                        cancelMutation?.();\n                                        if (key) {\n                                            removeNotification(key);\n                                            hideNotification(key);\n                                        }\n                                    }}\n                                >\n                                    <IconRotate2 size={18} />\n                                </ActionIcon>\n                            </Group>\n                        ),\n\n                        styles: {\n                            root: {\n                                paddingLeft: \"8px\",\n                                paddingTop: \"0px\",\n                                paddingBottom: \"0px\",\n                                \"&::before\": { display: \"none\" },\n                            },\n                        },\n                        disallowClose: true,\n                        autoClose: false,\n                    });\n                }\n            } else {\n                if (isNotificationActive(key)) {\n                    updateNotification({\n                        id: key!,\n                        color: type === \"success\" ? \"primary\" : \"red\",\n                        icon:\n                            type === \"success\" ? (\n                                <IconCheck size={18} />\n                            ) : (\n                                <IconX size={18} />\n                            ),\n                        message,\n                        title: description,\n                        autoClose: 5000,\n                    });\n                } else {\n                    addNotification(key);\n                    showNotification({\n                        color: type === \"success\" ? \"primary\" : \"red\",\n                        icon:\n                            type === \"success\" ? (\n                                <IconCheck size={18} />\n                            ) : (\n                                <IconX size={18} />\n                            ),\n                        message,\n                        title: description,\n                        onClose: () => {\n                            removeNotification(key);\n                        },\n                        autoClose: 5000,\n                    });\n                }\n            }\n        },\n        close: (key) => {\n            removeNotification(key);\n            hideNotification(key);\n        },\n    };\n\n    return notificationProvider;\n};\n","import { MantineTheme, MantineThemeOverride } from \"@mantine/core\";\n\nconst commonThemeProperties: Partial<MantineThemeOverride> = {\n    fontFamily: [\n        \"Montserrat\",\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n    colors: {\n        primary: [\n            \"#F1FBE9\",\n            \"#D8F4C3\",\n            \"#BFED9C\",\n            \"#A7E675\",\n            \"#8EDE4E\",\n            \"#75D728\",\n            \"#5DAC20\",\n            \"#468118\",\n            \"#2F5610\",\n            \"#172B08\",\n        ],\n    },\n    black: \"#626262\",\n    primaryColor: \"primary\",\n    defaultRadius: 6,\n    headings: {\n        fontFamily: [\n            \"Montserrat\",\n            \"-apple-system\",\n            \"BlinkMacSystemFont\",\n            '\"Segoe UI\"',\n            \"Roboto\",\n            '\"Helvetica Neue\"',\n            \"Arial\",\n            \"sans-serif\",\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(\",\"),\n    },\n    components: {\n        Table: {\n            styles: (theme) =>\n                theme.colorScheme === \"light\"\n                    ? {\n                          root: {\n                              \"thead>tr>th\": {\n                                  backgroundColor: \"#fafafa\",\n                                  padding: \"16px 4px\",\n                              },\n                              \"thead>tr>th:first-of-type\": {\n                                  borderTopLeftRadius: theme.defaultRadius,\n                              },\n                              \"thead>tr>th:last-of-type\": {\n                                  borderTopRightRadius: theme.defaultRadius,\n                              },\n                              \"tbody>tr>td\": {\n                                  borderBottom: \"1px solid #f0f0f0\",\n                              },\n                          },\n                      }\n                    : { root: {} },\n        },\n    },\n};\n\nexport const LightTheme: Partial<MantineThemeOverride> = {\n    colorScheme: \"light\",\n    ...commonThemeProperties,\n};\n\nexport const DarkTheme: Partial<MantineThemeOverride> = {\n    colorScheme: \"dark\",\n    ...commonThemeProperties,\n};\n\nconst refineColors = {\n    Blue: {\n        colors: [\n            \"#E7F5FF\",\n            \"#D0EBFF\",\n            \"#A5D8FF\",\n            \"#74C0FC\",\n            \"#4DABF7\",\n            \"#339AF0\",\n            \"#228BE6\",\n            \"#1C7ED6\",\n            \"#1971C2\",\n            \"#1864AB\",\n        ],\n    },\n    Purple: {\n        colors: [\n            \"#F3F0FF\",\n            \"#E5DBFF\",\n            \"#D0BFFF\",\n            \"#B197FC\",\n            \"#9775FA\",\n            \"#845EF7\",\n            \"#7950F2\",\n            \"#7048E8\",\n            \"#6741D9\",\n            \"#5F3DC4\",\n        ],\n    },\n    Magenta: {\n        colors: [\n            \"#FFF0F6\",\n            \"#FFDEEB\",\n            \"#FCC2D7\",\n            \"#FAA2C1\",\n            \"#F783AC\",\n            \"#F06595\",\n            \"#E64980\",\n            \"#D6336C\",\n            \"#C2255C\",\n            \"#A61E4D\",\n        ],\n    },\n    Red: {\n        colors: [\n            \"#FFF5F5\",\n            \"#FFE3E3\",\n            \"#FFC9C9\",\n            \"#FFA8A8\",\n            \"#FF8787\",\n            \"#FF6B6B\",\n            \"#FA5252\",\n            \"#F03E3E\",\n            \"#E03131\",\n            \"#C92A2A\",\n        ],\n    },\n    Orange: {\n        colors: [\n            \"#FFF4E6\",\n            \"#FFE8CC\",\n            \"#FFD8A8\",\n            \"#FFC078\",\n            \"#FFA94D\",\n            \"#FF922B\",\n            \"#FD7E14\",\n            \"#F76707\",\n            \"#E8590C\",\n            \"#D9480F\",\n        ],\n    },\n    Yellow: {\n        colors: [\n            \"#FFF9DB\",\n            \"#FFF3BF\",\n            \"#FFEC99\",\n            \"#FFE066\",\n            \"#FFD43B\",\n            \"#FCC419\",\n            \"#FAB005\",\n            \"#F59F00\",\n            \"#F08C00\",\n            \"#E67700\",\n        ],\n    },\n    Green: {\n        colors: [\n            \"#EBFBEE\",\n            \"#D3F9D8\",\n            \"#B2F2BB\",\n            \"#8CE99A\",\n            \"#69DB7C\",\n            \"#51CF66\",\n            \"#40C057\",\n            \"#37B24D\",\n            \"#2F9E44\",\n            \"#2B8A3E\",\n        ],\n    },\n} as const;\n\nexport const RefineThemes = Object.keys(refineColors).reduce((acc, key) => {\n    const themeName = key as keyof typeof refineColors;\n    return {\n        ...acc,\n        [themeName]: {\n            globalStyles: (theme: MantineTheme) => ({\n                body: {\n                    backgroundColor:\n                        theme.colorScheme === \"dark\"\n                            ? theme.colors.dark[8]\n                            : theme.colors.gray[0],\n                },\n            }),\n\n            colors: {\n                brand: refineColors[themeName].colors,\n            },\n            primaryColor: \"brand\",\n        },\n    };\n}, {}) as Record<keyof typeof refineColors, MantineThemeOverride>;\n","export { useTable } from \"./useTable\";\nexport type { UseTableProps, UseTableReturnType } from \"./useTable\";\n","import { useEffect } from \"react\";\nimport {\n    BaseRecord,\n    CrudOperators,\n    HttpError,\n    LogicalFilter,\n    useTable as useTableCore,\n    useTableProps as useTablePropsCore,\n    useTableReturnType as useTableReturnTypeCore,\n} from \"@refinedev/core\";\nimport {\n    useReactTable,\n    TableOptions,\n    Table,\n    getCoreRowModel,\n    ColumnFilter,\n    getSortedRowModel,\n    getFilteredRowModel,\n} from \"@tanstack/react-table\";\n\nimport { useIsFirstRender } from \"../utils\";\n\nexport type UseTableReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n> = Table<TData> & {\n    refineCore: useTableReturnTypeCore<TData, TError>;\n};\n\nexport type UseTableProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n> = {\n    /**\n     * Configuration object for the core of the [useTable](/docs/api-reference/core/hooks/useTable/)\n     * @type [`useTablePropsCore<TQueryFnData, TError>`](/docs/api-reference/core/hooks/useTable/#properties)\n     */\n    refineCoreProps?: useTablePropsCore<TQueryFnData, TError, TData>;\n} & Pick<TableOptions<TData>, \"columns\"> &\n    Partial<Omit<TableOptions<TData>, \"columns\">>;\n\nexport function useTable<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    refineCoreProps: { hasPagination = true, ...refineCoreProps } = {},\n    initialState: reactTableInitialState = {},\n    ...rest\n}: UseTableProps<TQueryFnData, TError, TData>): UseTableReturnType<\n    TData,\n    TError\n> {\n    const isFirstRender = useIsFirstRender();\n\n    const useTableResult = useTableCore<TQueryFnData, TError, TData>({\n        ...refineCoreProps,\n        hasPagination,\n    });\n\n    const isServerSideFilteringEnabled =\n        (refineCoreProps.filters?.mode || \"server\") === \"server\";\n    const isServerSideSortingEnabled =\n        (refineCoreProps.sorters?.mode || \"server\") === \"server\";\n    const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n    const isPaginationEnabled =\n        (refineCoreProps.pagination?.mode ?? hasPaginationString) !== \"off\";\n\n    const {\n        tableQueryResult: { data },\n        current,\n        setCurrent,\n        pageSize: pageSizeCore,\n        setPageSize: setPageSizeCore,\n        sorters,\n        setSorters,\n        filters: filtersCore,\n        setFilters,\n        pageCount,\n    } = useTableResult;\n\n    const logicalFilters: LogicalFilter[] = [];\n    filtersCore.forEach((filter) => {\n        if (\n            filter.operator !== \"or\" &&\n            filter.operator !== \"and\" &&\n            \"field\" in filter\n        ) {\n            logicalFilters.push(filter);\n        }\n    });\n\n    const reactTableResult = useReactTable<TData>({\n        data: data?.data ?? [],\n        getCoreRowModel: getCoreRowModel(),\n        getSortedRowModel: isServerSideSortingEnabled\n            ? undefined\n            : getSortedRowModel(),\n        getFilteredRowModel: isServerSideFilteringEnabled\n            ? undefined\n            : getFilteredRowModel(),\n        initialState: {\n            pagination: {\n                pageIndex: current - 1,\n                pageSize: pageSizeCore,\n            },\n            sorting: sorters.map((sorting) => ({\n                id: sorting.field,\n                desc: sorting.order === \"desc\",\n            })),\n            columnFilters: logicalFilters.map((filter) => ({\n                id: filter.field,\n                operator: filter.operator as Exclude<\n                    CrudOperators,\n                    \"or\" | \"and\"\n                >,\n                value: filter.value,\n            })),\n            ...reactTableInitialState,\n        },\n        pageCount,\n        manualPagination: true,\n        manualSorting: isServerSideSortingEnabled,\n        manualFiltering: isServerSideFilteringEnabled,\n        ...rest,\n    });\n\n    const { state, columns } = reactTableResult.options;\n    const { pagination, sorting, columnFilters } = state;\n\n    const { pageIndex, pageSize } = pagination ?? {};\n\n    useEffect(() => {\n        if (pageIndex !== undefined) {\n            setCurrent(pageIndex + 1);\n        }\n    }, [pageIndex]);\n\n    useEffect(() => {\n        if (pageSize !== undefined) {\n            setPageSizeCore(pageSize);\n        }\n    }, [pageSize]);\n\n    useEffect(() => {\n        if (sorting !== undefined) {\n            setSorters(\n                sorting?.map((sorting) => ({\n                    field: sorting.id,\n                    order: sorting.desc ? \"desc\" : \"asc\",\n                })),\n            );\n\n            if (sorting.length > 0 && isPaginationEnabled && !isFirstRender) {\n                setCurrent(1);\n            }\n        }\n    }, [sorting]);\n\n    useEffect(() => {\n        const crudFilters: LogicalFilter[] = [];\n\n        columnFilters?.map((filter) => {\n            const operator =\n                (\n                    filter as ColumnFilter & {\n                        operator?: Exclude<CrudOperators, \"or\" | \"and\">;\n                    }\n                ).operator ??\n                ((columns.find((c) => c.id === filter.id) as any)?.meta\n                    ?.filterOperator as Exclude<CrudOperators, \"or\" | \"and\">);\n\n            crudFilters.push({\n                field: filter.id,\n                operator:\n                    operator ?? (Array.isArray(filter.value) ? \"in\" : \"eq\"),\n                value: filter.value,\n            });\n        });\n\n        const filteredArray = logicalFilters.filter(\n            (value) =>\n                !crudFilters.some(\n                    (b) =>\n                        value.field === b.field &&\n                        value.operator === b.operator,\n                ),\n        );\n\n        filteredArray?.map((filter) => {\n            crudFilters.push({\n                field: filter.field,\n                operator: filter.operator,\n                value: undefined,\n            });\n        });\n\n        setFilters(crudFilters);\n\n        if (crudFilters.length > 0 && isPaginationEnabled && !isFirstRender) {\n            setCurrent(1);\n        }\n    }, [columnFilters]);\n\n    return {\n        ...reactTableResult,\n        refineCore: useTableResult,\n    };\n}\n","import { useEffect, useRef } from \"react\";\n\nexport const useIsFirstRender = () => {\n    const firstRender = useRef(true);\n\n    useEffect(() => {\n        firstRender.current = false;\n    }, []);\n\n    return firstRender.current;\n};\n","import React from \"react\";\nimport { useResource } from \"@refinedev/core\";\n\nimport { ShowInferencer } from \"./show\";\nimport { ListInferencer } from \"./list\";\nimport { CreateInferencer } from \"./create\";\nimport { EditInferencer } from \"./edit\";\n\nimport type { InferencerComponentProps } from \"../../types\";\n\nconst MantineInferencer: React.FC<InferencerComponentProps> = ({\n    action: actionFromProps,\n    id: idFromProps,\n    ...props\n}) => {\n    const { action, id } = useResource();\n\n    switch (actionFromProps ?? action) {\n        case \"show\":\n            return <ShowInferencer {...props} id={idFromProps ?? id} />;\n        case \"create\":\n            return <CreateInferencer {...props} id={idFromProps ?? id} />;\n        case \"edit\":\n            return <EditInferencer {...props} id={idFromProps ?? id} />;\n        default:\n            return <ListInferencer {...props} id={idFromProps ?? id} />;\n    }\n};\n\nexport { MantineInferencer };\nexport {\n    ShowInferencer as MantineShowInferencer,\n    renderer as MantineShowRenderer,\n} from \"./show\";\nexport {\n    EditInferencer as MantineEditInferencer,\n    renderer as MantineEditRenderer,\n} from \"./edit\";\nexport {\n    ListInferencer as MantineListInferencer,\n    renderer as MantineListRenderer,\n} from \"./list\";\nexport {\n    CreateInferencer as MantineCreateInferencer,\n    renderer as MantineCreateRenderer,\n} from \"./create\";\nexport * from \"../../types\";\n","import {\n    Show,\n    TagField,\n    TextField,\n    EmailField,\n    UrlField,\n    BooleanField,\n    DateField,\n    MarkdownField,\n    NumberField,\n} from \"@refinedev/mantine\";\nimport { Title, Group, Image } from \"@mantine/core\";\n\nimport { createInferencer } from \"../../create-inferencer\";\nimport {\n    jsx,\n    componentName,\n    accessor,\n    printImports,\n    toSingular,\n    noOp,\n    getVariableName,\n    translatePrettyString,\n    getMetaProps,\n    idQuoteWrapper,\n} from \"../../utilities\";\n\nimport { ErrorComponent } from \"./error\";\nimport { LoadingComponent } from \"./loading\";\nimport { SharedCodeViewer } from \"../../components/shared-code-viewer\";\n\nimport {\n    InferencerResultComponent,\n    InferField,\n    RendererContext,\n} from \"../../types\";\n\n/**\n * a renderer function for show page in Mantine\n * @internal used internally from inferencer components\n */\nexport const renderer = ({\n    resource,\n    fields,\n    meta,\n    isCustomPage,\n    id,\n    i18n,\n}: RendererContext) => {\n    const COMPONENT_NAME = componentName(\n        resource.label ?? resource.name,\n        \"show\",\n    );\n    const recordName = \"record\";\n    const imports: Array<[element: string, module: string]> = [\n        [\"IResourceComponentsProps\", \"@refinedev/core\"],\n        [\"useShow\", \"@refinedev/core\"],\n        [\"Show\", \"@refinedev/mantine\"],\n        [\"Title\", \"@mantine/core\"],\n    ];\n\n    if (i18n) {\n        imports.push([\"useTranslate\", \"@refinedev/core\"]);\n    }\n\n    const relationFields: (InferField | null)[] = fields.filter(\n        (field) => field?.relation && !field?.fieldable && field?.resource,\n    );\n\n    const relationHooksCode = relationFields\n        .filter(Boolean)\n        .map((field) => {\n            if (field?.relation && !field.fieldable && field.resource) {\n                if (field.multiple) {\n                    imports.push([\"useMany\", \"@refinedev/core\"]);\n\n                    let ids = accessor(recordName, field.key);\n\n                    if (field.accessor) {\n                        ids = `${accessor(\n                            recordName,\n                            field.key,\n                        )}?.map((item: any) => ${accessor(\n                            \"item\",\n                            undefined,\n                            field.accessor,\n                        )})`;\n                    }\n\n                    return `\n                const { data: ${getVariableName(\n                    field.key,\n                    \"Data\",\n                )}, isLoading: ${getVariableName(field.key, \"IsLoading\")} } =\n                useMany({\n                    resource: \"${field.resource.name}\",\n                    ids: ${ids} || [],\n                    queryOptions: {\n                        enabled: !!${recordName} && !!${ids}?.length,\n                    },\n                    ${getMetaProps(\n                        field?.resource?.identifier ?? field?.resource?.name,\n                        meta,\n                        \"getMany\",\n                    )}\n                });\n                `;\n                }\n                imports.push([\"useOne\", \"@refinedev/core\"]);\n\n                return `\n                const { data: ${getVariableName(\n                    field.key,\n                    \"Data\",\n                )}, isLoading: ${getVariableName(field.key, \"IsLoading\")} } =\n                useOne({\n                    resource: \"${field.resource.name}\",\n                    id: ${accessor(\n                        recordName,\n                        field.key,\n                        field.accessor,\n                        false,\n                    )} || \"\",\n                    queryOptions: {\n                        enabled: !!${recordName},\n                    },\n                    ${getMetaProps(\n                        field?.resource?.identifier ?? field?.resource?.name,\n                        meta,\n                        \"getOne\",\n                    )}\n                });\n            `;\n            }\n            return undefined;\n        })\n        .filter(Boolean);\n\n    const renderRelationFields = (field: InferField) => {\n        if (field.relation && field.resource) {\n            const variableName = getVariableName(field.key, \"Data\");\n            const variableIsLoading = getVariableName(field.key, \"IsLoading\");\n\n            if (field.multiple) {\n                const variableDataLength =\n                    accessor(recordName, field.key) + \"?.length\";\n                imports.push(\n                    [\"TagField\", \"@refinedev/mantine\"],\n                    [\"Group\", \"@mantine/core\"],\n                );\n\n                return jsx`\n                <Title my=\"xs\" order={5}>${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                    noQuotes: true,\n                })}</Title>\n                {${variableIsLoading} && ${variableDataLength} ? <>Loading...</> : (\n                    <>\n                    ${(() => {\n                        if (field.relationInfer) {\n                            if (field.relationInfer?.accessor) {\n                                if (\n                                    Array.isArray(field.relationInfer.accessor)\n                                ) {\n                                    return `Not Handled.`;\n                                } else {\n                                    const mapItemName = toSingular(\n                                        field.resource?.name,\n                                    );\n                                    const val = accessor(\n                                        mapItemName,\n                                        undefined,\n                                        field.relationInfer.accessor,\n                                    );\n                                    return `\n                                    {record?.${field.key}?.length ? <Group spacing=\"xs\">\n                                        {${variableName}?.data?.map((${mapItemName}: any) => <TagField key={${val}} value={${val}} />)}\n                                    </Group> : <></>}\n                                    `;\n                                }\n                            } else {\n                                return `Not Handled.`;\n                            }\n                        } else {\n                            return `not-handled - relation with multiple but no resource`;\n                        }\n                    })()}\n                    </>\n                )}\n                `;\n            }\n\n            if (field.fieldable) {\n                return jsx`\n                <Title my=\"xs\" order={5}>${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                    noQuotes: true,\n                })}</Title>\n                <TextField value={${accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                )}} />\n                `;\n            }\n\n            return jsx`\n                <Title my=\"xs\" order={5}>${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                    noQuotes: true,\n                })}</Title>\n                {${variableIsLoading} ? <>Loading...</> : (\n                    <>\n                    ${(() => {\n                        if (field.relationInfer) {\n                            if (field.relationInfer?.accessor) {\n                                if (\n                                    Array.isArray(field.relationInfer.accessor)\n                                ) {\n                                    return `{${accessor(\n                                        `${variableName}?.data`,\n                                        undefined,\n                                        field.relationInfer.accessor,\n                                        ' + \" \" + ',\n                                    )}}`;\n                                } else {\n                                    return `{${variableName}?.data?.${field.relationInfer.accessor}}`;\n                                }\n                            } else {\n                                return `{${variableName}?.data}`;\n                            }\n                        } else {\n                            return `{${variableName}?.data?.id}`;\n                        }\n                    })()}\n                    </>\n                )}\n                \n                `;\n        }\n        return undefined;\n    };\n\n    const textFields = (field: InferField) => {\n        if (field.type === \"text\") {\n            imports.push([\"TextField\", \"@refinedev/mantine\"]);\n\n            if (field.multiple) {\n                imports.push(\n                    [\"TagField\", \"@refinedev/mantine\"],\n                    [\"Group\", \"@mantine/core\"],\n                );\n\n                const val = accessor(\"item\", undefined, field.accessor);\n\n                return jsx`\n                <Title my=\"xs\" order={5}>${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                    noQuotes: true,\n                })}</Title>\n                <Group spacing=\"xs\">\n                    {${accessor(recordName, field.key)}?.map((item: any) => (\n                        <TagField value={${val}} key={${val}} />\n                    ))}\n                </Group>\n            `;\n            }\n            return jsx`\n                <Title my=\"xs\" order={5}>${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                    noQuotes: true,\n                })}</Title>\n                <TextField value={${accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                )}} />\n            `;\n        }\n        return undefined;\n    };\n\n    const imageFields = (field: InferField) => {\n        if (field.type === \"image\") {\n            imports.push([\"Image\", \"@mantine/core\"]);\n\n            if (field.multiple) {\n                imports.push([\"Group\", \"@mantine/core\"]);\n\n                const val = accessor(\"item\", undefined, field.accessor);\n\n                return jsx`\n                <Title my=\"xs\" order={5}>${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                    noQuotes: true,\n                })}</Title>\n                <Group spacing=\"xs\">\n                    {${accessor(recordName, field.key)}?.map((item: any) => (\n                        <Image sx={{ maxWidth: 200 }} src={${val}} key={${val}} />\n                    ))}\n                </Group>\n            `;\n            }\n            return jsx`\n                <Title my=\"xs\" order={5}>${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                    noQuotes: true,\n                })}</Title>\n                <Image sx={{ maxWidth: 200 }} src={${accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                    \" + \",\n                )}} />\n                `;\n        }\n        return undefined;\n    };\n\n    const emailFields = (field: InferField) => {\n        if (field.type === \"email\") {\n            imports.push([\"EmailField\", \"@refinedev/mantine\"]);\n\n            if (field.multiple) {\n                imports.push(\n                    [\"TagField\", \"@refinedev/mantine\"],\n                    [\"Group\", \"@mantine/core\"],\n                );\n\n                const val = accessor(\"item\", undefined, field.accessor);\n\n                return jsx`\n                <Title my=\"xs\" order={5}>${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                    noQuotes: true,\n                })}</Title>\n                <Group spacing=\"xs\">\n                    {${accessor(recordName, field.key)}?.map((item: any) => (\n                        <TagField value={${val}} key={${val}} />\n                    ))}\n                </Group>\n            `;\n            }\n            return jsx`\n                <Title my=\"xs\" order={5}>${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                    noQuotes: true,\n                })}</Title>\n                <EmailField value={${accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                    \" + \",\n                )}} />\n            `;\n        }\n        return undefined;\n    };\n\n    const urlFields = (field: InferField) => {\n        if (field.type === \"url\") {\n            imports.push([\"UrlField\", \"@refinedev/mantine\"]);\n\n            if (field.multiple) {\n                imports.push(\n                    [\"TagField\", \"@refinedev/mantine\"],\n                    [\"Group\", \"@mantine/core\"],\n                );\n\n                const val = accessor(\"item\", undefined, field.accessor);\n\n                return jsx`\n                <Title my=\"xs\" order={5}>${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                    noQuotes: true,\n                })}</Title>\n                <Group spacing=\"xs\">\n                    {${accessor(recordName, field.key)}?.map((item: any) => (\n                        <TagField value={${val}} key={${val}} />\n                    ))}\n                </Group>\n            `;\n            }\n            return jsx`\n                <Title my=\"xs\" order={5}>${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                    noQuotes: true,\n                })}</Title>\n                <UrlField value={${accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                    \" + \",\n                )}} />\n            `;\n        }\n        return undefined;\n    };\n\n    const booleanFields = (field: InferField) => {\n        if (field.type === \"boolean\") {\n            imports.push([\"BooleanField\", \"@refinedev/mantine\"]);\n\n            if (field.multiple) {\n                imports.push(\n                    [\"TagField\", \"@refinedev/mantine\"],\n                    [\"Group\", \"@mantine/core\"],\n                );\n\n                const val = accessor(\"item\", undefined, field.accessor);\n\n                return jsx`\n                <Title my=\"xs\" order={5}>${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                    noQuotes: true,\n                })}</Title>\n                <Group spacing=\"xs\">\n                    {${accessor(\n                        recordName,\n                        field.key,\n                    )}?.map((item: any, index: number) => (\n                        <TagField value={${val}} key={index} />\n                    ))}\n                </Group>\n            `;\n            }\n            return jsx`\n                <Title my=\"xs\" order={5}>${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                    noQuotes: true,\n                })}</Title>\n                <BooleanField value={${accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                    \" && \",\n                )}} />\n            `;\n        }\n        return undefined;\n    };\n\n    const dateFields = (field: InferField) => {\n        if (field.type === \"date\") {\n            imports.push([\"DateField\", \"@refinedev/mantine\"]);\n\n            if (field.multiple) {\n                imports.push([\"Group\", \"@mantine/core\"]);\n\n                const val = accessor(\"item\", undefined, field.accessor);\n\n                return jsx`\n                <Title my=\"xs\" order={5}>${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                    noQuotes: true,\n                })}</Title>\n                <Group spacing=\"xs\">\n                    {${accessor(recordName, field.key)}?.map((item: any) => (\n                        <DateField value={${val}} key={${val}} />\n                    ))}\n                </Group>\n            `;\n            }\n            return jsx`\n                <Title my=\"xs\" order={5}>${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                    noQuotes: true,\n                })}</Title>\n                <DateField value={${accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                    \" + ' ' + \",\n                )}} />\n            `;\n        }\n        return undefined;\n    };\n\n    const richtextFields = (field: InferField) => {\n        if (field.type === \"richtext\") {\n            imports.push([\"MarkdownField\", \"@refinedev/mantine\"]);\n\n            return jsx`\n                <Title mt=\"xs\" order={5}>${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                    noQuotes: true,\n                })}</Title>\n                <MarkdownField value={${accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                    ' + \" \" + ',\n                )}} />\n            `;\n        }\n\n        return undefined;\n    };\n\n    const numberFields = (field: InferField) => {\n        if (field.type === \"number\") {\n            imports.push([\"NumberField\", \"@refinedev/mantine\"]);\n\n            if (field.multiple) {\n                imports.push(\n                    [\"TagField\", \"@refinedev/mantine\"],\n                    [\"Group\", \"@mantine/core\"],\n                );\n\n                const val = accessor(\"item\", undefined, field.accessor);\n\n                return jsx`\n                <Title my=\"xs\" order={5}>${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                    noQuotes: true,\n                })}</Title>\n                <Group spacing=\"xs\">\n                    {${accessor(recordName, field.key)}?.map((item: any) => (\n                        <TagField value={${val}} key={${val}} />\n                    ))}\n                </Group>\n            `;\n            }\n            return jsx`\n                <Title my=\"xs\" order={5}>${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                    noQuotes: true,\n                })}</Title>\n                <NumberField value={${accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                    ' + \" \" + ',\n                )} ?? \"\"} />\n            `;\n        }\n        return undefined;\n    };\n\n    const wrapper = (code?: string) => {\n        if (code) {\n            return jsx`\n                ${code}\n            `;\n        }\n        return undefined;\n    };\n\n    const renderedFields: Array<string | undefined> = fields.map((field) => {\n        switch (field?.type) {\n            case \"text\":\n                return wrapper(textFields(field));\n            case \"number\":\n                return wrapper(numberFields(field));\n            case \"richtext\":\n                return wrapper(richtextFields(field));\n            case \"email\":\n                return wrapper(emailFields(field));\n            case \"image\":\n                return wrapper(imageFields(field));\n            case \"date\":\n                return wrapper(dateFields(field));\n            case \"boolean\":\n                return wrapper(booleanFields(field));\n            case \"url\":\n                return wrapper(urlFields(field));\n            case \"relation\":\n                return wrapper(renderRelationFields(field));\n            default:\n                return undefined;\n        }\n    });\n\n    noOp(imports);\n    const useTranslateHook = i18n && `const translate = useTranslate();`;\n\n    return jsx`\n    ${printImports(imports)}\n    \n    export const ${COMPONENT_NAME}: React.FC<IResourceComponentsProps> = () => {\n        ${useTranslateHook}\n        const { queryResult } = useShow(${\n            isCustomPage\n                ? `{ \n                    resource: \"${resource.name}\", \n                    id: ${idQuoteWrapper(id)},\n                    ${getMetaProps(\n                        resource?.identifier ?? resource?.name,\n                        meta,\n                        \"getOne\",\n                    )}\n                }`\n                : getMetaProps(\n                      resource?.identifier ?? resource?.name,\n                      meta,\n                      \"getOne\",\n                  )\n                ? `{ ${getMetaProps(\n                      resource?.identifier ?? resource?.name,\n                      meta,\n                      \"getOne\",\n                  )} }`\n                : \"\"\n        });\n        const { data, isLoading } = queryResult;\n    \n        const ${recordName} = data?.data;\n    \n        ${relationHooksCode}\n\n        return (\n            <Show isLoading={isLoading}>\n                ${renderedFields.join(\"\")}\n            </Show>\n        );\n    };\n    `;\n};\n\n/**\n * @experimental This is an experimental component\n */\nexport const ShowInferencer: InferencerResultComponent = createInferencer({\n    type: \"show\",\n    additionalScope: [\n        [\n            \"@refinedev/mantine\",\n            \"RefineMantine\",\n            {\n                Show,\n                TagField,\n                TextField,\n                EmailField,\n                UrlField,\n                BooleanField,\n                DateField,\n                MarkdownField,\n                NumberField,\n            },\n        ],\n        [\"@mantine/core\", \"MantineCore\", { Title, Group, Image }],\n    ],\n    codeViewerComponent: SharedCodeViewer,\n    loadingComponent: LoadingComponent,\n    errorComponent: ErrorComponent,\n    renderer,\n});\n","import React, { useContext } from \"react\";\nimport { useResource, TranslationContext } from \"@refinedev/core\";\n\nimport {\n    CreateInferencer,\n    InferencerComponentProps,\n    InferencerResultComponent,\n    InferField,\n} from \"../types\";\n\nimport { composeInferencers } from \"../compose-inferencers\";\nimport { composeTransformers } from \"../compose-transformers\";\n\nimport { defaultElements } from \"../field-inferencers\";\nimport { defaultTransformers } from \"../field-transformers\";\nimport { LiveComponent } from \"../components\";\nimport { useInferFetch } from \"../use-infer-fetch\";\nimport { useRelationFetch } from \"../use-relation-fetch\";\n\nimport { prepareLiveCode, componentName, removeHiddenCode } from \"../utilities\";\n\n/**\n * CreateInferencer is a function that creates a Inferencer component.\n *\n * Inferencer will handle the data fetching and the infering parts,\n * then it will invoke the `renderer` function to generate the code.\n * The generated code will be used to render the component by `react-live`.\n * Its required to havee`additionalScope` prop when using packages other than `react` and `@refinedev/core`.\n *\n * @param config - Inferencer configuration.\n * @param config.type - Infering type.\n * @param config.additionalScope - Additional scope for live code.\n * @param config.renderer - String renderer for Inferencer.\n * @param config.fieldTransformers - Field transformers.\n * @param config.customElements - Field inferencers.\n * @param config.codeViewerComponent - Code viewer component.\n * @param config.errorComponent - Error component.\n * @param config.loadingComponent - Loading component.\n */\nexport const createInferencer: CreateInferencer = ({\n    type,\n    additionalScope = [],\n    customElements = [],\n    fieldTransformers = [],\n    renderer,\n    loadingComponent: LoadingComponent,\n    errorComponent: ErrorComponent,\n    codeViewerComponent: CodeViewerComponent,\n}) => {\n    const infer = composeInferencers([...defaultElements, ...customElements]);\n    const transform = composeTransformers([\n        ...defaultTransformers,\n        ...fieldTransformers,\n    ]);\n\n    const Inferencer = ({\n        resourceName,\n        fieldTransformer,\n        hideCodeViewerInProduction,\n        meta,\n        id,\n    }: {\n        resourceName?: string;\n        hideCodeViewerInProduction?: boolean;\n        fieldTransformer?: InferencerComponentProps[\"fieldTransformer\"];\n        meta?: InferencerComponentProps[\"meta\"];\n        id?: string | number;\n    }) => {\n        const { resource, resources } = useResource(resourceName);\n        const { i18nProvider } = useContext(TranslationContext);\n\n        const { resource: resourceFromURL } = useResource();\n\n        const {\n            data: record,\n            datas: records,\n            loading: recordLoading,\n            initial: isInitialLoad,\n            error: inferError,\n        } = useInferFetch(type, resourceName ?? resource?.name, id, meta);\n\n        const inferSingleField = (\n            key: string,\n            value: any,\n            record: Record<string, unknown>,\n        ) => {\n            const inferResult = infer(key, value, record, infer, type);\n\n            if (inferResult) {\n                if (resource) {\n                    const transformed = transform(\n                        [inferResult] as InferField[],\n                        resources,\n                        resource,\n                        record,\n                        infer,\n                        type,\n                    );\n\n                    const customTransformedFields = fieldTransformer\n                        ? transformed.flatMap((field) => {\n                              const result = fieldTransformer(field);\n\n                              return result ? [result] : [];\n                          })\n                        : transformed;\n\n                    return customTransformedFields?.[0];\n                }\n            }\n\n            return undefined;\n        };\n\n        const inferSingleRecord = (record: Record<string, unknown>) => {\n            const inferred = Object.keys(record)\n                .map((key) => {\n                    const value = record[key];\n\n                    const inferResult = inferSingleField(key, value, record);\n\n                    return inferResult;\n                })\n                .filter(Boolean);\n\n            return inferred as InferField[];\n        };\n\n        const inferMultipleRecords = (records: Record<string, unknown>[]) => {\n            // infer each record\n            // get the most common one for each field\n            // also get the first occurence of the each most common field/key and construct a fresh record from them.\n            // return the fresh record and the inferred fields\n\n            const inferred = records.map((record) => inferSingleRecord(record));\n\n            const allUniqueKeys = records\n                .flatMap((record) => Object.keys(record))\n                .filter((key, index, self) => self.indexOf(key) === index);\n\n            const mostCommonRecord: Record<string, unknown> = {};\n\n            const mostCommonFields = allUniqueKeys.map((key) => {\n                const fields = inferred.map((fields) =>\n                    fields.find((field) => field.key === key),\n                );\n\n                const mostCommonField = fields.reduce(\n                    (acc, field, index) => {\n                        if (!field) {\n                            return acc;\n                        }\n\n                        const count = fields.filter(\n                            (f) =>\n                                f?.key === field.key && f?.type === field.type,\n                        ).length;\n\n                        if (count > acc.count) {\n                            mostCommonRecord[key] = records[index][key];\n\n                            return {\n                                count,\n                                field,\n                            };\n                        }\n\n                        return acc;\n                    },\n                    { count: 0, field: undefined } as {\n                        count: number;\n                        field: undefined | InferField;\n                    },\n                );\n\n                return mostCommonField.field;\n            });\n\n            const response = {\n                commonRecord: mostCommonRecord,\n                inferredFields: mostCommonFields,\n            };\n\n            return response;\n        };\n\n        const [rawResults, recordInUse]: [\n            InferField[],\n            Record<string, unknown> | undefined,\n        ] = React.useMemo(() => {\n            if (records && (type === \"list\" || type === \"create\")) {\n                const inferred = inferMultipleRecords(records);\n\n                return [\n                    inferred.inferredFields as InferField[],\n                    inferred.commonRecord,\n                ];\n            }\n            if (record) {\n                const inferred = Object.keys(record)\n                    .map((key) => {\n                        const value = record[key];\n\n                        const inferResult = infer(\n                            key,\n                            value,\n                            record,\n                            infer,\n                            type,\n                        );\n\n                        return inferResult;\n                    })\n                    .filter(Boolean);\n\n                if (resource) {\n                    const transformed = transform(\n                        inferred as InferField[],\n                        resources,\n                        resource,\n                        record,\n                        infer,\n                        type,\n                    );\n\n                    const customTransformedFields = fieldTransformer\n                        ? transformed.flatMap((field) => {\n                              const result = fieldTransformer(field);\n\n                              return result ? [result] : [];\n                          })\n                        : transformed;\n\n                    return [customTransformedFields, record];\n                }\n\n                return [[], record];\n            }\n\n            return [[], undefined];\n        }, [record, records, resources, resource, fieldTransformer]);\n\n        const {\n            fields: results,\n            loading: relationLoading,\n            // initial: relationInitial,\n        } = useRelationFetch({\n            record: recordInUse,\n            fields: rawResults,\n            infer,\n            meta,\n        });\n\n        const clearedFields = React.useMemo(() => {\n            const cleanFields: InferField[] = [];\n\n            results.forEach((f, idx, arr) => {\n                if (f.resource) {\n                    if (\n                        cleanFields.findIndex(\n                            (el) => el.resource?.name === f.resource?.name,\n                        ) > -1\n                    ) {\n                        return;\n                    }\n                    const duplicates = arr.filter((field, index) => {\n                        if (index !== idx) {\n                            const currentFieldHasResource = f.resource;\n                            const fieldHasResource = field.resource;\n                            const hasAnyIdentifier =\n                                field.resource?.identifier ||\n                                f.resource?.identifier;\n                            const isSameResource = hasAnyIdentifier\n                                ? field.resource?.identifier ===\n                                  f.resource?.identifier\n                                : field.resource?.name === f.resource?.name;\n\n                            return (\n                                currentFieldHasResource &&\n                                fieldHasResource &&\n                                isSameResource\n                            );\n                        } else {\n                            return false;\n                        }\n                    });\n                    if (duplicates.length > 0) {\n                        if (type === \"create\" || type === \"edit\") {\n                            let toPush: InferField | undefined = undefined;\n\n                            [f, ...duplicates].find((el) => {\n                                if (\n                                    el.fieldable !== true &&\n                                    toPush === undefined\n                                ) {\n                                    toPush = el;\n                                }\n                            });\n                            if (toPush) {\n                                cleanFields.push(toPush);\n                            } else {\n                                cleanFields.push(f);\n                            }\n                        } else {\n                            let toPush: InferField | undefined = undefined;\n\n                            [f, ...duplicates].find((el) => {\n                                if (\n                                    el.fieldable !== false &&\n                                    toPush === undefined\n                                ) {\n                                    toPush = el;\n                                }\n                            });\n\n                            if (toPush) {\n                                cleanFields.push(toPush);\n                            } else {\n                                cleanFields.push(f);\n                            }\n                        }\n                    } else {\n                        cleanFields.push(f);\n                    }\n                } else {\n                    cleanFields.push(f);\n                }\n            });\n\n            return cleanFields;\n        }, [results, type]);\n\n        const code = React.useMemo(() => {\n            if (\n                !recordLoading &&\n                !relationLoading &&\n                !isInitialLoad &&\n                resource\n            ) {\n                return renderer({\n                    resource,\n                    resources,\n                    fields: clearedFields,\n                    infer,\n                    meta,\n                    isCustomPage: resource.name !== resourceFromURL?.name,\n                    id,\n                    i18n: !!i18nProvider,\n                });\n            }\n            return \"\";\n        }, [\n            resource,\n            resources,\n            clearedFields,\n            recordLoading,\n            relationLoading,\n        ]);\n\n        const hiddenCodeViewer =\n            process.env.NODE_ENV !== \"development\" &&\n            hideCodeViewerInProduction;\n\n        return (\n            <>\n                {LoadingComponent && (recordLoading || relationLoading) && (\n                    <LoadingComponent />\n                )}\n                {!recordLoading && !relationLoading && (\n                    <>\n                        <LiveComponent\n                            fetchError={\n                                !recordLoading && inferError\n                                    ? inferError\n                                    : !recordLoading &&\n                                      !isInitialLoad &&\n                                      !record\n                            }\n                            code={prepareLiveCode(\n                                code,\n                                componentName(\n                                    resource?.meta?.label ??\n                                        resource?.options?.label ??\n                                        resource?.label ??\n                                        resource?.name ??\n                                        \"Resource\",\n                                    type,\n                                ),\n                            )}\n                            errorComponent={ErrorComponent}\n                            additionalScope={additionalScope}\n                        />\n                        {typeof CodeViewerComponent !== \"undefined\" &&\n                        !hiddenCodeViewer ? (\n                            <CodeViewerComponent\n                                code={removeHiddenCode(code)}\n                                loading={recordLoading || relationLoading}\n                            />\n                        ) : null}\n                    </>\n                )}\n            </>\n        );\n    };\n\n    const InferencerComponent: InferencerResultComponent = ({\n        name,\n        resource,\n        fieldTransformer,\n        meta,\n        hideCodeViewerInProduction,\n        id,\n    }) => {\n        const { resource: resourceItem } = useResource(resource ?? name);\n\n        const key = `${\n            resourceItem?.identifier ?? resourceItem?.name\n        }-${type}-${id}`;\n\n        return (\n            <Inferencer\n                hideCodeViewerInProduction={hideCodeViewerInProduction}\n                fieldTransformer={fieldTransformer}\n                resourceName={resource ?? name}\n                meta={meta ?? {}}\n                key={key}\n                id={id}\n            />\n        );\n    };\n\n    return InferencerComponent;\n};\n","const urlLikeKeyRegexp = /(image|photo|avatar|url|logo|cover|thumbnail|icon)/i;\n\n/**\n * Returns a list of keys that are likely to be fieldable.\n * @example getFieldableKeys(\"user\", { id: 1, name: \"John\" }) === \"name\"\n */\nexport const getFieldableKeys = (\n    key: string,\n    data: Record<string, unknown>,\n): string | string[] | undefined => {\n    const fieldableProperties = [\n        \"name\",\n        \"label\",\n        \"title\",\n        \"count\",\n        \"content\",\n        \"username\",\n        \"nickname\",\n        \"login\",\n        \"firstName\",\n        \"lastName\",\n        \"url\",\n    ];\n\n    if (urlLikeKeyRegexp.test(key)) {\n        fieldableProperties.unshift(\"url\");\n    }\n\n    const firstAvailable = fieldableProperties.find(\n        (fkey) => fkey in data && !!data[fkey],\n    );\n\n    if (firstAvailable) {\n        if (firstAvailable === \"firstName\" && \"lastName\" in data) {\n            return [\"firstName\", \"lastName\"];\n        }\n\n        return firstAvailable;\n    }\n\n    return undefined;\n};\n","import { IResourceItem } from \"@refinedev/core\";\nimport { pickNotDeprecated } from \"@refinedev/core\";\n\n/**\n * Picks the data provider for the given resource. Which can be overridden by the resource itself.\n */\nexport function pickDataProvider(\n    resourceName?: string,\n    dataProviderName?: string,\n    resources?: IResourceItem[],\n) {\n    if (dataProviderName) {\n        return dataProviderName;\n    }\n\n    const resource = resources?.find((item) => item.name === resourceName);\n\n    const meta = pickNotDeprecated(resource?.meta, resource?.options);\n    if (meta?.dataProviderName) {\n        return meta.dataProviderName;\n    }\n\n    return \"default\";\n}\n\n/**\n * Picks the data provider for the given resource. Which can be overridden by the resource itself.\n * This is a simpler version of the above function which works with the resource item instead of the resource name and additional arguments.\n */\nexport const dataProviderFromResource = (resource?: IResourceItem) => {\n    return resource?.options?.dataProviderName;\n};\n","import { InferField } from \"../../types\";\n\n/**\n * Each field inferencer will run with every property of a record and output a result.\n * In these outputs, one with the highest priority will be picked as the inferred field.\n */\nexport const pickInferredField = (\n    inferredFields: Array<InferField | null | false>,\n): InferField | null => {\n    // filter out null and false values and sort by priority then return the first one\n    // priority is a number, the higher the number the higher the priority\n    // if there is no priority, it will be 0\n    const field = (\n        [...inferredFields].filter(Boolean) as Array<InferField>\n    ).sort((a, b) => (b.priority || 0) - (a.priority || 0))[0];\n\n    if (!field) {\n        return null;\n    }\n\n    return field;\n};\n","import prettier from \"prettier/standalone\";\nimport tsParser from \"prettier/parser-typescript\";\n\n/**\n * Standalone prettier formatter with typescript parser\n * to format the generated code.\n */\nexport const prettierFormat = (code: string) => {\n    try {\n        const formatted = prettier.format(code, {\n            parser: \"typescript\",\n            plugins: [tsParser],\n            arrowParens: \"always\",\n            trailingComma: \"all\",\n            semi: true,\n            tabWidth: 4,\n            printWidth: 80,\n        });\n\n        return formatted;\n    } catch (error) {\n        console.warn(\"Formatting error in inferencer\", error);\n        return code;\n    }\n};\n","/**\n * This helper removes the recurring spaces from the code.\n */\nexport const prettySpaces = (content: string): string => {\n    return content.replace(/ {2,}/g, \" \").replace(/\\n{2,}/g, \"\\n\");\n};\n","import { FieldInferencer } from \"../types\";\n\nexport const relationRegexp = /(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\\[\\])?$/;\n\nexport const relationInfer: FieldInferencer = (key, value) => {\n    const isRelation = relationRegexp.test(key);\n    const isBasicValue = typeof value === \"string\" || typeof value === \"number\";\n    const isBasicArray =\n        Array.isArray(value) &&\n        value.every((v) => typeof v === \"string\" || typeof v === \"number\");\n\n    if ((isRelation && isBasicValue) || (isRelation && isBasicArray)) {\n        return {\n            key,\n            relation: true,\n            multiple: isBasicArray ? true : false,\n            type: \"relation\",\n            priority: 1,\n        };\n    }\n\n    return false;\n};\n","import { relationRegexp } from \"../../field-inferencers/relation\";\n\n/**\n * Removes the relation suffix from a string.\n * @example removeRelationSuffix(\"category_id\") === \"category\"\n */\nexport const removeRelationSuffix = (key: string) => {\n    return key.replace(relationRegexp, \"\");\n};\n","import { removeRelationSuffix } from \"../remove-relation-suffix\";\n\n/**\n * This helper will prettify the string.\n */\nexport const prettyString = (str: string) => {\n    const clean = removeRelationSuffix(str);\n    // Convert camelCase to camel Case\n    const camelCase = clean.replace(/([a-z])([A-Z])/g, \"$1 $2\");\n    // Convert snake_case to snake case\n    const snakeCase = camelCase.replace(/_/g, \" \");\n    // Convert kebab-case to kebab case\n    const kebabCase = snakeCase.replace(/-/g, \" \");\n    // Capitalize the string\n    const capitalized = kebabCase\n        .split(\" \")\n        .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n        .join(\" \");\n\n    return capitalized;\n};\n","import { IResourceItem } from \"@refinedev/core\";\nimport { prettyString } from \"../pretty-string\";\nimport { InferField } from \"../../types\";\n\nexport const translatePrettyString = (payload: {\n    resource: IResourceItem;\n    field: InferField;\n    i18n?: boolean;\n    noQuotes?: boolean;\n    noBraces?: boolean;\n}) => {\n    const { resource, field, i18n } = payload;\n\n    if (i18n) {\n        const translate = `translate(\"${resource.name}.fields.${field.key}\")`;\n\n        if (payload.noBraces) {\n            return `${translate}`;\n        }\n        return `{${translate}}`;\n    }\n\n    const prettedString = prettyString(field.key);\n    if (payload.noQuotes) {\n        return prettedString;\n    }\n\n    return `\"${prettedString}\"`;\n};\n","import pluralize from \"pluralize\";\n\nexport const toSingular = (str = \"\") => {\n    return pluralize.isSingular(str) ? str : pluralize.singular(str);\n};\n","import pluralize from \"pluralize\";\n\nexport const toPlural = (str = \"\") => {\n    return pluralize.isPlural(str) ? str : pluralize.plural(str);\n};\n","/**\n * `react-live` does not support `export` statements in the code.\n * This function will remove the `export` statements from the code.\n */\nexport const replaceExports = (code: string) => {\n    // remove export statements from the code but keep the variables\n    const newCode = code.replace(\n        /export\\s+(const|let|var|type|interface|function|class)\\s+(\\w+)\\s*(=|:)\\s*/g,\n        \"$1 $2 = \",\n    );\n\n    // remove default exports, check line by line, lines can be indented so ignore the tabs and spaces at the beginning\n    const lines = newCode.split(\"\\n\");\n    const newLines = lines.filter(\n        (line) => !line.trim().startsWith(\"export default\"),\n    );\n\n    return newLines.join(\"\\n\");\n};\n","import { prettySpaces } from \"../pretty-spaces\";\n\nconst packageRegex =\n    /import(?:(?:(?:[ \\n\\t]+([^ *\\n\\t\\{\\},]+)[ \\n\\t]*(?:,|[ \\n\\t]+))?([ \\n\\t]*\\{(?:[ \\n\\t]*[^ \\n\\t\"'\\{\\}]+[ \\n\\t]*,?)+\\})?[ \\n\\t]*)|[ \\n\\t]*\\*[ \\n\\t]*as[ \\n\\t]+([^ \\n\\t\\{\\}]+)[ \\n\\t]+)from[ \\n\\t]*(?:['\"])([^'\"\\n]+)(?:['\"])(?:;?)/g;\n\nconst sideEffectRegex = /import[ \\n\\t](?:['\"])([^'\"\\n]+)(?:['\"])(?:;?)/g;\n\nconst nameChangeRegex = /((?:\\w|\\s|_)*)( as )((?:\\w|\\s|_)*)( |,)?/g;\n\n/**\n * This function will replace the imports in the code since `react-live` does not support `import` statements.\n * `modules` is an object with keys as `package name` and values as `variable name`.\n */\nexport const replaceImports = (\n    content: string,\n    modules: Record<string, string> = {},\n): string => {\n    const matches = content.matchAll(packageRegex);\n\n    const imports = new Set();\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    for (const match of matches) {\n        const [, defaultImport, namedImports, namespaceImport, packageName] =\n            match;\n\n        if (packageName in modules) {\n            const importName = modules[packageName];\n\n            /**\n             * React and its exports are already available in the scope of the code.\n             * Restructuring them in import statements will cause errors.\n             * To avoid that, we are not replacing the import statements for React.\n             * This way, generated code can have \"react\" imports without any errors.\n             */\n            if (packageName === \"react\") {\n                continue;\n            }\n\n            if (defaultImport) {\n                imports.add(\n                    `const { default: ${defaultImport} } = ${importName};`,\n                );\n            }\n\n            if (namedImports) {\n                imports.add(\n                    `const${namedImports.replace(\n                        nameChangeRegex,\n                        `$1: $3$4`,\n                    )} = ${importName};`,\n                );\n            }\n\n            if (namespaceImport) {\n                imports.add(`const ${namespaceImport} = ${importName};`);\n            }\n        }\n    }\n\n    return prettySpaces(`\n    ${Array.from(imports).join(\"\\n\")}\n    ${content.replace(packageRegex, \"\").replace(sideEffectRegex, \"\")}\n    `);\n};\n","import pluralize from \"pluralize\";\nimport { IResourceItem } from \"@refinedev/core\";\n\nimport { InferField } from \"../../types\";\n\nimport { removeRelationSuffix } from \"../remove-relation-suffix\";\n\n/**\n * Checks if the given property can be relation by checking the existing resources.\n */\nexport const resourceFromInferred = (\n    field: InferField | false | null,\n    resources: IResourceItem[],\n): IResourceItem | undefined => {\n    if (!field) {\n        return undefined;\n    }\n\n    const resource = resources.find((el) => {\n        const stripped = removeRelationSuffix(field.key);\n\n        return (\n            el.name === stripped ||\n            el.name ===\n                (pluralize.isPlural(stripped)\n                    ? stripped\n                    : pluralize.plural(stripped)) ||\n            el.name ===\n                (pluralize.isSingular(stripped)\n                    ? stripped\n                    : pluralize.singular(stripped))\n        );\n    });\n\n    return resource;\n};\n","import pluralize from \"pluralize\";\nimport { prettyString } from \"../pretty-string\";\n\n/**\n * Returns the component name based on the resource name and inferencer type.\n * @example componentName(\"users\", \"list\") === \"UserList\"\n */\nexport const componentName = (\n    resourceName: string,\n    type: \"list\" | \"show\" | \"edit\" | \"create\",\n    fallbackResourceName = \"Inferred\",\n) => {\n    // replace all non-alphanumeric characters with a space\n    const sanitized = resourceName.replace(/[^a-zA-Z0-9]/g, \" \");\n    // convert to singular\n    const singular = pluralize.singular(sanitized);\n    // prettify the string without spaces\n    const prettified = prettyString(singular).replace(/ /g, \"\");\n    // if prettified is empty, return the fallbackResourceName\n    const resourceComponentName = prettified || fallbackResourceName;\n    // get pretty type name\n    const prettyType = type.charAt(0).toUpperCase() + type.slice(1);\n\n    // if resourceName is not starting with an alphabetical character, return Type + resourceName\n    // e.g. \"123users\" => \"List123Users\"\n    if (!/^[a-zA-Z]/.test(resourceComponentName)) {\n        return `${prettyType}${resourceComponentName}`;\n    }\n    // e.g. \"users\" => \"UserList\"\n    return `${resourceComponentName}${prettyType}`;\n};\n","const handleExpression = (expression: unknown) => {\n    if (!expression) {\n        return \"\";\n    }\n\n    if (Array.isArray(expression)) {\n        return expression.join(\"\");\n    }\n\n    if (typeof expression === \"string\") {\n        return expression;\n    }\n\n    if (typeof expression === \"object\") {\n        return expression.toString();\n    }\n\n    if (typeof expression === \"function\") {\n        return expression.toString();\n    }\n\n    if (typeof expression === \"number\") {\n        return String(expression);\n    }\n\n    if (typeof expression === \"boolean\" && expression) {\n        return \"true\";\n    }\n\n    return expression;\n};\n\n/**\n * This is a hacky helper to allow syntax highlighting to work in the template literals. (`renderer` function in inferencers)\n * Additionally, it parses expressions like jsx does.\n */\nexport const jsx = (\n    strings: TemplateStringsArray,\n    ...expressions: unknown[]\n) => {\n    const parsed = strings.reduce(\n        (result, currentString, i) =>\n            `${result}${currentString}${handleExpression(expressions[i])}`,\n        \"\",\n    );\n\n    return parsed.trim();\n};\n","/**\n * Code will be generated to be ready to copy and paste into a live environment.\n * But, `react-live` with `noInline={true}` will not work with this code and require `render` method to be called with the component.\n * This function will use the component name and the code and append the `render` method to the code.\n */\nexport const prepareLiveCode = (code?: string, componentName?: string) => {\n    return `\n    ${code ?? \"\"}\n    \n    render(typeof ${componentName} !== \"undefined\" ? <${componentName} /> : <></>);\n    `;\n};\n","export const removeHiddenCode = (code?: string) => {\n    // hidden blocks are wrapped in `/* hidden-start */` and `/* hidden-end */`\n    // these blocks can present multiple times in the code\n\n    return code?.replace(\n        /(\\/\\* hidden-start \\*\\/)(.|\\n)*?(\\/\\* hidden-end \\*\\/)/g,\n        \"\",\n    );\n};\n","import { InferField } from \"../../types\";\n\nconst dotAccessableRegex = /^[a-zA-Z_$][a-zA-Z_$0-9]*$/;\n\nexport const shouldDotAccess = (property: string) => {\n    return dotAccessableRegex.test(property);\n};\n\nfunction accessorSingle(variableName: string, key?: string, accessor?: string) {\n    let base = `${variableName}`;\n\n    if (key) {\n        base += \"?.\";\n        if (shouldDotAccess(key)) {\n            base += key;\n        } else {\n            base += `['${key}']`;\n        }\n    }\n\n    if (accessor) {\n        base += `?.`;\n        if (shouldDotAccess(accessor)) {\n            base += accessor;\n        } else {\n            base += `['${accessor}']`;\n        }\n    }\n\n    return base;\n}\n\nfunction accessorMultiple(variable: string, key?: string, accessor?: string[]) {\n    const all = (accessor ?? []).map((a) => accessorSingle(variable, key, a));\n\n    return all;\n}\n\n/**\n * Returns a string that can be used to access the given field.\n * @example accessor(\"myVar\", \"some\", \"thing\") === \"myVar?.some?.thing\"\n * @example accessor(\"myVar\", \"so-me\", th.ing\") === \"myVar?.['so-me']['th.ing']\"\n */\nexport const accessor = (\n    variable: string,\n    key?: string,\n    accessor?: string | string[],\n    joiner: string | false = ' + \" \" + ',\n): string => {\n    if (Array.isArray(accessor)) {\n        if (joiner) {\n            return accessorMultiple(variable, key, accessor).join(joiner);\n        } else {\n            return accessorSingle(variable, key, accessor[0]);\n        }\n    } else {\n        return accessorSingle(variable, key, accessor);\n    }\n};\n\nexport const dotAccessor = (\n    variable: string,\n    key?: string,\n    accessor?: string | string[],\n) => {\n    let str = variable;\n\n    if (key) {\n        str += `.${key}`;\n    }\n\n    if (accessor) {\n        if (Array.isArray(accessor)) {\n            str += `.${accessor[0]}`;\n        } else {\n            str += `.${accessor}`;\n        }\n    }\n\n    return str;\n};\n\nexport const getAccessorKey = (field: InferField) => {\n    return Array.isArray(field.accessor) || field.multiple\n        ? `accessorKey: \"${field.key}\"`\n        : field.accessor\n        ? `accessorKey: \"${dotAccessor(field.key, undefined, field.accessor)}\"`\n        : `accessorKey: \"${field.key}\"`;\n};\n","import { ImportElement } from \"../../types\";\n\nexport const printImports = (imports: Array<ImportElement>) => {\n    const byModule = imports.reduce((acc, [element, module, isDefault]) => {\n        if (!acc[module]) {\n            acc[module] = [] as Array<\n                string | [variable: string, isDefault?: boolean]\n            >;\n        }\n\n        if (!acc[module].includes(element)) {\n            if (isDefault) {\n                acc[module].push([element, true]);\n            } else {\n                acc[module].push(element);\n            }\n        }\n\n        return acc;\n    }, {} as Record<string, Array<string | [variable: string, isDefault?: boolean]>>);\n\n    const lines = Object.entries(byModule).map(([module, elements]) => {\n        const defaultImport = elements.find((e) => Array.isArray(e) && e[1]);\n        const named = elements.filter((e) => typeof e === \"string\");\n        const defaultStr = defaultImport ? `${defaultImport[0]}` : \"\";\n        const namedStr = named.length ? `{ ${named.join(\", \")} }` : \"\";\n        return `import ${defaultStr}${\n            defaultStr && namedStr ? \", \" : \"\"\n        }${namedStr} from \"${module}\";`;\n    });\n\n    return lines;\n};\n","const identifierRegexp = /^id$/i;\n\nexport const isIDKey = (key: string): boolean => identifierRegexp.test(key);\n","import { InferField } from \"../../types\";\n\nexport const getOptionLabel = (field: InferField) => {\n    if (field.relationInfer && field.relationInfer.accessor) {\n        if (Array.isArray(field.relationInfer.accessor)) {\n            return `optionLabel: \"${field.relationInfer.accessor[0]}\",`;\n        }\n        if (field.relationInfer.accessor !== \"title\") {\n            return `optionLabel: \"${field.relationInfer.accessor}\",`;\n        }\n        return \"\";\n    }\n    return \"\";\n};\n","// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const noOp = (arg1: any) => {};\n","import { prettyString } from \"../pretty-string\";\n\n/**\n * Returns the valid variable name for the given string and the given suffixOrPrefix.\n * @example getVariableName(\"user\", \"data\") === \"usersData\"\n * @example getVariableName(\"1234\", \"data\") === \"data1234\"\n * @example getVariableName(\"users-account\", \"selectProps\") === \"usersAccountSelectProps\"\n */\nexport const getVariableName = (fieldKey: string, suffixOrPrefix = \"\") => {\n    // if fieldKey is number, return with prefix\n    // e.g. (12345, Data) => \"data12345\"\n    if (Number.isInteger(Number(fieldKey))) {\n        const lowerCaseFirstLetter =\n            suffixOrPrefix.charAt(0).toLowerCase() + suffixOrPrefix.slice(1);\n        return lowerCaseFirstLetter + fieldKey;\n    }\n\n    // if fieldKey is start with numbers, replace the numbers with empty string\n    // e.g. 123users => \"users\"\n    const fieldKeyWithoutNumbers = fieldKey.replace(/^\\d+/, \"\");\n\n    // if fieldKeyWithoutNumbers has invalid characters, replace them with \"-\"\n    // e.g. \"users/account\" => \"users-account\"\n    const fieldKeyWithoutInvalidCharacters = fieldKeyWithoutNumbers.replace(\n        /[^a-zA-Z0-9]/g,\n        \"-\",\n    );\n\n    // Convert to PascalCase\n    const prettyPluralVariableName = prettyString(\n        fieldKeyWithoutInvalidCharacters,\n    ).replace(/ /g, \"\");\n\n    const variableName = `${\n        prettyPluralVariableName.charAt(0).toLowerCase() +\n        prettyPluralVariableName.slice(1)\n    }${suffixOrPrefix.charAt(0).toUpperCase() + suffixOrPrefix.slice(1)}`;\n\n    return variableName;\n};\n","import { InferencerComponentProps } from \"../../types\";\n\ntype Action = keyof NonNullable<InferencerComponentProps[\"meta\"]>[string];\n\nexport const getMetaProps = (\n    identifier?: string,\n    meta?: InferencerComponentProps[\"meta\"],\n    action?: Action,\n) => {\n    if (meta && action && identifier) {\n        const metaValues = identifier ? meta[identifier] : {};\n        const metaValue = metaValues?.[action] ?? metaValues?.default;\n        if (metaValue) {\n            return `meta: ${JSON.stringify(metaValue)},`;\n        }\n        return \"\";\n    }\n    return \"\";\n};\n\nexport const pickMeta = (\n    identifier?: string,\n    meta?: InferencerComponentProps[\"meta\"],\n    actions?: Action[],\n) => {\n    if (meta && actions && identifier) {\n        const metaValues = identifier ? meta[identifier] : {};\n\n        const actionsToCheck = [...actions, \"default\"] as Action[];\n\n        const metaValue = actionsToCheck.reduce((acc, action) => {\n            return acc ?? metaValues?.[action];\n        }, undefined as Record<string, unknown> | undefined);\n\n        if (metaValue) {\n            return metaValue;\n        }\n    }\n    return undefined;\n};\n","/**\n * If the `id` is a string, it will be wrapped in quotes.\n */\nexport const idQuoteWrapper = (\n    id: string | number | undefined,\n): string | number | undefined => {\n    if (id === undefined) return id;\n    if (typeof id === \"string\") return `\"${id}\"`;\n\n    return id;\n};\n","import { FieldInferencer } from \"../types\";\nimport { pickInferredField } from \"../utilities\";\n\n/**\n * Compose multiple field inferencers into one\n * @param inferencers The inferencer functions to compose\n */\nexport const composeInferencers = (\n    inferencers: Array<FieldInferencer>,\n): FieldInferencer => {\n    const fieldInferencer: FieldInferencer = (\n        key,\n        value,\n        record,\n        infer = fieldInferencer,\n        type,\n    ) => {\n        const inferences = inferencers.map((inferencer) =>\n            inferencer(key, value, record, infer, type),\n        );\n        const picked = pickInferredField(inferences);\n\n        return picked;\n    };\n\n    return fieldInferencer;\n};\n","import { FieldTransformer } from \"../types\";\n\n/**\n * Compose multiple field transformers into one\n * @param transformers The transformer functions to compose\n */\nexport const composeTransformers = (\n    transformers: Array<FieldTransformer>,\n): FieldTransformer => {\n    const fieldTransformer: FieldTransformer = (\n        fields,\n        resources,\n        resource,\n        record,\n        infer,\n        type,\n    ) => {\n        return transformers.reduce((acc, transformer) => {\n            return transformer(acc, resources, resource, record, infer, type);\n        }, fields);\n    };\n\n    return fieldTransformer;\n};\n","import { FieldInferencer, InferType } from \"../types\";\n\nexport const arrayInfer: FieldInferencer = (\n    key,\n    value,\n    record,\n    infer,\n    type,\n) => {\n    const isArray = Array.isArray(value);\n    const isBasicArray =\n        Array.isArray(value) &&\n        value.every((v) => typeof v === \"string\" || typeof v === \"number\");\n\n    if (isArray) {\n        if (!isBasicArray) {\n            const inferredInnerType = infer(key, value[0], record, infer, type);\n            if (inferredInnerType) {\n                return {\n                    ...inferredInnerType,\n                    key,\n                    multiple: true,\n                    priority: 1,\n                };\n            } else {\n                return false;\n            }\n        }\n        const basicType = infer(key, value[0], record, infer, type) || {\n            type: \"string\" as InferType,\n        };\n\n        return {\n            key,\n            multiple: true,\n            priority: 1,\n            type: basicType?.type,\n        };\n    }\n\n    return false;\n};\n","import { FieldInferencer } from \"../types\";\n\nexport const booleanInfer: FieldInferencer = (key, value) => {\n    const isBoolean = typeof value === \"boolean\";\n\n    if (isBoolean) {\n        return {\n            key,\n            type: \"boolean\",\n        };\n    }\n\n    return false;\n};\n","import dayjs from \"dayjs\";\nimport { FieldInferencer } from \"../types\";\n\nconst dateSuffixRegexp = /(_at|_on|At|On|AT|ON)(\\[\\])?$/;\n\nconst dateSeparators = [\"/\", \":\", \"-\", \".\"];\n\nexport const dateInfer: FieldInferencer = (key, value) => {\n    const isDateField =\n        dateSuffixRegexp.test(key) && dayjs(value as string).isValid();\n\n    const isValidDateString =\n        typeof value === \"string\" && dayjs(value).isValid();\n\n    const hasDateSeparator =\n        typeof value === \"string\" &&\n        dateSeparators.some((s) => value.includes(s));\n\n    if (hasDateSeparator && (isDateField || isValidDateString)) {\n        return {\n            key,\n            type: \"date\",\n            priority: 1,\n        };\n    }\n\n    return false;\n};\n","import { FieldInferencer } from \"../types\";\n\nconst emailRegexp =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const emailInfer: FieldInferencer = (key, value) => {\n    const isValidEmail = typeof value === \"string\" && emailRegexp.test(value);\n\n    if (isValidEmail) {\n        return {\n            key,\n            type: \"email\",\n            priority: 1,\n        };\n    }\n\n    return false;\n};\n","import { FieldInferencer } from \"../types\";\n\nconst imageRegexp = /\\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i;\n\nexport const imageInfer: FieldInferencer = (key, value) => {\n    const isImageURI = typeof value === \"string\" && imageRegexp.test(value);\n\n    if (isImageURI) {\n        return {\n            key,\n            type: \"image\",\n            priority: 2,\n        };\n    }\n\n    return false;\n};\n","import { FieldInferencer } from \"../types\";\n\nexport const nullishInfer: FieldInferencer = (key, value) => {\n    const isUndefined = typeof value === \"undefined\";\n    const isNull = value === null;\n\n    if (isUndefined || isNull) {\n        return null;\n    }\n\n    return false;\n};\n","import { FieldInferencer } from \"../types\";\n\nexport const numberInfer: FieldInferencer = (key, value) => {\n    const isNonEmptyString = typeof value === \"string\" && value.length > 0;\n    const isNotNaN = !isNaN(value as number);\n\n    const isNumericString = isNonEmptyString && isNotNaN;\n    const isNumber = typeof value === \"number\";\n\n    const isNumeric = isNumericString || isNumber;\n\n    if (isNumeric) {\n        return {\n            key,\n            type: \"number\",\n        };\n    }\n\n    return false;\n};\n","import { getFieldableKeys } from \"../utilities\";\nimport { FieldInferencer } from \"../types\";\n\nconst idPropertyRegexp = /id$/i;\n\nexport const objectInfer: FieldInferencer = (\n    key,\n    value,\n    record,\n    infer,\n    type,\n) => {\n    const isNotNull = value !== null;\n    const isNotArray = !Array.isArray(value);\n    const isObject = typeof value === \"object\";\n\n    if (isNotNull && isNotArray && isObject) {\n        const onlyHasId =\n            Object.keys(value).length === 1 &&\n            idPropertyRegexp.test(Object.keys(value)[0]);\n\n        const hasId = Object.keys(value).some((k) => idPropertyRegexp.test(k));\n\n        if (onlyHasId) {\n            return {\n                key,\n                type: \"relation\",\n                relation: true,\n                accessor: \"id\",\n                priority: 1,\n            };\n        }\n\n        const fieldableKeys = getFieldableKeys(\n            key,\n            value as Record<string, unknown>,\n        );\n\n        const hasFieldableKeys = fieldableKeys\n            ? fieldableKeys.length > 0\n            : false;\n\n        if (hasFieldableKeys && fieldableKeys) {\n            const innerFieldKey =\n                fieldableKeys && Array.isArray(fieldableKeys)\n                    ? fieldableKeys[0]\n                    : fieldableKeys;\n\n            const innerFieldType = infer(\n                innerFieldKey,\n                (value as Record<string, unknown>)[innerFieldKey],\n                value as Record<string, unknown>,\n                infer,\n                type,\n            );\n\n            if (innerFieldType) {\n                const accessor = Array.isArray(fieldableKeys)\n                    ? fieldableKeys.map((el) => {\n                          if (innerFieldType.accessor) {\n                              return `${el}.${\n                                  Array.isArray(innerFieldType.accessor)\n                                      ? innerFieldType.accessor[0]\n                                      : innerFieldType.accessor\n                              }`;\n                          } else {\n                              return el;\n                          }\n                      })\n                    : innerFieldType.accessor\n                    ? Array.isArray(innerFieldType.accessor)\n                        ? `${fieldableKeys}.${innerFieldType.accessor[0]}`\n                        : `${fieldableKeys}.${innerFieldType.accessor}`\n                    : fieldableKeys;\n\n                if (\n                    innerFieldType?.type === \"text\" &&\n                    (type === \"create\" || type === \"edit\") &&\n                    hasId\n                ) {\n                    return {\n                        key,\n                        type: \"relation\",\n                        relation: true,\n                        accessor: \"id\",\n                        priority: 1,\n                    };\n                }\n\n                return {\n                    ...innerFieldType,\n                    fieldable: true,\n                    key,\n                    accessor: accessor,\n                    priority: 1,\n                };\n            }\n        }\n\n        return {\n            key,\n            fieldable: false,\n            type: \"object\",\n            priority: 1,\n        };\n    }\n\n    return false;\n};\n","import { FieldInferencer } from \"../types\";\n\nexport const richtextInfer: FieldInferencer = (key, value) => {\n    const isLongText = typeof value === \"string\" && value.length > 100;\n\n    if (isLongText) {\n        return {\n            key,\n            type: \"richtext\",\n            priority: 1,\n        };\n    }\n\n    return false;\n};\n","import { FieldInferencer } from \"../types\";\n\nexport const textInfer: FieldInferencer = (key, value) => {\n    const isText = typeof value === \"string\";\n\n    if (isText) {\n        return {\n            key,\n            type: \"text\",\n        };\n    }\n\n    return false;\n};\n","import { FieldInferencer } from \"../types\";\n\nconst urlRegexp = /^(https?|ftp):\\/\\/(-\\.)?([^\\s/?\\.#-]+\\.?)+(\\/[^\\s]*)?$/i;\n\nexport const urlInfer: FieldInferencer = (key, value) => {\n    const isValidURL = typeof value === \"string\" && urlRegexp.test(value);\n\n    if (isValidURL) {\n        return {\n            key,\n            type: \"url\",\n            priority: 1,\n        };\n    }\n\n    return false;\n};\n","import { arrayInfer } from \"./array\";\nimport { booleanInfer } from \"./boolean\";\nimport { dateInfer } from \"./date\";\nimport { emailInfer } from \"./email\";\nimport { imageInfer } from \"./image\";\nimport { nullishInfer } from \"./nullish\";\nimport { numberInfer } from \"./number\";\nimport { objectInfer } from \"./object\";\nimport { relationInfer } from \"./relation\";\nimport { richtextInfer } from \"./richtext\";\nimport { textInfer } from \"./text\";\nimport { urlInfer } from \"./url\";\n\nexport const defaultElements = [\n    arrayInfer,\n    booleanInfer,\n    dateInfer,\n    emailInfer,\n    imageInfer,\n    nullishInfer,\n    numberInfer,\n    objectInfer,\n    relationInfer,\n    richtextInfer,\n    textInfer,\n    urlInfer,\n];\n","import { FieldTransformer, InferField } from \"../types\";\n\nexport const basicToRelation: FieldTransformer = (\n    fields,\n    resources,\n    resource,\n    record,\n) => {\n    const mapped: Array<InferField> = fields.map((field) => {\n        if (\n            !field.relation &&\n            (field.type === \"text\" ||\n                field.type === \"richtext\" ||\n                field.type === \"number\") &&\n            !field.canRelation\n        ) {\n            // check if value is a valid id (regex)\n            // if multiple, check value by value\n            // take accessor into account (should be single only)\n            // valid id should be a valid uuid (meaning, lowercase alphanumeric with dashes)\n            const validUUIdRegex = /^[a-z0-9-]+$/;\n\n            const isValidUUID = (value: unknown) => {\n                return validUUIdRegex.test(`${value}`);\n            };\n\n            const isNotSelf = field.key.toLowerCase() !== \"id\";\n\n            const singleOrNoAccessor =\n                !field.accessor || typeof field.accessor === \"string\";\n\n            // in case of multiple accessors, we can't infer a relation\n            // or if the field is the id field\n            if (!singleOrNoAccessor || !isNotSelf) {\n                return field;\n            }\n\n            const valuesToCheck = field.multiple\n                ? (record[field.key] as unknown[])\n                : [record[field.key]];\n\n            const allValid = valuesToCheck.every((value) => {\n                return isValidUUID(\n                    field.accessor\n                        ? (value as Record<string, unknown>)[\n                              field.accessor as string\n                          ]\n                        : value,\n                );\n            });\n\n            if (allValid) {\n                return {\n                    ...field,\n                    canRelation: true,\n                };\n            }\n\n            return field;\n        }\n        return field;\n    });\n\n    return mapped;\n};\n","import { FieldTransformer, InferField } from \"../types\";\n\nconst imageFieldLikeRegexp = /(image|photo|avatar|cover|thumbnail|icon)/i;\n\nexport const imageByKey: FieldTransformer = (fields) => {\n    const mapped: Array<InferField> = fields.map((field) => {\n        if (field.type === \"url\" && imageFieldLikeRegexp.test(field.key)) {\n            return {\n                ...field,\n                type: \"image\",\n            };\n        }\n\n        return field;\n    });\n\n    return mapped;\n};\n","import { resourceFromInferred } from \"../utilities\";\nimport { FieldTransformer, InferField } from \"../types\";\n\nexport const relationByResource: FieldTransformer = (\n    fields,\n    resources,\n    // resource,\n    // record,\n    // infer,\n) => {\n    const mapped: Array<InferField> = fields.map((field) => {\n        const inferResource = resourceFromInferred(field, resources);\n\n        if (inferResource) {\n            return {\n                ...field,\n                relation: true,\n                type: \"relation\",\n                resource: inferResource,\n            };\n        }\n\n        return field;\n    });\n\n    return mapped;\n};\n","import { FieldTransformer, InferField } from \"../types\";\n\nexport const relationToFieldable: FieldTransformer = (\n    fields,\n    resources,\n    resource,\n    record,\n    infer,\n    type,\n) => {\n    const mapped: Array<InferField> = fields.map((field) => {\n        if (field.relation && field.type === \"relation\" && !field.resource) {\n            const value = field.accessor\n                ? (record[field.key] as any)[field.accessor as string]\n                : record[field.key];\n\n            const inferredType = infer(field.key, value, record, infer, type);\n\n            if (inferredType && inferredType.type !== \"relation\") {\n                return {\n                    ...field,\n                    fieldable: true,\n                    relation: false,\n                    type: inferredType.type,\n                    canRelation: true,\n                };\n            }\n        }\n\n        return field;\n    });\n\n    return mapped;\n};\n","import { basicToRelation } from \"./basic-to-relation\";\nimport { imageByKey } from \"./image-by-key\";\nimport { relationByResource } from \"./relation-by-resource\";\nimport { relationToFieldable } from \"./relation-to-fieldable\";\n\nexport const defaultTransformers = [\n    imageByKey,\n    relationByResource,\n    relationToFieldable,\n    basicToRelation,\n];\n","import React from \"react\";\nimport * as RefineCore from \"@refinedev/core\";\n\nimport { LivePreview, LiveProvider, ContextProps } from \"@aliemir/react-live\";\n\nimport { replaceImports, replaceExports } from \"../../utilities\";\nimport { AdditionalScopeType, LiveComponentProps } from \"../../types\";\n\nconst defaultScope: Array<AdditionalScopeType> = [\n    [\"react\", \"React\", React],\n    [\"@refinedev/core\", \"RefineCore\", RefineCore],\n];\n\nconst InferencerLiveContext = React.createContext<ContextProps>(\n    {} as ContextProps,\n);\n\n/**\n * Live Component will render the code with `react-live`.\n * Errors will be handled by `ErrorComponent`.\n */\nexport const LiveComponent: React.FC<LiveComponentProps> = ({\n    fetchError,\n    code,\n    additionalScope,\n    errorComponent: ErrorComponent,\n}) => {\n    const sanitized =\n        (code &&\n            replaceExports(\n                replaceImports(\n                    code,\n                    [...defaultScope, ...(additionalScope ?? [])].reduce(\n                        (\n                            acc,\n                            [\n                                packageName,\n                                variableName,\n                                _module,\n                                ignoreReplacement,\n                            ],\n                        ) => {\n                            if (ignoreReplacement) {\n                                return acc;\n                            }\n                            return {\n                                ...acc,\n                                [packageName]: variableName,\n                            };\n                        },\n                        {},\n                    ),\n                ),\n            )) ??\n        \"\";\n\n    const scope = React.useMemo(() => {\n        return {\n            React,\n            ...React,\n            ...[...defaultScope, ...(additionalScope ?? [])].reduce(\n                (acc, [_packageName, variableName, packageContent]) => {\n                    return {\n                        ...acc,\n                        [variableName]: packageContent,\n                    };\n                },\n                {},\n            ),\n        };\n    }, [additionalScope]);\n\n    const ErrorComponentWithError = React.useMemo(() => {\n        const LiveErrorComponent = () => {\n            const { error } = React.useContext(InferencerLiveContext);\n\n            if (ErrorComponent) {\n                return (\n                    <ErrorComponent\n                        error={\n                            error\n                                ? `<p>An error occured while rendering the generated component.You can check the generated code from the below \"Show Code\" button and fix the error manually.</p>\n                                    <p>If you think this is a bug, please report the issue at <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/refinedev/refine/issues\">https://github.com/refinedev/refine/issues</a></p>\n                                    <p>Exception:</p>\n                                    <code>${error}</code>`\n                                : typeof fetchError === \"string\"\n                                ? fetchError\n                                : fetchError\n                                ? `<p>Something went wrong while fetching the resource data.</p>\n                                    <p>To learn more about the Inferencer, please check the <a href=\"https://refine.dev/docs/packages/documentation/inferencer/\" target=\"_blank\">documentation</a>.</p>`\n                                : undefined\n                        }\n                    />\n                );\n            }\n\n            return null;\n        };\n\n        return LiveErrorComponent;\n    }, [ErrorComponent, fetchError]);\n\n    return (\n        <LiveProvider\n            Context={InferencerLiveContext}\n            code={sanitized}\n            scope={scope}\n            noInline\n        >\n            {!fetchError && <LivePreview Context={InferencerLiveContext} />}\n            <ErrorComponentWithError />\n        </LiveProvider>\n    );\n};\n","import React, { SVGProps } from \"react\";\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport theme from \"prism-react-renderer/themes/vsDark\";\n\nimport { CreateInferencerConfig } from \"../../types\";\nimport { prettierFormat } from \"../../utilities\";\n\nexport const SharedCodeViewer: CreateInferencerConfig[\"codeViewerComponent\"] =\n    ({ code: rawCode, loading }) => {\n        const code = React.useMemo(() => {\n            return prettierFormat(rawCode ?? \"\");\n        }, [rawCode]);\n\n        const [settled, setSettled] = React.useState(false);\n        const [isModalVisible, setIsModalVisible] = React.useState(false);\n        const [isVisible, setIsVisible] = React.useState(false);\n        const [isColumn, setIsColumn] = React.useState(false);\n        const [isModalButtonHover, setIsModalButtonHover] =\n            React.useState(false);\n\n        // Settled Check\n        React.useEffect(() => {\n            if (!loading) {\n                const timeout = setTimeout(() => {\n                    setSettled(true);\n                }, 300);\n\n                return () => {\n                    clearTimeout(timeout);\n                };\n            }\n\n            return () => undefined;\n        }, [loading]);\n\n        // Visibility Check\n        React.useEffect(() => {\n            if (typeof window !== \"undefined\") {\n                const mediaQuery = window.matchMedia(\"(max-width: 449px)\");\n                if (mediaQuery.matches) {\n                    setIsVisible(false);\n                } else {\n                    setIsVisible(true);\n                }\n\n                const handleResize = () => {\n                    if (mediaQuery.matches) {\n                        setIsVisible(false);\n                    } else {\n                        setIsVisible(true);\n                    }\n                };\n\n                window.addEventListener(\"resize\", handleResize);\n\n                return () => {\n                    window.removeEventListener(\"resize\", handleResize);\n                };\n            }\n\n            return () => undefined;\n        }, []);\n\n        // Flex Direction Check\n        React.useEffect(() => {\n            if (typeof window !== \"undefined\") {\n                const mediaQuery = window.matchMedia(\"(max-width: 1280px)\");\n                if (mediaQuery.matches) {\n                    setIsColumn(true);\n                } else {\n                    setIsColumn(false);\n                }\n\n                const handleResize = () => {\n                    if (mediaQuery.matches) {\n                        setIsColumn(true);\n                    } else {\n                        setIsColumn(false);\n                    }\n                };\n\n                window.addEventListener(\"resize\", handleResize);\n\n                return () => {\n                    window.removeEventListener(\"resize\", handleResize);\n                };\n            }\n\n            return () => undefined;\n        }, []);\n\n        if (code && !loading) {\n            return (\n                <>\n                    {isVisible && (\n                        <div\n                            className=\"refine-inferencer--code-viewer\"\n                            style={{\n                                position: \"sticky\",\n                                bottom: \"24px\",\n                                paddingTop: \"24px\",\n                                left: 0,\n                                right: 0,\n                                width: \"100%\",\n                                zIndex: 10,\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                transition: \"all 0.2s ease\",\n                                opacity: settled && !isModalVisible ? 1 : 0,\n                                transform:\n                                    settled && !isModalVisible\n                                        ? \"translateY(0)\"\n                                        : \"translateY(100px)\",\n                            }}\n                        >\n                            <div\n                                style={{\n                                    width: \"calc(100% - calc(64px * 2))\",\n                                    maxWidth: \"1080px\",\n                                    padding: \"20px\",\n                                    backgroundColor: \"#1A1A1A\",\n                                    boxShadow:\n                                        \"0px 4px 16px -4px rgba(0, 0, 0, 0.5), 0px 8px 32px -8px rgba(0, 0, 0, 0.35)\",\n                                    borderRadius: \"16px\",\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    justifyContent: \"space-between\",\n                                    flexDirection: isColumn ? \"column\" : \"row\",\n                                    gap: \"12px\",\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        alignItems: \"flex-start\",\n                                        gap: \"8px\",\n                                    }}\n                                >\n                                    <div>\n                                        <InfoIcon />\n                                    </div>\n                                    <div\n                                        style={{\n                                            fontSize: \"14px\",\n                                            lineHeight: \"20px\",\n                                            color: \"#ffffff\",\n                                        }}\n                                    >\n                                        <p\n                                            style={{\n                                                padding: 0,\n                                                margin: 0,\n                                            }}\n                                        >\n                                            Most of the page code is\n                                            auto-generated by the{\" \"}\n                                            <span\n                                                style={{\n                                                    textDecoration: \"underline\",\n                                                }}\n                                            >\n                                                Inferencer\n                                            </span>{\" \"}\n                                            feature, based on your backend data\n                                            structure.\n                                        </p>\n                                        <p\n                                            style={{\n                                                padding: 0,\n                                                margin: 0,\n                                            }}\n                                        >\n                                            While this is an excellent way to\n                                            experiment with refine,{\" \"}\n                                            <span style={{ fontWeight: 600 }}>\n                                                it&apos;s not intended to be\n                                                used on production.\n                                            </span>\n                                        </p>\n                                    </div>\n                                </div>\n                                <div>\n                                    <button\n                                        onPointerEnter={() =>\n                                            setIsModalButtonHover(true)\n                                        }\n                                        onPointerLeave={() =>\n                                            setIsModalButtonHover(false)\n                                        }\n                                        onClick={() => setIsModalVisible(true)}\n                                        style={{\n                                            appearance: \"none\",\n                                            border: \"none\",\n                                            padding: \"10px 16px\",\n                                            borderRadius: \"4px\",\n                                            display: \"flex\",\n                                            alignItems: \"center\",\n                                            justifyContent: \"center\",\n                                            background: \"#0080FF\",\n                                            color: \"#ffffff\",\n                                            fontSize: \"14px\",\n                                            lineHeight: \"20px\",\n                                            fontWeight: 600,\n                                            gap: \"8px\",\n                                            cursor: \"pointer\",\n                                            transition: \"all 0.2s ease\",\n                                            transform: isModalButtonHover\n                                                ? \"scale(1.025)\"\n                                                : undefined,\n                                            filter: isModalButtonHover\n                                                ? \"brightness(1.1)\"\n                                                : undefined,\n                                        }}\n                                    >\n                                        <OpenIcon\n                                            style={{\n                                                flexShrink: 0,\n                                            }}\n                                        />\n                                        <span>\n                                            Show the auto-generated code\n                                        </span>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                    <CodeModal\n                        visible={isModalVisible}\n                        onClose={() => setIsModalVisible(false)}\n                        code={code}\n                    />\n                </>\n            );\n        }\n\n        return null;\n    };\n\nconst CodeModal = ({\n    visible,\n    onClose,\n    code = \"\",\n}: {\n    visible: boolean;\n    onClose: () => void;\n    code?: string;\n}) => {\n    const modalRef = React.useRef<HTMLDivElement>(null);\n\n    const [isCopied, setIsCopied] = React.useState(false);\n    const [isCopyHover, setIsCopyHover] = React.useState(false);\n    const [isCloseHover, setIsCloseHover] = React.useState(false);\n    const [isLearnMoreHover, setIsLearnMoreHover] = React.useState(false);\n\n    // On Outside Click\n    React.useEffect(() => {\n        if (typeof document !== \"undefined\") {\n            const onOutsideClick = (event: PointerEvent) => {\n                if (\n                    modalRef.current &&\n                    !modalRef.current.contains(event.target as Node)\n                ) {\n                    onClose();\n                }\n            };\n\n            document.addEventListener(\"pointerdown\", onOutsideClick);\n\n            return () => {\n                document.removeEventListener(\"pointerdown\", onOutsideClick);\n            };\n        }\n\n        return () => undefined;\n    }, [onClose]);\n\n    // onCopy Handler\n    const onCopy = () => {\n        if (typeof navigator !== \"undefined\") {\n            navigator.clipboard.writeText(code);\n            setIsCopied(true);\n            setTimeout(() => {\n                setIsCopied(false);\n            }, 1000);\n        }\n    };\n\n    const title = (\n        <div\n            style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n            }}\n        >\n            <div\n                style={{\n                    fontWeight: 700,\n                    fontSize: \"20px\",\n                    lineHeight: \"32px\",\n                    color: \"#0D0D0D\",\n                }}\n            >\n                Auto-generated code by Inferencer\n            </div>\n            <button\n                onClick={onClose}\n                onPointerEnter={() => setIsCloseHover(true)}\n                onPointerLeave={() => setIsCloseHover(false)}\n                style={{\n                    flexShrink: 0,\n                    appearance: \"none\",\n                    border: \"none\",\n                    background: \"none\",\n                    padding: 0,\n                    margin: 0,\n                    outline: \"none\",\n                    borderRadius: \"50px\",\n                    width: \"32px\",\n                    height: \"32px\",\n                    cursor: \"pointer\",\n                    transition: \"all 0.15s ease\",\n                    transform: isCloseHover ? \"scale(1.05)\" : undefined,\n                    filter: isCloseHover ? \"brightness(0.8)\" : undefined,\n                }}\n            >\n                <CloseIcon />\n            </button>\n        </div>\n    );\n\n    const highlight = (\n        <div\n            style={{\n                fontSize: \"13px\",\n                borderRadius: \"8px\",\n                flex: \"1\",\n                overflow: \"scroll\",\n                background: \"#1E1E1E\",\n            }}\n        >\n            <Highlight\n                {...defaultProps}\n                theme={theme}\n                code={code}\n                language=\"tsx\"\n            >\n                {({\n                    className,\n                    style,\n                    tokens,\n                    getLineProps,\n                    getTokenProps,\n                }) => (\n                    <pre\n                        className={className}\n                        style={{\n                            ...style,\n                            padding: \"14px 14px 14px 14px\",\n                            margin: \"0\",\n                            width: \"100%\",\n                            boxSizing: \"border-box\",\n                        }}\n                    >\n                        {tokens.map((line, i) => (\n                            <div\n                                key={i}\n                                {...getLineProps({\n                                    line,\n                                    key: i,\n                                })}\n                            >\n                                {line.map((token, key) => (\n                                    <span\n                                        key={key}\n                                        {...getTokenProps({\n                                            token,\n                                            key,\n                                        })}\n                                    />\n                                ))}\n                            </div>\n                        ))}\n                    </pre>\n                )}\n            </Highlight>\n        </div>\n    );\n\n    const buttons = (\n        <div\n            style={{\n                display: \"flex\",\n                justifyContent: \"flex-start\",\n                alignItems: \"flex-end\",\n                gap: \"16px\",\n            }}\n        >\n            <button\n                onPointerEnter={() => setIsCopyHover(true)}\n                onPointerLeave={() => setIsCopyHover(false)}\n                onClick={onCopy}\n                style={{\n                    appearance: \"none\",\n                    height: \"40px\",\n                    border: \"none\",\n                    padding: \"10px 16px\",\n                    borderRadius: \"4px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    background: \"#0080FF\",\n                    color: \"#ffffff\",\n                    fontSize: \"14px\",\n                    lineHeight: \"20px\",\n                    fontWeight: 600,\n                    gap: \"8px\",\n                    cursor: \"pointer\",\n                    position: \"relative\",\n                    overflow: \"hidden\",\n                    transition: \"filter 0.2s ease\",\n                    transform: isCopyHover ? \"scale(1.025)\" : \"scale(1)\",\n                    filter: isCopyHover ? \"brightness(1.1)\" : undefined,\n                }}\n            >\n                <ClipboardIcon\n                    style={{\n                        flexShrink: 0,\n                        marginTop: \"-2px\",\n                        marginBottom: \"-2px\",\n                    }}\n                />\n                <span>Copy Generated Code</span>\n                <div\n                    style={{\n                        position: \"absolute\",\n                        width: \"100%\",\n                        height: \"100%\",\n                        top: 0,\n                        left: 0,\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        background: \"#0080FF\",\n                        transition: \"all 0.2s ease\",\n                        transform: isCopied\n                            ? \"translateY(0)\"\n                            : \"translateY(40px)\",\n                    }}\n                >\n                    <ClipboardIcon\n                        style={{\n                            flexShrink: 0,\n                            marginTop: \"-2px\",\n                            marginBottom: \"-2px\",\n                        }}\n                    />\n                    <span>Copied!</span>\n                </div>\n            </button>\n            <a\n                onPointerEnter={() => setIsLearnMoreHover(true)}\n                onPointerLeave={() => setIsLearnMoreHover(false)}\n                href=\"https://refine.dev/docs/packages/documentation/inferencer\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                style={{\n                    appearance: \"none\",\n                    textDecoration: \"none\",\n                    border: \"none\",\n                    padding: \"10px 16px\",\n                    borderRadius: \"4px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    background: \"rgba(0, 128, 255, 0.1)\",\n                    color: \"#0080FF\",\n                    fontSize: \"14px\",\n                    lineHeight: \"20px\",\n                    fontWeight: 600,\n                    gap: \"8px\",\n                    cursor: \"pointer\",\n                    transition: \"all 0.2s ease\",\n                    transform: isLearnMoreHover ? \"scale(1.025)\" : undefined,\n                    filter: isLearnMoreHover ? \"brightness(1.1)\" : undefined,\n                }}\n            >\n                <OpenIcon\n                    style={{\n                        flexShrink: 0,\n                    }}\n                />\n                <span>Learn more about inferencer</span>\n            </a>\n        </div>\n    );\n\n    return (\n        <div\n            className=\"refine-inferencer--code-viewer-modal\"\n            style={{\n                position: \"fixed\",\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                zIndex: 9999,\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n                transition: \"all 0.2s ease\",\n                opacity: visible ? 1 : 0,\n                pointerEvents: visible ? \"all\" : \"none\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n            }}\n        >\n            <div\n                ref={modalRef}\n                style={{\n                    transform: visible\n                        ? \"scale(1) translateY(0px)\"\n                        : \"scale(0) translateY(-200px)\",\n                    transition: \"all 0.25s cubic-bezier(.35,1.29,.81,1.08)\",\n                    transitionDelay: \"0.25\",\n                    width: \"calc(100% - calc(32px * 2))\",\n                    height: \"calc(100% - calc(32px * 2))\",\n                    backgroundColor: \"#fff\",\n                    maxWidth: \"640px\",\n                    maxHeight: \"720px\",\n                    borderRadius: \"8px\",\n                    padding: \"16px\",\n                }}\n            >\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        height: \"100%\",\n                        width: \"100%\",\n                        gap: \"16px\",\n                    }}\n                >\n                    {title}\n                    {highlight}\n                    {buttons}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst InfoIcon = (props: SVGProps<SVGSVGElement>) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={20}\n        height={20}\n        fill=\"none\"\n        {...props}\n    >\n        <path\n            fill=\"#0080FF\"\n            fillRule=\"evenodd\"\n            d=\"M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10Zm0-15a1.25 1.25 0 1 0 0 2.5A1.25 1.25 0 0 0 10 5Zm0 10c.69 0 1.25-.56 1.25-1.25V10a1.25 1.25 0 1 0-2.5 0v3.75c0 .69.56 1.25 1.25 1.25Z\"\n            clipRule=\"evenodd\"\n        />\n    </svg>\n);\n\nconst OpenIcon = (props: SVGProps<SVGSVGElement>) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={16}\n        height={16}\n        fill=\"none\"\n        {...props}\n    >\n        <path\n            fill=\"currentColor\"\n            d=\"M5 2a1 1 0 0 1 0 2H4v8h8v-1a1 1 0 1 1 2 0v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h1Z\"\n        />\n        <path\n            fill=\"currentColor\"\n            d=\"M9 2a1 1 0 0 0 0 2h1.586L6.293 8.293a1 1 0 0 0 1.414 1.414L12 5.414V7a1 1 0 1 0 2 0V3a1 1 0 0 0-1-1H9Z\"\n        />\n    </svg>\n);\n\nconst CloseIcon = (props: SVGProps<SVGSVGElement>) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={32}\n        height={32}\n        fill=\"none\"\n        {...props}\n    >\n        <path\n            fill=\"#A6A6A6\"\n            fillRule=\"evenodd\"\n            d=\"M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16Zm-2.586-21.414a2 2 0 1 0-2.828 2.828L13.172 16l-2.586 2.586a2 2 0 1 0 2.828 2.828L16 18.828l2.586 2.586a2 2 0 1 0 2.828-2.828L18.828 16l2.586-2.586a2 2 0 1 0-2.828-2.828L16 13.172l-2.586-2.586Z\"\n            clipRule=\"evenodd\"\n        />\n    </svg>\n);\n\nconst ClipboardIcon = (props: SVGProps<SVGSVGElement>) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={20}\n        height={20}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        {...props}\n    >\n        <path\n            fill=\"currentColor\"\n            fillRule=\"evenodd\"\n            d=\"M8 5a3 3 0 0 0 3 3h2a3 3 0 0 0 3-3h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h1Zm0 7a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2H9a1 1 0 0 1-1-1Zm1 3a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2H9Z\"\n            clipRule=\"evenodd\"\n        />\n        <path fill=\"currentColor\" d=\"M13 4a1 1 0 1 1 0 2h-2a1 1 0 1 1 0-2h2Z\" />\n    </svg>\n);\n","import React from \"react\";\nimport { useDataProvider, useResource, BaseKey } from \"@refinedev/core\";\n\nimport { pickDataProvider, dataProviderFromResource } from \"../utilities\";\nimport { InferencerComponentProps } from \"../types\";\nimport { pickMeta } from \"../utilities/get-meta-props\";\n\n/**\n * This hook will handle the data fetching for the inferencer with `loading` and `initial` states.\n * Data provider functions will be used respectively for the `list`, `show` and `edit` types.\n */\nexport const useInferFetch = (\n    type: \"list\" | \"show\" | \"edit\" | \"create\",\n    resourceNameOrRouteName?: string,\n    idFromProps?: string | number,\n    meta?: InferencerComponentProps[\"meta\"],\n) => {\n    const {\n        resource,\n        id: idFromURL,\n        resources,\n    } = useResource(resourceNameOrRouteName);\n\n    const id = idFromProps ?? idFromURL;\n\n    const dataProvider = useDataProvider();\n\n    const [error, setError] = React.useState<string | undefined>(undefined);\n\n    const [data, setData] = React.useState<Record<string, unknown> | undefined>(\n        undefined,\n    );\n    const [datas, setDatas] = React.useState<\n        Array<Record<string, unknown>> | undefined\n    >(undefined);\n    const [initial, setInitial] = React.useState<boolean>(true);\n    const [loading, setLoading] = React.useState<boolean>(false);\n\n    const resolver = React.useCallback(\n        async (recordItemId: BaseKey | undefined) => {\n            const dataProviderName =\n                dataProviderFromResource(resource) ??\n                pickDataProvider(resource?.name, undefined, resources);\n            const dp = dataProvider(dataProviderName);\n\n            setLoading(true);\n            setError(undefined);\n\n            try {\n                if (type === \"list\" || type === \"create\") {\n                    if (resource) {\n                        const response = await dp.getList({\n                            resource: resource?.name,\n                            meta: pickMeta(\n                                resource?.identifier ?? resource?.name,\n                                meta,\n                                [\"getList\"],\n                            ),\n                        });\n                        const r = response.data?.[0];\n\n                        if (!r) {\n                            setError(\n                                `<p>No records/data found for resource \"${resource?.name}\".</p>\n                            <p>Please check your data provider and resource.</p>\n                            <p>For more info, please check the <a href=\"https://refine.dev/docs/packages/documentation/inferencer/\" target=\"_blank\">documentation</a>.</p>`,\n                            );\n                        }\n                        setData(r);\n                        setDatas(response.data);\n                        setTimeout(() => {\n                            setLoading(false);\n                        }, 500);\n                    }\n                }\n                if ((type === \"edit\" || type === \"show\") && recordItemId) {\n                    if (resource) {\n                        const response = await dp.getOne({\n                            resource: resource?.name,\n                            id: recordItemId,\n                            meta: pickMeta(\n                                resource?.identifier ?? resource?.name,\n                                meta,\n                                [\"getOne\"],\n                            ),\n                        });\n                        const r = response.data;\n                        if (!r) {\n                            setError(\n                                `<p>No records/data found for resource \"${resource?.name}\".</p>\n                            <p>Please check your data provider and resource.</p>\n                            <p>For more info, please check the <a href=\"https://refine.dev/docs/packages/documentation/inferencer/\" target=\"_blank\">documentation</a>.</p>`,\n                            );\n                        }\n                        setData(r);\n                        setTimeout(() => {\n                            setLoading(false);\n                        }, 500);\n                    }\n                }\n            } catch (error) {\n                console.warn(\n                    \"An error occured while fetching the resource data. Please check the error message below:\",\n                    error,\n                );\n                setError(\n                    `<p>Something went wrong while fetching the resource data.</p>\n                    <p>Please check your data provider and API for resource \"${resource?.name}\".</p>\n                    <p>For more info, please check the <a href=\"https://refine.dev/docs/packages/documentation/inferencer/\" target=\"_blank\">documentation</a>.</p>`,\n                );\n                setTimeout(() => {\n                    setLoading(false);\n                }, 500);\n            }\n        },\n        [type, dataProvider, resource, resources],\n    );\n\n    React.useEffect(() => {\n        setInitial(false);\n        if (!loading && !data) {\n            resolver(id);\n        }\n    }, [resolver, id]);\n\n    return {\n        data,\n        datas,\n        loading,\n        initial,\n        error,\n    };\n};\n","import React from \"react\";\nimport { useDataProvider } from \"@refinedev/core\";\n\nimport {\n    dataProviderFromResource,\n    removeRelationSuffix,\n    toPlural,\n    toSingular,\n} from \"../utilities\";\nimport {\n    FieldInferencer,\n    InferField,\n    InferencerComponentProps,\n    ResourceInferenceAttempt,\n} from \"../types\";\nimport { get } from \"lodash-es\";\nimport { pickMeta } from \"../utilities/get-meta-props\";\n\ntype UseRelationFetchProps = {\n    record?: Record<string, unknown>;\n    fields?: (InferField | null | false)[];\n    infer: FieldInferencer;\n    meta?: InferencerComponentProps[\"meta\"];\n};\n\nexport const useRelationFetch = ({\n    record,\n    fields,\n    infer,\n    meta,\n}: UseRelationFetchProps) => {\n    const dataProvider = useDataProvider();\n\n    const [updatedFields, setUpdatedFields] = React.useState<InferField[]>([]);\n\n    const [initial, setInitial] = React.useState(true);\n    const [loading, setLoading] = React.useState<boolean>(false);\n\n    const resolver = React.useCallback(\n        async (allFields: (InferField | false | null)[]) => {\n            console.groupCollapsed(\n                \"@refinedev/inferencer is trying to detect relations\",\n            );\n            const attempts: Array<ResourceInferenceAttempt> = [];\n            setLoading(true);\n            try {\n                const promises = allFields.map(async (field) => {\n                    if (field && (field.relation || field.canRelation)) {\n                        if (record) {\n                            if (field.relationInfer) {\n                                return field;\n                            }\n                            const dataProviderName = dataProviderFromResource(\n                                field.resource,\n                            );\n                            const dp = dataProvider(dataProviderName);\n\n                            const isMultiple = field.multiple;\n\n                            const requestId = Array.isArray(field.accessor)\n                                ? undefined\n                                : field.multiple\n                                ? (record[field.key] as Array<unknown>).map(\n                                      (el) => {\n                                          return field.accessor\n                                              ? get(el, field.accessor)\n                                              : el;\n                                      },\n                                  )[0]\n                                : field.accessor\n                                ? get(record[field.key], field.accessor)\n                                : record[field.key];\n\n                            if (requestId && field.resource) {\n                                try {\n                                    let record:\n                                        | Record<string, unknown>\n                                        | undefined = {};\n\n                                    if (isMultiple && dp.getMany) {\n                                        const { data } = await dp.getMany({\n                                            resource: field.resource.name,\n                                            ids: [requestId],\n                                            meta: pickMeta(\n                                                field.resource?.identifier ??\n                                                    field.resource?.name,\n                                                meta,\n                                                [\"getMany\"],\n                                            ),\n                                        });\n                                        record = data?.[0];\n                                    } else {\n                                        const { data } = await dp.getOne({\n                                            resource: field.resource.name,\n                                            id: requestId,\n                                            meta: pickMeta(\n                                                field.resource?.identifier ??\n                                                    field.resource?.name,\n                                                meta,\n                                                isMultiple\n                                                    ? [\"getMany\", \"getOne\"]\n                                                    : [\"getOne\"],\n                                            ),\n                                        });\n                                        record = data;\n                                    }\n\n                                    attempts.push({\n                                        status: \"success\",\n                                        resource: field.resource.name,\n                                        field: field.key,\n                                    });\n\n                                    const relationInfer = infer(\n                                        \"__\",\n                                        record,\n                                        {},\n                                        infer,\n                                    );\n\n                                    return {\n                                        ...field,\n                                        relationInfer,\n                                    };\n                                } catch (error) {\n                                    attempts.push({\n                                        status: \"error\",\n                                        resource: field.resource.name,\n                                        field: field.key,\n                                    });\n                                    return {\n                                        ...field,\n                                        relationInfer: null,\n                                    };\n                                }\n                            }\n\n                            if (requestId) {\n                                let responseData;\n                                let isPlural;\n\n                                try {\n                                    let record:\n                                        | Record<string, unknown>\n                                        | undefined = {};\n\n                                    if (isMultiple && dp.getMany) {\n                                        const { data } = await dp.getMany?.({\n                                            resource: toPlural(\n                                                removeRelationSuffix(field.key),\n                                            ),\n                                            ids: [requestId],\n                                            meta: pickMeta(\n                                                toPlural(\n                                                    removeRelationSuffix(\n                                                        field.key,\n                                                    ),\n                                                ),\n                                                meta,\n                                                [\"getMany\"],\n                                            ),\n                                        });\n                                        record = data?.[0];\n                                    } else {\n                                        const { data } = await dp.getOne({\n                                            resource: toPlural(\n                                                removeRelationSuffix(field.key),\n                                            ),\n                                            id: requestId,\n                                            meta: pickMeta(\n                                                toPlural(\n                                                    removeRelationSuffix(\n                                                        field.key,\n                                                    ),\n                                                ),\n                                                meta,\n                                                isMultiple\n                                                    ? [\"getMany\", \"getOne\"]\n                                                    : [\"getOne\"],\n                                            ),\n                                        });\n                                        record = data;\n                                    }\n\n                                    attempts.push({\n                                        status: \"success\",\n                                        resource: toPlural(\n                                            removeRelationSuffix(field.key),\n                                        ),\n                                        field: field.key,\n                                    });\n\n                                    responseData = record;\n                                    isPlural = true;\n                                } catch (error) {\n                                    attempts.push({\n                                        status: \"error\",\n                                        resource: toPlural(\n                                            removeRelationSuffix(field.key),\n                                        ),\n                                        field: field.key,\n                                    });\n\n                                    let record:\n                                        | Record<string, unknown>\n                                        | undefined = {};\n\n                                    try {\n                                        if (isMultiple && dp.getMany) {\n                                            const { data } = await dp.getMany({\n                                                resource: toSingular(\n                                                    removeRelationSuffix(\n                                                        field.key,\n                                                    ),\n                                                ),\n                                                meta: pickMeta(\n                                                    toSingular(\n                                                        removeRelationSuffix(\n                                                            field.key,\n                                                        ),\n                                                    ),\n                                                    meta,\n                                                    [\"getMany\"],\n                                                ),\n                                                ids: [requestId],\n                                            });\n                                            record = data?.[0];\n                                        } else {\n                                            const { data } = await dp.getOne({\n                                                resource: toSingular(\n                                                    removeRelationSuffix(\n                                                        field.key,\n                                                    ),\n                                                ),\n                                                meta: pickMeta(\n                                                    toSingular(\n                                                        removeRelationSuffix(\n                                                            field.key,\n                                                        ),\n                                                    ),\n                                                    meta,\n                                                    isMultiple\n                                                        ? [\"getMany\", \"getOne\"]\n                                                        : [\"getOne\"],\n                                                ),\n                                                id: requestId,\n                                            });\n                                            record = data;\n                                        }\n\n                                        attempts.push({\n                                            status: \"success\",\n                                            resource: toSingular(\n                                                removeRelationSuffix(field.key),\n                                            ),\n                                            field: field.key,\n                                        });\n\n                                        responseData = record;\n                                        isPlural = false;\n                                    } catch (error) {\n                                        attempts.push({\n                                            status: \"error\",\n                                            resource: toSingular(\n                                                removeRelationSuffix(field.key),\n                                            ),\n                                            field: field.key,\n                                        });\n\n                                        return {\n                                            ...field,\n                                            relationInfer: null,\n                                        };\n                                    }\n                                }\n\n                                const relationInfer = infer(\n                                    \"__\",\n                                    responseData,\n                                    {},\n                                    infer,\n                                );\n\n                                const resourceNameWithoutRelationSuffix =\n                                    removeRelationSuffix(field.key);\n\n                                return {\n                                    ...field,\n                                    relation: true,\n                                    type: \"relation\",\n                                    resource: {\n                                        name: isPlural\n                                            ? toPlural(\n                                                  resourceNameWithoutRelationSuffix,\n                                              )\n                                            : toSingular(\n                                                  resourceNameWithoutRelationSuffix,\n                                              ),\n                                    },\n                                    fieldable: false,\n                                    canRelation: undefined,\n                                    relationInfer,\n                                };\n                            }\n\n                            return {\n                                ...field,\n                                relationInfer: null,\n                            };\n                        }\n                    }\n                    return field;\n                });\n\n                const results = await Promise.all(promises);\n\n                setUpdatedFields(results.filter((el) => el) as InferField[]);\n                setTimeout(() => {\n                    setLoading(false);\n                }, 500);\n            } catch (error) {\n                setTimeout(() => {\n                    setLoading(false);\n                }, 500);\n            }\n            setTimeout(() => {\n                console.log(\n                    `Tried to detect relations with ${\n                        attempts.length\n                    } attempts and succeeded with ${\n                        attempts.filter((el) => el.status === \"success\").length\n                    } attempts.`,\n                );\n                console.groupEnd();\n\n                console.info(\n                    `@refinedev/inferencer may send multiple requests to your API for nonexistent resources when trying to detect relations. To learn more about how the inferencer works, visit https://s.refine.dev/how-inferencer-works`,\n                );\n            }, 500);\n        },\n        [dataProvider, record],\n    );\n\n    React.useEffect(() => {\n        setInitial(false);\n        if (\n            !loading &&\n            fields &&\n            fields.length > 0 &&\n            updatedFields.length === 0\n        ) {\n            resolver(fields);\n        }\n    }, [resolver, loading, fields, resolver]);\n\n    return {\n        fields: updatedFields,\n        loading,\n        initial,\n    };\n};\n","import React from \"react\";\n\nimport { Alert, Center } from \"@mantine/core\";\nimport { IconAlertCircle } from \"@tabler/icons\";\n\nimport { CreateInferencerConfig } from \"../../types\";\n\nexport const ErrorComponent: CreateInferencerConfig[\"errorComponent\"] = ({\n    error,\n}) => {\n    if (error) {\n        return (\n            <Center style={{ minHeight: 300 }}>\n                <Alert title=\"Error\" color=\"red\" icon={<IconAlertCircle />}>\n                    <div dangerouslySetInnerHTML={{ __html: error ?? \"\" }} />\n                </Alert>\n            </Center>\n        );\n    }\n\n    return null;\n};\n","import React from \"react\";\n\nimport { LoadingOverlay } from \"@mantine/core\";\n\nimport { CreateInferencerConfig } from \"../../types\";\n\nexport const LoadingComponent: CreateInferencerConfig[\"loadingComponent\"] =\n    () => {\n        return <LoadingOverlay visible />;\n    };\n","import {\n    List,\n    EditButton,\n    ShowButton,\n    DeleteButton,\n    TagField,\n    EmailField,\n    UrlField,\n    BooleanField,\n    DateField,\n    MarkdownField,\n} from \"@refinedev/mantine\";\nimport { useTable } from \"@refinedev/react-table\";\nimport { ScrollArea, Table, Pagination, Group, Image } from \"@mantine/core\";\nimport { flexRender } from \"@tanstack/react-table\";\n\nimport { createInferencer } from \"../../create-inferencer\";\nimport {\n    jsx,\n    componentName,\n    accessor,\n    printImports,\n    dotAccessor,\n    noOp,\n    getVariableName,\n    translatePrettyString,\n    getMetaProps,\n} from \"../../utilities\";\n\nimport { ErrorComponent } from \"./error\";\nimport { LoadingComponent } from \"./loading\";\nimport { SharedCodeViewer } from \"../../components/shared-code-viewer\";\n\nimport {\n    InferencerResultComponent,\n    InferField,\n    RendererContext,\n} from \"../../types\";\n\nconst getAccessorKey = (field: InferField) => {\n    return Array.isArray(field.accessor) || field.multiple\n        ? `accessorKey: \"${field.key}\"`\n        : field.accessor\n        ? `accessorKey: \"${dotAccessor(field.key, undefined, field.accessor)}\"`\n        : `accessorKey: \"${field.key}\"`;\n};\n\n/**\n * a renderer function for list page in Mantine\n * @internal used internally from inferencer components\n */\nexport const renderer = ({\n    resource,\n    fields,\n    meta,\n    isCustomPage,\n    i18n,\n}: RendererContext) => {\n    const COMPONENT_NAME = componentName(\n        resource.label ?? resource.name,\n        \"list\",\n    );\n    const recordName = \"tableData?.data\";\n    const imports: Array<[element: string, module: string]> = [\n        [\"IResourceComponentsProps\", \"@refinedev/core\"],\n        [\"useTable\", \"@refinedev/react-table\"],\n        [\"ColumnDef\", \"@tanstack/react-table\"],\n        [\"flexRender\", \"@tanstack/react-table\"],\n        [\"ScrollArea\", \"@mantine/core\"],\n        [\"List\", \"@refinedev/mantine\"],\n        [\"Table\", \"@mantine/core\"],\n        [\"Pagination\", \"@mantine/core\"],\n        [\"Group\", \"@mantine/core\"],\n        [\"EditButton\", \"@refinedev/mantine\"],\n        [\"ShowButton\", \"@refinedev/mantine\"],\n        [\"DeleteButton\", \"@refinedev/mantine\"],\n    ];\n\n    if (i18n) {\n        imports.push([\"useTranslate\", \"@refinedev/core\"]);\n    }\n\n    const relationFields: (InferField | null)[] = fields.filter(\n        (field) => field?.relation && !field?.fieldable && field?.resource,\n    );\n\n    const relationHooksCode = relationFields\n        .filter(Boolean)\n        .map((field) => {\n            if (field?.relation && !field.fieldable && field.resource) {\n                imports.push([\"GetManyResponse\", \"@refinedev/core\"]);\n                imports.push([\"useMany\", \"@refinedev/core\"]);\n\n                let idsString = \"\";\n\n                if (field.multiple) {\n                    idsString = `[].concat(...(${recordName}?.map((item) => ${accessor(\n                        \"item\",\n                        field.key,\n                        field.accessor,\n                        false,\n                    )}) ?? []))`;\n                } else {\n                    idsString = `${recordName}?.map((item) => ${accessor(\n                        \"item\",\n                        field.key,\n                        field.accessor,\n                        false,\n                    )}) ?? []`;\n                }\n\n                return `\n                const { data: ${getVariableName(field.key, \"Data\")} } =\n                useMany({\n                    resource: \"${field.resource.name}\",\n                    ids: ${idsString},\n                    queryOptions: {\n                        enabled: !!${recordName},\n                    },\n                    ${getMetaProps(\n                        field?.resource?.identifier ?? field?.resource?.name,\n                        meta,\n                        \"getMany\",\n                    )}\n                });\n                `;\n            }\n            return undefined;\n        })\n        .filter(Boolean);\n\n    const relationVariableNames = relationFields\n        ?.map((field) => {\n            if (field && field.resource) {\n                return getVariableName(field.key, \"Data\");\n            }\n            return undefined;\n        })\n        .filter(Boolean);\n\n    const renderRelationFields = (field: InferField) => {\n        if (field.relation && field.resource) {\n            const variableName = `${getVariableName(field.key, \"Data\")}?.data`;\n\n            if (Array.isArray(field.accessor)) {\n                // not handled - not possible case\n                return undefined;\n            }\n\n            const id = `id: \"${field.key}\"`;\n            const header = `header: ${translatePrettyString({\n                resource,\n                field,\n                i18n,\n                noBraces: true,\n            })}`;\n            const accessorKey = getAccessorKey(field);\n\n            let cell = \"\";\n\n            // if multiple, then map it with tagfield\n            // if not, then just show the value\n\n            if (field.multiple) {\n                imports.push([\"TagField\", \"@refinedev/mantine\"]);\n                let val = \"item\";\n\n                // for multiple\n                if (field?.relationInfer) {\n                    val = accessor(\n                        \"item\",\n                        undefined,\n                        field.relationInfer.accessor,\n                    );\n                }\n\n                cell = `cell: function render({ getValue, table }) {\n                    const meta = table.options.meta as {\n                        ${getVariableName(field.key, \"Data\")}: GetManyResponse;\n                    };\n\n                    const ${getVariableName(\n                        field.key,\n                    )} = getValue<any[]>()?.map((item) => {\n                        return meta.${getVariableName(\n                            field.key,\n                            \"Data\",\n                        )}?.data?.find(\n                            (resourceItems) => resourceItems.id === ${accessor(\n                                \"item\",\n                                undefined,\n                                field.accessor,\n                            )}\n                        );\n                    })\n\n                    return (\n                        <Group spacing=\"xs\">\n                            {${getVariableName(\n                                field.key,\n                            )}?.map((item, index) => (\n                                <TagField key={index} value={${val}} />\n                            ))}\n                        </Group>\n                    )\n                }\n            `;\n            } else {\n                if (field?.relationInfer) {\n                    cell = `cell: function render({ getValue, table }) {\n                        const meta = table.options.meta as {\n                            ${getVariableName(\n                                field.key,\n                                \"Data\",\n                            )}: GetManyResponse;\n                        };\n\n                        const ${getVariableName(\n                            field.key,\n                        )} = meta.${variableName}?.find(\n                            (item) => item.id == getValue<any>(),\n                        );\n\n                        return ${accessor(\n                            getVariableName(field.key),\n                            undefined,\n                            field?.relationInfer?.accessor,\n                        )} ?? \"Loading...\";\n                    },`;\n                } else {\n                    cell = \"\";\n                }\n            }\n\n            return `\n                {\n                    ${id},\n                    ${header},\n                    ${accessorKey},\n                    ${cell}\n                }\n            `;\n        }\n        return undefined;\n    };\n\n    const imageFields = (field: InferField) => {\n        if (field.type === \"image\") {\n            imports.push([\"Image\", \"@mantine/core\"]);\n\n            const id = `id: \"${field.key}\"`;\n            const accessorKey = getAccessorKey(field);\n            const header = `header: ${translatePrettyString({\n                resource,\n                field,\n                i18n,\n                noBraces: true,\n            })}`;\n\n            let cell = jsx`\n                cell: function render({ getValue }) {\n                    ${field?.accessor ? \"try {\" : \"\"}\n                        return <Image sx={{ maxWidth: \"100px\" }} src={${accessor(\n                            \"getValue<any>()\",\n                            undefined,\n                            Array.isArray(field.accessor)\n                                ? field.accessor\n                                : undefined,\n                            \" + \",\n                        )}} />\n                    ${\n                        field?.accessor\n                            ? \" } catch (error) { return null; }\"\n                            : \"\"\n                    }\n                   \n                }\n            `;\n\n            if (field.multiple) {\n                const val = accessor(\"item\", undefined, field.accessor, \" + \");\n\n                cell = `\n                    cell: function render({ getValue }) {\n                        ${field?.accessor ? \"try {\" : \"\"}\n                            return (\n                                <Group spacing=\"xs\">\n                                    {getValue<any[]>()?.map((item, index) => (\n                                        <Image src={${val}} key={index} sx={{ maxWidth: \"100px\" }} />\n                                    ))}\n                                </Group>\n                            )\n                        ${\n                            field?.accessor\n                                ? \" } catch (error) { return null; }\"\n                                : \"\"\n                        }\n                    }\n                `;\n            }\n\n            return `\n                {\n                    ${id},\n                    ${accessorKey},\n                    ${header},\n                    ${cell}\n                }\n            `;\n        }\n        return undefined;\n    };\n\n    const emailFields = (field: InferField) => {\n        if (field.type === \"email\") {\n            imports.push([\"EmailField\", \"@refinedev/mantine\"]);\n\n            const id = `id: \"${field.key}\"`;\n            const accessorKey = getAccessorKey(field);\n            const header = `header: ${translatePrettyString({\n                resource,\n                field,\n                i18n,\n                noBraces: true,\n            })}`;\n\n            let cell = jsx`\n                cell: function render({ getValue }) {\n                    return <EmailField value={${accessor(\n                        \"getValue<any>()\",\n                        undefined,\n                        Array.isArray(field.accessor)\n                            ? field.accessor\n                            : undefined,\n                        ' + \" \" + ',\n                    )}} />\n                }\n            `;\n\n            if (field.multiple) {\n                imports.push([\"TagField\", \"@refinedev/mantine\"]);\n\n                const val = accessor(\"item\", undefined, field.accessor, \" + \");\n\n                cell = `\n                    cell: function render({ getValue }) {\n                        return (\n                            <Group spacing=\"xs\">\n                                {getValue<any>()?.map((item, index) => (\n                                    <TagField value={${val}} key={index} />\n                                ))}\n                            </Group>\n                        )\n                    }\n                `;\n            }\n\n            return `\n                {\n                    ${id},\n                    ${accessorKey},\n                    ${header},\n                    ${cell}\n                }\n            `;\n        }\n        return undefined;\n    };\n\n    const urlFields = (field: InferField) => {\n        if (field.type === \"url\") {\n            imports.push([\"UrlField\", \"@refinedev/mantine\"]);\n\n            const id = `id: \"${field.key}\"`;\n            const accessorKey = getAccessorKey(field);\n            const header = `header: ${translatePrettyString({\n                resource,\n                field,\n                i18n,\n                noBraces: true,\n            })}`;\n\n            let cell = jsx`\n                cell: function render({ getValue }) {\n                    return <UrlField value={${accessor(\n                        \"getValue<any>()\",\n                        undefined,\n                        Array.isArray(field.accessor)\n                            ? field.accessor\n                            : undefined,\n                        \" + \",\n                    )}} />\n                }\n            `;\n\n            if (field.multiple) {\n                imports.push([\"TagField\", \"@refinedev/mantine\"]);\n\n                const val = accessor(\"item\", undefined, field.accessor, \" + \");\n\n                cell = `\n                    cell: function render({ getValue }) {\n                        return (\n                            <Group spacing=\"xs\">\n                                {getValue<any[]>()?.map((item, index) => (\n                                    <TagField value={${val}} key={index} />\n                                ))}\n                            </Group>\n                        )\n                    }\n                `;\n            }\n\n            return `\n                {\n                    ${id},\n                    ${accessorKey},\n                    ${header},\n                    ${cell}\n                }\n            `;\n        }\n        return undefined;\n    };\n\n    const booleanFields = (field: InferField) => {\n        if (field?.type === \"boolean\") {\n            imports.push([\"BooleanField\", \"@refinedev/mantine\"]);\n\n            const id = `id: \"${field.key}\"`;\n            const accessorKey = getAccessorKey(field);\n            const header = `header: ${translatePrettyString({\n                resource,\n                field,\n                i18n,\n                noBraces: true,\n            })}`;\n\n            let cell = jsx`\n                cell: function render({ getValue }) {\n                    return <BooleanField value={${accessor(\n                        \"getValue<any>()\",\n                        undefined,\n                        Array.isArray(field.accessor)\n                            ? field.accessor\n                            : undefined,\n                        \" + \",\n                    )}} />\n                }\n            `;\n\n            if (field.multiple) {\n                const val = accessor(\"item\", undefined, field.accessor, \" + \");\n\n                cell = `\n                    cell: function render({ getValue }) {\n                        return (\n                            <Group spacing=\"xs\">\n                                {getValue<any[]>()?.map((item, index) => (\n                                    <BooleanField value={${val}} key={index} />\n                                ))}\n                            </Group>\n                        )\n                    }\n                `;\n            }\n\n            return `\n                {\n                    ${id},\n                    ${accessorKey},\n                    ${header},\n                    ${cell}\n                }\n            `;\n        }\n\n        return undefined;\n    };\n\n    const dateFields = (field: InferField) => {\n        if (field.type === \"date\") {\n            imports.push([\"DateField\", \"@refinedev/mantine\"]);\n\n            const id = `id: \"${field.key}\"`;\n            const accessorKey = getAccessorKey(field);\n            const header = `header: ${translatePrettyString({\n                resource,\n                field,\n                i18n,\n                noBraces: true,\n            })}`;\n\n            let cell = jsx`\n                cell: function render({ getValue }) {\n                    return <DateField value={${accessor(\n                        \"getValue<any>()\",\n                        undefined,\n                        Array.isArray(field.accessor)\n                            ? field.accessor\n                            : undefined,\n                        ' + \" \" + ',\n                    )}} />\n                }\n            `;\n\n            if (field.multiple) {\n                const val = accessor(\"item\", undefined, field.accessor, \" + \");\n\n                cell = `\n                    cell: function render({ getValue }) {\n                        return (\n                            <Group spacing=\"xs\">\n                                {getValue<any[]>()?.map((item, index) => (\n                                    <DateField value={${val}} key={index} />\n                                ))}\n                            </Group>\n                        )\n                    }\n                `;\n            }\n\n            return `\n                {\n                    ${id},\n                    ${accessorKey},\n                    ${header},\n                    ${cell}\n                }\n            `;\n        }\n        return undefined;\n    };\n\n    const richtextFields = (field: InferField) => {\n        if (field?.type === \"richtext\") {\n            imports.push([\"MarkdownField\", \"@refinedev/mantine\"]);\n\n            const id = `id: \"${field.key}\"`;\n            const accessorKey = getAccessorKey(field);\n            const header = `header: ${translatePrettyString({\n                resource,\n                field,\n                i18n,\n                noBraces: true,\n            })}`;\n\n            let cell = jsx`\n                cell: function render({ getValue }) {\n                    return <MarkdownField value={(${accessor(\n                        \"getValue<string>()\",\n                        undefined,\n                        Array.isArray(field.accessor)\n                            ? field.accessor\n                            : undefined,\n                    )})?.slice(0, 80) + \"...\" } />\n                }\n            `;\n\n            if (field.multiple) {\n                const val = accessor(\"item\", undefined, field.accessor, \" + \");\n\n                cell = `\n                    cell: function render({ getValue }) {\n                        return (\n                            <Group spacing=\"xs\">\n                                {getValue<string[]>()?.map((item, index) => (\n                                    <MarkdownField value={${val}} key={index} />\n                                ))}\n                            </Group>\n                        )\n                    }\n                `;\n            }\n\n            return `\n                {\n                    ${id},\n                    ${accessorKey},\n                    ${header},\n                    ${cell}\n                }\n            `;\n        }\n\n        return undefined;\n    };\n\n    const basicFields = (field: InferField) => {\n        if (field && (field.type === \"text\" || field.type === \"number\")) {\n            const id = `id: \"${field.key}\"`;\n            const accessorKey = getAccessorKey(field);\n            const header = `header: ${translatePrettyString({\n                resource,\n                field,\n                i18n,\n                noBraces: true,\n            })}`;\n\n            let cell = \"\";\n\n            if (field.multiple) {\n                imports.push([\"TagField\", \"@refinedev/mantine\"]);\n\n                const val = accessor(\n                    \"item\",\n                    undefined,\n                    field.accessor,\n                    ' + \" \" + ',\n                );\n\n                cell = `\n                    cell: function render({ getValue }) {\n                        return (\n                            <Group spacing=\"xs\">\n                                {getValue<any[]>()?.map((item, index) => (\n                                    <TagField value={${val}} key={index} />\n                                ))}\n                            </Group>\n                        )\n                    }\n                `;\n            }\n\n            if (!field.multiple && Array.isArray(field.accessor)) {\n                cell = `\n                    cell: function render({ getValue }) {\n                        return (\n                            <>{${accessor(\n                                \"getValue()\",\n                                field.key,\n                                field.accessor,\n                            )}}</>\n                        );\n                    }\n                `;\n            }\n\n            return `\n                {\n                    ${id},\n                    ${accessorKey},\n                    ${header},\n                    ${cell}\n                }\n            `;\n        }\n        return undefined;\n    };\n\n    const {\n        canEdit,\n        canShow,\n        canDelete: canDeleteProp,\n        meta: resourceMeta,\n    } = resource ?? {};\n\n    const canDelete = canDeleteProp || resourceMeta?.canDelete;\n\n    if (canEdit) {\n        imports.push([\"EditButton\", \"@refinedev/mantine\"]);\n    }\n    if (canShow) {\n        imports.push([\"ShowButton\", \"@refinedev/mantine\"]);\n    }\n    if (canDelete) {\n        imports.push([\"DeleteButton\", \"@refinedev/mantine\"]);\n    }\n\n    const actionColumnTitle = i18n ? `translate(\"table.actions\")` : `\"Actions\"`;\n    const actionButtons =\n        canEdit || canShow || canDelete\n            ? jsx`\n    {\n        id: \"actions\",\n        accessorKey: \"id\",\n        header: ${actionColumnTitle},\n        cell: function render({ getValue }) {\n            return (\n                <Group spacing=\"xs\" noWrap>\n                    ${\n                        canShow\n                            ? jsx`\n                    <ShowButton\n                        hideText\n                        recordItemId={getValue() as string}\n                    />\n                    `\n                            : \"\"\n                    }\n                    ${\n                        canEdit\n                            ? jsx`<EditButton\n                        hideText\n                        recordItemId={getValue() as string}\n                    />`\n                            : \"\"\n                    }\n                    ${\n                        canDelete\n                            ? jsx`\n                    <DeleteButton\n                        hideText\n                        recordItemId={getValue() as string}\n                    />\n                    `\n                            : \"\"\n                    }\n                </Group>\n            );\n        },\n    },\n        `\n            : \"\";\n\n    const renderedFields: Array<string | undefined> = fields.map((field) => {\n        switch (field?.type) {\n            case \"text\":\n            case \"number\":\n                return basicFields(field);\n            case \"richtext\":\n                return richtextFields(field);\n            case \"email\":\n                return emailFields(field);\n            case \"image\":\n                return imageFields(field);\n            case \"date\":\n                return dateFields(field);\n            case \"boolean\":\n                return booleanFields(field);\n            case \"url\":\n                return urlFields(field);\n            case \"relation\":\n                return renderRelationFields(field);\n            default:\n                return undefined;\n        }\n    });\n\n    noOp(imports);\n    const useTranslateHook = i18n && `const translate = useTranslate();`;\n\n    return jsx`\n    import React from \"react\";\n    ${printImports(imports)}\n    \n    export const ${COMPONENT_NAME}: React.FC<IResourceComponentsProps> = () => {\n        ${useTranslateHook}\n        const columns = React.useMemo<ColumnDef<any>[]>(() => [\n            ${[...renderedFields, actionButtons].filter(Boolean).join(\",\")}\n        ], [${i18n ? \"translate\" : \"\"}]);\n\n        const {\n            getHeaderGroups,\n            getRowModel,\n            setOptions,\n            refineCore: {\n                setCurrent,\n                pageCount,\n                current,\n                tableQueryResult: { data: tableData },\n            },\n        } = useTable({\n            columns,\n            ${\n                isCustomPage\n                    ? `\n            refineCoreProps: {\n                resource: \"${resource.name}\",\n                ${getMetaProps(\n                    resource?.identifier ?? resource?.name,\n                    meta,\n                    \"getList\",\n                )}\n            }\n            `\n                    : getMetaProps(\n                          resource?.identifier ?? resource?.name,\n                          meta,\n                          \"getList\",\n                      )\n                    ? `refineCoreProps: { ${getMetaProps(\n                          resource?.identifier ?? resource?.name,\n                          meta,\n                          \"getList\",\n                      )} },`\n                    : \"\"\n            }\n        });\n\n        ${relationHooksCode}\n\n        setOptions((prev) => ({\n            ...prev,\n            meta: {\n                ...prev.meta,\n                ${relationVariableNames.join(\", \")}\n            },\n        }));\n\n        return (\n            <List>\n                <ScrollArea>\n                    <Table highlightOnHover>\n                        <thead>\n                            {getHeaderGroups().map((headerGroup) => (\n                                <tr key={headerGroup.id}>\n                                    {headerGroup.headers.map((header) => {\n                                        return (\n                                            <th key={header.id}>\n                                                {!header.isPlaceholder && (\n                                                    flexRender(\n                                                        header.column\n                                                            .columnDef\n                                                            .header,\n                                                        header.getContext(),\n                                                    )\n                                                )}\n                                            </th>\n                                        );\n                                    })}\n                                </tr>\n                            ))}\n                        </thead>\n                        <tbody>\n                            {getRowModel().rows.map((row) => {\n                                return (\n                                    <tr key={row.id}>\n                                        {row.getVisibleCells().map((cell) => {\n                                            return (\n                                                <td key={cell.id}>\n                                                    {flexRender(\n                                                        cell.column.columnDef.cell,\n                                                        cell.getContext(),\n                                                    )}\n                                                </td>\n                                            );\n                                        })}\n                                    </tr>\n                                );\n                            })}\n                        </tbody>\n                    </Table>\n                </ScrollArea>    \n                <br />\n                <Pagination\n                    position=\"right\"\n                    total={pageCount}\n                    page={current}\n                    onChange={setCurrent}\n                />\n            </List>\n        );\n    };\n    `;\n};\n\n/**\n * @experimental This is an experimental component\n */\nexport const ListInferencer: InferencerResultComponent = createInferencer({\n    type: \"list\",\n    additionalScope: [\n        [\n            \"@refinedev/mantine\",\n            \"RefineMantine\",\n            {\n                List,\n                EditButton,\n                ShowButton,\n                DeleteButton,\n                TagField,\n                EmailField,\n                UrlField,\n                BooleanField,\n                DateField,\n                MarkdownField,\n            },\n        ],\n        [\"@refinedev/react-table\", \"RefineReactTable\", { useTable }],\n        [\n            \"@mantine/core\",\n            \"MantineCore\",\n            { ScrollArea, Table, Pagination, Group, Image },\n        ],\n        [\"@tanstack/react-table\", \"TanstackReactTable\", { flexRender }],\n    ],\n    codeViewerComponent: SharedCodeViewer,\n    loadingComponent: LoadingComponent,\n    errorComponent: ErrorComponent,\n    renderer,\n});\n","import { Create, useForm, useSelect } from \"@refinedev/mantine\";\nimport {\n    MultiSelect,\n    Select,\n    TextInput,\n    Checkbox,\n    Textarea,\n    NumberInput,\n} from \"@mantine/core\";\n\nimport { createInferencer } from \"../../create-inferencer\";\nimport {\n    jsx,\n    componentName,\n    printImports,\n    isIDKey,\n    getOptionLabel,\n    dotAccessor,\n    noOp,\n    getVariableName,\n    translatePrettyString,\n    getMetaProps,\n} from \"../../utilities\";\n\nimport { ErrorComponent } from \"./error\";\nimport { LoadingComponent } from \"./loading\";\nimport { SharedCodeViewer } from \"../../components/shared-code-viewer\";\n\nimport {\n    InferencerResultComponent,\n    InferField,\n    RendererContext,\n} from \"../../types\";\n\n/**\n * a renderer function for create page in Mantine\n * @internal used internally from inferencer components\n */\nexport const renderer = ({\n    resource,\n    fields,\n    meta,\n    isCustomPage,\n    i18n,\n}: RendererContext) => {\n    const COMPONENT_NAME = componentName(\n        resource.label ?? resource.name,\n        \"create\",\n    );\n    const imports: Array<\n        [element: string, module: string, isDefaultImport?: boolean]\n    > = [\n        [\"IResourceComponentsProps\", \"@refinedev/core\"],\n        [\"Create\", \"@refinedev/mantine\"],\n        [\"useForm\", \"@refinedev/mantine\"],\n    ];\n    let initialValues: Record<string, any> = {};\n\n    if (i18n) {\n        imports.push([\"useTranslate\", \"@refinedev/core\"]);\n    }\n\n    const relationFields: (InferField | null)[] = fields.filter(\n        (field) => field?.relation && !field?.fieldable && field?.resource,\n    );\n\n    const relationHooksCode = relationFields\n        .filter(Boolean)\n        .map((field) => {\n            if (field?.relation && !field.fieldable && field.resource) {\n                imports.push([\"useSelect\", \"@refinedev/mantine\"]);\n\n                return `\n                const { selectProps: ${getVariableName(\n                    field.key,\n                    \"SelectProps\",\n                )} } =\n                useSelect({\n                    resource: \"${field.resource.name}\",\n                    ${getOptionLabel(field)}\n                    ${getMetaProps(\n                        field?.resource?.identifier ?? field?.resource?.name,\n                        meta,\n                        \"getList\",\n                    )}\n                });\n            `;\n            }\n            return undefined;\n        })\n        .filter(Boolean);\n\n    const renderRelationFields = (field: InferField) => {\n        if (field.relation && field.resource) {\n            initialValues = {\n                ...initialValues,\n                [field.key]: field.multiple\n                    ? []\n                    : field.accessor\n                    ? {\n                          [typeof field.accessor === \"string\"\n                              ? field.accessor\n                              : field.accessor[0]]: \"\",\n                      }\n                    : \"\",\n            };\n\n            const variableName = getVariableName(field.key, \"SelectProps\");\n\n            if (field.multiple) {\n                imports.push([\"MultiSelect\", \"@mantine/core\"]);\n\n                return jsx`\n                    <MultiSelect mt=\"sm\" label=${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                    })} {...getInputProps(\"${dotAccessor(\n                    field.key,\n                    undefined,\n                )}\")} {...${variableName}} filterDataOnExactSearchMatch={undefined} />\n                `;\n            }\n\n            imports.push([\"Select\", \"@mantine/core\"]);\n\n            return jsx`\n                <Select mt=\"sm\" label=${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                })} {...getInputProps(\"${dotAccessor(\n                field.key,\n                undefined,\n                field.accessor,\n            )}\")} {...${variableName}} />\n            `;\n        }\n        return undefined;\n    };\n\n    const textFields = (field: InferField) => {\n        if (\n            field.type === \"text\" ||\n            field.type === \"email\" ||\n            field.type === \"date\" ||\n            field.type === \"url\"\n        ) {\n            if (isIDKey(field.key)) {\n                return undefined;\n            }\n\n            imports.push([\"TextInput\", \"@mantine/core\"]);\n\n            initialValues = {\n                ...initialValues,\n                [field.key]: field.multiple ? [] : \"\",\n            };\n\n            if (field.multiple) {\n                return undefined;\n            }\n\n            return jsx`\n                <TextInput mt=\"sm\" label=${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                })} {...getInputProps(\"${dotAccessor(\n                field.key,\n                undefined,\n                field.accessor,\n            )}\")} />\n            `;\n        }\n        return undefined;\n    };\n\n    const imageFields = (field: InferField) => {\n        if (field.type === \"image\") {\n            return jsx`\n            {/* \n                Dropzone component is not included in \"@refinedev/mantine\" package.\n                To use a <Dropzone> component, you can follow the official documentation for Mantine.\n                \n                Docs: https://mantine.dev/others/dropzone/\n            */}\n            `;\n        }\n        return undefined;\n    };\n\n    const booleanFields = (field: InferField) => {\n        if (field.type === \"boolean\") {\n            imports.push([\"Checkbox\", \"@mantine/core\"]);\n\n            initialValues = {\n                ...initialValues,\n                [field.key]: field.multiple ? [] : \"\",\n            };\n\n            if (field.multiple) {\n                return undefined;\n            }\n\n            return jsx`\n                <Checkbox mt=\"sm\" label=${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                })} {...getInputProps(\"${dotAccessor(\n                field.key,\n                undefined,\n                field.accessor,\n            )}\", { type: 'checkbox' })} />\n            `;\n        }\n        return undefined;\n    };\n\n    const dateFields = (field: InferField) => {\n        if (field.type === \"date\") {\n            const textInputRender = textFields(field);\n\n            return `\n                {/* \n                    DatePicker component is not included in \"@refinedev/mantine\" package.\n                    To use a <DatePicker> component, you can follow the official documentation for Mantine.\n                    \n                    Docs: https://mantine.dev/dates/date-picker/\n                */}\n                ${textInputRender ?? \"\"}\n            `;\n        }\n        return undefined;\n    };\n\n    const richtextFields = (field: InferField) => {\n        if (field.type === \"richtext\") {\n            imports.push([\"Textarea\", \"@mantine/core\"]);\n\n            initialValues = {\n                ...initialValues,\n                [field.key]: field.multiple ? [] : \"\",\n            };\n\n            if (field.multiple) {\n                return undefined;\n            }\n\n            return jsx`\n                <Textarea mt=\"sm\" label=${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                })} autosize {...getInputProps(\"${dotAccessor(\n                field.key,\n                undefined,\n                field.accessor,\n            )}\")} />\n            `;\n        }\n\n        return undefined;\n    };\n\n    const numberFields = (field: InferField) => {\n        if (field.type === \"number\") {\n            if (isIDKey(field.key)) {\n                return undefined;\n            }\n\n            imports.push([\"NumberInput\", \"@mantine/core\"]);\n\n            initialValues = {\n                ...initialValues,\n                [field.key]: field.multiple ? [] : \"\",\n            };\n\n            if (field.multiple) {\n                return undefined;\n            }\n\n            return jsx`\n                <NumberInput mt=\"sm\" label=${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                })} {...getInputProps(\"${dotAccessor(\n                field.key,\n                undefined,\n                field.accessor,\n            )}\")}/>\n            `;\n        }\n\n        return undefined;\n    };\n\n    const wrapper = (code?: string) => {\n        if (code) {\n            return jsx`\n                ${code}\n        `;\n        }\n        return undefined;\n    };\n\n    const renderedFields: Array<string | undefined> = fields.map((field) => {\n        switch (field?.type) {\n            case \"url\":\n            case \"text\":\n            case \"email\":\n                return wrapper(textFields(field));\n            case \"number\":\n                return wrapper(numberFields(field));\n            case \"richtext\":\n                return wrapper(richtextFields(field));\n            case \"image\":\n                return wrapper(imageFields(field));\n            case \"date\":\n                return wrapper(dateFields(field));\n            case \"boolean\":\n                return wrapper(booleanFields(field));\n            case \"relation\":\n                return wrapper(renderRelationFields(field));\n            default:\n                return undefined;\n        }\n    });\n\n    noOp(imports);\n    const useTranslateHook = i18n && `const translate = useTranslate();`;\n\n    return jsx`\n    ${printImports(imports)}\n    \n    export const ${COMPONENT_NAME}: React.FC<IResourceComponentsProps> = () => {\n        ${useTranslateHook}\n        const { getInputProps, saveButtonProps, setFieldValue, refineCore: { formLoading } } = useForm({\n            initialValues: ${JSON.stringify(initialValues)},\n            ${\n                isCustomPage\n                    ? `refineCoreProps: {\n                        resource: \"${resource.name}\",\n                        action: \"create\",\n                        ${getMetaProps(\n                            resource.identifier ?? resource.name,\n                            meta,\n                            \"getOne\",\n                        )}\n                    }`\n                    : getMetaProps(\n                          resource.identifier ?? resource.name,\n                          meta,\n                          \"getOne\",\n                      )\n                    ? `refineCoreProps: { ${getMetaProps(\n                          resource.identifier ?? resource.name,\n                          meta,\n                          \"getOne\",\n                      )} }`\n                    : \"\"\n            }\n        });\n    \n        ${relationHooksCode}\n\n        return (\n            <Create isLoading={formLoading} saveButtonProps={saveButtonProps}>\n                ${renderedFields.join(\"\")}\n            </Create>\n        );\n    };\n    `;\n};\n\n/**\n * @experimental This is an experimental component\n */\nexport const CreateInferencer: InferencerResultComponent = createInferencer({\n    type: \"create\",\n    additionalScope: [\n        [\"@refinedev/mantine\", \"RefineMantine\", { Create, useForm, useSelect }],\n        [\n            \"@mantine/core\",\n            \"MantineCore\",\n            { MultiSelect, Select, TextInput, Checkbox, Textarea, NumberInput },\n        ],\n    ],\n    codeViewerComponent: SharedCodeViewer,\n    loadingComponent: LoadingComponent,\n    errorComponent: ErrorComponent,\n    renderer,\n});\n","import { Edit, useForm, useSelect } from \"@refinedev/mantine\";\nimport {\n    MultiSelect,\n    Select,\n    TextInput,\n    Group,\n    Checkbox,\n    Textarea,\n    NumberInput,\n} from \"@mantine/core\";\n\nimport { createInferencer } from \"../../create-inferencer\";\nimport {\n    jsx,\n    componentName,\n    accessor,\n    printImports,\n    isIDKey,\n    getOptionLabel,\n    dotAccessor,\n    noOp,\n    getVariableName,\n    translatePrettyString,\n    getMetaProps,\n    idQuoteWrapper,\n} from \"../../utilities\";\n\nimport { ErrorComponent } from \"./error\";\nimport { LoadingComponent } from \"./loading\";\nimport { SharedCodeViewer } from \"../../components/shared-code-viewer\";\n\nimport {\n    InferencerResultComponent,\n    InferField,\n    RendererContext,\n} from \"../../types\";\n\n/**\n * a renderer function for edit page in Mantine\n * @internal used internally from inferencer components\n */\nexport const renderer = ({\n    resource,\n    fields,\n    meta,\n    isCustomPage,\n    id,\n    i18n,\n}: RendererContext) => {\n    const COMPONENT_NAME = componentName(\n        resource.label ?? resource.name,\n        \"edit\",\n    );\n    const recordName = getVariableName(resource.label ?? resource.name, \"Data\");\n    const imports: Array<\n        [element: string, module: string, isDefaultImport?: boolean]\n    > = [\n        [\"IResourceComponentsProps\", \"@refinedev/core\"],\n        [\"Edit\", \"@refinedev/mantine\"],\n        [\"useForm\", \"@refinedev/mantine\"],\n    ];\n    let initialValues: Record<string, any> = {};\n\n    if (i18n) {\n        imports.push([\"useTranslate\", \"@refinedev/core\"]);\n    }\n\n    const relationFields: (InferField | null)[] = fields.filter(\n        (field) => field?.relation && !field?.fieldable && field?.resource,\n    );\n\n    const relationHooksCode = relationFields\n        .filter(Boolean)\n        .map((field) => {\n            if (field?.relation && !field.fieldable && field.resource) {\n                imports.push([\"useSelect\", \"@refinedev/mantine\"]);\n\n                let val = accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                    false,\n                );\n\n                if (field.multiple && field.accessor) {\n                    val = `${accessor(\n                        recordName,\n                        field.key,\n                    )}?.map((item: any) => ${accessor(\n                        \"item\",\n                        undefined,\n                        field.accessor,\n                    )})`;\n                }\n\n                let effect = \"\";\n\n                if (field.multiple && field.accessor) {\n                    effect = `React.useEffect(() => {\n                        setFieldValue(\"${field.key}\", ${val});\n                    }, [${recordName}]);`;\n                }\n\n                return `\n                const { selectProps: ${getVariableName(\n                    field.key,\n                    \"SelectProps\",\n                )} } =\n                useSelect({\n                    resource: \"${field.resource.name}\",\n                    defaultValue: ${val},\n                    ${getOptionLabel(field)}\n                    ${getMetaProps(\n                        field?.resource?.identifier ?? field?.resource?.name,\n                        meta,\n                        \"getList\",\n                    )}\n                });\n\n                ${effect}\n            `;\n            }\n            return undefined;\n        })\n        .filter(Boolean);\n\n    const renderRelationFields = (field: InferField) => {\n        if (field.relation && field.resource) {\n            initialValues = {\n                ...initialValues,\n                [field.key]: field.multiple\n                    ? []\n                    : field.accessor\n                    ? {\n                          [typeof field.accessor === \"string\"\n                              ? field.accessor\n                              : field.accessor[0]]: \"\",\n                      }\n                    : \"\",\n            };\n\n            const variableName = getVariableName(field.key, \"SelectProps\");\n\n            if (field.multiple) {\n                imports.push([\"MultiSelect\", \"@mantine/core\"]);\n\n                return jsx`\n                    <MultiSelect mt=\"sm\" label=${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                    })} {...getInputProps(\"${dotAccessor(\n                    field.key,\n                    undefined,\n                )}\")} {...${variableName}} filterDataOnExactSearchMatch={undefined} />\n                `;\n            }\n\n            imports.push([\"Select\", \"@mantine/core\"]);\n\n            return jsx`\n                <Select mt=\"sm\" label=${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                })} {...getInputProps(\"${dotAccessor(\n                field.key,\n                undefined,\n                field.accessor,\n            )}\")} {...${variableName}} />\n            `;\n        }\n        return undefined;\n    };\n\n    const textFields = (field: InferField) => {\n        if (\n            field.type === \"text\" ||\n            field.type === \"email\" ||\n            field.type === \"date\" ||\n            field.type === \"url\"\n        ) {\n            imports.push([\"TextInput\", \"@mantine/core\"]);\n\n            initialValues = {\n                ...initialValues,\n                [field.key]: field.multiple ? [] : \"\",\n            };\n\n            if (field.multiple) {\n                imports.push([\"Group\", \"@mantine/core\"]);\n\n                const val = dotAccessor(field.key, \"${index}\", field.accessor);\n\n                return `\n                <Group spacing=\"xs\">\n                    {${accessor(\n                        recordName,\n                        field.key,\n                    )}?.map((item: any, index: number) => (\n                        <TextInput mt=\"sm\" key={index} label=${translatePrettyString(\n                            {\n                                resource,\n                                field,\n                                i18n,\n                            },\n                        )} {...getInputProps(\\`${val}\\`)} />\n                    ))}\n                </Group>\n                `;\n            }\n\n            return jsx`\n                <TextInput mt=\"sm\" ${\n                    isIDKey(field.key) ? \"disabled\" : \"\"\n                } label=${translatePrettyString({\n                resource,\n                field,\n                i18n,\n            })} {...getInputProps(\"${dotAccessor(\n                field.key,\n                undefined,\n                field.accessor,\n            )}\")} />\n            `;\n        }\n        return undefined;\n    };\n\n    const imageFields = (field: InferField) => {\n        if (field.type === \"image\") {\n            return jsx`\n            {/* \n                Dropzone component is not included in \"@refinedev/mantine\" package.\n                To use a <Dropzone> component, you can follow the official documentation for Mantine.\n                \n                Docs: https://mantine.dev/others/dropzone/\n            */}\n            `;\n        }\n        return undefined;\n    };\n\n    const booleanFields = (field: InferField) => {\n        if (field.type === \"boolean\") {\n            imports.push([\"Checkbox\", \"@mantine/core\"]);\n\n            initialValues = {\n                ...initialValues,\n                [field.key]: field.multiple ? [] : \"\",\n            };\n\n            if (field.multiple) {\n                imports.push([\"Group\", \"@mantine/core\"]);\n\n                const val = dotAccessor(field.key, \"${index}\", field.accessor);\n\n                return `\n                <Group spacing=\"xs\">\n                    {${accessor(\n                        recordName,\n                        field.key,\n                    )}?.map((item: any, index: number) => (\n                        <Checkbox mt=\"sm\" key={index} label=${translatePrettyString(\n                            {\n                                resource,\n                                field,\n                                i18n,\n                            },\n                        )} {...getInputProps(\\`${val}\\`, { type: 'checkbox' })} />\n                    ))}\n                </Group>\n                `;\n            }\n\n            return jsx`\n                <Checkbox mt=\"sm\" label=${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                })} {...getInputProps(\"${dotAccessor(\n                field.key,\n                undefined,\n                field.accessor,\n            )}\", { type: 'checkbox' })} />\n            `;\n        }\n        return undefined;\n    };\n\n    const dateFields = (field: InferField) => {\n        if (field.type === \"date\") {\n            const textInputRender = textFields(field);\n\n            return `\n                {/* \n                    DatePicker component is not included in \"@refinedev/mantine\" package.\n                    To use a <DatePicker> component, you can follow the official documentation for Mantine.\n                    \n                    Docs: https://mantine.dev/dates/date-picker/\n                */}\n                ${textInputRender}\n            `;\n        }\n        return undefined;\n    };\n\n    const richtextFields = (field: InferField) => {\n        if (field.type === \"richtext\") {\n            imports.push([\"Textarea\", \"@mantine/core\"]);\n\n            initialValues = {\n                ...initialValues,\n                [field.key]: field.multiple ? [] : \"\",\n            };\n\n            if (field.multiple) {\n                imports.push([\"Group\", \"@mantine/core\"]);\n\n                const val = dotAccessor(field.key, \"${index}\", field.accessor);\n\n                return `\n                <Group spacing=\"xs\">\n                    {${accessor(\n                        recordName,\n                        field.key,\n                    )}?.map((item: any, index: number) => (\n                        <Textarea mt=\"sm\" key={index} label=${translatePrettyString(\n                            {\n                                resource,\n                                field,\n                                i18n,\n                            },\n                        )} {...getInputProps(\\`${val}\\`)} />\n                    ))}\n                </Group>\n                `;\n            }\n\n            return jsx`\n                <Textarea mt=\"sm\" label=${translatePrettyString({\n                    resource,\n                    field,\n                    i18n,\n                })} autosize {...getInputProps(\"${dotAccessor(\n                field.key,\n                undefined,\n                field.accessor,\n            )}\")} />\n            `;\n        }\n\n        return undefined;\n    };\n\n    const numberFields = (field: InferField) => {\n        if (field.type === \"number\") {\n            imports.push([\"NumberInput\", \"@mantine/core\"]);\n\n            initialValues = {\n                ...initialValues,\n                [field.key]: field.multiple ? [] : \"\",\n            };\n\n            if (field.multiple) {\n                imports.push([\"Group\", \"@mantine/core\"]);\n\n                const val = dotAccessor(field.key, \"${index}\", field.accessor);\n\n                return `\n                <Group spacing=\"xs\">\n                    {${accessor(\n                        recordName,\n                        field.key,\n                    )}?.map((item: any, index: number) => (\n                        <NumberInput mt=\"sm\" key={index} label=${translatePrettyString(\n                            {\n                                resource,\n                                field,\n                                i18n,\n                            },\n                        )} {...getInputProps(\\`${val}\\`)} />\n                    ))}\n                </Group>\n                `;\n            }\n\n            return jsx`\n                <NumberInput mt=\"sm\" ${\n                    isIDKey(field.key) ? \"disabled\" : \"\"\n                } label=${translatePrettyString({\n                resource,\n                field,\n                i18n,\n            })} {...getInputProps(\"${dotAccessor(\n                field.key,\n                undefined,\n                field.accessor,\n            )}\")}/>\n            `;\n        }\n\n        return undefined;\n    };\n\n    const wrapper = (code?: string) => {\n        if (code) {\n            return jsx`\n                ${code}\n        `;\n        }\n        return undefined;\n    };\n\n    const renderedFields: Array<string | undefined> = fields.map((field) => {\n        switch (field?.type) {\n            case \"url\":\n            case \"text\":\n            case \"email\":\n                return wrapper(textFields(field));\n            case \"number\":\n                return wrapper(numberFields(field));\n            case \"richtext\":\n                return wrapper(richtextFields(field));\n            case \"image\":\n                return wrapper(imageFields(field));\n            case \"date\":\n                return wrapper(dateFields(field));\n            case \"boolean\":\n                return wrapper(booleanFields(field));\n            case \"relation\":\n                return wrapper(renderRelationFields(field));\n            default:\n                return undefined;\n        }\n    });\n\n    noOp(imports);\n    const useTranslateHook = i18n && `const translate = useTranslate();`;\n\n    return jsx`\n    ${printImports(imports)}\n    \n    export const ${COMPONENT_NAME}: React.FC<IResourceComponentsProps> = () => {\n        ${useTranslateHook}\n        const { getInputProps, saveButtonProps, setFieldValue, refineCore: { queryResult } } = useForm({\n            initialValues: ${JSON.stringify(initialValues)},\n            ${\n                isCustomPage\n                    ? `refineCoreProps: {\n                        resource: \"${resource.name}\",\n                        id: ${idQuoteWrapper(id)},\n                        action: \"edit\",\n                        ${getMetaProps(\n                            resource?.identifier ?? resource?.name,\n                            meta,\n                            \"getOne\",\n                        )}  \n                    }`\n                    : getMetaProps(\n                          resource?.identifier ?? resource?.name,\n                          meta,\n                          \"getOne\",\n                      )\n                    ? `refineCoreProps: { ${getMetaProps(\n                          resource?.identifier ?? resource?.name,\n                          meta,\n                          \"getOne\",\n                      )} }\n                      `\n                    : \"\"\n            }\n        });\n    \n        const ${recordName} = queryResult?.data?.data;\n    \n        ${relationHooksCode}\n\n        return (\n            <Edit saveButtonProps={saveButtonProps}>\n                ${renderedFields.join(\"\")}\n            </Edit>\n        );\n    };\n    `;\n};\n\n/**\n * @experimental This is an experimental component\n */\nexport const EditInferencer: InferencerResultComponent = createInferencer({\n    type: \"edit\",\n    additionalScope: [\n        [\"@refinedev/mantine\", \"RefineMantine\", { Edit, useForm, useSelect }],\n        [\n            \"@mantine/core\",\n            \"MantineCore\",\n            {\n                MultiSelect,\n                Select,\n                TextInput,\n                Group,\n                Checkbox,\n                Textarea,\n                NumberInput,\n            },\n        ],\n    ],\n    codeViewerComponent: SharedCodeViewer,\n    loadingComponent: LoadingComponent,\n    errorComponent: ErrorComponent,\n    renderer,\n});\n"],"mappings":"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","names":["src_exports","__export","DevToolsContext","DevToolsContextProvider","DevtoolsEvent","hooksByScope","receive","scopes","send","module","__toCommonJS","acc","hook","scope","import_react","A","ws","event","payload","resolve","listener","__name","callback","e","receivedEvent","r","React","__devtools","port","children","values","setValues","setWs","wsInstance","unsubscribe","data","v","contextValues","src_exports","__export","getTrace","getXRay","useQuerySubscription","module","__toCommonJS","import_error_stack_parser","E","unrelatedFunctionName","cleanStack","stack","firstUnrelatedIndex","frame","REFINE_PACKAGE_FILEPATH_REGEXP","isRefineStack","filename","getPackageNameFromFilename","_a","match","name","error","g","ErrorStackParser","trace","import_devtools_shared","getResourcePath","__name","hookName","legacyKey","m","import_react","src_exports","__export","AccessControlContext","AuthPage","Authenticated","CanAccess","ErrorComponent","GitHubBanner","KeyBuilder","LayoutWrapper","LoginPage","ReadyPage","Refine","ResourceContext","RouteChangeHandler","TranslationContext","UndoableQueue","WelcomePage","createTreeView","file2Base64","generateDefaultDocumentTitle","getDefaultFilter","getDefaultSortOrder","getNextPageParam","getPreviousPageParam","handleUseParams","importCSVMapper","keys","legacyResourceTransform","matchResourceFromRoute","parseTableParams","parseTableParamsFromQuery","pickDataProvider","pickNotDeprecated","queryKeys","routeGenerator","setInitialFilters","setInitialSorters","stringifyTableParams","unionFilters","unionSorters","useActiveAuthProvider","useApiUrl","useAuthenticated","useBack","useBreadcrumb","useCan","useCanWithoutCache","useCancelNotification","useCheckError","useCreate","useCreateMany","useCustom","useCustomMutation","useDataProvider","useDelete","useDeleteMany","useExport","useForgotPassword","useForm","useGetIdentity","useGetLocale","useGetToPath","useGo","useHandleNotification","useImport","useInfiniteList","useInvalidate","useIsAuthenticated","useIsExistAuthentication","useLink","useList","useLiveMode","useLoadingOvertime","useLog","useLogList","useLogin","useLogout","useMany","useMenu","useMeta","useModal","useMutationMode","useNavigation","useNotification","useOnError","useOne","useParse","useParsed","usePermissions","usePublish","useRedirectionAfterSubmission","useRefineContext","useRegister","useResource","useResourceSubscription","useResourceWithRoute","useRouterContext","useRouterType","useSelect","useSetLocale","useShow","useSubscription","useSyncWithLocation","useTable","useTitle","useToPath","useTranslate","useUpdate","useUpdateMany","useUpdatePassword","useUserFriendlyName","useWarnAboutChange","userFriendlyResourceName","module","__toCommonJS","import_react","B","import_react_query","import_devtools_internal","import_qs","import_unionWith","import_differenceWith","import_warn_once","userFriendlySecond","__name","miliseconds","import_zip","import_fromPairs","data","mapData","item","headers","body","entry","Ks","fromPairs","Ns","zip","index","array","import_pluralize","resource","type","humanizeResource","humanizeString","Mo","pluralize","params","args","arg","arrayFindIndex","slice","sliceItem","sliceIndex","convertToLegacy","segments","newSegments","newParams","BaseKeyBuilder","legacy","ParamsKeyBuilder","paramsValue","DataIdRequiringKeyBuilder","idValue","DataIdsRequiringKeyBuilder","idsValue","el","DataResourceKeyBuilder","actionType","DataKeyBuilder","resourceName","mutationName","AuthKeyBuilder","AccessResourceKeyBuilder","AccessKeyBuilder","AuditActionKeyBuilder","AuditKeyBuilder","name","dataProviderName","meta","metaData","providerName","config","ids","id","queryKeysReplacement","preferLegacyKeys","hasPermission","permissions","action","i","isParameter","segment","splitToSegments","path","isSegmentCountsSame","route","resourceRoute","routeSegments","resourceRouteSegments","removeLeadingTrailingSlashes","checkBySegments","stdRoute","stdResourceRoute","getDefaultActionPath","parentPrefix","cleanParentPrefix","getParentResource","resources","_a","_b","parentName","getParentPrefixForResource","parents","parent","v","getActionRoutesFromResource","actions","actionList","pickMatchedRoute","routes","sanitizedRoutes","segmentsCount","eligibleRoutes","nonParametrizedRoutes","allFound","actionRoute","mostEligible","resourcesFromProps","tree","resourcesRouteObject","resourcesNameObject","child","text","DefaultLayout","children","zs","React","defaultRefineOptions","Fo","RefineContext","Vo","RefineContextProvider","hasDashboard","mutationMode","warnWhenUnsavedChanges","syncWithLocation","undoableTimeout","DashboardPage","Title","Layout","Header","Sider","Footer","OffLayoutArea","catchAll","liveMode","onLiveEvent","options","handleRefineOptions","disableTelemetry","reactQueryClientConfig","reactQueryDevtoolConfig","_c","_d","_e","_f","_g","_h","optionsWithDefaults","disableTelemetryWithDefault","reactQueryWithDefaults","redirectPage","redirectFromProps","redirectOptions","sequentialPromises","promises","onEachResolve","onEachReject","results","promise","result","error","pickResource","identifier","r","handleMultiple","res","lastPage","pagination","cursor","current","pageSize","totalPages","_resources","pickRouteParams","s","prepareRouteParams","routeParams","acc","key","value","composeRoute","designatedRoute","resourceMeta","parsed","preparedRouteParams","match","fromParams","LegacyAuthContext","xt","LegacyAuthContextProvider","isProvided","authOperations","replace","loginFunc","registerFunc","logoutFunc","checkAuthFunc","AuthBindingsContext","AuthBindingsContextProvider","authBindings","handleLogin","handleRegister","handleLogout","handleCheck","handleForgotPassword","handleUpdatePassword","useLegacyAuthContext","useAuthBindingsContext","legacyAuthProvider","authProvider","handlePaginationParams","hasPagination","configPagination","hasPaginationString","mode","useMediaQuery","query","matches","setMatches","Kr","media","listener","safeTranslate","translate","defaultMessage","translated","actionPrefixMatcher","resourceNameFallback","resourceNameWithFallback","defaultTitle","suffix","autoGeneratedTitle","qs","UnsavedWarnContext","nr","UnsavedWarnContextProvider","warnWhen","setWarnWhen","$o","tn","rn","sn","textTransformers","humanizeName","url","sorter","sorters","filters","Wr","rest","compareFilters","left","right","compareSorters","permanentFilter","newFilters","prevFilters","f","nn","warnOnce","Go","unionWith","crudFilter","permanentSorter","newSorters","crudSorter","defaultFilter","Wo","differenceWith","defaultSorter","columnName","sortItem","operatorType","filter","operator","field","file","resolve","reject","reader","resultHandler","useKeys","useNewQueryKeys","v3LegacyAuthProviderCompatible","legacyGetPermission","getPermissions","queryResponse","zo","jo","legacyQueryResponse","queryOptions","legacyGetUserIdentity","getIdentity","_o","Oo","useInvalidateAuthStore","queryClient","fn","mutationOptions","invalidateAuthStore","routerType","go","push","open","close","legacyLogoutFromContext","logoutFromContext","mutation","Zo","variables","success","redirectTo","redirectPath","redirect","buildNotification","Yo","v3LegacyAuthProviderCompatibleMutation","useLocation","search","legacyLoginFromContext","loginFromContext","to","yn","gn","qo","es","redirectPathFromAuth","legacyRegisterFromContext","registerFromContext","rs","os","v3LegacyAuthProviderCompatibleForgotPasswordFromContext","forgotPasswordFromContext","ns","as","legacyUpdatePasswordFromContext","updatePasswordFromContext","Tn","Rn","us","cs","checkAuth","check","ds","ps","legacyCheckErrorFromContext","onErrorFromContext","legacyLogout","logout","ls","shouldLogout","legacyIsProvided","isLoading","intervalProp","onIntervalProp","elapsedTime","setElapsedTime","mr","overtime","interval","onInterval","intervalFn","prevElapsedTime","resourceFromProp","successNotification","errorNotification","liveParams","overtimeOptions","dataProvider","checkError","handleNotification","getMeta","pickedDataProvider","preferredMeta","prefferedFilters","prefferedSorters","prefferedHasPagination","prefferedPagination","isServerPagination","combinedMeta","notificationValues","isEnabled","getList","Cn","queryKey","pageParam","signal","rawData","notificationConfig","err","hn","getOne","bn","vn","getMany","Dn","Ln","import_isEqual","UndoableQueueContext","Ft","initialState","undoableQueueReducer","state","notificationItem","Yr","isEqual","UndoableQueueContextProvider","notifications","notificationDispatch","notificationData","notification","select","qr","mutationModeContext","undoableTimeoutContext","publish","log","invalidateStore","values","onCancel","mutationModePropOrContext","undoableTimeoutPropOrContext","doMutation","cancelMutation","optimisticUpdateMap","resourceKeys","previousQueries","previous","record","_data","_error","invalidates","context","resourceSingular","previousData","queryData","fields","operation","En","Un","successNotificationFromProp","errorNotificationFromProp","Mn","eo","In","Sn","selectedDataProvider","val","response","resourcePlural","An","ro","mutationFn","kn","oo","Fn","getApiUrl","method","custom","Nn","Kn","$n","Gn","defaultDataProvider","DataContext","gs","DataContextProvider","dataProviders","so","jn","paginationProperties","total","_n","LiveContext","Ts","LiveContextProvider","liveProvider","useMemoized","ref","Zn","Yn","useDeepMemo","dependencies","memoizedDependencies","qn","Rs","ResourceContextProvider","providedResources","RouterPickerContext","Ps","RouterPickerProvider","defaultBindings","RouterBindingsContext","ao","RouterBindingsProvider","router","bindings","io","parse","na","aa","oldProps","force","pickedResource","resourceWithRoute","useParams","legacyParams","resourceKeyToCheck","legacyResource","legacyId","legacyAction","legacyResourceName","legacyIdentifier","pickedFromProps","co","ua","ia","invalidationFilters","invalidationOptions","dp","channel","types","enabled","liveModeFromProp","liveDataContext","gr","liveModeFromContext","onLiveEventContextCallback","invalidate","subscription","callback","event","ca","po","liveContext","da","pa","NotificationContext","lo","NotificationContextProvider","ma","fa","fallbackNotification","hs","TranslationContextProvider","i18nProvider","mo","lang","fo","yo","import_export_to_csv_fix_source_map","resourceFromProps","maxItemCount","exportOptions","onError","setIsLoading","Ra","filename","preparingData","Pa","import_debounce","actionFromProps","idFromProps","onMutationSuccess","onMutationError","queryMeta","mutationMeta","mutationModeProp","createMutationOptions","updateMutationOptions","autoSave","idFromRoute","actionFromRoute","inferredIdentifier","defaultId","setId","isCreate","isEdit","isClone","xa","designatedRedirectAction","queryResult","isFetchingQuery","mutationResultCreate","mutateCreate","isLoadingCreate","mutationResultUpdate","mutateUpdate","isLoadingUpdate","autoSaveMutation","handleSubmitWithRedirect","onFinishCreate","onSuccess","_","responseId","onFinishAutoSaveMutation","onFinishAutoSave","Ca","debounce","allValues","idFromFunction","show","edit","list","create","ha","To","Ro","useHistory","history","back","handleUrl","createUrl","resourceItem","createActionRoute","editUrl","encodedId","editActionRoute","cloneUrl","cloneActionRoute","showUrl","showActionRoute","listUrl","listActionRoute","showId","setShowId","xo","ba","import_papaparse","import_chunk","paparseOptions","batchSize","onFinish","onProgress","processedAmount","setProcessedAmount","Bt","totalAmount","setTotalAmount","createMany","mutationResult","handleCleanup","handleFinish","createdValues","handleChange","va","valueFns","currentAmount","chunks","Da","chunk","chunkedFns","chunkedValues","currentBatchLength","defaultVisible","visible","setVisible","Rr","resourceFromRoute","La","selectedResource","Co","defaultProvider","LegacyRouterContext","vs","RouterContext","LegacyRouterContextProvider","Prompt","Link","routerContextValues","Ma","Ds","AccessControlContextProvider","can","sanitizeResource","icon","clone","restResource","_metaIcon","restMeta","_optionsIcon","restOptions","Sa","_resource","paramsRest","sanitizedResource","wa","Aa","canFromContext","Es","import_uniqBy","import_get","props","setSearch","at","setOptions","selectedOptions","setSelectedOptions","sort","optionLabel","optionValue","debounceValue","defaultValueQueryOptionsFromProps","fetchSize","defaultValue","onSearchFromProp","defaultValues","defaultValueQueryOnSuccess","xr","get","defaultValueQueryOptions","defaultValueQueryResult","defaultQueryOnSuccess","onSearch","ka","uniqBy","Qa","defaultPermanentFilter","defaultPermanentSorter","initialCurrent","initialPageSize","initialSorter","defaultSetFilterBehavior","initialFilter","filtersFromProp","sortersFromProp","syncWithLocationProp","syncWithLocationContext","pathname","parsedParams","isServerSideFilteringEnabled","isServerSideSortingEnabled","isPaginationEnabled","prefferedCurrent","prefferedPageSize","parsedCurrent","parsedPageSize","parsedSorter","parsedFilters","preferredInitialFilters","preferredPermanentFilters","preferredInitialSorters","preferredPermanentSorters","prefferedFilterBehavior","defaultCurrent","defaultPageSize","Oe","Ba","setSorters","setFilters","setCurrent","setPageSize","createLinkForSyncWithLocation","currentQueryParams","Us","stringifyParams","queryParams","Cr","hr","setFiltersAsMerge","setFiltersAsReplace","setFiltersWithSetter","setter","prev","setFiltersFn","setterOrFilters","behavior","setSortWithUnion","newSorter","AuditLogContext","Ms","AuditLogContextProvider","update","logMutationOptions","renameMutationOptions","br","auditLogContext","Is","identityData","refetch","logPermissions","authorData","ws","rename","author","Ka","Ha","$a","metaFromProps","Ga","breadcrumbs","addBreadcrumb","parentResource","grandParentName","listActionOfResource","hrefRaw","href","actionLabel","Wa","createResourceKey","currentParentResource","createTree","root","currentParent","currentTree","flatten","items","itemKey","getCleanPath","hideOnMissingParameter","getToPath","legacyPath","getFriendlyName","cleanRoute","selectedKey","defaultOpenKeys","ho","prepareItem","composed","treeItems","treeMenuItems","prepare","preparedNodes","newItem","metaFromProp","_filters","_sorters","_current","_pageSize","additionalParams","errorMessage","setErrorMessage","Xe","username","setUsername","Re","password","setPassword","login","e","providers","registerLink","forgotPasswordLink","rememberMe","contentProps","wrapperProps","renderContent","formProps","title","LegacyLink","ActiveLink","email","setEmail","se","remember","setRemember","renderLink","link","renderProviders","provider","content","RegisterPage","loginLink","ge","register","ForgotPasswordPage","Me","forgotPassword","UpdatePasswordPage","updatePassword","newPassword","setNewPassword","Ie","confirmPassword","setConfirmPassword","vt","we","CARDS","te","isTablet","isMobile","getGridTemplateColumns","getHeaderFontSize","getSubHeaderFontSize","card","Card","description","isHover","setIsHover","REFINE_VERSION","useTelemetryData","auth","ft","routerContext","dataContext","notificationContext","accessControlContext","refineOptions","auditLog","live","i18n","accessControl","projectId","encode","payload","stringifiedPayload","throughImage","src","img","throughFetch","transport","Telemetry","sent","Ss","encoded","checkRouterPropMisuse","otherProps","useRouterMisuseWarning","warned","As","legacyRouterProvider","routerProvider","notificationProvider","accessControlProvider","auditLogProvider","vr","ni","notificationProviderContextValues","ce","RouterComponent","timeoutId","setTimeoutId","Do","cancelNotification","newTimeoutId","LayoutFromProps","SiderFromProps","HeaderFromProps","TitleFromProps","FooterFromProps","OffLayoutAreaFromProps","$t","UnsavedPrompt","warnWhenListener","useDeferredGo","setConfig","Se","redirectOnFail","appendCurrentPathToQuery","fallbackContent","loadingContent","activeAuthProvider","hasAuthProvider","isLegacyAuth","isLegacyRouter","deferredGo","legacyLocation","isFetching","isSuccess","isAuthenticatedStatus","authenticatedRedirect","isAuthenticated","appliedRedirect","toQuery","location","ci","actionFromProp","paramsFromProp","fallback","onUnauthorized","idFromPropsOrRoute","it","CSSRules","ut","styleTag","rule","src_exports","__export","RefineButtonClassNames","RefineButtonTestIds","RefinePageHeaderClassNames","module","__toCommonJS","src_exports","__export","AuthPage","AutoSaveIndicator","BooleanField","Breadcrumb","CloneButton","Create","CreateButton","DarkTheme","DateField","DeleteButton","Edit","EditButton","EmailField","ErrorComponent","ExportButton","FileField","FormContext","HamburgerMenu","Header","ImportButton","Layout","LightTheme","List","ListButton","MarkdownField","NumberField","ReadyPage","RefineThemes","Title","RefreshButton","RingCountdown","SaveButton","Show","ShowButton","Sider","TagField","TextField","ThemedHeader","ThemedHeaderV2","ThemedLayout","ThemedLayoutContext","ThemedLayoutContextProvider","ThemedLayoutV2","ThemedSider","ThemedSiderV2","ThemedTitle","ThemedTitleV2","UrlField","WelcomePage","mapButtonVariantToActionIconVariant","notificationProvider","useForm","useModalForm","useSelect","useSiderVisible","useStepsForm","useThemedLayoutContext","module","__toCommonJS","import_react","S","import_core","__name","undoableTimeout","Ut","React","yt","value","rest","dr","pr","mr","ur","cr","fr","import_icons","valueLabelTrue","valueLabelFalse","trueIcon","falseIcon","svgIconProps","it","Tr","xt","import_dayjs","import_localizedFormat","ht","dayjs","gr","LocalizedFormat","defaultLocale","locales","dateFormat","yr","xr","title","src","hr","children","br","Br","toLocaleStringSupportsOptions","locale","options","number","Pr","Cr","import_react_markdown","import_remark_gfm","Fr","vr","ReactMarkdown","Sr","gfm","import_ui_types","variant","resourceNameFromProps","resourceNameOrRouteName","hideText","accessControl","meta","onClick","accessControlContext","no","ye","accessControlEnabled","hideIfUnauthorized","translate","routerType","Link","LegacyLink","ActiveLink","generateCreateUrl","resource","data","disabledTitle","createUrl","styles","commonProps","Eo","e","ko","Ht","d","g","T","l","P","so","ge","Ao","Io","Qt","Bt","r","o","s","u","c","m","B","E","A","f","C","y","id","b","i","x","p","recordItemId","w","k","ee","a","xe","pe","Do","ke","Wt","h","mutationModeProp","errorNotification","dataProviderName","confirmTitle","L","I","D","v","isLoading","z","H","M","de","re","mutate","identifier","ae","j","Te","setWarnWhen","setOpened","at","Ge","Vo","Pt","Ot","confirmCancelText","wr","zo","import_react_query","queryClient","invalidates","resources","handleInvalidate","isInvalidating","io","Uo","Gt","he","Mo","showUrl","ao","ne","Ho","Qo","$t","Wo","F","listUrl","lt","kr","Oo","Ct","jt","Er","_a","dt","Ar","Go","Ft","loading","Rt","lo","be","jo","Ro","Yt","Ir","Bo","generateCloneUrl","Yo","vt","qt","Nr","cloneUrl","Me","He","$e","Vr","Ln","t","inputProps","n","Je","headerProps","getUserFriendlyName","oe","canCreate","le","breadcrumb","Ur","kn","_e","ro","Xe","defaultHeaderButtons","isCreateButtonVisible","createButtonProps","_b","headerButtonProps","headerButtons","contentProps","props","_c","resourceFromProps","footerButtonsFromProps","footerButtonProps","headerButtonsFromProps","wrapperProps","globalBreadcrumb","Ve","go","goBack","Se","action","goListPath","No","Ne","me","isDeleteButtonVisible","canDelete","zr","canEdit","editButtonProps","isEditButtonVisible","Le","refreshButtonProps","hasList","listButtonProps","buttonBack","_","Oe","ue","se","Mr","Hr","En","sr","ir","ar","breadcrumbComponent","footerButtons","Z","deleteButtonPropsFromProps","breadcrumbFromProps","mutationMode","mutationModeFromProps","mutationModeContext","back","Kt","Tt","saveButtonPropsFromProps","saveButtonProps","autoSaveProps","goBackFromProps","Be","ce","Ee","Qr","Wr","An","defaultFooterButtons","Ae","Pe","Or","In","je","loadingOverlayVisible","setErrorMessage","fe","X","Dn","theme","errorMessage","Gr","$r","Nn","Po","R","qo","Ko","W","jr","Vn","zn","Un","Re","po","mo","uo","co","Rr","FormProvider","useFormContext","cardStyles","Qe","titleStyles","pageTitleStyles","providers","registerLink","rememberMe","formProps","onSubmit","authProvider","provider","CardContent","onSubmitProp","values","J","Yr","Ye","O","qr","forgotPasswordLink","layoutStyles","renderContent","renderProviders","St","Zo","Kr","ie","loginLink","Ce","PageTitle","form","Ie","Zr","wt","we","_r","updatePassword","Mn","Co","De","eo","Xr","ForgotPasswordPage","UpdatePasswordPage","To","N","showHome","Y","Q","ze","Hn","Zt","rootRouteResource","breadcrumbProps","hasDashboard","breadcrumbs","icon","href","label","hideIcons","defaultNavIcon","TitleFromProps","opened","NewLink","selectedKey","isExistAuthentication","RenderToTitle","TitleFromContext","collapsed","commonTooltipProps","renderTreeView","isSelected","item","isParent","additionalLinkProps","defaultOpenKeys","commonNavLinkStyles","dashboard","logout","handleLogout","renderSider","items","pt","fo","_t","drawerWidth","kt","Qn","Et","setCollapsed","_o","Jr","Lt","mt","user","V","q","U","Ue","Xt","OffLayoutArea","render","menuItems","Wn","tree","route","name","mutateLogout","prev","borderColor","ut","qe","Jt","At","On","yo","It","Xo","Fo","Gn","$n","MantineHeader","Footer","defaultText","defaultIcon","oo","zt","G","K","$","et","Dt","en","xo","ct","wrapperStyles","disableServerSideValidationProp","disableServerSideValidation","refineCoreProps","warnWhenUnsavedChangesRefine","warnWhenUnsavedChangesProp","useMantineFormResult","resetDirty","useFormCoreResult","useFormCore","er","error","_context","Fe","Nt","jn","key","errors","newError","fieldError","queryResult","registeredFields","fields","setValues","isValuesChanged","isDirty","transformedValues","handleSubmit","handleValidationFailure","onMantineSubmit","formLoading","onFinish","syncWithLocation","initiallySynced","setInitiallySynced","invalidate","resourceProp","actionProp","autoSubmitClose","actionFromParams","parsed","syncingId","show","close","_d","syncWithLocationKey","openStatus","idFromParams","setId","visible","Rn","on","submit","autoResetForm","reset","handleClose","autoSave","tn","Yn","warnWhen","showId","Jo","vo","Vt","handleShow","defaultStep","rn","step","targetStep","current","validate","nn","defaultValueQueryResult","Kn","or","ft","initialSiderCollapsed","mobileSiderOpen","setMobileSiderOpen","tr","siderCollapsed","setSiderCollapsed","So","rt","Ke","ot","tt","rr","nr","We","Zn","stickyStyles","ho","nt","wo","_n","Xn","Lo","sn","an","bo","te","ve","to","Jn","message","Ze","status","gt","import_notifications","isNotificationActive","activeNotifications","index","type","cancelMutation","addNotification","dn","description","es","os","ln","removeNotification","ts","src_exports","__export","useTable","module","__toCommonJS","import_react","import_core","import_react_table","useIsFirstRender","__name","firstRender","f","hasPagination","refineCoreProps","reactTableInitialState","rest","_a","_b","_c","isFirstRender","useTableResult","h","useTableCore","isServerSideFilteringEnabled","isServerSideSortingEnabled","hasPaginationString","isPaginationEnabled","data","current","setCurrent","pageSizeCore","setPageSizeCore","sorters","setSorters","filtersCore","setFilters","pageCount","logicalFilters","filter","reactTableResult","s","sorting","state","columns","pagination","columnFilters","pageIndex","pageSize","d","crudFilters","operator","c","filteredArray","value","b","import_react","import_core","import_mantine","import_core","import_react","import_core","urlLikeKeyRegexp","getFieldableKeys","__name","key","data","fieldableProperties","firstAvailable","fkey","import_core","pickDataProvider","resourceName","dataProviderName","resources","resource","item","meta","__name","dataProviderFromResource","_a","pickInferredField","__name","inferredFields","field","a","b","import_standalone","import_parser_typescript","prettierFormat","__name","code","prettier","tsParser","error","prettySpaces","__name","content","relationRegexp","relationInfer","__name","key","value","isRelation","isBasicValue","isBasicArray","v","removeRelationSuffix","__name","key","relationRegexp","prettyString","__name","str","removeRelationSuffix","word","translatePrettyString","__name","payload","resource","field","i18n","translate","prettedString","prettyString","import_pluralize","toSingular","__name","str","pluralize","import_pluralize","toPlural","__name","str","pluralize","replaceExports","__name","code","line","packageRegex","sideEffectRegex","nameChangeRegex","replaceImports","__name","content","modules","matches","imports","match","defaultImport","namedImports","namespaceImport","packageName","importName","prettySpaces","import_pluralize","resourceFromInferred","__name","field","resources","el","stripped","removeRelationSuffix","pluralize","import_pluralize","componentName","__name","resourceName","type","fallbackResourceName","sanitized","singular","pluralize","resourceComponentName","prettyString","prettyType","handleExpression","__name","expression","jsx","strings","expressions","result","currentString","i","prepareLiveCode","__name","code","componentName","removeHiddenCode","__name","code","dotAccessableRegex","shouldDotAccess","__name","property","accessorSingle","variableName","key","accessor","base","accessorMultiple","variable","joiner","dotAccessor","str","printImports","__name","imports","byModule","acc","element","module","isDefault","elements","defaultImport","e","named","defaultStr","namedStr","identifierRegexp","isIDKey","__name","key","getOptionLabel","__name","field","noOp","__name","arg1","getVariableName","__name","fieldKey","suffixOrPrefix","fieldKeyWithoutInvalidCharacters","prettyPluralVariableName","prettyString","getMetaProps","__name","identifier","meta","action","metaValues","metaValue","pickMeta","actions","acc","idQuoteWrapper","__name","id","composeInferencers","__name","inferencers","fieldInferencer","key","value","record","infer","type","inferences","inferencer","pickInferredField","composeTransformers","__name","transformers","fields","resources","resource","record","infer","type","acc","transformer","arrayInfer","__name","key","value","record","infer","type","isArray","isBasicArray","v","inferredInnerType","basicType","booleanInfer","__name","key","value","import_dayjs","dateSuffixRegexp","dateSeparators","dateInfer","__name","key","value","isDateField","dayjs","isValidDateString","s","emailRegexp","emailInfer","__name","key","value","imageRegexp","imageInfer","__name","key","value","nullishInfer","__name","key","value","numberInfer","__name","key","value","isNonEmptyString","isNotNaN","idPropertyRegexp","objectInfer","__name","key","value","record","infer","type","isNotNull","isNotArray","onlyHasId","hasId","k","fieldableKeys","getFieldableKeys","innerFieldKey","innerFieldType","accessor","el","richtextInfer","__name","key","value","textInfer","__name","key","value","urlRegexp","urlInfer","__name","key","value","defaultElements","arrayInfer","booleanInfer","dateInfer","emailInfer","imageInfer","nullishInfer","numberInfer","objectInfer","relationInfer","richtextInfer","textInfer","urlInfer","basicToRelation","__name","fields","resources","resource","record","field","validUUIdRegex","isValidUUID","value","isNotSelf","imageFieldLikeRegexp","imageByKey","__name","fields","field","relationByResource","__name","fields","resources","field","inferResource","resourceFromInferred","relationToFieldable","__name","fields","resources","resource","record","infer","type","field","value","inferredType","defaultTransformers","imageByKey","relationByResource","relationToFieldable","basicToRelation","import_react","RefineCore","import_react_live","defaultScope","React","RefineCore","InferencerLiveContext","LiveComponent","__name","fetchError","code","additionalScope","ErrorComponent","sanitized","replaceExports","replaceImports","acc","packageName","variableName","_module","ignoreReplacement","scope","_packageName","packageContent","ErrorComponentWithError","error","import_react","import_prism_react_renderer","import_vsDark","SharedCodeViewer","__name","rawCode","loading","code","React","prettierFormat","settled","setSettled","isModalVisible","setIsModalVisible","isVisible","setIsVisible","isColumn","setIsColumn","isModalButtonHover","setIsModalButtonHover","timeout","mediaQuery","handleResize","InfoIcon","OpenIcon","CodeModal","visible","onClose","modalRef","isCopied","setIsCopied","isCopyHover","setIsCopyHover","isCloseHover","setIsCloseHover","isLearnMoreHover","setIsLearnMoreHover","onOutsideClick","event","onCopy","title","CloseIcon","highlight","Highlight","theme","className","style","tokens","getLineProps","getTokenProps","line","i","token","key","ClipboardIcon","props","import_react","import_core","useInferFetch","__name","type","resourceNameOrRouteName","idFromProps","meta","resource","idFromURL","resources","id","dataProvider","error","setError","React","data","setData","datas","setDatas","initial","setInitial","loading","setLoading","resolver","recordItemId","_a","dataProviderName","dataProviderFromResource","pickDataProvider","dp","response","pickMeta","r","import_react","import_core","import_lodash_es","useRelationFetch","__name","record","fields","infer","meta","dataProvider","updatedFields","setUpdatedFields","React","initial","setInitial","loading","setLoading","resolver","allFields","attempts","promises","field","_a","_b","_c","_d","_e","dataProviderName","dataProviderFromResource","dp","isMultiple","requestId","el","data","pickMeta","relationInfer","responseData","isPlural","toPlural","removeRelationSuffix","toSingular","resourceNameWithoutRelationSuffix","results","createInferencer","__name","type","additionalScope","customElements","fieldTransformers","renderer","LoadingComponent","ErrorComponent","CodeViewerComponent","infer","composeInferencers","defaultElements","transform","composeTransformers","defaultTransformers","Inferencer","resourceName","fieldTransformer","hideCodeViewerInProduction","meta","id","_a","_b","resource","resources","i18nProvider","resourceFromURL","record","records","recordLoading","isInitialLoad","inferError","useInferFetch","inferSingleField","key","value","inferResult","transformed","customTransformedFields","field","result","inferSingleRecord","inferMultipleRecords","inferred","allUniqueKeys","index","self","mostCommonRecord","mostCommonFields","fields","acc","count","f","rawResults","recordInUse","React","results","relationLoading","useRelationFetch","clearedFields","cleanFields","idx","arr","el","duplicates","_c","_d","_e","_f","currentFieldHasResource","fieldHasResource","isSameResource","toPush","code","hiddenCodeViewer","LiveComponent","prepareLiveCode","componentName","removeHiddenCode","name","resourceItem","import_react","import_core","import_icons","ErrorComponent","__name","error","React","import_react","import_core","LoadingComponent","__name","React","renderer","__name","resource","fields","meta","isCustomPage","id","i18n","COMPONENT_NAME","componentName","recordName","imports","relationHooksCode","field","_a","_b","_c","_d","ids","accessor","getVariableName","getMetaProps","renderRelationFields","variableName","variableIsLoading","variableDataLength","jsx","translatePrettyString","mapItemName","toSingular","val","textFields","imageFields","emailFields","urlFields","booleanFields","dateFields","richtextFields","numberFields","wrapper","code","renderedFields","noOp","useTranslateHook","printImports","idQuoteWrapper","ShowInferencer","createInferencer","SharedCodeViewer","LoadingComponent","ErrorComponent","import_mantine","import_react_table","import_core","getAccessorKey","__name","field","dotAccessor","renderer","resource","fields","meta","isCustomPage","i18n","COMPONENT_NAME","componentName","recordName","imports","relationFields","relationHooksCode","_a","_b","idsString","accessor","getVariableName","getMetaProps","relationVariableNames","renderRelationFields","variableName","id","header","translatePrettyString","accessorKey","cell","val","imageFields","jsx","emailFields","urlFields","booleanFields","dateFields","richtextFields","basicFields","canEdit","canShow","canDeleteProp","resourceMeta","canDelete","actionButtons","renderedFields","noOp","useTranslateHook","printImports","ListInferencer","createInferencer","SharedCodeViewer","LoadingComponent","ErrorComponent","import_mantine","import_core","renderer","__name","resource","fields","meta","isCustomPage","i18n","COMPONENT_NAME","componentName","imports","initialValues","relationHooksCode","field","_a","_b","getVariableName","getOptionLabel","getMetaProps","renderRelationFields","variableName","jsx","translatePrettyString","dotAccessor","textFields","isIDKey","imageFields","booleanFields","dateFields","richtextFields","numberFields","wrapper","code","renderedFields","noOp","useTranslateHook","printImports","CreateInferencer","createInferencer","SharedCodeViewer","LoadingComponent","ErrorComponent","import_mantine","import_core","renderer","__name","resource","fields","meta","isCustomPage","id","i18n","COMPONENT_NAME","componentName","recordName","getVariableName","imports","initialValues","relationHooksCode","field","_a","_b","val","accessor","effect","getOptionLabel","getMetaProps","renderRelationFields","variableName","jsx","translatePrettyString","dotAccessor","textFields","isIDKey","imageFields","booleanFields","dateFields","richtextFields","numberFields","wrapper","code","renderedFields","noOp","useTranslateHook","printImports","idQuoteWrapper","EditInferencer","createInferencer","SharedCodeViewer","LoadingComponent","ErrorComponent","MantineInferencer","__name","actionFromProps","idFromProps","props","action","id","React","ShowInferencer","CreateInferencer","EditInferencer","ListInferencer"]}