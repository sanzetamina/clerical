{"version":3,"sources":["../../../devtools-shared/src/index.ts","../../../devtools-shared/src/event-types.ts","../../../devtools-shared/src/scopes.ts","../../../devtools-shared/src/context.tsx","../../../devtools-shared/src/send.ts","../../../devtools-shared/src/receive.ts","../../../devtools-internal/src/index.ts","../../../devtools-internal/src/get-trace.ts","../../../devtools-internal/src/clean-stack.ts","../../../devtools-internal/src/constants.ts","../../../devtools-internal/src/is-refine-stack.ts","../../../devtools-internal/src/get-package-name-from-filename.ts","../../../devtools-internal/src/get-resource-path.ts","../../../devtools-internal/src/get-xray.ts","../../../devtools-internal/src/use-query-subscription.tsx","../../../devtools-internal/src/listeners.ts","../../../devtools-internal/src/create-identifier.ts","../../../core/src/index.tsx","../../../core/src/components/pages/error/index.tsx","../../../core/src/hooks/auth/usePermissions/index.ts","../../../core/src/definitions/table/index.ts","../../../core/src/definitions/helpers/userFriendlySeconds/index.ts","../../../core/src/definitions/helpers/importCSVMapper/index.ts","../../../core/src/definitions/helpers/userFriendlyResourceName/index.ts","../../../core/src/definitions/helpers/handleUseParams/index.tsx","../../../core/src/definitions/helpers/pickNotDeprecated/index.ts","../../../core/src/definitions/helpers/keys/index.ts","../../../core/src/definitions/helpers/queryKeys/index.ts","../../../core/src/definitions/helpers/hasPermission/index.ts","../../../core/src/definitions/helpers/router/is-parameter.ts","../../../core/src/definitions/helpers/router/split-to-segments.ts","../../../core/src/definitions/helpers/router/is-segment-counts-same.ts","../../../core/src/definitions/helpers/router/remove-leading-trailing-slashes.ts","../../../core/src/definitions/helpers/router/check-by-segments.ts","../../../core/src/definitions/helpers/router/get-default-action-path.ts","../../../core/src/definitions/helpers/router/get-parent-resource.ts","../../../core/src/definitions/helpers/router/get-parent-prefix-for-resource.ts","../../../core/src/definitions/helpers/router/get-action-routes-from-resource.ts","../../../core/src/definitions/helpers/router/pick-matched-route.ts","../../../core/src/definitions/helpers/router/match-resource-from-route.ts","../../../core/src/definitions/helpers/routeGenerator/index.ts","../../../core/src/definitions/helpers/treeView/createTreeView/index.ts","../../../core/src/definitions/helpers/humanizeString/index.ts","../../../core/src/contexts/refine/index.tsx","../../../core/src/components/layoutWrapper/defaultLayout/index.tsx","../../../core/src/definitions/helpers/handleRefineOptions/index.ts","../../../core/src/definitions/helpers/redirectPage/index.ts","../../../core/src/definitions/helpers/sequentialPromises/index.ts","../../../core/src/definitions/helpers/pick-resource/index.ts","../../../core/src/definitions/helpers/pickDataProvider/index.ts","../../../core/src/definitions/helpers/handleMultiple/index.ts","../../../core/src/definitions/helpers/useInfinitePagination/index.ts","../../../core/src/definitions/helpers/legacy-resource-transform/index.ts","../../../core/src/definitions/helpers/router/pick-route-params.ts","../../../core/src/definitions/helpers/router/prepare-route-params.ts","../../../core/src/definitions/helpers/router/compose-route.ts","../../../core/src/contexts/auth/index.tsx","../../../core/src/definitions/helpers/useActiveAuthProvider/index.ts","../../../core/src/definitions/helpers/handlePaginationParams/index.ts","../../../core/src/definitions/helpers/useMediaQuery/index.ts","../../../core/src/definitions/helpers/safe-translate/index.ts","../../../core/src/definitions/helpers/generateDocumentTitle/index.ts","../../../core/src/hooks/refine/useMutationMode.ts","../../../core/src/hooks/refine/useWarnAboutChange/index.ts","../../../core/src/contexts/unsavedWarn/index.tsx","../../../core/src/hooks/refine/useSyncWithLocation.ts","../../../core/src/hooks/refine/useTitle.tsx","../../../core/src/hooks/refine/useRefineContext.ts","../../../core/src/definitions/helpers/useUserFriendlyName/index.ts","../../../core/src/definitions/upload/file2Base64/index.ts","../../../core/src/hooks/useKeys/index.tsx","../../../core/src/hooks/auth/useGetIdentity/index.ts","../../../core/src/hooks/auth/useLogout/index.ts","../../../core/src/hooks/auth/useInvalidateAuthStore/index.ts","../../../core/src/hooks/auth/useLogin/index.ts","../../../core/src/hooks/auth/useRegister/index.ts","../../../core/src/hooks/auth/useForgotPassword/index.ts","../../../core/src/hooks/auth/useUpdatePassword/index.ts","../../../core/src/hooks/auth/useIsAuthenticated/index.ts","../../../core/src/hooks/auth/useOnError/index.ts","../../../core/src/hooks/auth/useIsExistAuthentication/index.ts","../../../core/src/hooks/data/useList.ts","../../../core/src/hooks/useLoadingOvertime/index.ts","../../../core/src/hooks/data/useOne.ts","../../../core/src/hooks/data/useMany.ts","../../../core/src/hooks/data/useUpdate.ts","../../../core/src/contexts/undoableQueue/undoableQueueContext.tsx","../../../core/src/hooks/data/useCreate.ts","../../../core/src/hooks/data/useDelete.ts","../../../core/src/hooks/data/useCreateMany.ts","../../../core/src/hooks/data/useUpdateMany.ts","../../../core/src/hooks/data/useDeleteMany.ts","../../../core/src/hooks/data/useApiUrl.ts","../../../core/src/hooks/data/useCustom.ts","../../../core/src/hooks/data/useCustomMutation.ts","../../../core/src/hooks/data/useDataProvider.tsx","../../../core/src/contexts/data/index.tsx","../../../core/src/hooks/data/useInfiniteList.ts","../../../core/src/hooks/live/useResourceSubscription/index.ts","../../../core/src/contexts/live/index.tsx","../../../core/src/hooks/resource/useResource/index.ts","../../../core/src/contexts/resource/index.tsx","../../../core/src/hooks/deepMemo/index.tsx","../../../core/src/hooks/memoized/index.tsx","../../../core/src/contexts/router-picker/index.tsx","../../../core/src/hooks/router/use-parsed/index.tsx","../../../core/src/contexts/router/index.tsx","../../../core/src/hooks/router/use-parse/index.tsx","../../../core/src/hooks/resource/useResourceWithRoute/index.ts","../../../core/src/hooks/invalidate/index.tsx","../../../core/src/hooks/live/useLiveMode/index.ts","../../../core/src/hooks/live/useSubscription/index.ts","../../../core/src/hooks/live/usePublish/index.ts","../../../core/src/hooks/notification/useCancelNotification/index.tsx","../../../core/src/hooks/notification/useNotification/index.ts","../../../core/src/contexts/notification/index.tsx","../../../core/src/hooks/notification/useHandleNotification/index.ts","../../../core/src/hooks/translate/useSetLocale.ts","../../../core/src/contexts/translation/index.tsx","../../../core/src/hooks/translate/useTranslate.ts","../../../core/src/hooks/translate/useGetLocale.ts","../../../core/src/hooks/export/index.ts","../../../core/src/hooks/form/useForm.ts","../../../core/src/hooks/redirection/index.ts","../../../core/src/hooks/router/use-go/index.tsx","../../../core/src/hooks/router/use-back/index.tsx","../../../core/src/hooks/navigation/index.ts","../../../core/src/hooks/show/useShow.ts","../../../core/src/hooks/import/index.tsx","../../../core/src/hooks/modal/useModal/index.tsx","../../../core/src/hooks/router/use-get-to-path/index.ts","../../../core/src/hooks/router/use-to-path/index.ts","../../../core/src/hooks/router/use-link/index.tsx","../../../core/src/hooks/legacy-router/useRouterContext.ts","../../../core/src/contexts/legacy-router/index.tsx","../../../core/src/hooks/accessControl/useCan/index.ts","../../../core/src/contexts/accessControl/index.tsx","../../../core/src/definitions/helpers/sanitize-resource/index.ts","../../../core/src/hooks/accessControl/useCanWithoutCache.ts","../../../core/src/hooks/useSelect/index.ts","../../../core/src/hooks/useTable/index.ts","../../../core/src/hooks/auditLog/useLog/index.ts","../../../core/src/contexts/auditLog/index.tsx","../../../core/src/hooks/auditLog/useLogList/index.ts","../../../core/src/hooks/breadcrumb/index.ts","../../../core/src/hooks/menu/useMenu.tsx","../../../core/src/definitions/helpers/menu/create-resource-key.ts","../../../core/src/definitions/helpers/menu/create-tree.ts","../../../core/src/hooks/useMeta/index.ts","../../../core/src/components/pages/login/index.tsx","../../../core/src/components/pages/auth/index.tsx","../../../core/src/components/pages/auth/components/login/index.tsx","../../../core/src/components/pages/auth/components/register/index.tsx","../../../core/src/components/pages/auth/components/forgotPassword/index.tsx","../../../core/src/components/pages/auth/components/updatePassword/index.tsx","../../../core/src/components/pages/ready/index.tsx","../../../core/src/components/pages/welcome/index.tsx","../../../core/src/components/containers/refine/index.tsx","../../../core/src/components/telemetry/index.tsx","../../../core/src/hooks/useTelemetryData/index.ts","../../../core/src/definitions/helpers/check-router-prop-misuse/index.ts","../../../core/src/hooks/router/use-router-misuse-warning/index.ts","../../../core/src/components/undoableQueue/index.tsx","../../../core/src/components/layoutWrapper/index.tsx","../../../core/src/components/authenticated/index.tsx","../../../core/src/components/routeChangeHandler/index.tsx","../../../core/src/components/canAccess/index.tsx","../../../core/src/components/gh-banner/index.tsx","../../../core/src/components/gh-banner/styles.ts","../../../react-hook-form/src/index.ts","../../../react-hook-form/src/useForm/index.ts","../../../react-hook-form/src/useStepsForm/index.ts","../../../react-hook-form/src/useModalForm/index.ts","../../../ui-types/src/index.tsx","../../../ui-types/src/ids.tsx","../../../ui-types/src/classNames.ts","../../../mui/src/index.tsx","../../../mui/src/components/layout/index.tsx","../../../mui/src/components/layout/sider/index.tsx","../../../mui/src/components/layout/header/index.tsx","../../../mui/src/components/layout/title/index.tsx","../../../mui/src/components/themedLayout/index.tsx","../../../mui/src/components/themedLayout/sider/index.tsx","../../../mui/src/components/themedLayout/header/index.tsx","../../../mui/src/components/themedLayout/title/index.tsx","../../../mui/src/components/themedLayoutV2/index.tsx","../../../mui/src/contexts/themedLayoutContext/index.tsx","../../../mui/src/components/themedLayoutV2/sider/index.tsx","../../../mui/src/hooks/useAutocomplete/index.ts","../../../mui/src/hooks/useDataGrid/index.ts","../../../mui/src/definitions/dataGrid/index.ts","../../../mui/src/hooks/useSiderVisible/index.ts","../../../mui/src/hooks/useThemedLayoutContext/index.ts","../../../mui/src/components/themedLayoutV2/header/index.tsx","../../../mui/src/components/themedLayoutV2/hamburgerMenu/index.tsx","../../../mui/src/components/themedLayoutV2/title/index.tsx","../../../mui/src/components/pages/login/index.tsx","../../../mui/src/components/pages/ready/index.tsx","../../../mui/src/components/pages/welcome/index.tsx","../../../mui/src/components/pages/error/index.tsx","../../../mui/src/components/pages/auth/index.tsx","../../../mui/src/components/pages/auth/components/login/index.tsx","../../../mui/src/components/pages/auth/components/styles.ts","../../../mui/src/components/pages/auth/components/register/index.tsx","../../../mui/src/components/pages/auth/components/forgotPassword/index.tsx","../../../mui/src/components/pages/auth/components/updatePassword/index.tsx","../../../mui/src/components/crud/create/index.tsx","../../../mui/src/components/crud/edit/index.tsx","../../../mui/src/components/crud/list/index.tsx","../../../mui/src/components/crud/show/index.tsx","../../../mui/src/components/buttons/create/index.tsx","../../../mui/src/components/buttons/edit/index.tsx","../../../mui/src/components/buttons/delete/index.tsx","../../../mui/src/components/buttons/refresh/index.tsx","../../../mui/src/components/buttons/show/index.tsx","../../../mui/src/components/buttons/list/index.tsx","../../../mui/src/components/buttons/export/index.tsx","../../../mui/src/components/buttons/save/index.tsx","../../../mui/src/components/buttons/clone/index.tsx","../../../mui/src/components/buttons/import/index.tsx","../../../mui/src/components/circularDeterminate/index.tsx","../../../mui/src/components/fields/text/index.tsx","../../../mui/src/components/fields/tag/index.tsx","../../../mui/src/components/fields/email/index.tsx","../../../mui/src/components/fields/boolean/index.tsx","../../../mui/src/components/fields/date/index.tsx","../../../mui/src/components/fields/file/index.tsx","../../../mui/src/components/fields/url/index.tsx","../../../mui/src/components/fields/number/index.tsx","../../../mui/src/components/fields/markdown/index.tsx","../../../mui/src/components/breadcrumb/index.tsx","../../../mui/src/components/autoSaveIndicator/index.tsx","../../../mui/src/theme/index.ts","../../../mui/src/theme/palette/lightPalette.ts","../../../mui/src/theme/palette/darkPalette.ts","../../../mui/src/theme/typography.ts","../../../mui/src/theme/palette/refinePalette.ts","../../../mui/src/providers/notificationProvider/index.tsx","../../../mui/src/providers/refineSnackbarProvider/index.tsx","../../src/inferencers/mui/index.tsx","../../src/inferencers/mui/show.tsx","../../src/create-inferencer/index.tsx","../../src/utilities/get-fieldable-keys/index.ts","../../src/utilities/pick-data-provider/index.tsx","../../src/utilities/pick-inferred-field/index.ts","../../src/utilities/prettier-format/index.ts","../../src/utilities/pretty-spaces/index.ts","../../src/field-inferencers/relation.ts","../../src/utilities/remove-relation-suffix/index.ts","../../src/utilities/pretty-string/index.ts","../../src/utilities/translate-pretty-string/index.ts","../../src/utilities/to-singular/index.ts","../../src/utilities/to-plural/index.ts","../../src/utilities/replace-exports/index.ts","../../src/utilities/replace-imports/index.ts","../../src/utilities/resource-from-inferred/index.ts","../../src/utilities/component-name/index.ts","../../src/utilities/jsx/index.ts","../../src/utilities/prepare-live-code/index.ts","../../src/utilities/remove-hidden-code/index.ts","../../src/utilities/accessor/index.ts","../../src/utilities/print-imports/index.ts","../../src/utilities/is-id-key/index.ts","../../src/utilities/no-op/index.ts","../../src/utilities/get-variable-name/index.ts","../../src/utilities/get-meta-props/index.ts","../../src/utilities/id-quote-wrapper/index.ts","../../src/compose-inferencers/index.ts","../../src/compose-transformers/index.ts","../../src/field-inferencers/array.ts","../../src/field-inferencers/boolean.ts","../../src/field-inferencers/date.ts","../../src/field-inferencers/email.ts","../../src/field-inferencers/image.ts","../../src/field-inferencers/nullish.ts","../../src/field-inferencers/number.ts","../../src/field-inferencers/object.ts","../../src/field-inferencers/richtext.ts","../../src/field-inferencers/text.ts","../../src/field-inferencers/url.ts","../../src/field-inferencers/index.ts","../../src/field-transformers/basic-to-relation.ts","../../src/field-transformers/image-by-key.ts","../../src/field-transformers/relation-by-resource.ts","../../src/field-transformers/relation-to-fieldable.ts","../../src/field-transformers/index.ts","../../src/components/live/index.tsx","../../src/components/shared-code-viewer/index.tsx","../../src/use-infer-fetch/index.tsx","../../src/use-relation-fetch/index.ts","../../src/inferencers/mui/error.tsx","../../src/inferencers/mui/loading.tsx","../../src/inferencers/mui/list.tsx","../../src/inferencers/mui/create.tsx","../../src/inferencers/mui/edit.tsx"],"sourcesContent":["export { DevtoolsEvent, DevtoolsEventPayloads } from \"./event-types\";\nexport { TraceType } from \"./trace\";\nexport { Feed, FeedSection } from \"./feed\";\nexport {\n    PackageType,\n    PackageLatestVersionType,\n    AvailablePackageType,\n} from \"./package\";\nexport { RefineHook, Scopes, hooksByScope, scopes } from \"./scopes\";\n\nexport { DevToolsContextProvider, DevToolsContext } from \"./context\";\n\nexport { send } from \"./send\";\nexport { receive } from \"./receive\";\n","import {\n    Mutation,\n    MutationKey,\n    MutationStatus,\n    QueryKey,\n    QueryState,\n    QueryStatus,\n} from \"@tanstack/react-query\";\nimport { TraceType } from \"./trace\";\n\nexport enum DevtoolsEvent {\n    RELOAD = \"devtools:reload\",\n    DEVTOOLS_INIT = \"devtools:init\",\n    DEVTOOLS_HANDSHAKE = \"devtools:handshake\",\n    DEVTOOLS_ALREADY_CONNECTED = \"devtools:already-connected\",\n    ACTIVITY = \"devtools:send-activity\",\n    DEVTOOLS_ACTIVITY_UPDATE = \"devtools:activity-update\",\n    DEVTOOLS_CONNECTED_APP = \"devtools:connected-app\",\n    DEVTOOLS_DISCONNECTED_APP = \"devtools:disconnected-app\",\n    DEVTOOLS_HIGHLIGHT_IN_MONITOR = \"devtools:highlight-in-monitor\",\n    DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION = \"devtools:highlight-in-monitor-action\",\n    DEVTOOLS_LOGIN_SUCCESS = \"devtools:login-success\",\n    DEVTOOLS_RELOAD_AFTER_LOGIN = \"devtools:reload-after-login\",\n}\n\ntype Timestamps = {\n    createdAt: number;\n    updatedAt: number;\n};\n\ntype ActivityPayload =\n    | {\n          type: \"mutation\";\n          identifier: string;\n          key?: MutationKey;\n          status?: MutationStatus;\n          trace?: TraceType[];\n          state: Mutation<any, any, any, any>[\"state\"];\n          variables?: Mutation<any, any, any, any>[\"state\"][\"variables\"];\n          hookName: string;\n          resourcePath: string | null;\n          legacyKey: boolean;\n      }\n    | {\n          type: \"query\";\n          identifier: string;\n          key?: QueryKey;\n          status?: QueryStatus;\n          trace?: TraceType[];\n          state: QueryState<any, any>;\n          hookName: string;\n          resourcePath: string | null;\n          legacyKey: boolean;\n      };\n\nexport type DevtoolsEventPayloads = {\n    [DevtoolsEvent.RELOAD]: {};\n    [DevtoolsEvent.DEVTOOLS_INIT]: { url: string };\n    [DevtoolsEvent.DEVTOOLS_HANDSHAKE]: { url: string };\n    [DevtoolsEvent.DEVTOOLS_ALREADY_CONNECTED]: { url: string };\n    [DevtoolsEvent.ACTIVITY]: ActivityPayload;\n    [DevtoolsEvent.DEVTOOLS_ACTIVITY_UPDATE]: {\n        updatedActivities: (ActivityPayload & Timestamps)[];\n    };\n    [DevtoolsEvent.DEVTOOLS_CONNECTED_APP]: { url: string | null };\n    [DevtoolsEvent.DEVTOOLS_DISCONNECTED_APP]: {};\n    [DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR]: { name: string };\n    [DevtoolsEvent.DEVTOOLS_HIGHLIGHT_IN_MONITOR_ACTION]: { name: string };\n    [DevtoolsEvent.DEVTOOLS_LOGIN_SUCCESS]: {};\n    [DevtoolsEvent.DEVTOOLS_RELOAD_AFTER_LOGIN]: {};\n};\n","export type RefineHook =\n    | \"useCan\"\n    | \"useLog\"\n    | \"useLogList\"\n    | \"useCreate\"\n    | \"useCreateMany\"\n    | \"useCustom\"\n    | \"useCustomMutation\"\n    | \"useDelete\"\n    | \"useDeleteMany\"\n    | \"useInfiniteList\"\n    | \"useList\"\n    | \"useMany\"\n    | \"useOne\"\n    | \"useUpdate\"\n    | \"useUpdateMany\"\n    | \"useForgotPassword\"\n    | \"useGetIdentity\"\n    | \"useIsAuthenticated\"\n    | \"useLogin\"\n    | \"useLogout\"\n    | \"useOnError\"\n    | \"usePermissions\"\n    | \"useRegister\"\n    | \"useUpdatePassword\";\n\nexport type Scopes = \"data\" | \"audit-log\" | \"access-control\" | \"auth\";\n\nexport const scopes: Record<RefineHook, Scopes> = {\n    useCan: \"access-control\",\n    useLog: \"audit-log\",\n    useLogList: \"audit-log\",\n    useCreate: \"data\",\n    useCreateMany: \"data\",\n    useCustom: \"data\",\n    useCustomMutation: \"data\",\n    useDelete: \"data\",\n    useDeleteMany: \"data\",\n    useInfiniteList: \"data\",\n    useList: \"data\",\n    useMany: \"data\",\n    useOne: \"data\",\n    useUpdate: \"data\",\n    useUpdateMany: \"data\",\n    useForgotPassword: \"auth\",\n    useGetIdentity: \"auth\",\n    useIsAuthenticated: \"auth\",\n    useLogin: \"auth\",\n    useLogout: \"auth\",\n    useOnError: \"auth\",\n    usePermissions: \"auth\",\n    useRegister: \"auth\",\n    useUpdatePassword: \"auth\",\n};\n\nexport const hooksByScope = Object.entries(scopes).reduce(\n    (acc, [hook, scope]) => {\n        if (!acc[scope]) {\n            acc[scope] = [];\n        }\n\n        acc[scope].push(hook as RefineHook);\n\n        return acc;\n    },\n    {} as Record<Scopes, RefineHook[]>,\n);\n","import React from \"react\";\nimport { DevtoolsEvent } from \"./event-types\";\nimport { send } from \"./send\";\nimport { receive } from \"./receive\";\n\ntype DevToolsContextValue = {\n    __devtools: boolean;\n    port: number;\n    url: string;\n    secure: boolean;\n    ws: WebSocket | null;\n    devtoolsUrl?: string;\n};\n\nexport const DevToolsContext = React.createContext<DevToolsContextValue>({\n    __devtools: false,\n    port: 5002,\n    url: \"localhost\",\n    secure: false,\n    ws: null,\n});\n\ntype Props = React.PropsWithChildren<\n    Partial<Pick<DevToolsContextValue, \"port\" | \"__devtools\">>\n>;\n\nexport const DevToolsContextProvider: React.FC<Props> = ({\n    __devtools,\n    port,\n    children,\n}) => {\n    const [values, setValues] = React.useState<DevToolsContextValue>({\n        __devtools: __devtools ?? false,\n        port: port ?? 5002,\n        url: \"localhost\",\n        secure: false,\n        ws: null,\n    });\n\n    const [ws, setWs] = React.useState<WebSocket | null>(null);\n\n    React.useEffect(() => {\n        const wsInstance = new WebSocket(\n            `${values.secure ? \"wss\" : \"ws\"}://localhost:${values.port}`,\n        );\n\n        const unsubscribe = receive(\n            wsInstance,\n            DevtoolsEvent.DEVTOOLS_HANDSHAKE,\n            (data) => {\n                setValues((v) => ({\n                    ...v,\n                    devtoolsUrl: data.url,\n                }));\n                unsubscribe();\n            },\n        );\n\n        wsInstance.addEventListener(\"open\", () => {\n            if (!values.__devtools) {\n                send(wsInstance, DevtoolsEvent.DEVTOOLS_INIT, {\n                    url: window.location.origin,\n                });\n            }\n        });\n\n        setWs(wsInstance);\n\n        return () => {\n            unsubscribe();\n\n            wsInstance.close(1000, window.location.origin);\n        };\n    }, []);\n\n    const contextValues = React.useMemo<DevToolsContextValue>(\n        () => ({\n            ...values,\n            ws,\n        }),\n        [values, ws],\n    );\n\n    return (\n        <DevToolsContext.Provider value={contextValues}>\n            {children}\n        </DevToolsContext.Provider>\n    );\n};\n","import { DevtoolsEvent, DevtoolsEventPayloads } from \"./event-types\";\n\nexport async function send<T extends DevtoolsEvent>(\n    ws: WebSocket,\n    event: T,\n    payload: DevtoolsEventPayloads[T],\n) {\n    // check if the socket is open\n    // if not, wait for it to open\n    if (ws.readyState !== ws.OPEN) {\n        await new Promise<void>((resolve) => {\n            const listener = () => {\n                ws.send(JSON.stringify({ event, payload }));\n                resolve();\n                ws.removeEventListener(\"open\", listener);\n            };\n\n            ws.addEventListener(\"open\", listener);\n        });\n        return;\n    } else {\n        ws.send(JSON.stringify({ event, payload }));\n        return;\n    }\n}\n","// receive ws message by adding a listener to the ws object\n\nimport { DevtoolsEvent, DevtoolsEventPayloads } from \"./event-types\";\n\nexport function receive<T extends DevtoolsEvent>(\n    ws: WebSocket,\n    event: T,\n    callback: (payload: DevtoolsEventPayloads[T]) => void,\n) {\n    const listener = (e: MessageEvent) => {\n        const { event: receivedEvent, payload } = JSON.parse(e.data);\n        if (event === receivedEvent) {\n            callback(payload);\n        }\n    };\n\n    ws.addEventListener(\"message\", listener);\n\n    return () => {\n        ws.removeEventListener(\"message\", listener);\n    };\n}\n","export { getTrace } from \"./get-trace\";\nexport { getXRay } from \"./get-xray\";\nexport { useQuerySubscription } from \"./use-query-subscription\";\n","import ErrorStackParser from \"error-stack-parser\";\nimport { cleanStack } from \"./clean-stack\";\nimport { isRefineStack } from \"./is-refine-stack\";\nimport { getPackageNameFromFilename } from \"./get-package-name-from-filename\";\nimport { TraceType } from \"@refinedev/devtools-shared\";\n\nexport function getTrace() {\n    if (__DEV_CONDITION__ !== \"development\") {\n        return [];\n    } else {\n        try {\n            const error = new Error();\n            const stack = ErrorStackParser.parse(error);\n            const clean = cleanStack(stack);\n            const traces = clean\n                .map(\n                    (frame) =>\n                        ({\n                            file: frame.fileName,\n                            line: frame.lineNumber,\n                            column: frame.columnNumber,\n                            function: frame.functionName,\n                            isRefine: isRefineStack(frame.fileName),\n                            packageName: getPackageNameFromFilename(\n                                frame.fileName,\n                            ),\n                        } as TraceType),\n                )\n                .filter((trace) => trace.function);\n            return traces.slice(1);\n        } catch (error) {\n            return [];\n        }\n    }\n}\n","import type { StackFrame } from \"error-stack-parser\";\n\nconst unrelatedFunctionName = \"renderWithHooks\";\n\nexport const cleanStack = (stack: StackFrame[]) => {\n    const firstUnrelatedIndex = stack.findIndex(\n        (frame) => frame.functionName === unrelatedFunctionName,\n    );\n\n    if (firstUnrelatedIndex !== -1) {\n        return stack.slice(0, firstUnrelatedIndex);\n    }\n\n    return stack;\n};\n","export const REFINE_PACKAGE_FILEPATH_REGEXP =\n    __DEV_CONDITION__ !== \"development\"\n        ? /node_modules\\/refinedev\\/(?<name>.*?)\\//\n        : /\\/refine\\/packages\\/(?<name>.*?)\\//;\n","import { REFINE_PACKAGE_FILEPATH_REGEXP } from \"./constants\";\n\nexport const isRefineStack = (filename?: string) => {\n    if (!filename) return false;\n\n    const match = filename.match(REFINE_PACKAGE_FILEPATH_REGEXP);\n\n    return !!match;\n};\n","import { REFINE_PACKAGE_FILEPATH_REGEXP } from \"./constants\";\n\nexport const getPackageNameFromFilename = (filename?: string) => {\n    if (!filename) return;\n\n    const match = filename.match(REFINE_PACKAGE_FILEPATH_REGEXP);\n\n    const name = match?.groups?.name;\n\n    if (!name) return;\n\n    return `@refinedev/${name}`;\n};\n","import {\n    DevtoolsEvent,\n    DevtoolsEventPayloads,\n    RefineHook,\n    scopes,\n} from \"@refinedev/devtools-shared\";\n\nexport type Activity =\n    DevtoolsEventPayloads[DevtoolsEvent.DEVTOOLS_ACTIVITY_UPDATE][\"updatedActivities\"][number];\n\nexport const getResourcePath = (\n    hookName: RefineHook,\n    legacyKey: boolean,\n): string | null => {\n    if (scopes[hookName] === \"auth\") {\n        return null;\n    }\n    if (hookName === \"useCan\") {\n        if (legacyKey) {\n            return \"key[1].resource\";\n        } else {\n            return \"key[1]\";\n        }\n    }\n    if (scopes[hookName] === \"audit-log\") {\n        if (hookName === \"useLog\") {\n            return \"variables.resource\";\n        }\n        return \"key[1]\";\n    }\n    if (scopes[hookName] === \"data\") {\n        if (hookName === \"useCustom\" || hookName === \"useCustomMutation\") {\n            return null;\n        }\n        switch (hookName) {\n            case \"useList\":\n            case \"useInfiniteList\":\n            case \"useOne\":\n            case \"useMany\":\n                if (legacyKey) {\n                    return \"key[1]\";\n                } else {\n                    return \"key[2]\";\n                }\n            case \"useCreate\":\n            case \"useCreateMany\":\n            case \"useDelete\":\n            case \"useDeleteMany\":\n            case \"useUpdate\":\n            case \"useUpdateMany\":\n                return \"variables.resource\";\n        }\n    }\n    return null;\n};\n","import { RefineHook, TraceType } from \"@refinedev/devtools-shared\";\nimport { getTrace } from \"./get-trace\";\nimport { getResourcePath } from \"./get-resource-path\";\n\nexport type XRayResponse = {\n    hookName: string;\n    trace: TraceType[];\n    resourcePath: string | null;\n    legacyKey: boolean;\n};\n\nexport function getXRay(hookName: string, legacyKey: boolean): XRayResponse {\n    if (__DEV_CONDITION__ !== \"development\") {\n        return {\n            hookName: \"\",\n            trace: [],\n            resourcePath: null,\n            legacyKey: false,\n        };\n    } else {\n        const trace = getTrace().slice(1);\n\n        const resourcePath = getResourcePath(hookName as RefineHook, legacyKey);\n\n        return {\n            hookName,\n            trace,\n            resourcePath,\n            legacyKey,\n        };\n    }\n}\n","import { DevToolsContext } from \"@refinedev/devtools-shared\";\nimport { QueryClient } from \"@tanstack/react-query\";\nimport React, { useContext } from \"react\";\nimport { createQueryListener, createMutationListener } from \"./listeners\";\n\nexport const useQuerySubscription =\n    __DEV_CONDITION__ !== \"development\"\n        ? () => ({})\n        : (queryClient: QueryClient) => {\n              const { ws } = useContext(DevToolsContext);\n              const queryCacheSubscription = React.useRef<() => void>();\n              const mutationCacheSubscription = React.useRef<() => void>();\n\n              React.useEffect(() => {\n                  if (!ws) return () => 0;\n\n                  const queryCache = queryClient.getQueryCache();\n\n                  const queryListener = createQueryListener(ws);\n\n                  queryCache.getAll().forEach(queryListener);\n\n                  queryCacheSubscription.current = queryCache.subscribe(\n                      ({ query, type }) =>\n                          (type === \"added\" || type === \"updated\") &&\n                          queryListener(query),\n                  );\n\n                  return () => {\n                      queryCacheSubscription.current?.();\n                  };\n              }, [ws, queryClient]);\n\n              React.useEffect(() => {\n                  if (!ws) return () => 0;\n\n                  const mutationCache = queryClient.getMutationCache();\n\n                  const mutationListener = createMutationListener(ws);\n\n                  mutationCache.getAll().forEach(mutationListener);\n\n                  mutationCacheSubscription.current = mutationCache.subscribe(\n                      ({ mutation, type }) =>\n                          (type === \"added\" || type === \"updated\") &&\n                          mutationListener(mutation),\n                  );\n\n                  return () => {\n                      mutationCacheSubscription.current?.();\n                  };\n              }, [ws, queryClient]);\n\n              return {};\n          };\n","import { DevtoolsEvent, send } from \"@refinedev/devtools-shared\";\nimport { Mutation, Query } from \"@tanstack/react-query\";\n\nimport { createIdentifier } from \"./create-identifier\";\nimport { XRayResponse } from \"./get-xray\";\n\nexport const createMutationListener =\n    (ws: WebSocket) => (mutation?: Mutation) => {\n        if (!mutation?.meta?.trace) return;\n\n        const meta: XRayResponse = mutation?.meta as any;\n\n        new Promise<void>((resolve) => {\n            send(ws, DevtoolsEvent.ACTIVITY, {\n                type: \"mutation\",\n                identifier: createIdentifier(\n                    mutation?.options.mutationKey,\n                    mutation?.meta?.trace as any,\n                ),\n                key: mutation?.options.mutationKey as any,\n                status: mutation?.state.status,\n                state: mutation?.state,\n                variables: mutation?.state?.variables,\n                ...meta,\n            });\n            resolve();\n        });\n\n        // console.table({\n        //     type: \"mutation\",\n        //     key: mutation?.options.mutationKey,\n        //     id: mutation?.mutationId,\n        //     status: mutation?.state.status,\n        //     trace: mutation?.meta?.trace,\n        //     state: mutation?.state,\n        //     variables: mutation?.state?.variables,\n        // });\n    };\n\nexport const createQueryListener = (ws: WebSocket) => (query: Query) => {\n    if (!query?.meta?.trace) return;\n\n    const meta: XRayResponse = query?.meta as any;\n\n    new Promise<void>((resolve) => {\n        send(ws, DevtoolsEvent.ACTIVITY, {\n            type: \"query\",\n            identifier: createIdentifier(\n                query.queryKey,\n                query.meta?.trace as any,\n            ),\n            key: query.queryKey as any,\n            status: query.state.status,\n            state: query.state,\n            ...meta,\n        });\n        resolve();\n    });\n\n    // console.table({\n    //     type: \"query\",\n    //     key: query.queryKey,\n    //     status: query.state.status,\n    //     trace: query.meta?.trace,\n    //     state: query.state,\n    // });\n};\n","import { TraceType } from \"@refinedev/devtools-shared\";\nimport { MutationKey, QueryKey } from \"@tanstack/react-query\";\n\nexport const createIdentifier = (\n    key?: QueryKey | MutationKey,\n    trace?: TraceType[],\n) => {\n    const simpleTrace = trace?.map(\n        (t) =>\n            `${t.file}:${t.line}:${t.column}#${t.function}-${t.packageName}-${\n                t.isRefine ? 1 : 0\n            }`,\n    );\n    const str = JSON.stringify([...(key ?? []), ...(simpleTrace ?? [])]);\n\n    return str;\n};\n","export * from \"./components\";\nexport * from \"./hooks\";\n\nexport {\n    Action,\n    ActionWithPage,\n    AccessControlProvider,\n    AuditLogProvider,\n    LegacyAuthProvider,\n    AuthBindings,\n    BaseKey,\n    BaseRecord,\n    CanParams,\n    CanReturnType,\n    ConditionalFilter,\n    CreateManyResponse,\n    CreateResponse,\n    CrudFilter,\n    CrudFilters,\n    CrudOperators,\n    CrudSort,\n    CrudSorting,\n    CustomResponse,\n    DeleteManyResponse,\n    DeleteOneResponse,\n    FormAction,\n    GetListResponse,\n    GetManyResponse,\n    GetOneResponse,\n    HttpError,\n    LayoutProps,\n    LiveEvent,\n    LiveModeProps,\n    LogicalFilter,\n    LogParams,\n    MapDataFn,\n    MetaQuery,\n    MetaDataQuery,\n    MutationMode,\n    NotificationProvider,\n    OpenNotificationParams,\n    Option,\n    Pagination,\n    PromptProps,\n    RedirectionTypes,\n    RedirectAction,\n    ResourceErrorRouterParams,\n    ResourceProps,\n    ResourceRouterParams,\n    RouteAction,\n    SortOrder,\n    SuccessErrorNotification,\n    TitleProps,\n    TranslationProvider,\n    UpdateManyResponse,\n    UpdateResponse,\n    I18nProvider,\n    IAccessControlContext,\n    ILegacyAuthContext,\n    IDataContextProvider as DataProvider,\n    ILiveContext as LiveProvider,\n    ILog,\n    ILogData,\n    ILoginForm,\n    INotificationContext,\n    IResourceComponents,\n    IResourceComponentsProps,\n    IResourceContext as ResourceProvider,\n    ITranslationContext,\n    IResourceItem,\n    IRouterProvider,\n    ITreeMenu,\n    IQueryKeys,\n    AccessControlBindings,\n    DataBindings,\n    i18nBindings,\n    LiveBindings,\n    NotificationsBindings,\n    ResourceBindings,\n    RouterBindings,\n    ParseResponse,\n    ParsedParams,\n    GoConfig,\n    BackFunction,\n    GoFunction,\n    ParseFunction,\n    Prettify,\n    FormWithSyncWithLocationParams,\n    AutoSaveIndicatorProps,\n    AutoSaveProps,\n} from \"./interfaces\";\n\n// all auth types\nexport * from \"./interfaces/auth\";\n\nexport {\n    getDefaultFilter,\n    getDefaultSortOrder,\n    parseTableParams,\n    parseTableParamsFromQuery,\n    setInitialFilters,\n    setInitialSorters,\n    stringifyTableParams,\n    unionFilters,\n    unionSorters,\n} from \"./definitions/table\";\nexport {\n    createTreeView,\n    handleUseParams,\n    importCSVMapper,\n    routeGenerator,\n    userFriendlyResourceName,\n    getNextPageParam,\n    getPreviousPageParam,\n    pickNotDeprecated,\n    legacyResourceTransform,\n    matchResourceFromRoute,\n    useActiveAuthProvider,\n    useUserFriendlyName,\n    queryKeys,\n    pickDataProvider,\n    keys,\n    KeyBuilder,\n} from \"./definitions/helpers\";\nexport { file2Base64 } from \"./definitions/upload\";\nexport { generateDefaultDocumentTitle } from \"./definitions\";\n\nexport { ResourceContext } from \"./contexts/resource/index\";\nexport { TranslationContext } from \"./contexts/translation/index\";\nexport { AccessControlContext } from \"./contexts/accessControl/index\";\n","import React, { useEffect, useState } from \"react\";\n\nimport {\n    useNavigation,\n    useTranslate,\n    useResource,\n    useGo,\n    useRouterType,\n} from \"@hooks\";\n\n/**\n * When the app is navigated to a non-existent route, refine shows a default error page.\n * A custom error component can be used for this error page.\n *\n * @see {@link https://refine.dev/docs/packages/documentation/routers/} for more details.\n */\nexport const ErrorComponent: React.FC = () => {\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const translate = useTranslate();\n    const { push } = useNavigation();\n    const go = useGo();\n    const routerType = useRouterType();\n\n    const { resource, action } = useResource();\n\n    useEffect(() => {\n        if (resource && action) {\n            setErrorMessage(\n                translate(\n                    \"pages.error.info\",\n                    {\n                        action: action,\n                        resource: resource.name,\n                    },\n                    `You may have forgotten to add the \"${action}\" component to \"${resource.name}\" resource.`,\n                ),\n            );\n        }\n    }, [resource, action]);\n\n    return (\n        <>\n            <h1>\n                {translate(\n                    \"pages.error.404\",\n                    undefined,\n                    \"Sorry, the page you visited does not exist.\",\n                )}\n            </h1>\n            {errorMessage && <p>{errorMessage}</p>}\n            <button\n                onClick={() => {\n                    if (routerType === \"legacy\") {\n                        push(\"/\");\n                    } else {\n                        go({ to: \"/\" });\n                    }\n                }}\n            >\n                {translate(\"pages.error.backHome\", undefined, \"Back Home\")}\n            </button>\n        </>\n    );\n};\n","import {\n    useQuery,\n    UseQueryResult,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useKeys } from \"@hooks/useKeys\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { PermissionResponse } from \"../../../interfaces\";\n\nexport type UsePermissionsLegacyProps<TData = any> = {\n    v3LegacyAuthProviderCompatible: true;\n    options?: UseQueryOptions<TData>;\n};\n\nexport type UsePermissionsProps<TData = PermissionResponse> = {\n    v3LegacyAuthProviderCompatible?: false;\n    options?: UseQueryOptions<TData>;\n};\n\nexport type UsePermissionsCombinedProps<TData = any> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    options?: UseQueryOptions<TData> | UseQueryOptions<PermissionResponse>;\n};\n\nexport type UsePermissionsLegacyReturnType<TData = any> = UseQueryResult<\n    TData,\n    unknown\n>;\n\nexport type UsePermissionsReturnType<TData = PermissionResponse> =\n    UseQueryResult<TData, unknown>;\n\nexport type UsePermissionsCombinedReturnType<TData = any> =\n    | UseQueryResult<TData, unknown>\n    | UseQueryResult<PermissionResponse, unknown>;\n\nexport function usePermissions<TData = any>(\n    props: UsePermissionsLegacyProps<TData>,\n): UsePermissionsLegacyReturnType<TData>;\n\nexport function usePermissions<TData = PermissionResponse>(\n    props?: UsePermissionsProps<TData>,\n): UsePermissionsReturnType<TData>;\n\nexport function usePermissions<TData = any>(\n    props?: UsePermissionsCombinedProps<TData>,\n): UsePermissionsCombinedReturnType<TData>;\n\n/**\n * `usePermissions` calls the `getPermissions` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/usePermissions} for more details.\n *\n * @typeParam TData - Result data of the query\n *\n */\nexport function usePermissions<TData = any>({\n    v3LegacyAuthProviderCompatible = false,\n    options,\n}: UsePermissionsProps<TData> | UsePermissionsLegacyProps<TData> = {}):\n    | UsePermissionsReturnType\n    | UsePermissionsLegacyReturnType<TData> {\n    const { getPermissions: legacyGetPermission } = useLegacyAuthContext();\n    const { getPermissions } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const queryResponse = useQuery<TData>(\n        keys().auth().action(\"permissions\").get(preferLegacyKeys),\n        // Enabled check for `getPermissions` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        (getPermissions as (params?: unknown) => Promise<TData>) ??\n            (() => Promise.resolve(undefined)),\n        {\n            enabled: !v3LegacyAuthProviderCompatible && !!getPermissions,\n            ...(v3LegacyAuthProviderCompatible ? {} : options),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible ? {} : options?.meta),\n                ...getXRay(\"usePermissions\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const legacyQueryResponse = useQuery<TData>(\n        [\n            ...keys().auth().action(\"permissions\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        // Enabled check for `getPermissions` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        legacyGetPermission ?? (() => Promise.resolve(undefined)),\n        {\n            enabled: v3LegacyAuthProviderCompatible && !!legacyGetPermission,\n            ...(v3LegacyAuthProviderCompatible ? options : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible ? options?.meta : {}),\n                ...getXRay(\"usePermissions\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n","import qs, { IStringifyOptions } from \"qs\";\nimport unionWith from \"lodash/unionWith\";\nimport differenceWith from \"lodash/differenceWith\";\nimport warnOnce from \"warn-once\";\n\nimport {\n    CrudFilters,\n    CrudSorting,\n    CrudFilter,\n    CrudSort,\n    CrudOperators,\n    SortOrder,\n} from \"../../interfaces\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\n\nexport const parseTableParams = (url: string) => {\n    const { current, pageSize, sorter, sorters, filters } = qs.parse(\n        url.substring(1), // remove first ? character\n    );\n\n    return {\n        parsedCurrent: current && Number(current),\n        parsedPageSize: pageSize && Number(pageSize),\n        parsedSorter: (pickNotDeprecated(sorters, sorter) as CrudSorting) ?? [],\n        parsedFilters: (filters as CrudFilters) ?? [],\n    };\n};\n\nexport const parseTableParamsFromQuery = (params: any) => {\n    const url = qs.stringify(params);\n    return parseTableParams(`/${url}`);\n};\n\n/**\n * @internal This function is used to stringify table params from the useTable hook.\n */\nexport const stringifyTableParams = (params: {\n    pagination?: { current?: number; pageSize?: number };\n    sorters: CrudSorting;\n    filters: CrudFilters;\n    [key: string]: any;\n}): string => {\n    const options: IStringifyOptions = {\n        skipNulls: true,\n        arrayFormat: \"indices\",\n        encode: false,\n    };\n    const { pagination, sorter, sorters, filters, ...rest } = params;\n\n    const queryString = qs.stringify(\n        {\n            ...rest,\n            ...(pagination ? pagination : {}),\n            sorters: pickNotDeprecated(sorters, sorter),\n            filters,\n        },\n        options,\n    );\n\n    return queryString;\n};\n\nexport const compareFilters = (\n    left: CrudFilter,\n    right: CrudFilter,\n): boolean => {\n    if (\n        left.operator !== \"and\" &&\n        left.operator !== \"or\" &&\n        right.operator !== \"and\" &&\n        right.operator !== \"or\"\n    ) {\n        return (\n            (\"field\" in left ? left.field : undefined) ==\n                (\"field\" in right ? right.field : undefined) &&\n            left.operator == right.operator\n        );\n    }\n\n    return (\n        (\"key\" in left ? left.key : undefined) ==\n            (\"key\" in right ? right.key : undefined) &&\n        left.operator == right.operator\n    );\n};\n\nexport const compareSorters = (left: CrudSort, right: CrudSort): boolean =>\n    left.field == right.field;\n// Keep only one CrudFilter per type according to compareFilters\n// Items in the array that is passed first to unionWith have higher priority\n// CrudFilter items with undefined values are necessary to signify no filter\n// After union, don't keep CrudFilter items with undefined value in the result\n// Items in the arrays with higher priority are put at the end.\nexport const unionFilters = (\n    permanentFilter: CrudFilters,\n    newFilters: CrudFilters,\n    prevFilters: CrudFilters = [],\n): CrudFilters => {\n    const isKeyRequired = newFilters.filter(\n        (f) => (f.operator === \"or\" || f.operator === \"and\") && !f.key,\n    );\n\n    if (isKeyRequired.length > 1) {\n        warnOnce(\n            true,\n            `[conditionalFilters]: You have created multiple Conditional Filters at the top level, this requires the key parameter. \\nFor more information, see https://refine.dev/docs/advanced-tutorials/data-provider/handling-filters/#top-level-multiple-conditional-filters-usage`,\n        );\n    }\n\n    return unionWith(\n        permanentFilter,\n        newFilters,\n        prevFilters,\n        compareFilters,\n    ).filter(\n        (crudFilter) =>\n            crudFilter.value !== undefined &&\n            crudFilter.value !== null &&\n            (crudFilter.operator !== \"or\" ||\n                (crudFilter.operator === \"or\" &&\n                    crudFilter.value.length !== 0)) &&\n            (crudFilter.operator !== \"and\" ||\n                (crudFilter.operator === \"and\" &&\n                    crudFilter.value.length !== 0)),\n    );\n};\n\nexport const unionSorters = (\n    permanentSorter: CrudSorting,\n    newSorters: CrudSorting,\n): CrudSorting =>\n    unionWith(permanentSorter, newSorters, compareSorters).filter(\n        (crudSorter) =>\n            crudSorter.order !== undefined && crudSorter.order !== null,\n    );\n// Prioritize filters in the permanentFilter and put it at the end of result array\nexport const setInitialFilters = (\n    permanentFilter: CrudFilters,\n    defaultFilter: CrudFilters,\n): CrudFilters => [\n    ...differenceWith(defaultFilter, permanentFilter, compareFilters),\n    ...permanentFilter,\n];\n\nexport const setInitialSorters = (\n    permanentSorter: CrudSorting,\n    defaultSorter: CrudSorting,\n): CrudSorting => [\n    ...differenceWith(defaultSorter, permanentSorter, compareSorters),\n    ...permanentSorter,\n];\n\nexport const getDefaultSortOrder = (\n    columnName: string,\n    sorter?: CrudSorting,\n): SortOrder | undefined => {\n    if (!sorter) {\n        return undefined;\n    }\n\n    const sortItem = sorter.find((item) => item.field === columnName);\n\n    if (sortItem) {\n        return sortItem.order as SortOrder;\n    }\n\n    return undefined;\n};\n\nexport const getDefaultFilter = (\n    columnName: string,\n    filters?: CrudFilters,\n    operatorType: CrudOperators = \"eq\",\n): CrudFilter[\"value\"] | undefined => {\n    const filter = filters?.find((filter) => {\n        if (\n            filter.operator !== \"or\" &&\n            filter.operator !== \"and\" &&\n            \"field\" in filter\n        ) {\n            const { operator, field } = filter;\n            return field === columnName && operator === operatorType;\n        }\n        return undefined;\n    });\n\n    if (filter) {\n        return filter.value || [];\n    }\n\n    return undefined;\n};\n","export const userFriendlySecond = (miliseconds: number): number => {\n    return miliseconds / 1000; //convert to seconds\n};\n","import zip from \"lodash/zip\";\nimport fromPairs from \"lodash/fromPairs\";\nimport { MapDataFn } from \"../../../interfaces\";\n\nexport const importCSVMapper = <TItem = any, TVariables = any>(\n    data: any[][],\n    mapData: MapDataFn<TItem, TVariables> = (item) => item as any,\n): TVariables[] => {\n    const [headers, ...body] = data;\n    return body\n        .map((entry) => fromPairs(zip(headers, entry)))\n        .map((item: any, index, array: any) =>\n            mapData.call(undefined, item, index, array),\n        );\n};\n","import pluralize from \"pluralize\";\nimport { humanizeString } from \"@definitions\";\n\n/**\n * A method that the internal uses\n * @internal\n * @deprecated use `useUserFriendlyName` instead.\n */\nexport const userFriendlyResourceName = (\n    resource = \"\",\n    type: \"singular\" | \"plural\",\n): string => {\n    const humanizeResource = humanizeString(resource);\n    if (type === \"singular\") {\n        return pluralize.singular(humanizeResource);\n    }\n    return pluralize.plural(humanizeResource);\n};\n","export const handleUseParams = (params: any = {}): any => {\n    if (params?.id) {\n        return {\n            ...params,\n            id: decodeURIComponent(params.id),\n        };\n    }\n    return params;\n};\n","/*\n * Returns first value that is not undefined.\n * @internal This is an internal helper function. Please do not use externally.\n */\nexport const pickNotDeprecated = <T extends unknown[]>(\n    ...args: T\n): T[never] => {\n    return args.find((arg) => typeof arg !== \"undefined\");\n};\n","import { BaseKey } from \"src/interfaces\";\n\ntype ParametrizedDataActions = \"list\" | \"infinite\";\ntype IdRequiredDataActions = \"one\";\ntype IdsRequiredDataActions = \"many\";\ntype DataMutationActions =\n    | \"custom\"\n    | \"customMutation\"\n    | \"create\"\n    | \"createMany\"\n    | \"update\"\n    | \"updateMany\"\n    | \"delete\"\n    | \"deleteMany\";\n\ntype AuthActionType =\n    | \"login\"\n    | \"logout\"\n    | \"identity\"\n    | \"register\"\n    | \"forgotPassword\"\n    | \"check\"\n    | \"onError\"\n    | \"permissions\"\n    | \"updatePassword\";\n\ntype AuditActionType = \"list\" | \"log\" | \"rename\";\n\ntype IdType = BaseKey;\ntype IdsType = IdType[];\n\ntype ParamsType = any;\n\ntype KeySegment = string | IdType | IdsType | ParamsType;\n\nexport function arrayFindIndex<T>(array: T[], slice: T[]): number {\n    return array.findIndex(\n        (item, index) =>\n            index <= array.length - slice.length &&\n            slice.every(\n                (sliceItem, sliceIndex) =>\n                    array[index + sliceIndex] === sliceItem,\n            ),\n    );\n}\n\nexport function arrayReplace<T>(\n    array: T[],\n    partToBeReplaced: T[],\n    newPart: T[],\n): T[] {\n    const newArray: T[] = [...array];\n    const startIndex = arrayFindIndex(array, partToBeReplaced);\n\n    if (startIndex !== -1) {\n        newArray.splice(startIndex, partToBeReplaced.length, ...newPart);\n    }\n\n    return newArray;\n}\n\nexport function stripUndefined(segments: KeySegment[]) {\n    return segments.filter((segment) => segment !== undefined);\n}\n\nfunction convertToLegacy(segments: KeySegment[]) {\n    // for `list`, `many` and `one`\n    if (segments[0] === \"data\") {\n        // [data, dpName, resource, action, ...];\n        const newSegments = segments.slice(1);\n\n        if (newSegments[2] === \"many\") {\n            newSegments[2] = \"getMany\";\n        } else if (newSegments[2] === \"infinite\") {\n            newSegments[2] = \"list\";\n        } else if (newSegments[2] === \"one\") {\n            newSegments[2] = \"detail\";\n        } else if (newSegments[1] === \"custom\") {\n            const newParams = {\n                ...newSegments[2],\n            };\n            delete newParams.method;\n            delete newParams.url;\n\n            return [\n                newSegments[0],\n                newSegments[1],\n                newSegments[2].method,\n                newSegments[2].url,\n                newParams,\n            ];\n        }\n\n        return newSegments;\n    }\n    // for `audit` -> `logList`\n    if (segments[0] === \"audit\") {\n        // [audit, resource, action, params] (for log and list)\n        // or\n        // [audit, action, params] (for rename)\n        if (segments[2] === \"list\") {\n            return [\"logList\", segments[1], segments[3]];\n        }\n    }\n    // for `access` -> `useCan`\n    if (segments[0] === \"access\") {\n        // [access, resource, action, params]\n        if (segments.length === 4) {\n            return [\n                \"useCan\",\n                {\n                    resource: segments[1],\n                    action: segments[2],\n                    ...segments[3], // params: { params, enabled }\n                },\n            ];\n        }\n    }\n    // for `auth`\n    if (segments[0] === \"auth\") {\n        if (arrayFindIndex(segments, [\"auth\", \"login\"]) !== -1) {\n            return [\"useLogin\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"logout\"]) !== -1) {\n            return [\"useLogout\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"identity\"]) !== -1) {\n            return [\"getUserIdentity\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"register\"]) !== -1) {\n            return [\"useRegister\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"forgotPassword\"]) !== -1) {\n            return [\"useForgotPassword\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"check\"]) !== -1) {\n            return [\"useAuthenticated\", segments[2]]; // [auth, check, params]\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"onError\"]) !== -1) {\n            return [\"useCheckError\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"permissions\"]) !== -1) {\n            return [\"usePermissions\"];\n        }\n        if (arrayFindIndex(segments, [\"auth\", \"updatePassword\"]) !== -1) {\n            return [\"useUpdatePassword\"];\n        }\n    }\n    return segments;\n}\n\nclass BaseKeyBuilder {\n    segments: KeySegment[] = [];\n\n    constructor(segments: KeySegment[] = []) {\n        this.segments = segments;\n    }\n\n    key() {\n        return this.segments;\n    }\n\n    legacy() {\n        return convertToLegacy(this.segments);\n    }\n\n    get(legacy?: boolean) {\n        return legacy ? this.legacy() : this.segments;\n    }\n}\n\nclass ParamsKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    params(paramsValue?: ParamsType) {\n        return new BaseKeyBuilder([...this.segments, paramsValue]);\n    }\n}\n\nclass DataIdRequiringKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    id(idValue?: IdType) {\n        return new ParamsKeyBuilder([\n            ...this.segments,\n            idValue ? String(idValue) : undefined,\n        ]);\n    }\n}\n\nclass DataIdsRequiringKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    ids(...idsValue: IdsType) {\n        return new ParamsKeyBuilder([\n            ...this.segments,\n            ...(idsValue.length ? [idsValue.map((el) => String(el))] : []),\n        ]);\n    }\n}\n\nclass DataResourceKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    action(actionType: ParametrizedDataActions): ParamsKeyBuilder;\n    action(actionType: IdRequiredDataActions): DataIdRequiringKeyBuilder;\n    action(actionType: IdsRequiredDataActions): DataIdsRequiringKeyBuilder;\n    action(\n        actionType:\n            | ParametrizedDataActions\n            | IdRequiredDataActions\n            | IdsRequiredDataActions,\n    ):\n        | ParamsKeyBuilder\n        | DataIdRequiringKeyBuilder\n        | DataIdsRequiringKeyBuilder {\n        if (actionType === \"one\") {\n            return new DataIdRequiringKeyBuilder([\n                ...this.segments,\n                actionType,\n            ]);\n        } else if (actionType === \"many\") {\n            return new DataIdsRequiringKeyBuilder([\n                ...this.segments,\n                actionType,\n            ]);\n        } else if ([\"list\", \"infinite\"].includes(actionType)) {\n            return new ParamsKeyBuilder([...this.segments, actionType]);\n        } else {\n            throw new Error(\"Invalid action type\");\n        }\n    }\n}\n\nclass DataKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    resource(resourceName?: string) {\n        return new DataResourceKeyBuilder([...this.segments, resourceName]);\n    }\n\n    mutation(mutationName: DataMutationActions) {\n        return new ParamsKeyBuilder([\n            ...(mutationName === \"custom\" ? this.segments : [this.segments[0]]),\n            mutationName,\n        ]);\n    }\n}\n\nclass AuthKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    action(actionType: AuthActionType) {\n        return new ParamsKeyBuilder([...this.segments, actionType]);\n    }\n}\n\nclass AccessResourceKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    action(resourceName: string) {\n        return new ParamsKeyBuilder([...this.segments, resourceName]);\n    }\n}\n\nclass AccessKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    resource(resourceName?: string) {\n        return new AccessResourceKeyBuilder([...this.segments, resourceName]);\n    }\n}\n\nclass AuditActionKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    action(actionType: Extract<AuditActionType, \"list\">) {\n        return new ParamsKeyBuilder([...this.segments, actionType]);\n    }\n}\n\nclass AuditKeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    resource(resourceName?: string) {\n        return new AuditActionKeyBuilder([...this.segments, resourceName]);\n    }\n\n    action(actionType: Extract<AuditActionType, \"rename\" | \"log\">) {\n        return new ParamsKeyBuilder([...this.segments, actionType]);\n    }\n}\n\nexport class KeyBuilder extends BaseKeyBuilder {\n    constructor(segments: KeySegment[]) {\n        super(segments);\n    }\n\n    data(name?: string) {\n        return new DataKeyBuilder([\"data\", name || \"default\"]);\n    }\n\n    auth() {\n        return new AuthKeyBuilder([\"auth\"]);\n    }\n\n    access() {\n        return new AccessKeyBuilder([\"access\"]);\n    }\n\n    audit() {\n        return new AuditKeyBuilder([\"audit\"]);\n    }\n}\n\nexport const keys = () => new KeyBuilder([]);\n","import { IQueryKeys } from \"src/interfaces\";\nimport { QueryKey } from \"@tanstack/react-query\";\n\nimport { MetaQuery } from \"src/interfaces\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\nimport { keys as newKeys } from \"../keys\";\n\n/**\n * @deprecated `queryKeys` is deprecated. Please use `keys` instead.\n */\nexport const queryKeys = (\n    resource?: string,\n    dataProviderName?: string,\n    meta?: MetaQuery,\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery | undefined,\n): IQueryKeys => {\n    const providerName = dataProviderName || \"default\";\n    const keys: IQueryKeys = {\n        all: [providerName],\n        resourceAll: [providerName, resource || \"\"],\n        list: (config) => [\n            ...keys.resourceAll,\n            \"list\",\n            {\n                ...config,\n                ...(pickNotDeprecated(meta, metaData) || {}),\n            } as QueryKey,\n        ],\n        many: (ids) =>\n            [\n                ...keys.resourceAll,\n                \"getMany\",\n                (ids && ids.map(String)) as QueryKey,\n                { ...(pickNotDeprecated(meta, metaData) || {}) } as QueryKey,\n            ].filter((item) => item !== undefined),\n        detail: (id) => [\n            ...keys.resourceAll,\n            \"detail\",\n            id?.toString(),\n            { ...(pickNotDeprecated(meta, metaData) || {}) } as QueryKey,\n        ],\n        logList: (meta) =>\n            [\"logList\", resource, meta as any, metaData as QueryKey].filter(\n                (item) => item !== undefined,\n            ),\n    };\n    return keys;\n};\n\nexport const queryKeysReplacement = (preferLegacyKeys?: boolean) => {\n    return (\n        resource?: string,\n        dataProviderName?: string,\n        meta?: MetaQuery,\n        /**\n         * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n         */\n        metaData?: MetaQuery | undefined,\n    ): IQueryKeys => {\n        const providerName = dataProviderName || \"default\";\n\n        const keys: IQueryKeys = {\n            all: newKeys().data(providerName).get(preferLegacyKeys),\n            resourceAll: newKeys()\n                .data(dataProviderName)\n                .resource(resource ?? \"\")\n                .get(preferLegacyKeys),\n            list: (config) =>\n                newKeys()\n                    .data(dataProviderName)\n                    .resource(resource ?? \"\")\n                    .action(\"list\")\n                    .params({\n                        ...config,\n                        ...(pickNotDeprecated(meta, metaData) || {}),\n                    })\n                    .get(preferLegacyKeys),\n            many: (ids) =>\n                newKeys()\n                    .data(dataProviderName)\n                    .resource(resource ?? \"\")\n                    .action(\"many\")\n                    .ids(...(ids ?? []))\n                    .params({\n                        ...(pickNotDeprecated(meta, metaData) || {}),\n                    })\n                    .get(preferLegacyKeys),\n            detail: (id) =>\n                newKeys()\n                    .data(dataProviderName)\n                    .resource(resource ?? \"\")\n                    .action(\"one\")\n                    .id(id ?? \"\")\n                    .params({\n                        ...(pickNotDeprecated(meta, metaData) || {}),\n                    })\n                    .get(preferLegacyKeys),\n            logList: (meta) =>\n                [\n                    ...newKeys()\n                        .audit()\n                        .resource(resource)\n                        .action(\"list\")\n                        .params(meta)\n                        .get(preferLegacyKeys),\n                    metaData as QueryKey,\n                ].filter((item) => item !== undefined),\n        };\n\n        return keys;\n    };\n};\n","export const hasPermission = (\n    permissions: string[] | undefined,\n    action: string | undefined,\n): boolean => {\n    if (!permissions || !action) {\n        return false;\n    }\n    return !!permissions.find((i) => i === action);\n};\n","/**\n * Check if a segment is a parameter. (e.g. :id)\n */\nexport const isParameter = (segment: string) => {\n    return segment.startsWith(\":\");\n};\n","/**\n * Split a path to segments.\n */\nexport const splitToSegments = (path: string) => {\n    const segments = path.split(\"/\").filter((segment) => segment !== \"\");\n    return segments;\n};\n","import { splitToSegments } from \"./split-to-segments\";\n\n/**\n * Checks if the both routes have the same number of segments.\n */\nexport const isSegmentCountsSame = (route: string, resourceRoute: string) => {\n    const routeSegments = splitToSegments(route);\n    const resourceRouteSegments = splitToSegments(resourceRoute);\n\n    return routeSegments.length === resourceRouteSegments.length;\n};\n","/**\n * Remove leading and trailing slashes from a route.\n */\nexport const removeLeadingTrailingSlashes = (route: string) => {\n    return route.replace(/^\\/|\\/$/g, \"\");\n};\n","import { isParameter } from \"./is-parameter\";\nimport { isSegmentCountsSame } from \"./is-segment-counts-same\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { splitToSegments } from \"./split-to-segments\";\n\n/**\n * This function if the route and resourceRoute match by segments.\n * - First, trailing and leading slashes are removed\n * - Then, the route and resourceRoute are split to segments and checked if they have the same number of segments\n * - Then, each segment is checked if it is a parameter or if it matches the resourceRoute segment\n * - If all segments match, the function returns true, otherwise false\n */\nexport const checkBySegments = (route: string, resourceRoute: string) => {\n    const stdRoute = removeLeadingTrailingSlashes(route);\n    const stdResourceRoute = removeLeadingTrailingSlashes(resourceRoute);\n    // we need to check if the route and resourceRoute have the same number of segments\n    // if not, we can't match them\n    if (!isSegmentCountsSame(stdRoute, stdResourceRoute)) {\n        return false;\n    }\n\n    const routeSegments = splitToSegments(stdRoute);\n    const resourceRouteSegments = splitToSegments(stdResourceRoute);\n\n    return resourceRouteSegments.every((segment, index) => {\n        return isParameter(segment) || segment === routeSegments[index];\n    });\n};\n","import { Action } from \"src/interfaces\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\n\n/**\n * This helper function returns the default path for a given action and resource.\n * It also applies the parentPrefix if provided.\n * This is used by the legacy router and the new router if the resource doesn't provide a custom path.\n */\nexport const getDefaultActionPath = (\n    resourceName: string,\n    action: Action,\n    parentPrefix?: string,\n): string => {\n    const cleanParentPrefix = removeLeadingTrailingSlashes(parentPrefix || \"\");\n\n    let path = `${cleanParentPrefix}${\n        cleanParentPrefix ? \"/\" : \"\"\n    }${resourceName}`;\n\n    if (action === \"list\") {\n        path = `${path}`;\n    } else if (action === \"create\") {\n        path = `${path}/create`;\n    } else if (action === \"edit\") {\n        path = `${path}/edit/:id`;\n    } else if (action === \"show\") {\n        path = `${path}/show/:id`;\n    } else if (action === \"clone\") {\n        path = `${path}/clone/:id`;\n    }\n\n    return `/${path.replace(/^\\//, \"\")}`;\n};\n","import { IResourceItem } from \"src/interfaces\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * Returns the parent resource of the given resource.\n * Works both with the deprecated `parentName` and the new `parent` property.\n */\nexport const getParentResource = (\n    resource: IResourceItem,\n    resources: IResourceItem[],\n): IResourceItem | undefined => {\n    const parentName = pickNotDeprecated(\n        resource.meta?.parent,\n        resource.options?.parent,\n        resource.parentName,\n    );\n\n    if (!parentName) {\n        return undefined;\n    }\n\n    const parentResource = resources.find(\n        (resource) => (resource.identifier ?? resource.name) === parentName,\n    );\n\n    /**\n     * If the parent resource is not found, we return a resource object with the name of the parent resource.\n     * Because we still want to have nesting and prefixing for the resource even if the parent is not explicitly defined.\n     */\n    return parentResource ?? { name: parentName };\n};\n","import { ResourceProps } from \"src/interfaces/bindings/resource\";\nimport { getParentResource } from \"./get-parent-resource\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\n\n/**\n * Returns the parent prefix for a resource\n * - If `legacy` is provided, the computation is based on the `route` option of the resource\n */\nexport const getParentPrefixForResource = (\n    resource: ResourceProps,\n    resources: ResourceProps[],\n    /**\n     * Uses legacy route if true (`options.route`)\n     */\n    legacy?: boolean,\n): string | undefined => {\n    const parents: ResourceProps[] = [];\n\n    let parent = getParentResource(resource, resources);\n\n    while (parent) {\n        parents.push(parent);\n        parent = getParentResource(parent, resources);\n    }\n\n    if (parents.length === 0) {\n        return undefined;\n    }\n\n    return `/${parents\n        .reverse()\n        .map((parent) => {\n            const v = legacy\n                ? parent.options?.route ?? parent.name\n                : parent.name;\n            return removeLeadingTrailingSlashes(v);\n        })\n        .join(\"/\")}`;\n};\n","import { Action, IResourceItem } from \"src/interfaces\";\nimport { getDefaultActionPath } from \"./get-default-action-path\";\nimport { getParentPrefixForResource } from \"./get-parent-prefix-for-resource\";\n\nexport type ResourceActionRoute = {\n    action: Action;\n    resource: IResourceItem;\n    route: string;\n};\n\n/**\n * This function returns all the routes for available actions for a resource.\n * - If the action is a function, it means we're fallbacking to default path for the action\n * - If the action is a string, it means we don't have the component, but we have the route\n * - If the action is an object, it means we have the component and the route\n * - It will return an array of objects with the action, the resource and the route\n */\nexport const getActionRoutesFromResource = (\n    resource: IResourceItem,\n    resources: IResourceItem[],\n    /**\n     * Uses legacy route if true (`options.route`)\n     */\n    legacy?: boolean,\n) => {\n    const actions: ResourceActionRoute[] = [];\n\n    const actionList: Action[] = [\"list\", \"show\", \"edit\", \"create\", \"clone\"];\n\n    const parentPrefix = getParentPrefixForResource(\n        resource,\n        resources,\n        legacy,\n    );\n\n    actionList.forEach((action) => {\n        const item =\n            legacy && action === \"clone\" ? resource.create : resource[action];\n\n        let route: string | undefined = undefined;\n\n        if (typeof item === \"function\" || legacy) {\n            // means we're fallbacking to default path for the action\n            route = getDefaultActionPath(\n                legacy\n                    ? resource.meta?.route ??\n                          resource.options?.route ??\n                          resource.name\n                    : resource.name,\n                action,\n                legacy ? parentPrefix : undefined,\n            );\n        } else if (typeof item === \"string\") {\n            // means we don't have the component, but we have the route\n            route = item;\n        } else if (typeof item === \"object\") {\n            // means we have the component and the route\n            route = item.path;\n        }\n\n        if (route) {\n            actions.push({\n                action,\n                resource,\n                route: `/${route.replace(/^\\//, \"\")}`,\n            });\n        }\n    });\n\n    return actions;\n};\n","import { ResourceActionRoute } from \"./get-action-routes-from-resource\";\nimport { isParameter } from \"./is-parameter\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { splitToSegments } from \"./split-to-segments\";\n\n/**\n * Picks the most eligible route from the given matched routes.\n * - If there's only one route, it returns it.\n * - If there's more than one route, it picks the best non-greedy match.\n */\nexport const pickMatchedRoute = (\n    routes: ResourceActionRoute[],\n): ResourceActionRoute | undefined => {\n    // these routes are all matched, we should pick the least parametrized one\n\n    // no routes, no match\n    if (routes.length === 0) {\n        return undefined;\n    }\n\n    // no need to calculate the route segments if there's only one route\n    if (routes.length === 1) {\n        return routes[0];\n    }\n\n    // remove trailing and leading slashes\n    // split them to segments\n    const sanitizedRoutes = routes.map((route) => ({\n        ...route,\n        splitted: splitToSegments(removeLeadingTrailingSlashes(route.route)),\n    }));\n\n    // at this point, before calling this function, we already checked for segment lenghts and expect all of them to be the same\n    const segmentsCount = sanitizedRoutes[0]?.splitted.length ?? 0;\n\n    let eligibleRoutes: Array<(typeof sanitizedRoutes)[number]> = [\n        ...sanitizedRoutes,\n    ];\n\n    // loop through the segments\n    for (let i = 0; i < segmentsCount; i++) {\n        const nonParametrizedRoutes = eligibleRoutes.filter(\n            (route) => !isParameter(route.splitted[i]),\n        );\n\n        if (nonParametrizedRoutes.length === 0) {\n            // keep the eligible routes as they are\n            continue;\n        }\n        if (nonParametrizedRoutes.length === 1) {\n            // no need to continue, we found the route\n            eligibleRoutes = nonParametrizedRoutes;\n            break;\n        }\n\n        // we have more than one non-parametrized route, we need to check the next segment\n        eligibleRoutes = nonParametrizedRoutes;\n    }\n\n    return eligibleRoutes[0];\n};\n","import { Action, IResourceItem } from \"../../../interfaces\";\nimport { checkBySegments } from \"./check-by-segments\";\nimport { getActionRoutesFromResource } from \"./get-action-routes-from-resource\";\nimport { pickMatchedRoute } from \"./pick-matched-route\";\n\n/**\n * Match the resource from the route\n * - It will calculate all possible routes for resources and their actions\n * - It will check if the route matches any of the possible routes\n * - It will return the most eligible resource and action\n */\nexport const matchResourceFromRoute = (\n    route: string,\n    resources: IResourceItem[],\n): {\n    found: boolean;\n    resource?: IResourceItem;\n    action?: Action;\n    matchedRoute?: string;\n} => {\n    const allActionRoutes = resources.flatMap((resource) => {\n        return getActionRoutesFromResource(resource, resources);\n    });\n\n    const allFound = allActionRoutes.filter((actionRoute) => {\n        return checkBySegments(route, actionRoute.route);\n    });\n\n    const mostEligible = pickMatchedRoute(allFound);\n\n    return {\n        found: !!mostEligible,\n        resource: mostEligible?.resource,\n        action: mostEligible?.action,\n        matchedRoute: mostEligible?.route,\n    };\n};\n","import { ResourceProps } from \"src/interfaces/bindings/resource\";\nimport { getParentPrefixForResource } from \"../router\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * generates route for the resource based on parents and custom routes\n * @deprecated this is a **legacy** function and works only with the old resource definition\n */\nexport const routeGenerator = (\n    item: ResourceProps,\n    resourcesFromProps: ResourceProps[],\n): string | undefined => {\n    let route;\n\n    const parentPrefix = getParentPrefixForResource(\n        item,\n        resourcesFromProps,\n        true,\n    );\n\n    if (parentPrefix) {\n        const meta = pickNotDeprecated(item.meta, item.options);\n        route = `${parentPrefix}/${meta?.route ?? item.name}`;\n    } else {\n        route = item.options?.route ?? item.name;\n    }\n\n    return `/${route.replace(/^\\//, \"\")}`;\n};\n","import { pickNotDeprecated } from \"@definitions/helpers/pickNotDeprecated\";\nimport { IResourceItem, ITreeMenu, IMenuItem } from \"src/interfaces\";\n\n/**\n * @deprecated This helper is deprecated. Please use `createTree` instead.\n */\nexport const createTreeView = (\n    resources: IResourceItem[] | IMenuItem[],\n): ITreeMenu[] | ITreeMenu[] => {\n    const tree = [];\n    const resourcesRouteObject: { [key: string]: any } = {};\n    const resourcesNameObject: { [key: string]: any } = {};\n    let parent: IResourceItem | IMenuItem;\n    let child: ITreeMenu;\n\n    for (let i = 0; i < resources.length; i++) {\n        parent = resources[i];\n\n        const route =\n            parent.route ??\n            pickNotDeprecated(parent?.meta, parent.options)?.route ??\n            \"\";\n\n        resourcesRouteObject[route] = parent;\n        resourcesRouteObject[route][\"children\"] = [];\n\n        resourcesNameObject[parent.name] = parent;\n        resourcesNameObject[parent.name][\"children\"] = [];\n    }\n\n    for (const name in resourcesRouteObject) {\n        if (resourcesRouteObject.hasOwnProperty(name)) {\n            child = resourcesRouteObject[name];\n\n            if (child.parentName && resourcesNameObject[child.parentName]) {\n                resourcesNameObject[child.parentName][\"children\"].push(child);\n            } else {\n                tree.push(child);\n            }\n        }\n    }\n\n    return tree;\n};\n","export const humanizeString = (text: string): string => {\n    text = text.replace(/([a-z]{1})([A-Z]{1})/g, \"$1-$2\");\n    text = text.replace(/([A-Z]{1})([A-Z]{1})([a-z]{1})/g, \"$1-$2$3\");\n\n    text = text\n        .toLowerCase()\n        .replace(/[_-]+/g, \" \")\n        .replace(/\\s{2,}/g, \" \")\n        .trim();\n    text = text.charAt(0).toUpperCase() + text.slice(1);\n\n    return text;\n};\n// https://www.npmjs.com/package/humanize-string\n","import React from \"react\";\nimport pluralize from \"pluralize\";\nimport { humanizeString } from \"../../definitions/helpers/humanizeString\";\n\nimport {\n    IRefineContextOptions,\n    IRefineContext,\n    IRefineContextProvider,\n} from \"./IRefineContext\";\nimport { DefaultLayout } from \"@components/layoutWrapper/defaultLayout\";\n\nimport { LoginPage as DefaultLoginPage } from \"@components/pages\";\n\nexport const defaultRefineOptions: IRefineContextOptions = {\n    mutationMode: \"pessimistic\",\n    syncWithLocation: false,\n    undoableTimeout: 5000,\n    warnWhenUnsavedChanges: false,\n    liveMode: \"off\",\n    redirect: {\n        afterCreate: \"list\",\n        afterClone: \"list\",\n        afterEdit: \"list\",\n    },\n    overtime: {\n        interval: 1000,\n    },\n    textTransformers: {\n        humanize: humanizeString,\n        plural: pluralize.plural,\n        singular: pluralize.singular,\n    },\n    disableServerSideValidation: false,\n};\n\nexport const RefineContext = React.createContext<IRefineContext>({\n    hasDashboard: false,\n    mutationMode: \"pessimistic\",\n    warnWhenUnsavedChanges: false,\n    syncWithLocation: false,\n    undoableTimeout: 5000,\n    Title: undefined,\n    Sider: undefined,\n    Header: undefined,\n    Footer: undefined,\n    Layout: DefaultLayout,\n    OffLayoutArea: undefined,\n    liveMode: \"off\",\n    onLiveEvent: undefined,\n    options: defaultRefineOptions,\n});\n\nexport const RefineContextProvider: React.FC<IRefineContextProvider> = ({\n    hasDashboard,\n    mutationMode,\n    warnWhenUnsavedChanges,\n    syncWithLocation,\n    undoableTimeout,\n    children,\n    DashboardPage,\n    Title,\n    Layout = DefaultLayout,\n    Header,\n    Sider,\n    Footer,\n    OffLayoutArea,\n    LoginPage = DefaultLoginPage,\n    catchAll,\n    liveMode = \"off\",\n    onLiveEvent,\n    options,\n}) => {\n    return (\n        <RefineContext.Provider\n            value={{\n                hasDashboard,\n                mutationMode,\n                warnWhenUnsavedChanges,\n                syncWithLocation,\n                Title,\n                undoableTimeout,\n                Layout,\n                Header,\n                Sider,\n                Footer,\n                OffLayoutArea,\n                DashboardPage,\n                LoginPage,\n                catchAll,\n                liveMode,\n                onLiveEvent,\n                options,\n            }}\n        >\n            {children}\n        </RefineContext.Provider>\n    );\n};\n","import React from \"react\";\n\nimport { LayoutProps } from \"../../../interfaces\";\n\nexport const DefaultLayout: React.FC<LayoutProps> = ({ children }) => {\n    return <div>{children}</div>;\n};\n","import { QueryClient, QueryClientConfig } from \"@tanstack/react-query\";\n\nimport { defaultRefineOptions } from \"@contexts/refine\";\nimport {\n    IRefineContextOptions,\n    IRefineOptions,\n    LiveModeProps,\n    MutationMode,\n} from \"src/interfaces\";\n\ntype HandleRefineOptionsProps = {\n    options?: IRefineOptions;\n    mutationMode?: MutationMode;\n    syncWithLocation?: boolean;\n    warnWhenUnsavedChanges?: boolean;\n    undoableTimeout?: number;\n    liveMode?: LiveModeProps[\"liveMode\"];\n    disableTelemetry?: boolean;\n    reactQueryClientConfig?: QueryClientConfig;\n    reactQueryDevtoolConfig?: any | false;\n};\n\ntype HandleRefineOptionsReturnValues = {\n    optionsWithDefaults: IRefineContextOptions;\n    disableTelemetryWithDefault: boolean;\n    reactQueryWithDefaults: {\n        clientConfig: QueryClientConfig | InstanceType<typeof QueryClient>;\n        devtoolConfig: false | any;\n    };\n};\n\nexport const handleRefineOptions = ({\n    options,\n    disableTelemetry,\n    liveMode,\n    mutationMode,\n    reactQueryClientConfig,\n    reactQueryDevtoolConfig,\n    syncWithLocation,\n    undoableTimeout,\n    warnWhenUnsavedChanges,\n}: HandleRefineOptionsProps = {}): HandleRefineOptionsReturnValues => {\n    const optionsWithDefaults: IRefineContextOptions = {\n        breadcrumb: options?.breadcrumb,\n        mutationMode:\n            options?.mutationMode ??\n            mutationMode ??\n            defaultRefineOptions.mutationMode,\n        undoableTimeout:\n            options?.undoableTimeout ??\n            undoableTimeout ??\n            defaultRefineOptions.undoableTimeout,\n        syncWithLocation:\n            options?.syncWithLocation ??\n            syncWithLocation ??\n            defaultRefineOptions.syncWithLocation,\n        warnWhenUnsavedChanges:\n            options?.warnWhenUnsavedChanges ??\n            warnWhenUnsavedChanges ??\n            defaultRefineOptions.warnWhenUnsavedChanges,\n        liveMode:\n            options?.liveMode ?? liveMode ?? defaultRefineOptions.liveMode,\n        redirect: {\n            afterCreate:\n                options?.redirect?.afterCreate ??\n                defaultRefineOptions.redirect.afterCreate,\n            afterClone:\n                options?.redirect?.afterClone ??\n                defaultRefineOptions.redirect.afterClone,\n            afterEdit:\n                options?.redirect?.afterEdit ??\n                defaultRefineOptions.redirect.afterEdit,\n        },\n        overtime: options?.overtime ?? defaultRefineOptions.overtime,\n        textTransformers: {\n            humanize:\n                options?.textTransformers?.humanize ??\n                defaultRefineOptions.textTransformers.humanize,\n            plural:\n                options?.textTransformers?.plural ??\n                defaultRefineOptions.textTransformers.plural,\n            singular:\n                options?.textTransformers?.singular ??\n                defaultRefineOptions.textTransformers.singular,\n        },\n        disableServerSideValidation:\n            options?.disableServerSideValidation ??\n            defaultRefineOptions.disableServerSideValidation,\n        projectId: options?.projectId,\n        useNewQueryKeys: options?.useNewQueryKeys,\n    };\n\n    const disableTelemetryWithDefault =\n        options?.disableTelemetry ?? disableTelemetry ?? false;\n\n    const reactQueryWithDefaults = {\n        clientConfig:\n            options?.reactQuery?.clientConfig ?? reactQueryClientConfig ?? {},\n        devtoolConfig:\n            options?.reactQuery?.devtoolConfig ?? reactQueryDevtoolConfig ?? {},\n    };\n\n    return {\n        optionsWithDefaults,\n        disableTelemetryWithDefault,\n        reactQueryWithDefaults,\n    };\n};\n","import { Action, IRefineContextOptions, RedirectAction } from \"src/interfaces\";\n\ntype RedirectPageProps = {\n    redirectFromProps?: RedirectAction;\n    action: Action;\n    redirectOptions: IRefineContextOptions[\"redirect\"];\n};\n\nexport const redirectPage = ({\n    redirectFromProps,\n    action,\n    redirectOptions,\n}: RedirectPageProps): RedirectAction => {\n    if (redirectFromProps || redirectFromProps === false) {\n        return redirectFromProps;\n    }\n\n    switch (action) {\n        case \"clone\":\n            return redirectOptions.afterClone;\n        case \"create\":\n            return redirectOptions.afterCreate;\n        case \"edit\":\n            return redirectOptions.afterEdit;\n        default:\n            return false;\n    }\n};\n","type EachResolve<TResolve, Response> = (\n    result: TResolve,\n    index: number,\n) => Response;\ntype EachReject<TReject, Response> = (\n    error: TReject,\n    index: number,\n) => Response;\n\nexport const sequentialPromises = async <\n    TResolve = unknown,\n    TReject = unknown,\n    TResolveResponse = unknown,\n    TRejectResponse = unknown,\n>(\n    promises: (() => Promise<TResolve>)[],\n    onEachResolve: EachResolve<TResolve, TResolveResponse>,\n    onEachReject: EachReject<TReject, TRejectResponse>,\n): Promise<(TResolveResponse | TRejectResponse)[]> => {\n    const results = [];\n    // @ts-expect-error Remove this when we enable `downLevelIterations`\n    for (const [index, promise] of promises.entries()) {\n        try {\n            const result = await promise();\n\n            results.push(onEachResolve(result, index));\n        } catch (error) {\n            results.push(onEachReject(error as TReject, index));\n        }\n    }\n    return results;\n};\n","import { IResourceItem } from \"src/interfaces/bindings/resource\";\nimport { removeLeadingTrailingSlashes } from \"../router/remove-leading-trailing-slashes\";\n\n/**\n * Picks the resource based on the provided identifier.\n * Identifier fallbacks to `name` if `identifier` is not explicitly provided to the resource.\n * If legacy is true, then resource is matched by `route` first and then by `name`.\n */\nexport const pickResource = (\n    identifier?: string,\n    resources: IResourceItem[] = [],\n    /**\n     * If true, the identifier will be checked for `route` and `name` properties\n     */\n    legacy = false,\n): IResourceItem | undefined => {\n    if (!identifier) {\n        return undefined;\n    }\n\n    if (legacy) {\n        const resourceByRoute = resources.find(\n            (r) =>\n                removeLeadingTrailingSlashes(r.route ?? \"\") ===\n                removeLeadingTrailingSlashes(identifier),\n        );\n\n        const resource = resourceByRoute\n            ? resourceByRoute\n            : resources.find((r) => r.name === identifier);\n\n        return resource;\n    }\n\n    let resource = resources.find((r) => r.identifier === identifier);\n    if (!resource) {\n        resource = resources.find((r) => r.name === identifier);\n    }\n\n    return resource;\n};\n","import { IResourceItem } from \"src/interfaces/bindings/resource\";\nimport { pickResource } from \"../pick-resource\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * Picks the data provider name based on the provided name or fallbacks to resource definition, or `default`.\n */\nexport const pickDataProvider = (\n    resourceName?: string,\n    dataProviderName?: string,\n    resources?: IResourceItem[],\n) => {\n    if (dataProviderName) {\n        return dataProviderName;\n    }\n\n    /**\n     * In this helper, we don't do `route` based matching therefore there's no need to check for `legacy` behaviors.\n     */\n    const resource = pickResource(resourceName, resources);\n\n    const meta = pickNotDeprecated(resource?.meta, resource?.options);\n\n    if (meta?.dataProviderName) {\n        return meta.dataProviderName;\n    }\n\n    return \"default\";\n};\n","export const handleMultiple = async <TData = unknown>(\n    promises: Promise<{ data: TData }>[],\n): Promise<{ data: TData[] }> => {\n    return {\n        data: (await Promise.all(promises)).map((res) => res.data),\n    };\n};\n","import { GetListResponse } from \"../../../interfaces\";\n\nexport const getNextPageParam = (lastPage: GetListResponse) => {\n    const { pagination, cursor } = lastPage;\n\n    // cursor pagination\n    if (cursor?.next) {\n        return cursor.next;\n    }\n\n    const current = pagination?.current || 1;\n\n    const pageSize = pagination?.pageSize || 10;\n    const totalPages = Math.ceil((lastPage.total || 0) / pageSize);\n\n    return current < totalPages ? Number(current) + 1 : undefined;\n};\n\nexport const getPreviousPageParam = (lastPage: GetListResponse) => {\n    const { pagination, cursor } = lastPage;\n\n    // cursor pagination\n    if (cursor?.prev) {\n        return cursor.prev;\n    }\n\n    const current = pagination?.current || 1;\n\n    return current === 1 ? undefined : current - 1;\n};\n","import {\n    IResourceItem,\n    ResourceProps,\n} from \"../../../interfaces/bindings/resource\";\n\nimport { routeGenerator } from \"../routeGenerator\";\n\n/**\n * For the legacy definition of resources, we did a basic transformation for provided resources\n * - This is meant to provide an easier way to access properties.\n * - In the new definition, we don't need to do transformations and properties can be accessed via helpers or manually.\n * This is kept for backward compability\n */\nexport const legacyResourceTransform = (resources: ResourceProps[]) => {\n    const _resources: IResourceItem[] = [];\n\n    resources.forEach((resource) => {\n        _resources.push({\n            ...resource,\n            label: resource.meta?.label ?? resource.options?.label,\n            route: routeGenerator(resource, resources),\n            canCreate: !!resource.create,\n            canEdit: !!resource.edit,\n            canShow: !!resource.show,\n            canDelete: resource.canDelete,\n        });\n    });\n\n    return _resources;\n};\n","import { splitToSegments } from \"./split-to-segments\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { isParameter } from \"./is-parameter\";\n\n/**\n * Picks the route parameters from the given route.\n * (e.g. /users/:id/posts/:postId => ['id', 'postId'])\n */\nexport const pickRouteParams = (route: string) => {\n    const segments = splitToSegments(removeLeadingTrailingSlashes(route));\n\n    return segments.flatMap((s) => {\n        if (isParameter(s)) {\n            return [s.slice(1)];\n        }\n\n        return [];\n    });\n};\n","/**\n * Prepares the route params by checking the existing params and meta data.\n * Meta data is prioritized over params.\n * Params are prioritized over predetermined id, action and resource.\n * This means, we can use `meta` for user supplied params (both manually or from the query string)\n */\nexport const prepareRouteParams = <\n    TRouteParams extends Record<string, unknown> = Record<string, unknown>,\n>(\n    routeParams: (keyof TRouteParams)[],\n    meta: Record<string, unknown> = {},\n): Partial<TRouteParams> => {\n    return routeParams.reduce((acc, key) => {\n        const value = meta[key as string];\n        if (typeof value !== \"undefined\") {\n            acc[key] = value as TRouteParams[keyof TRouteParams];\n        }\n        return acc;\n    }, {} as Partial<TRouteParams>);\n};\n","import { MetaQuery, ParseResponse } from \"src/interfaces\";\nimport { pickRouteParams } from \"./pick-route-params\";\nimport { prepareRouteParams } from \"./prepare-route-params\";\n\n/**\n * This function will compose a route with the given params and meta.\n * - A route can have parameters like (eg: /users/:id)\n * - First we pick the route params from the route (eg: [id])\n * - Then we prepare the route params with the given params and meta (eg: { id: 1 })\n * - Then we replace the route params with the prepared route params (eg: /users/1)\n */\nexport const composeRoute = (\n    designatedRoute: string,\n    resourceMeta: MetaQuery = {},\n    parsed: ParseResponse = {},\n    meta: Record<string, unknown> = {},\n): string => {\n    // pickRouteParams (from the route)\n    const routeParams = pickRouteParams(designatedRoute);\n    // prepareRouteParams (from route params, params and meta)\n    const preparedRouteParams = prepareRouteParams(routeParams, {\n        ...resourceMeta,\n        ...(typeof parsed?.id !== \"undefined\" ? { id: parsed.id } : {}),\n        ...(typeof parsed?.action !== \"undefined\"\n            ? { action: parsed.action }\n            : {}),\n        ...(typeof parsed?.resource !== \"undefined\"\n            ? { resource: parsed.resource }\n            : {}),\n        ...parsed?.params,\n        ...meta,\n    });\n    // replace route params with prepared route params\n    return designatedRoute.replace(/:([^\\/]+)/g, (match, key) => {\n        const fromParams = preparedRouteParams[key];\n        if (typeof fromParams !== \"undefined\") {\n            return `${fromParams}`;\n        }\n        return match;\n    });\n};\n","import React, { PropsWithChildren } from \"react\";\n\nimport { useNavigation } from \"@hooks\";\nimport { ILegacyAuthContext, IAuthBindingsContext } from \"../../interfaces\";\n\n/**\n * @deprecated `LegacyAuthContext` is deprecated with refine@4, use `AuthBindingsContext` instead, however, we still support `LegacyAuthContext` for backward compatibility.\n */\nexport const LegacyAuthContext = React.createContext<ILegacyAuthContext>({});\n\n/**\n * @deprecated `LegacyAuthContextProvider` is deprecated with refine@4, use `AuthBindingsContextProvider` instead, however, we still support `LegacyAuthContextProvider` for backward compatibility.\n */\nexport const LegacyAuthContextProvider: React.FC<\n    ILegacyAuthContext & {\n        children?: React.ReactNode;\n    }\n> = ({ children, isProvided, ...authOperations }) => {\n    const { replace } = useNavigation();\n\n    const loginFunc = async (params: any) => {\n        try {\n            const result = await authOperations.login?.(params);\n\n            return result;\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    };\n\n    const registerFunc = async (params: any) => {\n        try {\n            const result = await authOperations.register?.(params);\n\n            return result;\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    };\n\n    const logoutFunc = async (params: any) => {\n        try {\n            const redirectPath = await authOperations.logout?.(params);\n\n            return redirectPath;\n        } catch (error) {\n            return Promise.reject(error);\n        }\n    };\n\n    const checkAuthFunc = async (params: any) => {\n        try {\n            await authOperations.checkAuth?.(params);\n            return Promise.resolve();\n        } catch (error) {\n            if ((error as { redirectPath?: string })?.redirectPath) {\n                replace((error as { redirectPath: string }).redirectPath);\n            }\n\n            return Promise.reject(error);\n        }\n    };\n\n    return (\n        <LegacyAuthContext.Provider\n            value={{\n                ...authOperations,\n                login: loginFunc,\n                logout: logoutFunc,\n                checkAuth: checkAuthFunc,\n                register: registerFunc,\n                isProvided,\n            }}\n        >\n            {children}\n        </LegacyAuthContext.Provider>\n    );\n};\n\nexport const AuthBindingsContext = React.createContext<\n    Partial<IAuthBindingsContext>\n>({});\n\nexport const AuthBindingsContextProvider: React.FC<\n    PropsWithChildren<IAuthBindingsContext>\n> = ({ children, isProvided, ...authBindings }) => {\n    const handleLogin = async (params: unknown) => {\n        try {\n            const result = await authBindings.login?.(params);\n\n            return result;\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in login: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleRegister = async (params: unknown) => {\n        try {\n            const result = await authBindings.register?.(params);\n\n            return result;\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in register: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleLogout = async (params: unknown) => {\n        try {\n            const result = await authBindings.logout?.(params);\n\n            return result;\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in logout: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleCheck = async (params: unknown) => {\n        try {\n            const result = await authBindings.check?.(params);\n\n            return Promise.resolve(result);\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in check: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleForgotPassword = async (params: unknown) => {\n        try {\n            const result = await authBindings.forgotPassword?.(params);\n\n            return Promise.resolve(result);\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in forgotPassword: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    const handleUpdatePassword = async (params: unknown) => {\n        try {\n            const result = await authBindings.updatePassword?.(params);\n            return Promise.resolve(result);\n        } catch (error) {\n            console.warn(\n                \"Unhandled Error in updatePassword: refine always expects a resolved promise.\",\n                error,\n            );\n            return Promise.reject(error);\n        }\n    };\n\n    return (\n        <AuthBindingsContext.Provider\n            value={{\n                ...authBindings,\n                login: handleLogin as IAuthBindingsContext[\"login\"],\n                logout: handleLogout as IAuthBindingsContext[\"logout\"],\n                check: handleCheck as IAuthBindingsContext[\"check\"],\n                register: handleRegister as IAuthBindingsContext[\"register\"],\n                forgotPassword:\n                    handleForgotPassword as IAuthBindingsContext[\"forgotPassword\"],\n                updatePassword:\n                    handleUpdatePassword as IAuthBindingsContext[\"updatePassword\"],\n                isProvided,\n            }}\n        >\n            {children}\n        </AuthBindingsContext.Provider>\n    );\n};\n\n/**\n * @deprecated `useLegacyAuthContext` is deprecated with refine@4, use `useAuthBindingsContext` instead, however, we still support `useLegacyAuthContext` for backward compatibility.\n */\nexport const useLegacyAuthContext = () => {\n    const context = React.useContext(LegacyAuthContext);\n\n    return context;\n};\n\nexport const useAuthBindingsContext = () => {\n    const context = React.useContext(AuthBindingsContext);\n\n    return context;\n};\n","import { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\n/**\n * @returns authProvider or legacyAuthProvider if provided, otherwise null\n * @internal\n * NOTE: Will be removed in v5\n */\nexport const useActiveAuthProvider = () => {\n    const legacyAuthProvider = useLegacyAuthContext();\n    const authProvider = useAuthBindingsContext();\n\n    if (authProvider.isProvided) {\n        return { isLegacy: false, ...authProvider };\n    }\n\n    if (legacyAuthProvider.isProvided) {\n        // legacyAuthProvider interface is different from authProvider interface\n        // we need to convert it to authProvider interface for simple usage\n        // in the future, we will remove legacyAuthProvider\n        return {\n            isLegacy: true,\n            ...legacyAuthProvider,\n            check: legacyAuthProvider.checkAuth,\n            onError: legacyAuthProvider.checkError,\n            getIdentity: legacyAuthProvider.getUserIdentity,\n        };\n    }\n\n    return null;\n};\n","import { Pagination } from \"../../../interfaces\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\ntype HandlePaginationParamsProps = {\n    hasPagination?: boolean;\n    pagination?: Pagination;\n    configPagination?: Pagination;\n};\n\nexport const handlePaginationParams = ({\n    hasPagination,\n    pagination,\n    configPagination,\n}: HandlePaginationParamsProps = {}): Required<Pagination> => {\n    const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n    const mode = pagination?.mode ?? hasPaginationString;\n\n    const current =\n        pickNotDeprecated(pagination?.current, configPagination?.current) ?? 1;\n\n    const pageSize =\n        pickNotDeprecated(pagination?.pageSize, configPagination?.pageSize) ??\n        10;\n\n    return {\n        current,\n        pageSize,\n        mode,\n    };\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useMediaQuery = (query: string) => {\n    const [matches, setMatches] = useState(false);\n\n    useEffect(() => {\n        const media = window.matchMedia(query);\n        if (media.matches !== matches) {\n            setMatches(media.matches);\n        }\n        const listener = () => setMatches(media.matches);\n        window.addEventListener(\"resize\", listener);\n        return () => window.removeEventListener(\"resize\", listener);\n    }, [matches, query]);\n\n    return matches;\n};\n","import type { useTranslate } from \"@hooks/translate\";\n\nexport const safeTranslate = (\n    translate: ReturnType<typeof useTranslate>,\n    key: string,\n    defaultMessage?: string,\n    options?: any,\n) => {\n    const translated = options\n        ? translate(key, options, defaultMessage)\n        : translate(key, defaultMessage);\n\n    const fallback = defaultMessage ?? key;\n\n    if (translated === key || typeof translated === \"undefined\") {\n        return fallback;\n    }\n\n    return translated;\n};\n","import { IResourceItem } from \"@contexts/resource\";\nimport { userFriendlyResourceName } from \"../userFriendlyResourceName\";\nimport type { useTranslate } from \"@hooks/translate\";\nimport { safeTranslate } from \"../safe-translate\";\n\n/**\n * Generates document title for the given resource and action.\n */\nexport function generateDefaultDocumentTitle(\n    translate: ReturnType<typeof useTranslate>,\n    resource?: IResourceItem,\n    action?: string,\n    id?: string,\n    resourceName?: string,\n) {\n    const actionPrefixMatcher = {\n        create: \"Create new \",\n        clone: `#${id ?? \"\"} Clone `,\n        edit: `#${id ?? \"\"} Edit `,\n        show: `#${id ?? \"\"} Show `,\n        list: \"\",\n    };\n\n    const identifier = resource?.identifier ?? resource?.name;\n\n    const resourceNameFallback =\n        resource?.label ??\n        resource?.meta?.label ??\n        userFriendlyResourceName(\n            identifier,\n            action === \"list\" ? \"plural\" : \"singular\",\n        );\n\n    const resourceNameWithFallback = resourceName ?? resourceNameFallback;\n\n    const defaultTitle = safeTranslate(\n        translate,\n        \"documentTitle.default\",\n        \"refine\",\n    );\n    const suffix = safeTranslate(\n        translate,\n        \"documentTitle.suffix\",\n        \" | refine\",\n    );\n    let autoGeneratedTitle = defaultTitle;\n\n    if (action && identifier) {\n        autoGeneratedTitle = safeTranslate(\n            translate,\n            `documentTitle.${identifier}.${action}`,\n            `${\n                actionPrefixMatcher[\n                    action as keyof typeof actionPrefixMatcher\n                ] ?? \"\"\n            }${resourceNameWithFallback}${suffix}`,\n            { id },\n        );\n    }\n\n    return autoGeneratedTitle;\n}\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport { IRefineContextOptions } from \"../../interfaces\";\n\ntype UseMutationModeType = () => {\n    mutationMode: IRefineContextOptions[\"mutationMode\"];\n    undoableTimeout: IRefineContextOptions[\"undoableTimeout\"];\n};\n\n/**\n * Mutation mode determines which mode the mutation runs with.\n * Mutations can run under three different modes: `pessimistic`, `optimistic` and `undoable`.\n * Each mode corresponds to a different type of user experience.\n *\n * @see {@link https://refine.dev/docs/guides-and-concepts/mutation-mode} for more details.\n */\nexport const useMutationMode: UseMutationModeType = () => {\n    const { mutationMode, undoableTimeout } = useContext(RefineContext);\n\n    return { mutationMode, undoableTimeout };\n};\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport { UnsavedWarnContext } from \"@contexts/unsavedWarn\";\nimport {\n    IRefineContextOptions,\n    IUnsavedWarnContext,\n} from \"../../../interfaces\";\n\ntype UseWarnAboutChangeType = () => {\n    warnWhenUnsavedChanges: IRefineContextOptions[\"warnWhenUnsavedChanges\"];\n    warnWhen: NonNullable<IUnsavedWarnContext[\"warnWhen\"]>;\n    setWarnWhen: NonNullable<IUnsavedWarnContext[\"setWarnWhen\"]>;\n};\n\n/**\n * When you have unsaved changes and try to leave the current page, **refine** shows a confirmation modal box.\n * To activate this feature, set the `warnWhenUnsavedChanges` to `true`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config#warnwhenunsavedchanges} for more details.\n */\nexport const useWarnAboutChange: UseWarnAboutChangeType = () => {\n    const { warnWhenUnsavedChanges } = useContext(RefineContext);\n\n    const { warnWhen, setWarnWhen } = useContext(UnsavedWarnContext);\n\n    return {\n        warnWhenUnsavedChanges,\n        warnWhen: Boolean(warnWhen),\n        setWarnWhen: setWarnWhen ?? (() => undefined),\n    };\n};\n","import React, { ReactNode, useState } from \"react\";\n\nimport { IUnsavedWarnContext } from \"./IUnsavedWarnContext\";\n\nexport const UnsavedWarnContext = React.createContext<IUnsavedWarnContext>({});\n\nexport const UnsavedWarnContextProvider: React.FC<{ children: ReactNode }> = ({\n    children,\n}) => {\n    const [warnWhen, setWarnWhen] = useState(false);\n\n    return (\n        <UnsavedWarnContext.Provider value={{ warnWhen, setWarnWhen }}>\n            {children}\n        </UnsavedWarnContext.Provider>\n    );\n};\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport { IRefineContextOptions } from \"../../interfaces\";\n\ntype UseSyncWithLocationType = () => {\n    syncWithLocation: IRefineContextOptions[\"syncWithLocation\"];\n};\n\n/**\n * List query parameter values can be edited manually by typing directly in the URL.\n * To activate this feature `syncWithLocation` needs to be set to `true`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#syncwithlocation} for more details.\n */\nexport const useSyncWithLocation: UseSyncWithLocationType = () => {\n    const { syncWithLocation } = useContext(RefineContext);\n\n    return { syncWithLocation };\n};\n","import { useContext } from \"react\";\nimport { RefineContext } from \"@contexts/refine\";\nimport { TitleProps } from \"../../interfaces\";\n\n/**\n * `useTitle` returns a component that calls the `<Title>` passed to the `<Refine>`.\n * In this way, it becomes easier for us to access this component in various parts of the application.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/refine/useTitle} for more details.\n */\nexport const useTitle: () => React.FC<TitleProps> | undefined = () => {\n    const { Title } = useContext(RefineContext);\n\n    return Title;\n};\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\n\nexport const useRefineContext = () => {\n    const {\n        Footer,\n        Header,\n        Layout,\n        OffLayoutArea,\n        Sider,\n        Title,\n        hasDashboard,\n        mutationMode,\n        syncWithLocation,\n        undoableTimeout,\n        warnWhenUnsavedChanges,\n        DashboardPage,\n        LoginPage,\n        catchAll,\n        options,\n    } = useContext(RefineContext);\n\n    return {\n        Footer,\n        Header,\n        Layout,\n        OffLayoutArea,\n        Sider,\n        Title,\n        hasDashboard,\n        mutationMode,\n        syncWithLocation,\n        undoableTimeout,\n        warnWhenUnsavedChanges,\n        DashboardPage,\n        LoginPage,\n        catchAll,\n        options,\n    };\n};\n","import { useRefineContext } from \"@hooks/refine\";\n\n/**\n * A method that the internal uses\n * @internal\n */\nexport const useUserFriendlyName = () => {\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n\n    const getFriendlyName = (\n        name = \"\",\n        type: \"singular\" | \"plural\",\n    ): string => {\n        const humanizeName = textTransformers.humanize(name);\n        if (type === \"singular\") {\n            return textTransformers.singular(humanizeName);\n        }\n        return textTransformers.plural(humanizeName);\n    };\n\n    return getFriendlyName;\n};\n","export const file2Base64 = (file: any): Promise<string> => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        const resultHandler = () => {\n            if (reader.result) {\n                reader.removeEventListener(\"load\", resultHandler, false);\n\n                resolve(reader.result as string);\n            }\n        };\n\n        reader.addEventListener(\"load\", resultHandler, false);\n\n        reader.readAsDataURL(file.originFileObj as Blob);\n        reader.onerror = (error) => {\n            reader.removeEventListener(\"load\", resultHandler, false);\n            return reject(error);\n        };\n    });\n};\n","import { useRefineContext } from \"..\";\nimport { keys } from \"@definitions/index\";\n\nexport const useKeys = () => {\n    const {\n        options: { useNewQueryKeys },\n    } = useRefineContext();\n\n    return {\n        keys,\n        preferLegacyKeys: !useNewQueryKeys,\n    };\n};\n","import {\n    useQuery,\n    UseQueryResult,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { IdentityResponse } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseGetIdentityLegacyProps<TData> = {\n    v3LegacyAuthProviderCompatible: true;\n    queryOptions?: UseQueryOptions<TData>;\n};\n\nexport type UseGetIdentityProps<TData = IdentityResponse> = {\n    v3LegacyAuthProviderCompatible?: false;\n    queryOptions?: UseQueryOptions<TData>;\n};\n\nexport type UseGetIdentityCombinedProps<TData = any> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    queryOptions?: UseQueryOptions<TData> | UseQueryOptions<IdentityResponse>;\n};\n\nexport type UseGetIdentityLegacyReturnType<TData> = UseQueryResult<\n    TData,\n    unknown\n>;\n\nexport type UseGetIdentityReturnType<TData = IdentityResponse> = UseQueryResult<\n    TData,\n    unknown\n>;\n\nexport type UsePermissionsCombinedReturnType<TData = any> =\n    | UseQueryResult<TData, unknown>\n    | UseQueryResult<IdentityResponse, unknown>;\n\nexport function useGetIdentity<TData = any>(\n    props: UseGetIdentityLegacyProps<TData>,\n): UseGetIdentityLegacyReturnType<TData>;\n\nexport function useGetIdentity<TData = IdentityResponse>(\n    props?: UseGetIdentityProps<TData>,\n): UseGetIdentityReturnType<TData>;\n\nexport function useGetIdentity<TData = any>(\n    props?: UseGetIdentityCombinedProps<TData>,\n): UsePermissionsCombinedReturnType<TData>;\n\n/**\n * `useGetIdentity` calls the `getUserIdentity` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useGetIdentity} for more details.\n *\n * @typeParam TData - Result data of the query\n *\n */\nexport function useGetIdentity<TData = any>({\n    v3LegacyAuthProviderCompatible = false,\n    queryOptions,\n}: UseGetIdentityProps<TData> | UseGetIdentityLegacyProps<TData> = {}):\n    | UseGetIdentityReturnType<TData>\n    | UseGetIdentityLegacyReturnType<TData> {\n    const { getUserIdentity: legacyGetUserIdentity } = useLegacyAuthContext();\n    const { getIdentity } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const queryResponse = useQuery<TData>(\n        keys().auth().action(\"identity\").get(preferLegacyKeys),\n        // Enabled check for `getIdentity` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        (getIdentity as (params?: unknown) => Promise<TData>) ??\n            (() => Promise.resolve({})),\n        {\n            enabled: !v3LegacyAuthProviderCompatible && !!getIdentity,\n            retry: false,\n            ...(v3LegacyAuthProviderCompatible === true ? {} : queryOptions),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible === true\n                    ? {}\n                    : queryOptions?.meta),\n                ...getXRay(\"useGetIdentity\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const legacyQueryResponse = useQuery<TData>(\n        [\n            ...keys().auth().action(\"identity\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        // Enabled check for `getUserIdentity` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        legacyGetUserIdentity ?? (() => Promise.resolve({})),\n        {\n            enabled: v3LegacyAuthProviderCompatible && !!legacyGetUserIdentity,\n            retry: false,\n            ...(v3LegacyAuthProviderCompatible ? queryOptions : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible ? queryOptions?.meta : {}),\n                ...getXRay(\"useGetIdentity\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useGo, useNavigation, useNotification, useRouterType } from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport {\n    RefineError,\n    OpenNotificationParams,\n    TLogoutData,\n} from \"../../../interfaces\";\nimport { AuthActionResponse } from \"src/interfaces/bindings/auth\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ntype Variables = {\n    redirectPath?: string | false;\n};\n\nexport type UseLogoutLegacyProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TLogoutData,\n            Error | RefineError,\n            (TVariables & Variables) | void,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseLogoutProps<TVariables> = {\n    v3LegacyAuthProviderCompatible?: false;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse,\n            Error | RefineError,\n            (TVariables & Variables) | void,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseLogoutCombinedProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TLogoutData,\n            Error | RefineError,\n            (TVariables & Variables) | void,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseLogoutLegacyReturnType<TVariables> = UseMutationResult<\n    TLogoutData,\n    Error | RefineError,\n    (TVariables & Variables) | void,\n    unknown\n>;\n\nexport type UseLogoutReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    (TVariables & Variables) | void,\n    unknown\n>;\n\nexport type UseLogoutCombinedReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse | TLogoutData,\n    Error | RefineError,\n    (TVariables & Variables) | void,\n    unknown\n>;\n\nexport function useLogout<TVariables = {}>(\n    props: UseLogoutLegacyProps<TVariables>,\n): UseLogoutLegacyReturnType<TVariables>;\n\nexport function useLogout<TVariables = {}>(\n    props?: UseLogoutProps<TVariables>,\n): UseLogoutReturnType<TVariables>;\n\nexport function useLogout<TVariables = {}>(\n    props?: UseLogoutCombinedProps<TVariables>,\n): UseLogoutCombinedReturnType<TVariables>;\n\n/**\n * `useLogout` calls the `logout` method from the {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useLogout} for more details.\n *\n */\nexport function useLogout<TVariables = {}>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}: UseLogoutProps<TVariables> | UseLogoutLegacyProps<TVariables> = {}):\n    | UseLogoutLegacyReturnType<TVariables>\n    | UseLogoutReturnType<TVariables> {\n    const invalidateAuthStore = useInvalidateAuthStore();\n    const routerType = useRouterType();\n    const go = useGo();\n    const { push } = useNavigation();\n    const { open, close } = useNotification();\n    const { logout: legacyLogoutFromContext } = useLegacyAuthContext();\n    const { logout: logoutFromContext } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error | RefineError,\n        (TVariables & Variables) | void,\n        unknown\n    >(keys().auth().action(\"logout\").get(preferLegacyKeys), logoutFromContext, {\n        onSuccess: async (data, variables) => {\n            const { success, error, redirectTo } = data;\n            const { redirectPath } = variables ?? {};\n\n            const redirect = redirectPath ?? redirectTo;\n\n            if (success) {\n                close?.(\"useLogout-error\");\n            }\n\n            if (error || !success) {\n                open?.(buildNotification(error));\n            }\n\n            await invalidateAuthStore();\n\n            if (redirect !== false) {\n                if (routerType === \"legacy\") {\n                    push(redirect ?? \"/login\");\n                } else {\n                    if (redirect) {\n                        go({ to: redirect });\n                    }\n                }\n            }\n        },\n        onError: (error: any) => {\n            open?.(buildNotification(error));\n        },\n        ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible === true\n                ? {}\n                : mutationOptions?.meta),\n            ...getXRay(\"useLogout\", preferLegacyKeys),\n        },\n    });\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TLogoutData,\n        Error | RefineError,\n        (TVariables & Variables) | void,\n        unknown\n    >(\n        [\n            ...keys().auth().action(\"logout\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        legacyLogoutFromContext,\n        {\n            onSuccess: async (data, variables) => {\n                const redirectPath = variables?.redirectPath ?? data;\n\n                await invalidateAuthStore();\n\n                if (redirectPath === false) {\n                    return;\n                }\n\n                if (redirectPath) {\n                    if (routerType === \"legacy\") {\n                        push(redirectPath);\n                    } else {\n                        go({ to: redirectPath });\n                    }\n                    return;\n                }\n\n                if (routerType === \"legacy\") {\n                    push(\"/login\");\n                } else {\n                    go({ to: \"/login\" });\n                }\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible\n                    ? mutationOptions?.meta\n                    : {}),\n                ...getXRay(\"useLogout\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        key: \"useLogout-error\",\n        type: \"error\",\n        message: error?.name || \"Logout Error\",\n        description: error?.message || \"Something went wrong during logout\",\n    };\n};\n","import { useKeys } from \"@hooks/useKeys\";\nimport { useQueryClient } from \"@tanstack/react-query\";\n\nexport const useInvalidateAuthStore = () => {\n    const queryClient = useQueryClient();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const invalidate = async () => {\n        await Promise.all(\n            ([\"check\", \"identity\", \"permissions\"] as const).map((action) =>\n                queryClient.invalidateQueries(\n                    keys().auth().action(action).get(preferLegacyKeys),\n                ),\n            ),\n        );\n    };\n\n    return invalidate;\n};\n","import React from \"react\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport qs from \"qs\";\n\nimport {\n    useNavigation,\n    useRouterContext,\n    useNotification,\n    useRouterType,\n    useParsed,\n    useGo,\n} from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\nimport {\n    RefineError,\n    OpenNotificationParams,\n    TLoginData,\n} from \"../../../interfaces\";\nimport { AuthActionResponse } from \"src/interfaces/bindings/auth\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseLoginLegacyProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TLoginData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseLoginProps<TVariables> = {\n    v3LegacyAuthProviderCompatible?: false;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseLoginCombinedProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TLoginData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseLoginLegacyReturnType<TVariables> = UseMutationResult<\n    TLoginData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseLoginReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseLoginCombinedReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse | TLoginData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport function useLogin<TVariables = {}>(\n    props: UseLoginLegacyProps<TVariables>,\n): UseLoginLegacyReturnType<TVariables>;\n\nexport function useLogin<TVariables = {}>(\n    props?: UseLoginProps<TVariables>,\n): UseLoginReturnType<TVariables>;\n\nexport function useLogin<TVariables = {}>(\n    props?: UseLoginCombinedProps<TVariables>,\n): UseLoginCombinedReturnType<TVariables>;\n\n/**\n * `useLogin` calls `login` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useLogin} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useLogin<TVariables = {}>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}: UseLoginProps<TVariables> | UseLoginLegacyProps<TVariables> = {}):\n    | UseLoginLegacyReturnType<TVariables>\n    | UseLoginReturnType<TVariables> {\n    const invalidateAuthStore = useInvalidateAuthStore();\n    const routerType = useRouterType();\n\n    const go = useGo();\n    const { replace } = useNavigation();\n\n    const parsed = useParsed();\n\n    const { useLocation } = useRouterContext();\n    const { search } = useLocation();\n\n    const { close, open } = useNotification();\n    const { login: legacyLoginFromContext } = useLegacyAuthContext();\n    const { login: loginFromContext } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const to = React.useMemo(() => {\n        if (routerType === \"legacy\") {\n            const legacySearch = qs.parse(search, {\n                ignoreQueryPrefix: true,\n            });\n            return legacySearch.to;\n        } else {\n            return parsed.params?.to;\n        }\n    }, [routerType, parsed.params, search]);\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(keys().auth().action(\"login\").get(preferLegacyKeys), loginFromContext, {\n        onSuccess: async ({ success, redirectTo, error }) => {\n            if (success) {\n                close?.(\"login-error\");\n            }\n\n            if (error || !success) {\n                open?.(buildNotification(error));\n            }\n\n            await invalidateAuthStore();\n\n            if (to && success) {\n                if (routerType === \"legacy\") {\n                    replace(to as string);\n                } else {\n                    go({ to: to as string, type: \"replace\" });\n                }\n            } else if (redirectTo) {\n                if (routerType === \"legacy\") {\n                    replace(redirectTo);\n                } else {\n                    go({ to: redirectTo, type: \"replace\" });\n                }\n            } else {\n                if (routerType === \"legacy\") {\n                    replace(\"/\");\n                }\n            }\n        },\n        onError: (error: any) => {\n            open?.(buildNotification(error));\n        },\n        ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n        meta: {\n            ...(v3LegacyAuthProviderCompatible === true\n                ? {}\n                : mutationOptions?.meta),\n            ...getXRay(\"useLogin\", preferLegacyKeys),\n        },\n    });\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TLoginData,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(\n        [\n            ...keys().auth().action(\"login\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        legacyLoginFromContext,\n        {\n            onSuccess: async (redirectPathFromAuth) => {\n                await invalidateAuthStore();\n\n                if (to) {\n                    replace(to as string);\n                }\n\n                if (redirectPathFromAuth !== false && !to) {\n                    if (typeof redirectPathFromAuth === \"string\") {\n                        if (routerType === \"legacy\") {\n                            replace(redirectPathFromAuth);\n                        } else {\n                            go({ to: redirectPathFromAuth, type: \"replace\" });\n                        }\n                    } else {\n                        if (routerType === \"legacy\") {\n                            replace(\"/\");\n                        } else {\n                            go({ to: \"/\", type: \"replace\" });\n                        }\n                    }\n                }\n\n                close?.(\"login-error\");\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible\n                    ? mutationOptions?.meta\n                    : {}),\n                ...getXRay(\"useLogin\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        message: error?.name || \"Login Error\",\n        description: error?.message || \"Invalid credentials\",\n        key: \"login-error\",\n        type: \"error\",\n    };\n};\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useNavigation, useRouterType, useGo, useNotification } from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\nimport {\n    AuthActionResponse,\n    RefineError,\n    OpenNotificationParams,\n    TLoginData,\n    TRegisterData,\n} from \"../../../interfaces\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseRegisterLegacyProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TRegisterData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseRegisterProps<TVariables> = {\n    v3LegacyAuthProviderCompatible?: false;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseRegisterCombinedProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TRegisterData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseRegisterLegacyReturnType<TVariables> = UseMutationResult<\n    TRegisterData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseRegisterReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseRegisterCombinedReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse | TLoginData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport function useRegister<TVariables = {}>(\n    props: UseRegisterLegacyProps<TVariables>,\n): UseRegisterLegacyReturnType<TVariables>;\n\nexport function useRegister<TVariables = {}>(\n    props?: UseRegisterProps<TVariables>,\n): UseRegisterReturnType<TVariables>;\n\nexport function useRegister<TVariables = {}>(\n    props?: UseRegisterCombinedProps<TVariables>,\n): UseRegisterCombinedReturnType<TVariables>;\n\n/**\n * `useRegister` calls `register` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useRegister} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useRegister<TVariables = {}>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}: UseRegisterProps<TVariables> | UseRegisterLegacyProps<TVariables> = {}):\n    | UseRegisterReturnType<TVariables>\n    | UseRegisterLegacyReturnType<TVariables> {\n    const invalidateAuthStore = useInvalidateAuthStore();\n    const routerType = useRouterType();\n    const go = useGo();\n    const { replace } = useNavigation();\n    const { register: legacyRegisterFromContext } = useLegacyAuthContext();\n    const { register: registerFromContext } = useAuthBindingsContext();\n    const { close, open } = useNotification();\n\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(\n        keys().auth().action(\"register\").get(preferLegacyKeys),\n        registerFromContext,\n        {\n            onSuccess: async ({ success, redirectTo, error }) => {\n                if (success) {\n                    close?.(\"register-error\");\n                }\n\n                if (error || !success) {\n                    open?.(buildNotification(error));\n                }\n\n                await invalidateAuthStore();\n\n                if (redirectTo) {\n                    if (routerType === \"legacy\") {\n                        replace(redirectTo);\n                    } else {\n                        go({ to: redirectTo, type: \"replace\" });\n                    }\n                } else {\n                    if (routerType === \"legacy\") {\n                        replace(\"/\");\n                    }\n                }\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible === true\n                    ? {}\n                    : mutationOptions?.meta),\n                ...getXRay(\"useRegister\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TRegisterData,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(\n        [\n            ...keys().auth().action(\"register\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        legacyRegisterFromContext,\n        {\n            onSuccess: async (redirectPathFromAuth) => {\n                await invalidateAuthStore();\n\n                if (redirectPathFromAuth !== false) {\n                    if (redirectPathFromAuth) {\n                        if (routerType === \"legacy\") {\n                            replace(redirectPathFromAuth);\n                        } else {\n                            go({ to: redirectPathFromAuth, type: \"replace\" });\n                        }\n                    } else {\n                        if (routerType === \"legacy\") {\n                            replace(\"/\");\n                        } else {\n                            go({ to: \"/\", type: \"replace\" });\n                        }\n                    }\n                    close?.(\"register-error\");\n                }\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible\n                    ? mutationOptions?.meta\n                    : {}),\n                ...getXRay(\"useRegister\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        message: error?.name || \"Register Error\",\n        description: error?.message || \"Error while registering\",\n        key: \"register-error\",\n        type: \"error\",\n    };\n};\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useGo, useNavigation, useNotification, useRouterType } from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\nimport {\n    AuthActionResponse,\n    RefineError,\n    OpenNotificationParams,\n    TForgotPasswordData,\n} from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseForgotPasswordLegacyProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TForgotPasswordData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseForgotPasswordProps<TVariables> = {\n    v3LegacyAuthProviderCompatible?: false;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseForgotPasswordCombinedProps<TVariables> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TForgotPasswordData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseForgotPasswordLegacyReturnType<TVariables> = UseMutationResult<\n    TForgotPasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseForgotPasswordReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseForgotPasswordCombinedReturnType<TVariables> = UseMutationResult<\n    AuthActionResponse | TForgotPasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport function useForgotPassword<TVariables = {}>(\n    props: UseForgotPasswordLegacyProps<TVariables>,\n): UseForgotPasswordLegacyReturnType<TVariables>;\n\nexport function useForgotPassword<TVariables = {}>(\n    props?: UseForgotPasswordProps<TVariables>,\n): UseForgotPasswordReturnType<TVariables>;\n\nexport function useForgotPassword<TVariables = {}>(\n    props?: UseForgotPasswordCombinedProps<TVariables>,\n): UseForgotPasswordCombinedReturnType<TVariables>;\n\n/**\n * `useForgotPassword` calls `forgotPassword` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useForgotPassword} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useForgotPassword<TVariables = {}>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}:\n    | UseForgotPasswordProps<TVariables>\n    | UseForgotPasswordLegacyProps<TVariables> = {}):\n    | UseForgotPasswordReturnType<TVariables>\n    | UseForgotPasswordLegacyReturnType<TVariables> {\n    const routerType = useRouterType();\n    const go = useGo();\n    const { replace } = useNavigation();\n    const {\n        forgotPassword: v3LegacyAuthProviderCompatibleForgotPasswordFromContext,\n    } = useLegacyAuthContext();\n    const { forgotPassword: forgotPasswordFromContext } =\n        useAuthBindingsContext();\n    const { close, open } = useNotification();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(\n        keys().auth().action(\"forgotPassword\").get(preferLegacyKeys),\n        forgotPasswordFromContext,\n        {\n            onSuccess: ({ success, redirectTo, error }) => {\n                if (success) {\n                    close?.(\"forgot-password-error\");\n                }\n\n                if (error || !success) {\n                    open?.(buildNotification(error));\n                }\n\n                if (redirectTo) {\n                    if (routerType === \"legacy\") {\n                        replace(redirectTo);\n                    } else {\n                        go({ to: redirectTo, type: \"replace\" });\n                    }\n                }\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible === true\n                    ? {}\n                    : mutationOptions?.meta),\n                ...getXRay(\"useForgotPassword\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TForgotPasswordData,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(\n        [\n            ...keys().auth().action(\"forgotPassword\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        v3LegacyAuthProviderCompatibleForgotPasswordFromContext,\n        {\n            onSuccess: (redirectPathFromAuth) => {\n                if (redirectPathFromAuth !== false) {\n                    if (redirectPathFromAuth) {\n                        if (routerType === \"legacy\") {\n                            replace(redirectPathFromAuth);\n                        } else {\n                            go({ to: redirectPathFromAuth, type: \"replace\" });\n                        }\n                    }\n                }\n                close?.(\"forgot-password-error\");\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible\n                    ? mutationOptions?.meta\n                    : {}),\n                ...getXRay(\"useForgotPassword\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        message: error?.name || \"Forgot Password Error\",\n        description: error?.message || \"Error while resetting password\",\n        key: \"forgot-password-error\",\n        type: \"error\",\n    };\n};\n","import React from \"react\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport qs from \"qs\";\n\nimport {\n    useNavigation,\n    useRouterType,\n    useGo,\n    useParsed,\n    useNotification,\n    useRouterContext,\n} from \"@hooks\";\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport {\n    AuthActionResponse,\n    RefineError,\n    OpenNotificationParams,\n    TUpdatePasswordData,\n    UpdatePasswordFormTypes,\n} from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseUpdatePasswordLegacyProps<\n    TVariables extends UpdatePasswordFormTypes,\n> = {\n    v3LegacyAuthProviderCompatible: true;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            TUpdatePasswordData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n};\n\nexport type UseUpdatePasswordProps<TVariables extends UpdatePasswordFormTypes> =\n    {\n        v3LegacyAuthProviderCompatible?: false;\n        mutationOptions?: Omit<\n            UseMutationOptions<\n                AuthActionResponse,\n                Error | RefineError,\n                TVariables,\n                unknown\n            >,\n            \"mutationFn\"\n        >;\n    };\n\nexport type UseUpdatePasswordCombinedProps<\n    TVariables extends UpdatePasswordFormTypes,\n> = {\n    v3LegacyAuthProviderCompatible: boolean;\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            AuthActionResponse | TUpdatePasswordData,\n            Error | RefineError,\n            TVariables,\n            unknown\n        >,\n        \"mutationFn\"\n    >;\n};\n\nexport type UseUpdatePasswordLegacyReturnType<\n    TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n    TUpdatePasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseUpdatePasswordReturnType<\n    TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport type UseUpdatePasswordCombinedReturnType<\n    TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n    AuthActionResponse | TUpdatePasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n    props: UseUpdatePasswordLegacyProps<TVariables>,\n): UseUpdatePasswordLegacyReturnType<TVariables>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n    props?: UseUpdatePasswordProps<TVariables>,\n): UseUpdatePasswordReturnType<TVariables>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n    props?: UseUpdatePasswordCombinedProps<TVariables>,\n): UseUpdatePasswordCombinedReturnType<TVariables>;\n\n/**\n * `useUpdatePassword` calls `updatePassword` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useUpdatePassword} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useUpdatePassword<\n    TVariables extends UpdatePasswordFormTypes = {},\n>({\n    v3LegacyAuthProviderCompatible,\n    mutationOptions,\n}:\n    | UseUpdatePasswordProps<TVariables>\n    | UseUpdatePasswordLegacyProps<TVariables> = {}):\n    | UseUpdatePasswordReturnType<TVariables>\n    | UseUpdatePasswordLegacyReturnType<TVariables> {\n    const routerType = useRouterType();\n\n    const go = useGo();\n    const { replace } = useNavigation();\n    const { updatePassword: legacyUpdatePasswordFromContext } =\n        useLegacyAuthContext();\n    const { updatePassword: updatePasswordFromContext } =\n        useAuthBindingsContext();\n    const { close, open } = useNotification();\n\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const parsed = useParsed();\n    const { useLocation } = useRouterContext();\n    const { search } = useLocation();\n\n    const params = React.useMemo(() => {\n        if (routerType === \"legacy\") {\n            const queryStrings = qs.parse(search, {\n                ignoreQueryPrefix: true,\n            });\n            return queryStrings ?? {};\n        } else {\n            return parsed.params ?? {};\n        }\n    }, [search, parsed, routerType]);\n\n    const mutation = useMutation<\n        AuthActionResponse,\n        Error,\n        TVariables,\n        unknown\n    >(\n        keys().auth().action(\"updatePassword\").get(preferLegacyKeys),\n        async (variables) => {\n            return updatePasswordFromContext?.({\n                ...params,\n                ...variables,\n            }) as Promise<AuthActionResponse>;\n        },\n        {\n            onSuccess: ({ success, redirectTo, error }) => {\n                if (success) {\n                    close?.(\"update-password-error\");\n                }\n\n                if (error || !success) {\n                    open?.(buildNotification(error));\n                }\n\n                if (redirectTo) {\n                    if (routerType === \"legacy\") {\n                        replace(redirectTo);\n                    } else {\n                        go({ to: redirectTo, type: \"replace\" });\n                    }\n                }\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible === true\n                    ? {}\n                    : mutationOptions?.meta),\n                ...getXRay(\"useUpdatePassword\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation<\n        TUpdatePasswordData,\n        Error | RefineError,\n        TVariables,\n        unknown\n    >(\n        [\n            ...keys().auth().action(\"updatePassword\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        async (variables) => {\n            return legacyUpdatePasswordFromContext?.({\n                ...params,\n                ...variables,\n            });\n        },\n        {\n            onSuccess: (redirectPathFromAuth) => {\n                if (redirectPathFromAuth !== false) {\n                    if (redirectPathFromAuth) {\n                        if (routerType === \"legacy\") {\n                            replace(redirectPathFromAuth);\n                        } else {\n                            go({ to: redirectPathFromAuth, type: \"replace\" });\n                        }\n                    }\n                }\n                close?.(\"update-password-error\");\n            },\n            onError: (error: any) => {\n                open?.(buildNotification(error));\n            },\n            ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n            meta: {\n                ...(v3LegacyAuthProviderCompatible\n                    ? mutationOptions?.meta\n                    : {}),\n                ...getXRay(\"useUpdatePassword\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\nconst buildNotification = (\n    error?: Error | RefineError,\n): OpenNotificationParams => {\n    return {\n        message: error?.name || \"Update Password Error\",\n        description: error?.message || \"Error while updating password\",\n        key: \"update-password-error\",\n        type: \"error\",\n    };\n};\n","import { useQuery, UseQueryResult } from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { CheckResponse } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseIsAuthenticatedLegacyProps = {\n    v3LegacyAuthProviderCompatible: true;\n    params?: any;\n};\n\nexport type UseIsAuthenticatedProps = {\n    v3LegacyAuthProviderCompatible?: false;\n    params?: any;\n};\n\nexport type UseIsAuthenticatedCombinedProps = {\n    v3LegacyAuthProviderCompatible: boolean;\n    params?: any;\n};\n\nexport type UseIsAuthenticatedLegacyReturnType = UseQueryResult<any, any>;\n\nexport type UseIsAuthenticatedReturnType = UseQueryResult<CheckResponse, any>;\n\nexport type UseIsAuthenticatedCombinedReturnType = UseQueryResult<\n    CheckResponse | any,\n    any\n>;\n\nexport function useIsAuthenticated(\n    props: UseIsAuthenticatedLegacyProps,\n): UseIsAuthenticatedLegacyReturnType;\n\nexport function useIsAuthenticated(\n    props?: UseIsAuthenticatedProps,\n): UseIsAuthenticatedReturnType;\n\nexport function useIsAuthenticated(\n    props?: UseIsAuthenticatedCombinedProps,\n): UseIsAuthenticatedCombinedReturnType;\n\n/**\n *  `useIsAuthenticated` calls the `checkAuth` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useAuthenticated} for more details.\n */\nexport function useIsAuthenticated({\n    v3LegacyAuthProviderCompatible = false,\n    params,\n}: UseIsAuthenticatedProps | UseIsAuthenticatedLegacyProps = {}):\n    | UseIsAuthenticatedReturnType\n    | UseIsAuthenticatedLegacyReturnType {\n    const { checkAuth } = useLegacyAuthContext();\n    const { check } = useAuthBindingsContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const queryResponse = useQuery(\n        keys().auth().action(\"check\").params(params).get(preferLegacyKeys),\n        async () => (await check?.(params)) ?? {},\n        {\n            retry: false,\n            enabled: !v3LegacyAuthProviderCompatible,\n            meta: {\n                ...getXRay(\"useIsAuthenticated\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const legacyQueryResponse = useQuery(\n        [\n            ...keys()\n                .auth()\n                .action(\"check\")\n                .params(params)\n                .get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        async () => (await checkAuth?.(params)) ?? {},\n        {\n            retry: false,\n            enabled: v3LegacyAuthProviderCompatible,\n            meta: {\n                ...getXRay(\"useIsAuthenticated\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n\n/**\n * @deprecated `useAuthenticated` is deprecated with refine@4, use `useIsAuthenticated` instead, however, we still support `useAuthenticated` for backward compatibility.\n */\nexport const useAuthenticated = useIsAuthenticated;\n","import { useMutation, UseMutationResult } from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { OnErrorResponse } from \"../../../interfaces\";\nimport { useGo, useLogout, useNavigation, useRouterType } from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseOnErrorLegacyProps = {\n    v3LegacyAuthProviderCompatible: true;\n};\n\nexport type UseOnErrorProps = {\n    v3LegacyAuthProviderCompatible?: false;\n};\n\nexport type UseOnErrorCombinedProps = {\n    v3LegacyAuthProviderCompatible: boolean;\n};\n\nexport type UseOnErrorLegacyReturnType = UseMutationResult<\n    void,\n    string | undefined,\n    any,\n    unknown\n>;\n\nexport type UseOnErrorReturnType = UseMutationResult<\n    OnErrorResponse,\n    unknown,\n    unknown,\n    unknown\n>;\nexport type UseOnErrorCombinedReturnType = UseMutationResult<\n    OnErrorResponse | void,\n    unknown,\n    unknown,\n    unknown\n>;\n\nexport function useOnError(\n    props: UseOnErrorLegacyProps,\n): UseOnErrorLegacyReturnType;\n\nexport function useOnError(props?: UseOnErrorProps): UseOnErrorReturnType;\n\nexport function useOnError(\n    props?: UseOnErrorCombinedProps,\n): UseOnErrorCombinedReturnType;\n\n/**\n * `useOnError` calls the `checkError` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useCheckError} for more details.\n *\n */\nexport function useOnError({\n    v3LegacyAuthProviderCompatible = false,\n}: UseOnErrorProps | UseOnErrorLegacyProps = {}):\n    | UseOnErrorReturnType\n    | UseOnErrorLegacyReturnType {\n    const routerType = useRouterType();\n    const go = useGo();\n    const { replace } = useNavigation();\n\n    const { checkError: legacyCheckErrorFromContext } = useLegacyAuthContext();\n    const { onError: onErrorFromContext } = useAuthBindingsContext();\n\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const { mutate: legacyLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(v3LegacyAuthProviderCompatible),\n    });\n    const { mutate: logout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(v3LegacyAuthProviderCompatible),\n    });\n\n    const mutation = useMutation(\n        keys().auth().action(\"onError\").get(preferLegacyKeys),\n        onErrorFromContext,\n        {\n            onSuccess: ({ logout: shouldLogout, redirectTo }) => {\n                if (shouldLogout) {\n                    logout({ redirectPath: redirectTo });\n                    return;\n                }\n\n                if (redirectTo) {\n                    if (routerType === \"legacy\") {\n                        replace(redirectTo);\n                    } else {\n                        go({ to: redirectTo, type: \"replace\" });\n                    }\n                    return;\n                }\n            },\n            meta: {\n                ...getXRay(\"useOnError\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const v3LegacyAuthProviderCompatibleMutation = useMutation(\n        [\n            ...keys().auth().action(\"onError\").get(preferLegacyKeys),\n            \"v3LegacyAuthProviderCompatible\",\n        ],\n        legacyCheckErrorFromContext,\n        {\n            onError: (redirectPath?: string) => {\n                legacyLogout({ redirectPath });\n            },\n            meta: {\n                ...getXRay(\"useOnError\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return v3LegacyAuthProviderCompatible\n        ? v3LegacyAuthProviderCompatibleMutation\n        : mutation;\n}\n\n/**\n * @deprecated `useCheckError` is deprecated with refine@4, use `useOnError` instead, however, we still support `useCheckError` for backward compatibility.\n */\nexport const useCheckError = useOnError;\n","import { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\n/**\n * A hook that the UI uses\n * @internal\n */\nexport const useIsExistAuthentication = (): boolean => {\n    const { isProvided: legacyIsProvided } = useLegacyAuthContext();\n    const { isProvided } = useAuthBindingsContext();\n\n    return Boolean(isProvided || legacyIsProvided);\n};\n","import {\n    QueryObserverResult,\n    useQuery,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    GetListResponse,\n    CrudFilters,\n    Pagination,\n    BaseRecord,\n    HttpError,\n    CrudSorting,\n    MetaQuery,\n    SuccessErrorNotification,\n    LiveModeProps,\n    Prettify,\n} from \"../../interfaces\";\nimport {\n    useResource,\n    useHandleNotification,\n    useResourceSubscription,\n    useTranslate,\n    useDataProvider,\n    useOnError,\n    useMeta,\n} from \"@hooks\";\nimport {\n    queryKeys,\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n    handlePaginationParams,\n} from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport interface UseListConfig {\n    pagination?: Pagination;\n    hasPagination?: boolean;\n    sort?: CrudSorting;\n    filters?: CrudFilters;\n}\n\nexport type BaseListProps = {\n    /**\n     * Configuration for pagination, sorting and filtering\n     * @type [`UseListConfig`](/docs/api-reference/core/hooks/data/useList/#config-parameters)\n     * @deprecated `config` property is deprecated. Use `pagination`, `hasPagination`, `sorters` and `filters` instead.\n     */\n    config?: UseListConfig;\n    /**\n     * Pagination properties\n     */\n    pagination?: Pagination;\n    /**\n     * Whether to use server-side pagination or not\n     * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * Sorter parameters\n     */\n    sorters?: CrudSorting;\n    /**\n     * Filter parameters\n     */\n    filters?: CrudFilters;\n    /**\n     * Meta data query for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * Meta data query for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use\n     */\n    dataProviderName?: string;\n};\n\nexport type UseListProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource?: string;\n\n    /**\n     * Tanstack Query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >;\n} & BaseListProps &\n    SuccessErrorNotification<\n        GetListResponse<TData>,\n        TError,\n        Prettify<BaseListProps>\n    > &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useList` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving items from a `resource` with pagination, sort, and filter configurations.\n *\n * It uses the `getList` method as the query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useList = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    config,\n    filters,\n    hasPagination,\n    pagination,\n    sorters,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    dataProviderName,\n    overtimeOptions,\n}: UseListProps<TQueryFnData, TError, TData>): QueryObserverResult<\n    GetListResponse<TData>,\n    TError\n> &\n    UseLoadingOvertimeReturnType => {\n    const { resources, resource, identifier } = useResource(resourceFromProp);\n\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const pickedDataProvider = pickDataProvider(\n        identifier,\n        dataProviderName,\n        resources,\n    );\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n    const prefferedFilters = pickNotDeprecated(filters, config?.filters);\n    const prefferedSorters = pickNotDeprecated(sorters, config?.sort);\n    const prefferedHasPagination = pickNotDeprecated(\n        hasPagination,\n        config?.hasPagination,\n    );\n    const prefferedPagination = handlePaginationParams({\n        pagination,\n        configPagination: config?.pagination,\n        hasPagination: prefferedHasPagination,\n    });\n    const isServerPagination = prefferedPagination.mode === \"server\";\n\n    const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n    const notificationValues = {\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        filters: prefferedFilters,\n        hasPagination: isServerPagination,\n        pagination: prefferedPagination,\n        sorters: prefferedSorters,\n        config: {\n            ...config,\n            sort: prefferedSorters,\n        },\n    };\n\n    const isEnabled =\n        queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n    const { getList } = dataProvider(pickedDataProvider);\n\n    useResourceSubscription({\n        resource: identifier,\n        types: [\"*\"],\n        params: {\n            meta: combinedMeta,\n            metaData: combinedMeta,\n            pagination: prefferedPagination,\n            hasPagination: isServerPagination,\n            sort: prefferedSorters,\n            sorters: prefferedSorters,\n            filters: prefferedFilters,\n            subscriptionType: \"useList\",\n            ...liveParams,\n        },\n        channel: `resources/${resource?.name}`,\n        enabled: isEnabled,\n        liveMode,\n        onLiveEvent,\n    });\n\n    const queryResponse = useQuery<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >(\n        keys()\n            .data(pickedDataProvider)\n            .resource(identifier ?? \"\")\n            .action(\"list\")\n            .params({\n                ...(preferredMeta || {}),\n                filters: prefferedFilters,\n                hasPagination: isServerPagination,\n                ...(isServerPagination && {\n                    pagination: prefferedPagination,\n                }),\n                ...(sorters && {\n                    sorters,\n                }),\n                ...(config?.sort && {\n                    sort: config?.sort,\n                }),\n            })\n            .get(preferLegacyKeys),\n        ({ queryKey, pageParam, signal }) => {\n            return getList<TQueryFnData>({\n                resource: resource?.name ?? \"\",\n                pagination: prefferedPagination,\n                hasPagination: isServerPagination,\n                filters: prefferedFilters,\n                sort: prefferedSorters,\n                sorters: prefferedSorters,\n                meta: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n                metaData: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n            });\n        },\n        {\n            ...queryOptions,\n            enabled:\n                typeof queryOptions?.enabled !== \"undefined\"\n                    ? queryOptions?.enabled\n                    : !!resource?.name,\n            select: (rawData) => {\n                let data = rawData;\n\n                const { current, mode, pageSize } = prefferedPagination;\n\n                if (mode === \"client\") {\n                    data = {\n                        ...data,\n                        data: data.data.slice(\n                            (current - 1) * pageSize,\n                            current * pageSize,\n                        ),\n                        total: data.total,\n                    };\n                }\n\n                if (queryOptions?.select) {\n                    return queryOptions?.select?.(data);\n                }\n\n                return data as unknown as GetListResponse<TData>;\n            },\n            onSuccess: (data) => {\n                queryOptions?.onSuccess?.(data);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(\n                              data,\n                              notificationValues,\n                              identifier,\n                          )\n                        : successNotification;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (err: TError) => {\n                checkError(err);\n                queryOptions?.onError?.(err);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, notificationValues, identifier)\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${identifier}-useList-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useList\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResponse.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import { useEffect, useState } from \"react\";\nimport { useRefineContext } from \"..\";\n\nexport type UseLoadingOvertimeRefineContext = Omit<\n    UseLoadingOvertimeCoreProps,\n    \"isLoading\" | \"interval\"\n> &\n    Required<Pick<UseLoadingOvertimeCoreProps, \"interval\">>;\n\nexport type UseLoadingOvertimeOptionsProps = {\n    overtimeOptions?: UseLoadingOvertimeCoreOptions;\n};\n\nexport type UseLoadingOvertimeReturnType = {\n    overtime: {\n        elapsedTime?: number;\n    };\n};\n\ntype UseLoadingOvertimeCoreOptions = Omit<\n    UseLoadingOvertimeCoreProps,\n    \"isLoading\"\n>;\n\ntype UseLoadingOvertimeCoreReturnType = {\n    elapsedTime?: number;\n};\n\nexport type UseLoadingOvertimeCoreProps = {\n    /**\n     * The loading state. If true, the elapsed time will be calculated.\n     */\n    isLoading: boolean;\n\n    /**\n     * The interval in milliseconds. If the loading time exceeds this time, the `onInterval` callback will be called.\n     * If not specified, the `interval` value from the `overtime` option of the `RefineProvider` will be used.\n     *\n     * @default: 1000 (1 second)\n     */\n    interval?: number;\n\n    /**\n     * The callback function that will be called when the loading time exceeds the specified time.\n     * If not specified, the `onInterval` value from the `overtime` option of the `RefineProvider` will be used.\n     *\n     * @param elapsedInterval The elapsed time in milliseconds.\n     */\n    onInterval?: (elapsedInterval: number) => void;\n};\n\n/**\n * if you need to do something when the loading time exceeds the specified time, refine provides the `useLoadingOvertime` hook.\n * It returns the elapsed time in milliseconds.\n *\n * @example\n * const { elapsedTime } = useLoadingOvertime({\n *    isLoading,\n *    interval: 1000,\n *    onInterval(elapsedInterval) {\n *        console.log(\"loading overtime\", elapsedInterval);\n *    },\n * });\n */\nexport const useLoadingOvertime = ({\n    isLoading,\n    interval: intervalProp,\n    onInterval: onIntervalProp,\n}: UseLoadingOvertimeCoreProps): UseLoadingOvertimeCoreReturnType => {\n    const [elapsedTime, setElapsedTime] = useState<number | undefined>(\n        undefined,\n    );\n    // get overtime options from refine context\n    const { options } = useRefineContext();\n    const { overtime } = options;\n\n    // pick props or refine context options\n    const interval = intervalProp ?? overtime.interval;\n    const onInterval = onIntervalProp ?? overtime?.onInterval;\n\n    useEffect(() => {\n        let intervalFn: ReturnType<typeof setInterval>;\n\n        if (isLoading) {\n            intervalFn = setInterval(() => {\n                // increase elapsed time\n                setElapsedTime((prevElapsedTime) => {\n                    if (prevElapsedTime === undefined) {\n                        return interval;\n                    }\n\n                    return prevElapsedTime + interval;\n                });\n            }, interval);\n        }\n\n        return () => {\n            clearInterval(intervalFn);\n            // reset elapsed time\n            setElapsedTime(undefined);\n        };\n    }, [isLoading, interval]);\n\n    useEffect(() => {\n        // call onInterval callback\n        if (onInterval && elapsedTime) {\n            onInterval(elapsedTime);\n        }\n    }, [elapsedTime]);\n\n    return {\n        elapsedTime,\n    };\n};\n","import {\n    QueryObserverResult,\n    useQuery,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    GetOneResponse,\n    HttpError,\n    BaseRecord,\n    BaseKey,\n    LiveModeProps,\n    SuccessErrorNotification,\n    MetaQuery,\n    Prettify,\n} from \"../../interfaces\";\nimport {\n    useResource,\n    useTranslate,\n    useResourceSubscription,\n    useHandleNotification,\n    useDataProvider,\n    useOnError,\n    useMeta,\n} from \"@hooks\";\nimport {\n    queryKeys,\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseOneProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource?: string;\n    /**\n     * id of the item in the resource\n     * @type [`BaseKey`](/docs/api-reference/core/interfaceReferences/#basekey)\n     */\n    id?: BaseKey;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetOneResponse<TQueryFnData>,\n        TError,\n        GetOneResponse<TData>\n    >;\n    /**\n     * Metadata query for `dataProvider`,\n     */\n    meta?: MetaQuery;\n    /**\n     * Meta data query for `dataProvider`,\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default `\"default\"``\n     */\n    dataProviderName?: string;\n} & SuccessErrorNotification<\n    GetOneResponse<TData>,\n    TError,\n    Prettify<{ id?: BaseKey } & MetaQuery>\n> &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useOne` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving single items from a `resource`.\n *\n * It uses `getOne` method as query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useOne} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useOne = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    id,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    dataProviderName,\n    overtimeOptions,\n}: UseOneProps<TQueryFnData, TError, TData>): QueryObserverResult<\n    GetOneResponse<TData>\n> &\n    UseLoadingOvertimeReturnType => {\n    const { resources, resource, identifier } = useResource(resourceFromProp);\n\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n    const pickedDataProvider = pickDataProvider(\n        identifier,\n        dataProviderName,\n        resources,\n    );\n\n    const { getOne } = dataProvider(pickedDataProvider);\n\n    const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n    useResourceSubscription({\n        resource: identifier,\n        types: [\"*\"],\n        channel: `resources/${resource?.name}`,\n        params: {\n            ids: id ? [id] : [],\n            id: id,\n            meta: combinedMeta,\n            metaData: combinedMeta,\n            subscriptionType: \"useOne\",\n            ...liveParams,\n        },\n        enabled:\n            typeof queryOptions?.enabled !== \"undefined\"\n                ? queryOptions?.enabled\n                : typeof resource?.name !== \"undefined\" &&\n                  typeof id !== \"undefined\",\n        liveMode,\n        onLiveEvent,\n    });\n\n    const queryResponse = useQuery<\n        GetOneResponse<TQueryFnData>,\n        TError,\n        GetOneResponse<TData>\n    >(\n        keys()\n            .data(pickedDataProvider)\n            .resource(identifier ?? \"\")\n            .action(\"one\")\n            .id(id ?? \"\")\n            .params({\n                ...(preferredMeta || {}),\n            })\n            .get(preferLegacyKeys),\n        ({ queryKey, pageParam, signal }) =>\n            getOne<TQueryFnData>({\n                resource: resource?.name ?? \"\",\n                id: id!,\n                meta: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n                metaData: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n            }),\n        {\n            ...queryOptions,\n            enabled:\n                typeof queryOptions?.enabled !== \"undefined\"\n                    ? queryOptions?.enabled\n                    : typeof id !== \"undefined\",\n            onSuccess: (data) => {\n                queryOptions?.onSuccess?.(data);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(\n                              data,\n                              {\n                                  id,\n                                  ...combinedMeta,\n                              },\n                              identifier,\n                          )\n                        : successNotification;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (err: TError) => {\n                checkError(err);\n                queryOptions?.onError?.(err);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(\n                              err,\n                              {\n                                  id,\n                                  ...combinedMeta,\n                              },\n                              identifier,\n                          )\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${id}-${identifier}-getOne-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useOne\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResponse.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import {\n    QueryObserverResult,\n    useQuery,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    BaseRecord,\n    BaseKey,\n    GetManyResponse,\n    HttpError,\n    LiveModeProps,\n    SuccessErrorNotification,\n    MetaQuery,\n} from \"../../interfaces\";\nimport {\n    useResource,\n    useTranslate,\n    useResourceSubscription,\n    useHandleNotification,\n    useDataProvider,\n    useOnError,\n    useMeta,\n} from \"@hooks\";\nimport {\n    queryKeys,\n    pickDataProvider,\n    handleMultiple,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseManyProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * ids of the item in the resource\n     * @type [`BaseKey[]`](/docs/api-reference/core/interfaceReferences/#basekey)\n     */\n    ids: BaseKey[];\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetManyResponse<TQueryFnData>,\n        TError,\n        GetManyResponse<TData>\n    >;\n    /**\n     * Metadata query for `dataProvider`,\n     */\n    meta?: MetaQuery;\n    /**\n     * Metadata query for `dataProvider`,\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n} & SuccessErrorNotification<GetManyResponse<TData>, TError, BaseKey[]> &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving multiple items from a `resource`.\n *\n * It uses `getMany` method as query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useMany} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useMany = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    ids,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    dataProviderName,\n    overtimeOptions,\n}: UseManyProps<TQueryFnData, TError, TData>): QueryObserverResult<\n    GetManyResponse<TData>\n> &\n    UseLoadingOvertimeReturnType => {\n    const { resources, resource, identifier } = useResource(resourceFromProp);\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n    const pickedDataProvider = pickDataProvider(\n        identifier,\n        dataProviderName,\n        resources,\n    );\n    const isEnabled =\n        queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n    const { getMany, getOne } = dataProvider(pickedDataProvider);\n\n    const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n    useResourceSubscription({\n        resource: identifier,\n        types: [\"*\"],\n        params: {\n            ids: ids,\n            meta: combinedMeta,\n            metaData: combinedMeta,\n            subscriptionType: \"useMany\",\n            ...liveParams,\n        },\n        channel: `resources/${resource.name}`,\n        enabled: isEnabled,\n        liveMode,\n        onLiveEvent,\n    });\n\n    const queryResponse = useQuery<\n        GetManyResponse<TQueryFnData>,\n        TError,\n        GetManyResponse<TData>\n    >(\n        keys()\n            .data(pickedDataProvider)\n            .resource(identifier)\n            .action(\"many\")\n            .ids(...ids)\n            .params({\n                ...(preferredMeta || {}),\n            })\n            .get(preferLegacyKeys),\n        ({ queryKey, pageParam, signal }) => {\n            if (getMany) {\n                return getMany({\n                    resource: resource?.name,\n                    ids,\n                    meta: {\n                        ...combinedMeta,\n                        queryContext: {\n                            queryKey,\n                            pageParam,\n                            signal,\n                        },\n                    },\n                    metaData: {\n                        ...combinedMeta,\n                        queryContext: {\n                            queryKey,\n                            pageParam,\n                            signal,\n                        },\n                    },\n                });\n            } else {\n                return handleMultiple(\n                    ids.map((id) =>\n                        getOne<TQueryFnData>({\n                            resource: resource?.name,\n                            id,\n                            meta: {\n                                ...combinedMeta,\n                                queryContext: {\n                                    queryKey,\n                                    pageParam,\n                                    signal,\n                                },\n                            },\n                            metaData: {\n                                ...combinedMeta,\n                                queryContext: {\n                                    queryKey,\n                                    pageParam,\n                                    signal,\n                                },\n                            },\n                        }),\n                    ),\n                );\n            }\n        },\n        {\n            ...queryOptions,\n            onSuccess: (data) => {\n                queryOptions?.onSuccess?.(data);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(data, ids, identifier)\n                        : successNotification;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (err: TError) => {\n                checkError(err);\n                queryOptions?.onError?.(err);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, ids, identifier)\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${ids[0]}-${identifier}-getMany-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useMany\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResponse.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n    useQueryClient,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n    BaseRecord,\n    BaseKey,\n    UpdateResponse,\n    MutationMode,\n    PrevContext as UpdateContext,\n    HttpError,\n    SuccessErrorNotification,\n    MetaQuery,\n    PreviousQuery,\n    GetListResponse,\n    IQueryKeys,\n    OptimisticUpdateMapType,\n    GetManyResponse,\n    GetOneResponse,\n} from \"../../interfaces\";\nimport {\n    useResource,\n    useMutationMode,\n    useCancelNotification,\n    useTranslate,\n    usePublish,\n    useHandleNotification,\n    useDataProvider,\n    useLog,\n    useInvalidate,\n    useOnError,\n    useMeta,\n    useRefineContext,\n} from \"@hooks\";\nimport {\n    queryKeysReplacement,\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UpdateParams<TData, TError, TVariables> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * id for mutation function\n     */\n    id: BaseKey;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n     */\n    undoableTimeout?: number;\n    /**\n     * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n     */\n    onCancel?: (cancelMutation: () => void) => void;\n    /**\n     * Values for mutation function\n     */\n    values: TVariables;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * Metadata query for dataProvider\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n    /**\n     *  You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * You can use it to customize the optimistic update logic.\n     * @default {\n     *   list: true,\n     *   many: true,\n     *   detail: true,\n     * }\n     */\n    optimisticUpdateMap?: OptimisticUpdateMapType<TData, TVariables>;\n} & SuccessErrorNotification<\n    UpdateResponse<TData>,\n    TError,\n    { id: BaseKey; values: TVariables }\n>;\n\nexport type UseUpdateReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    UpdateResponse<TData>,\n    TError,\n    UpdateParams<TData, TError, TVariables>,\n    UpdateContext<TData>\n> &\n    UseLoadingOvertimeReturnType;\n\nexport type UseUpdateProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            UpdateResponse<TData>,\n            TError,\n            UpdateParams<TData, TError, TVariables>,\n            UpdateContext<TData>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useUpdate` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for update mutations.\n *\n * It uses `update` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useUpdate} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useUpdate = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseUpdateProps<TData, TError, TVariables> = {}): UseUpdateReturnType<\n    TData,\n    TError,\n    TVariables\n> => {\n    const { resources, select } = useResource();\n    const queryClient = useQueryClient();\n    const dataProvider = useDataProvider();\n\n    const {\n        mutationMode: mutationModeContext,\n        undoableTimeout: undoableTimeoutContext,\n    } = useMutationMode();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const publish = usePublish();\n    const { log } = useLog();\n    const { notificationDispatch } = useCancelNotification();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        UpdateResponse<TData>,\n        TError,\n        UpdateParams<TData, TError, TVariables>,\n        UpdateContext<TData>\n    >(\n        ({\n            id,\n            values,\n            resource: resourceName,\n            mutationMode,\n            undoableTimeout,\n            onCancel,\n            meta,\n            metaData,\n            dataProviderName,\n        }) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            const undoableTimeoutPropOrContext =\n                undoableTimeout ?? undoableTimeoutContext;\n\n            if (!(mutationModePropOrContext === \"undoable\")) {\n                return dataProvider(\n                    pickDataProvider(identifier, dataProviderName, resources),\n                ).update<TData, TVariables>({\n                    resource: resource.name,\n                    id,\n                    variables: values,\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                });\n            }\n            const updatePromise = new Promise<UpdateResponse<TData>>(\n                (resolve, reject) => {\n                    const doMutation = () => {\n                        dataProvider(\n                            pickDataProvider(\n                                identifier,\n                                dataProviderName,\n                                resources,\n                            ),\n                        )\n                            .update<TData, TVariables>({\n                                resource: resource.name,\n                                id,\n                                variables: values,\n                                meta: combinedMeta,\n                                metaData: combinedMeta,\n                            })\n                            .then((result) => resolve(result))\n                            .catch((err) => reject(err));\n                    };\n\n                    const cancelMutation = () => {\n                        reject({ message: \"mutationCancelled\" });\n                    };\n\n                    if (onCancel) {\n                        onCancel(cancelMutation);\n                    }\n\n                    notificationDispatch({\n                        type: ActionTypes.ADD,\n                        payload: {\n                            id: id,\n                            resource: identifier,\n                            cancelMutation: cancelMutation,\n                            doMutation: doMutation,\n                            seconds: undoableTimeoutPropOrContext,\n                            isSilent: !!onCancel,\n                        },\n                    });\n                },\n            );\n            return updatePromise;\n        },\n        {\n            onMutate: async ({\n                resource: resourceName,\n                id,\n                mutationMode,\n                values,\n                dataProviderName,\n                meta,\n                metaData,\n                optimisticUpdateMap = { list: true, many: true, detail: true },\n            }) => {\n                const { identifier } = select(resourceName);\n\n                const preferredMeta = pickNotDeprecated(meta, metaData);\n\n                const queryKey = queryKeysReplacement(preferLegacyKeys)(\n                    identifier,\n                    pickDataProvider(identifier, dataProviderName, resources),\n                    preferredMeta,\n                );\n\n                const resourceKeys = keys()\n                    .data(\n                        pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                    )\n                    .resource(identifier);\n\n                const previousQueries: PreviousQuery<TData>[] =\n                    queryClient.getQueriesData(\n                        resourceKeys.get(preferLegacyKeys),\n                    );\n\n                const mutationModePropOrContext =\n                    mutationMode ?? mutationModeContext;\n\n                await queryClient.cancelQueries(\n                    resourceKeys.get(preferLegacyKeys),\n                    undefined,\n                    {\n                        silent: true,\n                    },\n                );\n\n                if (mutationModePropOrContext !== \"pessimistic\") {\n                    if (optimisticUpdateMap.list) {\n                        // Set the previous queries to the new ones:\n                        queryClient.setQueriesData(\n                            resourceKeys\n                                .action(\"list\")\n                                .params(preferredMeta ?? {})\n                                .get(preferLegacyKeys),\n                            (previous?: GetListResponse<TData> | null) => {\n                                if (\n                                    typeof optimisticUpdateMap.list ===\n                                    \"function\"\n                                ) {\n                                    return optimisticUpdateMap.list(\n                                        previous,\n                                        values,\n                                        id,\n                                    );\n                                }\n\n                                if (!previous) {\n                                    return null;\n                                }\n\n                                const data = previous.data.map(\n                                    (record: TData) => {\n                                        if (\n                                            record.id?.toString() ===\n                                            id?.toString()\n                                        ) {\n                                            return {\n                                                id,\n                                                ...record,\n                                                ...values,\n                                            } as unknown as TData;\n                                        }\n                                        return record;\n                                    },\n                                );\n\n                                return {\n                                    ...previous,\n                                    data,\n                                };\n                            },\n                        );\n                    }\n\n                    if (optimisticUpdateMap.many) {\n                        queryClient.setQueriesData(\n                            resourceKeys.action(\"many\").get(preferLegacyKeys),\n                            (previous?: GetManyResponse<TData> | null) => {\n                                if (\n                                    typeof optimisticUpdateMap.many ===\n                                    \"function\"\n                                ) {\n                                    return optimisticUpdateMap.many(\n                                        previous,\n                                        values,\n                                        id,\n                                    );\n                                }\n\n                                if (!previous) {\n                                    return null;\n                                }\n\n                                const data = previous.data.map(\n                                    (record: TData) => {\n                                        if (\n                                            record.id?.toString() ===\n                                            id?.toString()\n                                        ) {\n                                            record = {\n                                                id,\n                                                ...record,\n                                                ...values,\n                                            } as unknown as TData;\n                                        }\n                                        return record;\n                                    },\n                                );\n                                return {\n                                    ...previous,\n                                    data,\n                                };\n                            },\n                        );\n                    }\n\n                    if (optimisticUpdateMap.detail) {\n                        queryClient.setQueriesData(\n                            resourceKeys\n                                .action(\"one\")\n                                .id(id)\n                                .params(preferredMeta ?? {})\n                                .get(preferLegacyKeys),\n                            (previous?: GetOneResponse<TData> | null) => {\n                                if (\n                                    typeof optimisticUpdateMap.detail ===\n                                    \"function\"\n                                ) {\n                                    return optimisticUpdateMap.detail(\n                                        previous,\n                                        values,\n                                        id,\n                                    );\n                                }\n\n                                if (!previous) {\n                                    return null;\n                                }\n\n                                return {\n                                    ...previous,\n                                    data: {\n                                        ...previous.data,\n                                        ...values,\n                                    },\n                                };\n                            },\n                        );\n                    }\n                }\n\n                return {\n                    previousQueries,\n                    queryKey,\n                };\n            },\n            onSettled: (\n                _data,\n                _error,\n                {\n                    id,\n                    resource: resourceName,\n                    dataProviderName,\n                    invalidates = [\"list\", \"many\", \"detail\"],\n                },\n            ) => {\n                const { identifier } = select(resourceName);\n\n                invalidateStore({\n                    resource: identifier,\n                    dataProviderName: pickDataProvider(\n                        identifier,\n                        dataProviderName,\n                        resources,\n                    ),\n                    invalidates,\n                    id,\n                });\n\n                notificationDispatch({\n                    type: ActionTypes.REMOVE,\n                    payload: { id, resource: identifier },\n                });\n            },\n            onSuccess: (\n                data,\n                {\n                    id,\n                    resource: resourceName,\n                    successNotification,\n                    dataProviderName,\n                    values,\n                    meta,\n                    metaData,\n                },\n                context,\n            ) => {\n                const { resource, identifier } = select(resourceName);\n\n                const resourceSingular = textTransformers.singular(identifier);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(data, { id, values }, identifier)\n                        : successNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${id}-${identifier}-notification`,\n                    description: translate(\n                        \"notifications.success\",\n                        \"Successful\",\n                    ),\n                    message: translate(\n                        \"notifications.editSuccess\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                resourceSingular,\n                            ),\n                        },\n                        `Successfully updated ${resourceSingular}`,\n                    ),\n                    type: \"success\",\n                });\n\n                publish?.({\n                    channel: `resources/${resource.name}`,\n                    type: \"updated\",\n                    payload: {\n                        ids: data.data?.id ? [data.data.id] : undefined,\n                    },\n                    date: new Date(),\n                });\n\n                let previousData: any;\n                if (context) {\n                    const queryData = queryClient.getQueryData<\n                        UpdateResponse<TData>\n                    >(context.queryKey.detail(id));\n\n                    previousData = Object.keys(values || {}).reduce<any>(\n                        (acc, item) => {\n                            acc[item] = queryData?.data?.[item];\n                            return acc;\n                        },\n                        {},\n                    );\n                }\n\n                const { fields, operation, variables, ...rest } =\n                    pickNotDeprecated(meta, metaData) || {};\n\n                log?.mutate({\n                    action: \"update\",\n                    resource: resource.name,\n                    data: values,\n                    previousData,\n                    meta: {\n                        id,\n                        dataProviderName: pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                        ...rest,\n                    },\n                });\n            },\n            onError: (\n                err: TError,\n                { id, resource: resourceName, errorNotification, values },\n                context,\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // set back the queries to the context:\n                if (context) {\n                    for (const query of context.previousQueries) {\n                        queryClient.setQueryData(query[0], query[1]);\n                    }\n                }\n\n                if (err.message !== \"mutationCancelled\") {\n                    checkError?.(err);\n\n                    const resourceSingular =\n                        textTransformers.singular(identifier);\n\n                    const notificationConfig =\n                        typeof errorNotification === \"function\"\n                            ? errorNotification(err, { id, values }, identifier)\n                            : errorNotification;\n\n                    handleNotification(notificationConfig, {\n                        key: `${id}-${identifier}-notification`,\n                        message: translate(\n                            \"notifications.editError\",\n                            {\n                                resource: translate(\n                                    `${identifier}.${identifier}`,\n                                    resourceSingular,\n                                ),\n                                statusCode: err.statusCode,\n                            },\n                            `Error when updating ${resourceSingular} (status code: ${err.statusCode})`,\n                        ),\n                        description: err.message,\n                        type: \"error\",\n                    });\n                }\n            },\n            mutationKey: keys().data().mutation(\"update\").get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useUpdate\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import React, { ReactNode, useReducer } from \"react\";\nimport isEqual from \"lodash/isEqual\";\n\nimport { UndoableQueue } from \"@components\";\n\nimport { IUndoableQueue, IUndoableQueueContext } from \"../../interfaces\";\nimport { ActionTypes } from \"./actionTypes\";\n\nexport const UndoableQueueContext = React.createContext<IUndoableQueueContext>({\n    notifications: [],\n    notificationDispatch: () => false,\n});\n\nconst initialState: IUndoableQueue[] = [];\n\nexport const undoableQueueReducer = (state: IUndoableQueue[], action: any) => {\n    switch (action.type) {\n        case ActionTypes.ADD:\n            const newState = state.filter(\n                (notificationItem: IUndoableQueue) => {\n                    return !(\n                        isEqual(notificationItem.id, action.payload.id) &&\n                        notificationItem.resource == action.payload.resource\n                    );\n                },\n            );\n\n            return [\n                ...newState,\n                {\n                    ...action.payload,\n                    isRunning: true,\n                },\n            ];\n        case ActionTypes.REMOVE:\n            return state.filter(\n                (notificationItem: IUndoableQueue) =>\n                    !(\n                        isEqual(notificationItem.id, action.payload.id) &&\n                        notificationItem.resource == action.payload.resource\n                    ),\n            );\n        case ActionTypes.DECREASE_NOTIFICATION_SECOND:\n            return state.map((notificationItem: IUndoableQueue) => {\n                if (\n                    isEqual(notificationItem.id, action.payload.id) &&\n                    notificationItem.resource == action.payload.resource\n                ) {\n                    return {\n                        ...notificationItem,\n                        seconds: action.payload.seconds - 1000,\n                    };\n                }\n                return notificationItem;\n            });\n        default:\n            return state;\n    }\n};\n\nexport const UndoableQueueContextProvider: React.FC<{\n    children: ReactNode;\n}> = ({ children }) => {\n    const [notifications, notificationDispatch] = useReducer(\n        undoableQueueReducer,\n        initialState,\n    );\n\n    const notificationData = { notifications, notificationDispatch };\n\n    return (\n        <UndoableQueueContext.Provider value={notificationData}>\n            {children}\n            {typeof window !== \"undefined\" &&\n                notifications.map((notification) => (\n                    <UndoableQueue\n                        key={`${notification.id}-${notification.resource}-queue`}\n                        notification={notification}\n                    />\n                ))}\n        </UndoableQueueContext.Provider>\n    );\n};\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\n\nimport {\n    CreateResponse,\n    BaseRecord,\n    HttpError,\n    SuccessErrorNotification,\n    MetaQuery,\n    IQueryKeys,\n} from \"../../interfaces\";\nimport {\n    useResource,\n    useTranslate,\n    usePublish,\n    useHandleNotification,\n    useDataProvider,\n    useLog,\n    useInvalidate,\n    useOnError,\n    useMeta,\n    useRefineContext,\n} from \"@hooks\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ntype useCreateParams<TData, TError, TVariables> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * Values for mutation function\n     */\n    values: TVariables;\n    /**\n     * Meta data for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * Meta data for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n    /**\n     * You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n} & SuccessErrorNotification<CreateResponse<TData>, TError, TVariables>;\n\nexport type UseCreateReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    CreateResponse<TData>,\n    TError,\n    useCreateParams<TData, TError, TVariables>,\n    unknown\n>;\n\nexport type UseCreateProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            CreateResponse<TData>,\n            TError,\n            useCreateParams<TData, TError, TVariables>,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCreate` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for create mutations.\n *\n * It uses `create` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCreate} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\n\nexport const useCreate = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseCreateProps<TData, TError, TVariables> = {}): UseCreateReturnType<\n    TData,\n    TError,\n    TVariables\n> &\n    UseLoadingOvertimeReturnType => {\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const dataProvider = useDataProvider();\n    const invalidateStore = useInvalidate();\n    const { resources, select } = useResource();\n    const translate = useTranslate();\n    const publish = usePublish();\n    const { log } = useLog();\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        CreateResponse<TData>,\n        TError,\n        useCreateParams<TData, TError, TVariables>,\n        unknown\n    >(\n        ({\n            resource: resourceName,\n            values,\n            meta,\n            metaData,\n            dataProviderName,\n        }: useCreateParams<TData, TError, TVariables>) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            return dataProvider(\n                pickDataProvider(identifier, dataProviderName, resources),\n            ).create<TData, TVariables>({\n                resource: resource.name,\n                variables: values,\n                meta: combinedMeta,\n                metaData: combinedMeta,\n            });\n        },\n        {\n            onSuccess: (\n                data,\n                {\n                    resource: resourceName,\n                    successNotification: successNotificationFromProp,\n                    dataProviderName,\n                    invalidates = [\"list\", \"many\"],\n                    values,\n                    meta,\n                    metaData,\n                },\n            ) => {\n                const { resource, identifier } = select(resourceName);\n\n                const resourceSingular = textTransformers.singular(identifier);\n\n                const notificationConfig =\n                    typeof successNotificationFromProp === \"function\"\n                        ? successNotificationFromProp(data, values, identifier)\n                        : successNotificationFromProp;\n\n                handleNotification(notificationConfig, {\n                    key: `create-${identifier}-notification`,\n                    message: translate(\n                        \"notifications.createSuccess\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                resourceSingular,\n                            ),\n                        },\n                        `Successfully created ${resourceSingular}`,\n                    ),\n                    description: translate(\"notifications.success\", \"Success\"),\n                    type: \"success\",\n                });\n\n                invalidateStore({\n                    resource: identifier,\n                    dataProviderName: pickDataProvider(\n                        identifier,\n                        dataProviderName,\n                        resources,\n                    ),\n                    invalidates,\n                });\n\n                publish?.({\n                    channel: `resources/${resource.name}`,\n                    type: \"created\",\n                    payload: {\n                        ids: data?.data?.id ? [data.data.id] : undefined,\n                    },\n                    date: new Date(),\n                });\n\n                const combinedMeta = getMeta({\n                    resource,\n                    meta: pickNotDeprecated(meta, metaData),\n                });\n\n                const { fields, operation, variables, ...rest } =\n                    combinedMeta || {};\n\n                log?.mutate({\n                    action: \"create\",\n                    resource: resource.name,\n                    data: values,\n                    meta: {\n                        dataProviderName: pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                        id: data?.data?.id ?? undefined,\n                        ...rest,\n                    },\n                });\n            },\n            onError: (\n                err: TError,\n                {\n                    resource: resourceName,\n                    errorNotification: errorNotificationFromProp,\n                    values,\n                },\n            ) => {\n                checkError(err);\n\n                const { identifier } = select(resourceName);\n\n                const resourceSingular = textTransformers.singular(identifier);\n\n                const notificationConfig =\n                    typeof errorNotificationFromProp === \"function\"\n                        ? errorNotificationFromProp(err, values, identifier)\n                        : errorNotificationFromProp;\n\n                handleNotification(notificationConfig, {\n                    key: `create-${identifier}-notification`,\n                    description: err.message,\n                    message: translate(\n                        \"notifications.createError\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                resourceSingular,\n                            ),\n                            statusCode: err.statusCode,\n                        },\n                        `There was an error creating ${resourceSingular} (status code: ${err.statusCode})`,\n                    ),\n                    type: \"error\",\n                });\n            },\n            mutationKey: keys().data().mutation(\"create\").get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useCreate\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import {\n    useQueryClient,\n    useMutation,\n    UseMutationResult,\n    UseMutationOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    useResource,\n    useMutationMode,\n    useCancelNotification,\n    useTranslate,\n    usePublish,\n    useHandleNotification,\n    useDataProvider,\n    useLog,\n    useInvalidate,\n    useOnError,\n    useMeta,\n    useRefineContext,\n} from \"@hooks\";\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n    DeleteOneResponse,\n    MutationMode,\n    PrevContext as DeleteContext,\n    BaseRecord,\n    BaseKey,\n    HttpError,\n    GetListResponse,\n    SuccessErrorNotification,\n    PreviousQuery,\n    IQueryKeys,\n    MetaQuery,\n} from \"../../interfaces\";\nimport {\n    queryKeysReplacement,\n    pickDataProvider,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type DeleteParams<TData, TError, TVariables> = {\n    /**\n     * id for mutation function\n     */\n    id: BaseKey;\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n     */\n    undoableTimeout?: number;\n    /**\n     * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n     */\n    onCancel?: (cancelMutation: () => void) => void;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n    /**\n     *  You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * Values for mutation function\n     */\n    values?: TVariables;\n} & SuccessErrorNotification<DeleteOneResponse<TData>, TError, BaseKey>;\n\nexport type UseDeleteReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    DeleteOneResponse<TData>,\n    TError,\n    DeleteParams<TData, TError, TVariables>,\n    DeleteContext<TData>\n> &\n    UseLoadingOvertimeReturnType;\n\nexport type UseDeleteProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            DeleteOneResponse<TData>,\n            TError,\n            DeleteParams<TData, TError, TVariables>,\n            DeleteContext<TData>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useDelete` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for delete mutations.\n *\n * It uses `deleteOne` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useDelete} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n */\nexport const useDelete = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseDeleteProps<TData, TError, TVariables> = {}): UseDeleteReturnType<\n    TData,\n    TError,\n    TVariables\n> => {\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const dataProvider = useDataProvider();\n\n    const { resources, select } = useResource();\n    const queryClient = useQueryClient();\n\n    const {\n        mutationMode: mutationModeContext,\n        undoableTimeout: undoableTimeoutContext,\n    } = useMutationMode();\n\n    const { notificationDispatch } = useCancelNotification();\n    const translate = useTranslate();\n    const publish = usePublish();\n    const { log } = useLog();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        DeleteOneResponse<TData>,\n        TError,\n        DeleteParams<TData, TError, TVariables>,\n        DeleteContext<TData>\n    >(\n        ({\n            id,\n            mutationMode,\n            undoableTimeout,\n            resource: resourceName,\n            onCancel,\n            meta,\n            metaData,\n            dataProviderName,\n            values,\n        }) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            const undoableTimeoutPropOrContext =\n                undoableTimeout ?? undoableTimeoutContext;\n\n            if (!(mutationModePropOrContext === \"undoable\")) {\n                return dataProvider(\n                    pickDataProvider(identifier, dataProviderName, resources),\n                ).deleteOne<TData, TVariables>({\n                    resource: resource.name,\n                    id,\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                    variables: values,\n                });\n            }\n\n            const deletePromise = new Promise<DeleteOneResponse<TData>>(\n                (resolve, reject) => {\n                    const doMutation = () => {\n                        dataProvider(\n                            pickDataProvider(\n                                identifier,\n                                dataProviderName,\n                                resources,\n                            ),\n                        )\n                            .deleteOne<TData, TVariables>({\n                                resource: resource.name,\n                                id,\n                                meta: combinedMeta,\n                                metaData: combinedMeta,\n                                variables: values,\n                            })\n                            .then((result) => resolve(result))\n                            .catch((err) => reject(err));\n                    };\n\n                    const cancelMutation = () => {\n                        reject({ message: \"mutationCancelled\" });\n                    };\n\n                    if (onCancel) {\n                        onCancel(cancelMutation);\n                    }\n\n                    notificationDispatch({\n                        type: ActionTypes.ADD,\n                        payload: {\n                            id,\n                            resource: identifier,\n                            cancelMutation: cancelMutation,\n                            doMutation: doMutation,\n                            seconds: undoableTimeoutPropOrContext,\n                            isSilent: !!onCancel,\n                        },\n                    });\n                },\n            );\n            return deletePromise;\n        },\n        {\n            onMutate: async ({\n                id,\n                resource: resourceName,\n                mutationMode,\n                dataProviderName,\n                meta,\n                metaData,\n            }) => {\n                const { identifier } = select(resourceName);\n\n                const preferredMeta = pickNotDeprecated(meta, metaData);\n\n                const queryKey = queryKeysReplacement(preferLegacyKeys)(\n                    identifier,\n                    pickDataProvider(identifier, dataProviderName, resources),\n                    preferredMeta,\n                );\n\n                const resourceKeys = keys()\n                    .data(\n                        pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                    )\n                    .resource(identifier);\n\n                const mutationModePropOrContext =\n                    mutationMode ?? mutationModeContext;\n\n                await queryClient.cancelQueries(\n                    resourceKeys.get(preferLegacyKeys),\n                    undefined,\n                    {\n                        silent: true,\n                    },\n                );\n\n                const previousQueries: PreviousQuery<TData>[] =\n                    queryClient.getQueriesData(\n                        resourceKeys.get(preferLegacyKeys),\n                    );\n\n                if (mutationModePropOrContext !== \"pessimistic\") {\n                    // Set the previous queries to the new ones:\n                    queryClient.setQueriesData(\n                        resourceKeys\n                            .action(\"list\")\n                            .params(preferredMeta ?? {})\n                            .get(preferLegacyKeys),\n                        (previous?: GetListResponse<TData> | null) => {\n                            if (!previous) {\n                                return null;\n                            }\n                            const data = previous.data.filter(\n                                (record: TData) =>\n                                    record.id?.toString() !== id.toString(),\n                            );\n\n                            return {\n                                data,\n                                total: previous.total - 1,\n                            };\n                        },\n                    );\n\n                    queryClient.setQueriesData(\n                        resourceKeys.action(\"many\").get(preferLegacyKeys),\n                        (previous?: GetListResponse<TData> | null) => {\n                            if (!previous) {\n                                return null;\n                            }\n                            const data = previous.data.filter(\n                                (record: TData) => {\n                                    return (\n                                        record.id?.toString() !== id?.toString()\n                                    );\n                                },\n                            );\n\n                            return {\n                                ...previous,\n                                data,\n                            };\n                        },\n                    );\n                }\n\n                return {\n                    previousQueries,\n                    queryKey,\n                };\n            },\n            onSettled: (\n                _data,\n                _error,\n                {\n                    id,\n                    resource: resourceName,\n                    dataProviderName,\n                    invalidates = [\"list\", \"many\"],\n                },\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // invalidate the cache for the list and many queries:\n                invalidateStore({\n                    resource: identifier,\n                    dataProviderName: pickDataProvider(\n                        identifier,\n                        dataProviderName,\n                        resources,\n                    ),\n                    invalidates,\n                });\n\n                notificationDispatch({\n                    type: ActionTypes.REMOVE,\n                    payload: { id, resource: identifier },\n                });\n            },\n            onSuccess: (\n                _data,\n                {\n                    id,\n                    resource: resourceName,\n                    successNotification,\n                    dataProviderName,\n                    meta,\n                    metaData,\n                },\n                context,\n            ) => {\n                const { resource, identifier } = select(resourceName);\n\n                const resourceSingular = textTransformers.singular(identifier);\n\n                // Remove the queries from the cache:\n                queryClient.removeQueries(context?.queryKey.detail(id));\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(_data, id, identifier)\n                        : successNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${id}-${identifier}-notification`,\n                    description: translate(\"notifications.success\", \"Success\"),\n                    message: translate(\n                        \"notifications.deleteSuccess\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                resourceSingular,\n                            ),\n                        },\n                        `Successfully deleted a ${resourceSingular}`,\n                    ),\n                    type: \"success\",\n                });\n\n                publish?.({\n                    channel: `resources/${resource.name}`,\n                    type: \"deleted\",\n                    payload: {\n                        ids: [id],\n                    },\n                    date: new Date(),\n                });\n\n                const combinedMeta = getMeta({\n                    resource,\n                    meta: pickNotDeprecated(meta, metaData),\n                });\n\n                const { fields, operation, variables, ...rest } =\n                    combinedMeta || {};\n\n                log?.mutate({\n                    action: \"delete\",\n                    resource: resource.name,\n                    meta: {\n                        id,\n                        dataProviderName: pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                        ...rest,\n                    },\n                });\n\n                // Remove the queries from the cache:\n                queryClient.removeQueries(context?.queryKey.detail(id));\n            },\n            onError: (\n                err: TError,\n                { id, resource: resourceName, errorNotification },\n                context,\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // set back the queries to the context:\n                if (context) {\n                    for (const query of context.previousQueries) {\n                        queryClient.setQueryData(query[0], query[1]);\n                    }\n                }\n\n                if (err.message !== \"mutationCancelled\") {\n                    checkError(err);\n\n                    const resourceSingular =\n                        textTransformers.singular(identifier);\n\n                    const notificationConfig =\n                        typeof errorNotification === \"function\"\n                            ? errorNotification(err, id, identifier)\n                            : errorNotification;\n\n                    handleNotification(notificationConfig, {\n                        key: `${id}-${identifier}-notification`,\n                        message: translate(\n                            \"notifications.deleteError\",\n                            {\n                                resource: resourceSingular,\n                                statusCode: err.statusCode,\n                            },\n                            `Error (status code: ${err.statusCode})`,\n                        ),\n                        description: err.message,\n                        type: \"error\",\n                    });\n                }\n            },\n            mutationKey: keys().data().mutation(\"delete\").get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useDelete\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    BaseRecord,\n    CreateManyResponse,\n    HttpError,\n    SuccessErrorNotification,\n    MetaQuery,\n    IQueryKeys,\n} from \"../../interfaces\";\nimport {\n    useResource,\n    useTranslate,\n    usePublish,\n    useHandleNotification,\n    useDataProvider,\n    useInvalidate,\n    useLog,\n    useMeta,\n    useRefineContext,\n} from \"@hooks\";\nimport {\n    handleMultiple,\n    pickDataProvider,\n    pickNotDeprecated,\n} from \"@definitions\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ntype useCreateManyParams<TData, TError, TVariables> = {\n    resource: string;\n    values: TVariables[];\n    meta?: MetaQuery;\n    metaData?: MetaQuery;\n    dataProviderName?: string;\n    invalidates?: Array<keyof IQueryKeys>;\n} & SuccessErrorNotification<CreateManyResponse<TData>, TError, TVariables[]>;\n\nexport type UseCreateManyReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    CreateManyResponse<TData>,\n    TError,\n    useCreateManyParams<TData, TError, TVariables>,\n    unknown\n>;\n\nexport type UseCreateManyProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            CreateManyResponse<TData>,\n            TError,\n            useCreateManyParams<TData, TError, TVariables>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCreateMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple create mutations.\n *\n * It uses `createMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCreateMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useCreateMany = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseCreateManyProps<TData, TError, TVariables> = {}): UseCreateManyReturnType<\n    TData,\n    TError,\n    TVariables\n> &\n    UseLoadingOvertimeReturnType => {\n    const dataProvider = useDataProvider();\n    const { resources, select } = useResource();\n    const translate = useTranslate();\n    const publish = usePublish();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const { log } = useLog();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        CreateManyResponse<TData>,\n        TError,\n        useCreateManyParams<TData, TError, TVariables>\n    >(\n        ({\n            resource: resourceName,\n            values,\n            meta,\n            metaData,\n            dataProviderName,\n        }: useCreateManyParams<TData, TError, TVariables>) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const selectedDataProvider = dataProvider(\n                pickDataProvider(identifier, dataProviderName, resources),\n            );\n\n            if (selectedDataProvider.createMany) {\n                return selectedDataProvider.createMany<TData, TVariables>({\n                    resource: resource.name,\n                    variables: values,\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                });\n            } else {\n                return handleMultiple(\n                    values.map((val) =>\n                        selectedDataProvider.create<TData, TVariables>({\n                            resource: resource.name,\n                            variables: val,\n                            meta: combinedMeta,\n                            metaData: combinedMeta,\n                        }),\n                    ),\n                );\n            }\n        },\n        {\n            onSuccess: (\n                response,\n                {\n                    resource: resourceName,\n                    successNotification,\n                    dataProviderName,\n                    invalidates = [\"list\", \"many\"],\n                    values,\n                    meta,\n                    metaData,\n                },\n            ) => {\n                const { resource, identifier } = select(resourceName);\n\n                const resourcePlural = textTransformers.plural(identifier);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(response, values, identifier)\n                        : successNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `createMany-${identifier}-notification`,\n                    message: translate(\n                        \"notifications.createSuccess\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                identifier,\n                            ),\n                        },\n                        `Successfully created ${resourcePlural}`,\n                    ),\n                    description: translate(\"notifications.success\", \"Success\"),\n                    type: \"success\",\n                });\n\n                invalidateStore({\n                    resource: identifier,\n                    dataProviderName: pickDataProvider(\n                        identifier,\n                        dataProviderName,\n                        resources,\n                    ),\n                    invalidates,\n                });\n\n                const ids = response?.data\n                    .filter((item) => item?.id !== undefined)\n                    .map((item) => item.id!);\n\n                publish?.({\n                    channel: `resources/${resource.name}`,\n                    type: \"created\",\n                    payload: {\n                        ids,\n                    },\n                    date: new Date(),\n                });\n\n                const combinedMeta = getMeta({\n                    resource,\n                    meta: pickNotDeprecated(meta, metaData),\n                });\n\n                const { fields, operation, variables, ...rest } =\n                    combinedMeta || {};\n\n                log?.mutate({\n                    action: \"createMany\",\n                    resource: resource.name,\n                    data: values,\n                    meta: {\n                        dataProviderName: pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                        ids,\n                        ...rest,\n                    },\n                });\n            },\n            onError: (\n                err: TError,\n                { resource: resourceName, errorNotification, values },\n            ) => {\n                const { identifier } = select(resourceName);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, values, identifier)\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `createMany-${identifier}-notification`,\n                    description: err.message,\n                    message: translate(\n                        \"notifications.createError\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                identifier,\n                            ),\n                            statusCode: err.statusCode,\n                        },\n                        `There was an error creating ${identifier} (status code: ${err.statusCode}`,\n                    ),\n                    type: \"error\",\n                });\n            },\n            mutationKey: keys()\n                .data()\n                .mutation(\"createMany\")\n                .get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useCreateMany\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n    useQueryClient,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    useResource,\n    useCancelNotification,\n    useMutationMode,\n    useTranslate,\n    usePublish,\n    useHandleNotification,\n    useDataProvider,\n    useInvalidate,\n    useLog,\n    useOnError,\n    useMeta,\n    useRefineContext,\n} from \"@hooks\";\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n    BaseRecord,\n    BaseKey,\n    UpdateManyResponse,\n    HttpError,\n    MutationMode,\n    QueryResponse,\n    PrevContext as UpdateContext,\n    SuccessErrorNotification,\n    MetaQuery,\n    GetListResponse,\n    IQueryKeys,\n    OptimisticUpdateManyMapType,\n    GetManyResponse,\n    GetOneResponse,\n} from \"../../interfaces\";\nimport {\n    queryKeysReplacement,\n    pickDataProvider,\n    handleMultiple,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ntype UpdateManyParams<TData, TError, TVariables> = {\n    /**\n     * ids for mutation function\n     */\n    ids: BaseKey[];\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n     */\n    undoableTimeout?: number;\n    /**\n     * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n     */\n    onCancel?: (cancelMutation: () => void) => void;\n    /**\n     * Values for mutation function\n     */\n    values: TVariables;\n    /**\n     * meta data for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * meta data for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n    /**\n     *  You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * You can use it to manage the invalidations that will occur at the end of the mutation.\n     * @default {\n     *   list: true,\n     *   many: true,\n     *   detail: true,\n     * }\n     */\n    optimisticUpdateMap?: OptimisticUpdateManyMapType<TData, TVariables>;\n} & SuccessErrorNotification<\n    UpdateManyResponse<TData>,\n    TError,\n    { ids: BaseKey[]; values: TVariables }\n>;\n\ntype UseUpdateManyReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    UpdateManyResponse<TData>,\n    TError,\n    UpdateManyParams<TData, TError, TVariables>,\n    UpdateContext<TData>\n> &\n    UseLoadingOvertimeReturnType;\n\nexport type UseUpdateManyProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            UpdateManyResponse<TData>,\n            TError,\n            UpdateManyParams<TData, TError, TVariables>,\n            UpdateContext<TData>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useUpdateMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple update mutations.\n *\n * It uses `updateMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useUpdateMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useUpdateMany = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseUpdateManyProps<TData, TError, TVariables> = {}): UseUpdateManyReturnType<\n    TData,\n    TError,\n    TVariables\n> => {\n    const { resources, select } = useResource();\n    const queryClient = useQueryClient();\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const {\n        mutationMode: mutationModeContext,\n        undoableTimeout: undoableTimeoutContext,\n    } = useMutationMode();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const { notificationDispatch } = useCancelNotification();\n    const publish = usePublish();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const { log } = useLog();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        UpdateManyResponse<TData>,\n        TError,\n        UpdateManyParams<TData, TError, TVariables>,\n        UpdateContext<TData>\n    >(\n        ({\n            ids,\n            values,\n            resource: resourceName,\n            onCancel,\n            mutationMode,\n            undoableTimeout,\n            meta,\n            metaData,\n            dataProviderName,\n        }: UpdateManyParams<TData, TError, TVariables>) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            const undoableTimeoutPropOrContext =\n                undoableTimeout ?? undoableTimeoutContext;\n\n            const selectedDataProvider = dataProvider(\n                pickDataProvider(identifier, dataProviderName, resources),\n            );\n\n            const mutationFn = () => {\n                if (selectedDataProvider.updateMany) {\n                    return selectedDataProvider.updateMany<TData, TVariables>({\n                        resource: resource.name,\n                        ids,\n                        variables: values,\n                        meta: combinedMeta,\n                        metaData: combinedMeta,\n                    });\n                } else {\n                    return handleMultiple(\n                        ids.map((id) =>\n                            selectedDataProvider.update<TData, TVariables>({\n                                resource: resource.name,\n                                id,\n                                variables: values,\n                                meta: combinedMeta,\n                                metaData: combinedMeta,\n                            }),\n                        ),\n                    );\n                }\n            };\n\n            if (!(mutationModePropOrContext === \"undoable\")) {\n                return mutationFn();\n            }\n\n            const updatePromise = new Promise<UpdateManyResponse<TData>>(\n                (resolve, reject) => {\n                    const doMutation = () => {\n                        mutationFn()\n                            .then((result) => resolve(result))\n                            .catch((err) => reject(err));\n                    };\n\n                    const cancelMutation = () => {\n                        reject({ message: \"mutationCancelled\" });\n                    };\n\n                    if (onCancel) {\n                        onCancel(cancelMutation);\n                    }\n\n                    notificationDispatch({\n                        type: ActionTypes.ADD,\n                        payload: {\n                            id: ids,\n                            resource: identifier,\n                            cancelMutation: cancelMutation,\n                            doMutation: doMutation,\n                            seconds: undoableTimeoutPropOrContext,\n                            isSilent: !!onCancel,\n                        },\n                    });\n                },\n            );\n            return updatePromise;\n        },\n\n        {\n            onMutate: async ({\n                resource: resourceName,\n                ids,\n                values,\n                mutationMode,\n                dataProviderName,\n                meta,\n                metaData,\n                optimisticUpdateMap = { list: true, many: true, detail: true },\n            }) => {\n                const { identifier } = select(resourceName);\n                const preferredMeta = pickNotDeprecated(meta, metaData);\n\n                const queryKey = queryKeysReplacement(preferLegacyKeys)(\n                    identifier,\n                    pickDataProvider(identifier, dataProviderName, resources),\n                    pickNotDeprecated(meta, metaData),\n                );\n\n                const resourceKeys = keys()\n                    .data(\n                        pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                    )\n                    .resource(identifier);\n\n                const mutationModePropOrContext =\n                    mutationMode ?? mutationModeContext;\n\n                await queryClient.cancelQueries(\n                    resourceKeys.get(preferLegacyKeys),\n                    undefined,\n                    {\n                        silent: true,\n                    },\n                );\n\n                const previousQueries = queryClient.getQueriesData<\n                    QueryResponse<TData>\n                >(resourceKeys.get(preferLegacyKeys));\n\n                if (mutationModePropOrContext !== \"pessimistic\") {\n                    if (optimisticUpdateMap.list) {\n                        // Set the previous queries to the new ones:\n                        queryClient.setQueriesData(\n                            resourceKeys\n                                .action(\"list\")\n                                .params(preferredMeta ?? {})\n                                .get(preferLegacyKeys),\n                            (previous?: GetListResponse<TData> | null) => {\n                                if (\n                                    typeof optimisticUpdateMap.list ===\n                                    \"function\"\n                                ) {\n                                    return optimisticUpdateMap.list(\n                                        previous,\n                                        values,\n                                        ids,\n                                    );\n                                }\n\n                                if (!previous) {\n                                    return null;\n                                }\n\n                                const data = previous.data.map(\n                                    (record: TData) => {\n                                        if (\n                                            record.id !== undefined &&\n                                            ids\n                                                .filter(\n                                                    (id) => id !== undefined,\n                                                )\n                                                .map(String)\n                                                .includes(record.id.toString())\n                                        ) {\n                                            return {\n                                                ...record,\n                                                ...values,\n                                            };\n                                        }\n\n                                        return record;\n                                    },\n                                );\n\n                                return {\n                                    ...previous,\n                                    data,\n                                };\n                            },\n                        );\n                    }\n\n                    if (optimisticUpdateMap.many) {\n                        queryClient.setQueriesData(\n                            resourceKeys.action(\"many\").get(preferLegacyKeys),\n                            (previous?: GetManyResponse<TData> | null) => {\n                                if (\n                                    typeof optimisticUpdateMap.many ===\n                                    \"function\"\n                                ) {\n                                    return optimisticUpdateMap.many(\n                                        previous,\n                                        values,\n                                        ids,\n                                    );\n                                }\n\n                                if (!previous) {\n                                    return null;\n                                }\n\n                                const data = previous.data.map(\n                                    (record: TData) => {\n                                        if (\n                                            record.id !== undefined &&\n                                            ids\n                                                .filter(\n                                                    (id) => id !== undefined,\n                                                )\n                                                .map(String)\n                                                .includes(record.id.toString())\n                                        ) {\n                                            return {\n                                                ...record,\n                                                ...values,\n                                            };\n                                        }\n                                        return record;\n                                    },\n                                );\n                                return {\n                                    ...previous,\n                                    data,\n                                };\n                            },\n                        );\n                    }\n\n                    if (optimisticUpdateMap.detail) {\n                        for (const id of ids) {\n                            queryClient.setQueriesData(\n                                resourceKeys\n                                    .action(\"one\")\n                                    .id(id)\n                                    .params(preferredMeta ?? {})\n                                    .get(preferLegacyKeys),\n                                (previous?: GetOneResponse<TData> | null) => {\n                                    if (\n                                        typeof optimisticUpdateMap.detail ===\n                                        \"function\"\n                                    ) {\n                                        return optimisticUpdateMap.detail(\n                                            previous,\n                                            values,\n                                            id,\n                                        );\n                                    }\n\n                                    if (!previous) {\n                                        return null;\n                                    }\n\n                                    const data = {\n                                        ...previous.data,\n                                        ...values,\n                                    };\n                                    return {\n                                        ...previous,\n                                        data,\n                                    };\n                                },\n                            );\n                        }\n                    }\n                }\n\n                return {\n                    previousQueries,\n                    queryKey,\n                };\n            },\n            onSettled: (\n                _data,\n                _error,\n                { ids, resource: resourceName, dataProviderName },\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // invalidate the cache for the list and many queries:\n                invalidateStore({\n                    resource: identifier,\n                    invalidates: [\"list\", \"many\"],\n                    dataProviderName: pickDataProvider(\n                        identifier,\n                        dataProviderName,\n                        resources,\n                    ),\n                });\n\n                ids.forEach((id) =>\n                    invalidateStore({\n                        resource: identifier,\n                        invalidates: [\"detail\"],\n                        dataProviderName: pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                        id,\n                    }),\n                );\n\n                notificationDispatch({\n                    type: ActionTypes.REMOVE,\n                    payload: { id: ids, resource: identifier },\n                });\n            },\n            onSuccess: (\n                data,\n                {\n                    ids,\n                    resource: resourceName,\n                    meta,\n                    metaData,\n                    dataProviderName,\n                    successNotification,\n                    values,\n                },\n                context,\n            ) => {\n                const { resource, identifier } = select(resourceName);\n\n                const resourceSingular = textTransformers.singular(identifier);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(data, { ids, values }, identifier)\n                        : successNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${ids}-${identifier}-notification`,\n                    description: translate(\n                        \"notifications.success\",\n                        \"Successful\",\n                    ),\n                    message: translate(\n                        \"notifications.editSuccess\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                identifier,\n                            ),\n                        },\n                        `Successfully updated ${resourceSingular}`,\n                    ),\n                    type: \"success\",\n                });\n\n                publish?.({\n                    channel: `resources/${resource.name}`,\n                    type: \"updated\",\n                    payload: {\n                        ids: ids.map(String),\n                    },\n                    date: new Date(),\n                });\n\n                const previousData: any[] = [];\n                if (context) {\n                    ids.forEach((id) => {\n                        const queryData = queryClient.getQueryData<\n                            UpdateManyResponse<TData>\n                        >(context.queryKey.detail(id));\n\n                        previousData.push(\n                            Object.keys(values || {}).reduce<any>(\n                                (acc, item: any) => {\n                                    acc[item] = queryData?.data?.[item];\n                                    return acc;\n                                },\n                                {},\n                            ),\n                        );\n                    });\n                }\n\n                const combinedMeta = getMeta({\n                    resource,\n                    meta: pickNotDeprecated(meta, metaData),\n                });\n\n                const { fields, operation, variables, ...rest } =\n                    combinedMeta || {};\n\n                log?.mutate({\n                    action: \"updateMany\",\n                    resource: resource.name,\n                    data: values,\n                    previousData,\n                    meta: {\n                        ids,\n                        dataProviderName: pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                        ...rest,\n                    },\n                });\n            },\n            onError: (\n                err: TError,\n                { ids, resource: resourceName, errorNotification, values },\n                context,\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // set back the queries to the context:\n                if (context) {\n                    for (const query of context.previousQueries) {\n                        queryClient.setQueryData(query[0], query[1]);\n                    }\n                }\n\n                if (err.message !== \"mutationCancelled\") {\n                    checkError?.(err);\n\n                    const resourceSingular =\n                        textTransformers.singular(identifier);\n\n                    const notificationConfig =\n                        typeof errorNotification === \"function\"\n                            ? errorNotification(\n                                  err,\n                                  { ids, values },\n                                  identifier,\n                              )\n                            : errorNotification;\n\n                    handleNotification(notificationConfig, {\n                        key: `${ids}-${identifier}-updateMany-error-notification`,\n                        message: translate(\n                            \"notifications.editError\",\n                            {\n                                resource: resourceSingular,\n                                statusCode: err.statusCode,\n                            },\n                            `Error when updating ${resourceSingular} (status code: ${err.statusCode})`,\n                        ),\n                        description: err.message,\n                        type: \"error\",\n                    });\n                }\n            },\n            mutationKey: keys()\n                .data()\n                .mutation(\"updateMany\")\n                .get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useUpdateMany\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import {\n    useQueryClient,\n    useMutation,\n    UseMutationResult,\n    UseMutationOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    DeleteManyResponse,\n    HttpError,\n    BaseRecord,\n    BaseKey,\n    MutationMode,\n    PreviousQuery,\n    GetListResponse,\n    PrevContext as DeleteContext,\n    SuccessErrorNotification,\n    MetaQuery,\n    IQueryKeys,\n} from \"../../interfaces\";\nimport {\n    useResource,\n    useTranslate,\n    useMutationMode,\n    useCancelNotification,\n    usePublish,\n    useHandleNotification,\n    useDataProvider,\n    useInvalidate,\n    useLog,\n    useOnError,\n    useMeta,\n    useRefineContext,\n} from \"@hooks\";\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport {\n    queryKeysReplacement,\n    pickDataProvider,\n    handleMultiple,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n} from \"@definitions\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type DeleteManyParams<TData, TError, TVariables> = {\n    /**\n     * ids for mutation function\n     */\n    ids: BaseKey[];\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n     */\n    undoableTimeout?: number;\n    /**\n     * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n     */\n    onCancel?: (cancelMutation: () => void) => void;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default \"default\"\n     */\n    dataProviderName?: string;\n    /**\n     *  You can use it to manage the invalidations that will occur at the end of the mutation.\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * Values for mutation function\n     */\n    values?: TVariables;\n} & SuccessErrorNotification<DeleteManyResponse<TData>, TError, BaseKey[]>;\n\nexport type UseDeleteManyReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    DeleteManyResponse<TData>,\n    TError,\n    DeleteManyParams<TData, TError, TVariables>,\n    unknown\n> &\n    UseLoadingOvertimeReturnType;\n\nexport type UseDeleteManyProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            DeleteManyResponse<TData>,\n            TError,\n            DeleteManyParams<TData, TError, TVariables>,\n            DeleteContext<TData>\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useDeleteMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple delete mutations.\n *\n * It uses `deleteMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useDeleteMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n */\nexport const useDeleteMany = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseDeleteManyProps<TData, TError, TVariables> = {}): UseDeleteManyReturnType<\n    TData,\n    TError,\n    TVariables\n> => {\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const {\n        mutationMode: mutationModeContext,\n        undoableTimeout: undoableTimeoutContext,\n    } = useMutationMode();\n    const dataProvider = useDataProvider();\n    const { notificationDispatch } = useCancelNotification();\n    const translate = useTranslate();\n    const publish = usePublish();\n    const handleNotification = useHandleNotification();\n    const invalidateStore = useInvalidate();\n    const { log } = useLog();\n    const { resources, select } = useResource();\n    const queryClient = useQueryClient();\n    const getMeta = useMeta();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        DeleteManyResponse<TData>,\n        TError,\n        DeleteManyParams<TData, TError, TVariables>,\n        DeleteContext<TData>\n    >(\n        ({\n            resource: resourceName,\n            ids,\n            mutationMode,\n            undoableTimeout,\n            onCancel,\n            meta,\n            metaData,\n            dataProviderName,\n            values,\n        }: DeleteManyParams<TData, TError, TVariables>) => {\n            const { resource, identifier } = select(resourceName);\n\n            const combinedMeta = getMeta({\n                resource,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const mutationModePropOrContext =\n                mutationMode ?? mutationModeContext;\n\n            const undoableTimeoutPropOrContext =\n                undoableTimeout ?? undoableTimeoutContext;\n\n            const selectedDataProvider = dataProvider(\n                pickDataProvider(identifier, dataProviderName, resources),\n            );\n\n            const mutationFn = () => {\n                if (selectedDataProvider.deleteMany) {\n                    return selectedDataProvider.deleteMany<TData, TVariables>({\n                        resource: resource.name,\n                        ids,\n                        meta: combinedMeta,\n                        metaData: combinedMeta,\n                        variables: values,\n                    });\n                } else {\n                    return handleMultiple(\n                        ids.map((id) =>\n                            selectedDataProvider.deleteOne<TData, TVariables>({\n                                resource: resource.name,\n                                id,\n                                meta: combinedMeta,\n                                metaData: combinedMeta,\n                                variables: values,\n                            }),\n                        ),\n                    );\n                }\n            };\n\n            if (!(mutationModePropOrContext === \"undoable\")) {\n                return mutationFn();\n            }\n\n            const updatePromise = new Promise<DeleteManyResponse<TData>>(\n                (resolve, reject) => {\n                    const doMutation = () => {\n                        mutationFn()\n                            .then((result) => resolve(result))\n                            .catch((err) => reject(err));\n                    };\n\n                    const cancelMutation = () => {\n                        reject({ message: \"mutationCancelled\" });\n                    };\n\n                    if (onCancel) {\n                        onCancel(cancelMutation);\n                    }\n\n                    notificationDispatch({\n                        type: ActionTypes.ADD,\n                        payload: {\n                            id: ids,\n                            resource: identifier,\n                            cancelMutation: cancelMutation,\n                            doMutation: doMutation,\n                            seconds: undoableTimeoutPropOrContext,\n                            isSilent: !!onCancel,\n                        },\n                    });\n                },\n            );\n            return updatePromise;\n        },\n        {\n            onMutate: async ({\n                ids,\n                resource: resourceName,\n                mutationMode,\n                dataProviderName,\n                meta,\n                metaData,\n            }) => {\n                const { identifier } = select(resourceName);\n\n                const preferredMeta = pickNotDeprecated(meta, metaData);\n\n                const queryKey = queryKeysReplacement(preferLegacyKeys)(\n                    identifier,\n                    pickDataProvider(identifier, dataProviderName, resources),\n                    preferredMeta,\n                );\n\n                const resourceKeys = keys()\n                    .data(\n                        pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                    )\n                    .resource(identifier);\n\n                const mutationModePropOrContext =\n                    mutationMode ?? mutationModeContext;\n\n                await queryClient.cancelQueries(\n                    resourceKeys.get(preferLegacyKeys),\n                    undefined,\n                    {\n                        silent: true,\n                    },\n                );\n\n                const previousQueries: PreviousQuery<TData>[] =\n                    queryClient.getQueriesData(\n                        resourceKeys.get(preferLegacyKeys),\n                    );\n\n                if (mutationModePropOrContext !== \"pessimistic\") {\n                    // Set the previous queries to the new ones:\n                    queryClient.setQueriesData(\n                        resourceKeys\n                            .action(\"list\")\n                            .params(preferredMeta ?? {})\n                            .get(preferLegacyKeys),\n                        (previous?: GetListResponse<TData> | null) => {\n                            if (!previous) {\n                                return null;\n                            }\n\n                            const data = previous.data.filter(\n                                (item) =>\n                                    item.id &&\n                                    !ids\n                                        .map(String)\n                                        .includes(item.id.toString()),\n                            );\n\n                            return {\n                                data,\n                                total: previous.total - 1,\n                            };\n                        },\n                    );\n\n                    queryClient.setQueriesData(\n                        resourceKeys.action(\"many\").get(preferLegacyKeys),\n                        (previous?: GetListResponse<TData> | null) => {\n                            if (!previous) {\n                                return null;\n                            }\n\n                            const data = previous.data.filter(\n                                (record: TData) => {\n                                    if (record.id) {\n                                        return !ids\n                                            .map(String)\n                                            .includes(record.id.toString());\n                                    }\n                                    return false;\n                                },\n                            );\n\n                            return {\n                                ...previous,\n                                data,\n                            };\n                        },\n                    );\n\n                    for (const id of ids) {\n                        queryClient.setQueriesData(\n                            resourceKeys\n                                .action(\"one\")\n                                .id(id)\n                                .params(preferredMeta)\n                                .get(preferLegacyKeys),\n                            (previous?: any | null) => {\n                                if (!previous || previous.data.id == id) {\n                                    return null;\n                                }\n                                return {\n                                    ...previous,\n                                };\n                            },\n                        );\n                    }\n                }\n\n                return {\n                    previousQueries,\n                    queryKey,\n                };\n            },\n            // Always refetch after error or success:\n            onSettled: (\n                _data,\n                _error,\n                {\n                    resource: resourceName,\n                    ids,\n                    dataProviderName,\n                    invalidates = [\"list\", \"many\"],\n                },\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // invalidate the cache for the list and many queries:\n                invalidateStore({\n                    resource: identifier,\n                    dataProviderName: pickDataProvider(\n                        identifier,\n                        dataProviderName,\n                        resources,\n                    ),\n                    invalidates,\n                });\n\n                notificationDispatch({\n                    type: ActionTypes.REMOVE,\n                    payload: { id: ids, resource: identifier },\n                });\n            },\n            onSuccess: (\n                _data,\n                {\n                    ids,\n                    resource: resourceName,\n                    meta,\n                    metaData,\n                    dataProviderName,\n                    successNotification,\n                },\n                context,\n            ) => {\n                const { resource, identifier } = select(resourceName);\n\n                // Remove the queries from the cache:\n                ids.forEach((id) =>\n                    queryClient.removeQueries(context?.queryKey.detail(id)),\n                );\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(_data, ids, identifier)\n                        : successNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${ids}-${identifier}-notification`,\n                    description: translate(\"notifications.success\", \"Success\"),\n                    message: translate(\n                        \"notifications.deleteSuccess\",\n                        {\n                            resource: translate(\n                                `${identifier}.${identifier}`,\n                                identifier,\n                            ),\n                        },\n                        `Successfully deleted ${identifier}`,\n                    ),\n                    type: \"success\",\n                });\n\n                publish?.({\n                    channel: `resources/${resource.name}`,\n                    type: \"deleted\",\n                    payload: { ids },\n                    date: new Date(),\n                });\n\n                const combinedMeta = getMeta({\n                    resource,\n                    meta: pickNotDeprecated(meta, metaData),\n                });\n\n                const { fields, operation, variables, ...rest } =\n                    combinedMeta || {};\n\n                log?.mutate({\n                    action: \"deleteMany\",\n                    resource: resource.name,\n                    meta: {\n                        ids,\n                        dataProviderName: pickDataProvider(\n                            identifier,\n                            dataProviderName,\n                            resources,\n                        ),\n                        ...rest,\n                    },\n                });\n\n                // Remove the queries from the cache:\n                ids.forEach((id) =>\n                    queryClient.removeQueries(context?.queryKey.detail(id)),\n                );\n            },\n            onError: (\n                err,\n                { ids, resource: resourceName, errorNotification },\n                context,\n            ) => {\n                const { identifier } = select(resourceName);\n\n                // set back the queries to the context:\n                if (context) {\n                    for (const query of context.previousQueries) {\n                        queryClient.setQueryData(query[0], query[1]);\n                    }\n                }\n\n                if (err.message !== \"mutationCancelled\") {\n                    checkError(err);\n                    const resourceSingular =\n                        textTransformers.singular(identifier);\n\n                    const notificationConfig =\n                        typeof errorNotification === \"function\"\n                            ? errorNotification(err, ids, identifier)\n                            : errorNotification;\n\n                    handleNotification(notificationConfig, {\n                        key: `${ids}-${identifier}-notification`,\n                        message: translate(\n                            \"notifications.deleteError\",\n                            {\n                                resource: resourceSingular,\n                                statusCode: err.statusCode,\n                            },\n                            `Error (status code: ${err.statusCode})`,\n                        ),\n                        description: err.message,\n                        type: \"error\",\n                    });\n                }\n            },\n            mutationKey: keys()\n                .data()\n                .mutation(\"deleteMany\")\n                .get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useDeleteMany\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import { pickNotDeprecated } from \"@definitions/index\";\nimport { useDataProvider, useResource } from \"@hooks\";\n\nexport const useApiUrl = (dataProviderName?: string): string => {\n    const dataProvider = useDataProvider();\n    const { resource } = useResource();\n\n    const { getApiUrl } = dataProvider(\n        dataProviderName ??\n            pickNotDeprecated(resource?.meta, resource?.options)\n                ?.dataProviderName,\n    );\n\n    return getApiUrl();\n};\n","import {\n    QueryObserverResult,\n    useQuery,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport { pickNotDeprecated, useActiveAuthProvider } from \"@definitions/helpers\";\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useMeta,\n    useOnError,\n    useTranslate,\n} from \"@hooks\";\nimport {\n    BaseRecord,\n    CrudFilters,\n    CrudSorting,\n    CustomResponse,\n    HttpError,\n    MetaQuery,\n    Prettify,\n    SuccessErrorNotification,\n} from \"../../interfaces\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ninterface UseCustomConfig<TQuery, TPayload> {\n    /**\n     * @deprecated `sort` is deprecated, use `sorters` instead.\n     */\n    sort?: CrudSorting;\n    sorters?: CrudSorting;\n    filters?: CrudFilters;\n    query?: TQuery;\n    payload?: TPayload;\n    headers?: {};\n}\n\nexport type UseCustomProps<TQueryFnData, TError, TQuery, TPayload, TData> = {\n    /**\n     * request's URL\n     */\n    url: string;\n    /**\n     * request's method (`GET`, `POST`, etc.)\n     */\n    method: \"get\" | \"delete\" | \"head\" | \"options\" | \"post\" | \"put\" | \"patch\";\n    /**\n     * The config of your request. You can send headers, payload, query, filters and sorters using this field\n     */\n    config?: UseCustomConfig<TQuery, TPayload>;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\"\n     */\n    queryOptions?: UseQueryOptions<\n        CustomResponse<TQueryFnData>,\n        TError,\n        CustomResponse<TData>\n    >;\n    /**\n     * meta data for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * meta data for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n} & SuccessErrorNotification<\n    CustomResponse<TData>,\n    TError,\n    Prettify<UseCustomConfig<TQuery, TPayload> & MetaQuery>\n> &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCustom` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for custom requests.\n *\n * It uses the `custom` method from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCustom} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TQuery - Values for query params\n * @typeParam TPayload - Values for params\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useCustom = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TQuery = unknown,\n    TPayload = unknown,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    url,\n    method,\n    config,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    dataProviderName,\n    overtimeOptions,\n}: UseCustomProps<\n    TQueryFnData,\n    TError,\n    TQuery,\n    TPayload,\n    TData\n>): QueryObserverResult<CustomResponse<TData>, TError> &\n    UseLoadingOvertimeReturnType => {\n    const dataProvider = useDataProvider();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const translate = useTranslate();\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n\n    const { custom } = dataProvider(dataProviderName);\n\n    const combinedMeta = getMeta({ meta: preferredMeta });\n\n    if (custom) {\n        const queryResponse = useQuery<\n            CustomResponse<TQueryFnData>,\n            TError,\n            CustomResponse<TData>\n        >({\n            queryKey: keys()\n                .data(dataProviderName)\n                .mutation(\"custom\")\n                .params({\n                    method,\n                    url,\n                    ...config,\n                    ...(preferredMeta || {}),\n                })\n                .get(preferLegacyKeys),\n            queryFn: ({ queryKey, pageParam, signal }) =>\n                custom<TQueryFnData>({\n                    url,\n                    method,\n                    ...config,\n                    meta: {\n                        ...combinedMeta,\n                        queryContext: {\n                            queryKey,\n                            pageParam,\n                            signal,\n                        },\n                    },\n                    metaData: {\n                        ...combinedMeta,\n                        queryContext: {\n                            queryKey,\n                            pageParam,\n                            signal,\n                        },\n                    },\n                }),\n            ...queryOptions,\n            onSuccess: (data) => {\n                queryOptions?.onSuccess?.(data);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(data, {\n                              ...config,\n                              ...combinedMeta,\n                          })\n                        : successNotification;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (err: TError) => {\n                checkError(err);\n                queryOptions?.onError?.(err);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, {\n                              ...config,\n                              ...combinedMeta,\n                          })\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${method}-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useCustom\", preferLegacyKeys),\n            },\n        });\n        const { elapsedTime } = useLoadingOvertime({\n            isLoading: queryResponse.isFetching,\n            interval: overtimeOptions?.interval,\n            onInterval: overtimeOptions?.onInterval,\n        });\n\n        return { ...queryResponse, overtime: { elapsedTime } };\n    } else {\n        throw Error(\"Not implemented custom on data provider.\");\n    }\n};\n","import {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    useDataProvider,\n    useHandleNotification,\n    useTranslate,\n    useOnError,\n    useMeta,\n} from \"@hooks\";\nimport {\n    CreateResponse,\n    BaseRecord,\n    HttpError,\n    SuccessErrorNotification,\n    MetaQuery,\n    Prettify,\n} from \"../../interfaces\";\nimport { pickNotDeprecated, useActiveAuthProvider } from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\ninterface UseCustomMutationConfig {\n    headers?: {};\n}\n\ntype useCustomMutationParams<TData, TError, TVariables> = {\n    url: string;\n    method: \"post\" | \"put\" | \"patch\" | \"delete\";\n    values: TVariables;\n    /**\n     * Meta data for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     * Meta data for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    dataProviderName?: string;\n    config?: UseCustomMutationConfig;\n} & SuccessErrorNotification<\n    CreateResponse<TData>,\n    TError,\n    Prettify<UseCustomMutationConfig & MetaQuery>\n>;\n\nexport type UseCustomMutationReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = UseMutationResult<\n    CreateResponse<TData>,\n    TError,\n    useCustomMutationParams<TData, TError, TVariables>,\n    unknown\n>;\n\nexport type UseCustomMutationProps<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n> = {\n    mutationOptions?: Omit<\n        UseMutationOptions<\n            CreateResponse<TData>,\n            TError,\n            useCustomMutationParams<TData, TError, TVariables>,\n            unknown\n        >,\n        \"mutationFn\" | \"onError\" | \"onSuccess\"\n    >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCustomMutation` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for create mutations.\n *\n * It uses the `custom` method from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCustomMutation} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\n\nexport const useCustomMutation = <\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n>({\n    mutationOptions,\n    overtimeOptions,\n}: UseCustomMutationProps<\n    TData,\n    TError,\n    TVariables\n> = {}): UseCustomMutationReturnType<TData, TError, TVariables> &\n    UseLoadingOvertimeReturnType => {\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const mutation = useMutation<\n        CreateResponse<TData>,\n        TError,\n        useCustomMutationParams<TData, TError, TVariables>,\n        unknown\n    >(\n        ({\n            url,\n            method,\n            values,\n            meta,\n            metaData,\n            dataProviderName,\n            config,\n        }: useCustomMutationParams<TData, TError, TVariables>) => {\n            const combinedMeta = getMeta({\n                meta: pickNotDeprecated(meta, metaData),\n            });\n\n            const { custom } = dataProvider(dataProviderName);\n\n            if (custom) {\n                return custom<TData>({\n                    url,\n                    method,\n                    payload: values,\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                    headers: { ...config?.headers },\n                });\n            }\n\n            throw Error(\"Not implemented custom on data provider.\");\n        },\n        {\n            onSuccess: (\n                data,\n                {\n                    successNotification: successNotificationFromProp,\n                    config,\n                    meta,\n                    metaData,\n                },\n            ) => {\n                const notificationConfig =\n                    typeof successNotificationFromProp === \"function\"\n                        ? successNotificationFromProp(data, {\n                              ...config,\n                              ...(pickNotDeprecated(meta, metaData) || {}),\n                          })\n                        : successNotificationFromProp;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (\n                err: TError,\n                {\n                    errorNotification: errorNotificationFromProp,\n                    method,\n                    config,\n                    meta,\n                    metaData,\n                },\n            ) => {\n                checkError(err);\n\n                const notificationConfig =\n                    typeof errorNotificationFromProp === \"function\"\n                        ? errorNotificationFromProp(err, {\n                              ...config,\n                              ...(pickNotDeprecated(meta, metaData) || {}),\n                          })\n                        : errorNotificationFromProp;\n\n                handleNotification(notificationConfig, {\n                    key: `${method}-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            mutationKey: keys()\n                .data()\n                .mutation(\"customMutation\")\n                .get(preferLegacyKeys),\n            ...mutationOptions,\n            meta: {\n                ...mutationOptions?.meta,\n                ...getXRay(\"useCustomMutation\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: mutation.isLoading,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...mutation, overtime: { elapsedTime } };\n};\n","import { useCallback, useContext } from \"react\";\n\nimport { DataContext } from \"@contexts/data\";\nimport {\n    IDataContextProvider,\n    IDataMultipleContextProvider,\n} from \"../../interfaces\";\n\nexport const useDataProvider = (): ((\n    /**\n     * The name of the `data provider` you want to access\n     */\n    dataProviderName?: string,\n) => IDataContextProvider) => {\n    const context = useContext<IDataMultipleContextProvider>(DataContext);\n\n    const handleDataProvider = useCallback(\n        (dataProviderName?: string) => {\n            if (dataProviderName) {\n                const dataProvider = context[dataProviderName];\n                if (!dataProvider) {\n                    throw new Error(\n                        `\"${dataProviderName}\" Data provider not found`,\n                    );\n                }\n                return context[dataProviderName];\n            }\n            if (context.default) {\n                return context.default;\n            } else\n                throw new Error(\n                    `There is no \"default\" data provider. Please pass dataProviderName.`,\n                );\n        },\n        [context],\n    );\n\n    return handleDataProvider;\n};\n","import React from \"react\";\nimport { ReactNode } from \"react\";\n\nimport {\n    IDataContextProvider,\n    IDataMultipleContextProvider,\n} from \"../../interfaces\";\n\nexport const defaultDataProvider = () => {\n    return {\n        default: {\n            create: () => Promise.resolve({ data: { id: 1 } }),\n            createMany: () => Promise.resolve({ data: [] }),\n            deleteOne: () => Promise.resolve({ data: { id: 1 } }),\n            deleteMany: () => Promise.resolve({ data: [] }),\n            getList: () => Promise.resolve({ data: [], total: 0 }),\n            getMany: () => Promise.resolve({ data: [] }),\n            getOne: () => Promise.resolve({ data: { id: 1 } }),\n            update: () => Promise.resolve({ data: { id: 1 } }),\n            updateMany: () => Promise.resolve({ data: [] }),\n            custom: () => Promise.resolve({ data: {} }),\n            getApiUrl: () => \"\",\n        },\n    };\n};\n\nexport const DataContext = React.createContext<IDataMultipleContextProvider>(\n    defaultDataProvider() as IDataMultipleContextProvider,\n);\n\nexport const DataContextProvider: React.FC<\n    | IDataMultipleContextProvider\n    | (IDataContextProvider & {\n          children: ReactNode;\n      })\n> = ({ children, ...rest }) => {\n    let dataProviders;\n    if (!rest.getList || !rest.getOne) {\n        dataProviders = rest as IDataMultipleContextProvider;\n    } else {\n        dataProviders = {\n            default: rest,\n        } as IDataMultipleContextProvider;\n    }\n    return (\n        <DataContext.Provider value={dataProviders}>\n            {children}\n        </DataContext.Provider>\n    );\n};\n","import {\n    useInfiniteQuery,\n    UseInfiniteQueryOptions,\n    InfiniteQueryObserverResult,\n    InfiniteData,\n} from \"@tanstack/react-query\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nimport {\n    CrudFilters,\n    Pagination,\n    BaseRecord,\n    HttpError,\n    CrudSorting,\n    MetaQuery,\n    SuccessErrorNotification,\n    LiveModeProps,\n    GetListResponse,\n    Prettify,\n} from \"../../interfaces\";\nimport {\n    useResource,\n    useHandleNotification,\n    useResourceSubscription,\n    useTranslate,\n    useDataProvider,\n    useOnError,\n    useMeta,\n} from \"@hooks\";\nimport {\n    queryKeys,\n    pickDataProvider,\n    getNextPageParam,\n    getPreviousPageParam,\n    pickNotDeprecated,\n    useActiveAuthProvider,\n    handlePaginationParams,\n} from \"@definitions/helpers\";\n\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport interface UseInfiniteListConfig {\n    pagination?: Pagination;\n    hasPagination?: boolean;\n    sort?: CrudSorting;\n    filters?: CrudFilters;\n}\n\ntype BaseInfiniteListProps = {\n    /**\n     *  Metadata query for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     *  Metadata query for `dataProvider`\n     *  @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * Configuration for pagination, sorting and filtering\n     * @type [`useInfiniteListConfig`](/docs/api-reference/core/hooks/data/useInfiniteList/#config-parameters)\n     * @deprecated `config` property is deprecated. Use `pagination`, `hasPagination`, `sorters` and `filters` instead.\n     */\n    config?: UseInfiniteListConfig;\n    /**\n     * Pagination properties\n     */\n    pagination?: Pagination;\n    /**\n     * Whether to use server-side pagination or not\n     * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * Sorter parameters\n     */\n    sorters?: CrudSorting;\n    /**\n     * Filter parameters\n     */\n    filters?: CrudFilters;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use\n     */\n    dataProviderName?: string;\n};\n\nexport type UseInfiniteListProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * Tanstack Query's [useInfiniteQuery](https://tanstack.com/query/v4/docs/react/reference/useInfiniteQuery) options\n     */\n    queryOptions?: UseInfiniteQueryOptions<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >;\n} & BaseInfiniteListProps &\n    SuccessErrorNotification<\n        InfiniteData<GetListResponse<TData>>,\n        TError,\n        Prettify<BaseInfiniteListProps>\n    > &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useInfiniteList` is a modified version of `react-query`'s {@link https://tanstack.com/query/latest/docs/react/guides/infinite-queries `useInfiniteQuery`} used for retrieving items from a `resource` with pagination, sort, and filter configurations.\n *\n * It uses the `getList` method as the query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useInfiniteList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useInfiniteList = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    config,\n    filters,\n    hasPagination,\n    pagination,\n    sorters,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    dataProviderName,\n    overtimeOptions,\n}: UseInfiniteListProps<\n    TQueryFnData,\n    TError,\n    TData\n>): InfiniteQueryObserverResult<GetListResponse<TData>, TError> &\n    UseLoadingOvertimeReturnType => {\n    const { resources, resource, identifier } = useResource(resourceFromProp);\n\n    const dataProvider = useDataProvider();\n    const translate = useTranslate();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: checkError } = useOnError({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const handleNotification = useHandleNotification();\n    const getMeta = useMeta();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const pickedDataProvider = pickDataProvider(\n        identifier,\n        dataProviderName,\n        resources,\n    );\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n    const prefferedFilters = pickNotDeprecated(filters, config?.filters);\n    const prefferedSorters = pickNotDeprecated(sorters, config?.sort);\n    const prefferedHasPagination = pickNotDeprecated(\n        hasPagination,\n        config?.hasPagination,\n    );\n    const prefferedPagination = handlePaginationParams({\n        pagination,\n        configPagination: config?.pagination,\n        hasPagination: prefferedHasPagination,\n    });\n    const isServerPagination = prefferedPagination.mode === \"server\";\n    const notificationValues = {\n        meta: preferredMeta,\n        metaData: preferredMeta,\n        filters: prefferedFilters,\n        hasPagination: isServerPagination,\n        pagination: prefferedPagination,\n        sorters: prefferedSorters,\n        config: {\n            ...config,\n            sort: prefferedSorters,\n        },\n    };\n\n    const isEnabled =\n        queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n    const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n    const { getList } = dataProvider(pickedDataProvider);\n\n    useResourceSubscription({\n        resource: identifier,\n        types: [\"*\"],\n        params: {\n            meta: combinedMeta,\n            metaData: combinedMeta,\n            pagination: prefferedPagination,\n            hasPagination: isServerPagination,\n            sort: prefferedSorters,\n            sorters: prefferedSorters,\n            filters: prefferedFilters,\n            subscriptionType: \"useList\",\n            ...liveParams,\n        },\n        channel: `resources/${resource.name}`,\n        enabled: isEnabled,\n        liveMode,\n        onLiveEvent,\n    });\n\n    const queryResponse = useInfiniteQuery<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >(\n        keys()\n            .data(pickedDataProvider)\n            .resource(identifier)\n            .action(\"infinite\")\n            .params({\n                ...(preferredMeta || {}),\n                filters: prefferedFilters,\n                hasPagination: isServerPagination,\n                ...(isServerPagination && {\n                    pagination: prefferedPagination,\n                }),\n                ...(sorters && {\n                    sorters,\n                }),\n                ...(config?.sort && {\n                    sort: config?.sort,\n                }),\n            })\n            .get(preferLegacyKeys),\n        ({ queryKey, pageParam, signal }) => {\n            const paginationProperties = {\n                ...prefferedPagination,\n                current: pageParam,\n            };\n\n            return getList<TQueryFnData>({\n                resource: resource.name,\n                pagination: paginationProperties,\n                hasPagination: isServerPagination,\n                filters: prefferedFilters,\n                sort: prefferedSorters,\n                sorters: prefferedSorters,\n                meta: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n                metaData: {\n                    ...combinedMeta,\n                    queryContext: {\n                        queryKey,\n                        pageParam,\n                        signal,\n                    },\n                },\n            }).then(({ data, total, ...rest }) => {\n                return {\n                    data,\n                    total,\n                    pagination: paginationProperties,\n                    ...rest,\n                };\n            });\n        },\n        {\n            getNextPageParam: (lastPage) => getNextPageParam(lastPage),\n            getPreviousPageParam: (lastPage) => getPreviousPageParam(lastPage),\n            ...queryOptions,\n            onSuccess: (data) => {\n                queryOptions?.onSuccess?.(data);\n\n                const notificationConfig =\n                    typeof successNotification === \"function\"\n                        ? successNotification(\n                              data,\n                              notificationValues,\n                              identifier,\n                          )\n                        : successNotification;\n\n                handleNotification(notificationConfig);\n            },\n            onError: (err: TError) => {\n                checkError(err);\n                queryOptions?.onError?.(err);\n\n                const notificationConfig =\n                    typeof errorNotification === \"function\"\n                        ? errorNotification(err, notificationValues, identifier)\n                        : errorNotification;\n\n                handleNotification(notificationConfig, {\n                    key: `${identifier}-useInfiniteList-notification`,\n                    message: translate(\n                        \"notifications.error\",\n                        { statusCode: err.statusCode },\n                        `Error (status code: ${err.statusCode})`,\n                    ),\n                    description: err.message,\n                    type: \"error\",\n                });\n            },\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useInfiniteList\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResponse.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import { useContext, useEffect } from \"react\";\nimport {\n    BaseKey,\n    CrudFilters,\n    CrudSorting,\n    ILiveContext,\n    IRefineContext,\n    LiveEvent,\n    LiveModeProps,\n    MetaQuery,\n    Pagination,\n} from \"../../../interfaces\";\nimport { LiveContext } from \"@contexts/live\";\nimport { RefineContext } from \"@contexts/refine\";\nimport { useResource } from \"@hooks/resource\";\nimport { useInvalidate } from \"@hooks/invalidate\";\n\nexport type UseResourceSubscriptionProps = {\n    channel: string;\n    params?: {\n        ids?: BaseKey[];\n        id?: BaseKey;\n        meta?: MetaQuery;\n        /**\n         * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n         */\n        metaData?: MetaQuery;\n        pagination?: Pagination;\n        /**\n         * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n         */\n        hasPagination?: boolean;\n        /**\n         * @deprecated `sort` is deprecated. Use `sorters` instead.\n         */\n        sort?: CrudSorting;\n        sorters?: CrudSorting;\n        filters?: CrudFilters;\n        subscriptionType: \"useList\" | \"useOne\" | \"useMany\";\n        [key: string]: any;\n    };\n    types: LiveEvent[\"type\"][];\n    resource?: string;\n    enabled?: boolean;\n} & LiveModeProps;\n\nexport type PublishType = {\n    (event: LiveEvent): void;\n};\n\nexport const useResourceSubscription = ({\n    resource: resourceFromProp,\n    params,\n    channel,\n    types,\n    enabled = true,\n    liveMode: liveModeFromProp,\n    onLiveEvent,\n}: UseResourceSubscriptionProps): void => {\n    const { resource, identifier } = useResource(resourceFromProp);\n\n    const liveDataContext = useContext<ILiveContext>(LiveContext);\n    const {\n        liveMode: liveModeFromContext,\n        onLiveEvent: onLiveEventContextCallback,\n    } = useContext<IRefineContext>(RefineContext);\n\n    const liveMode = liveModeFromProp ?? liveModeFromContext;\n\n    const invalidate = useInvalidate();\n\n    useEffect(() => {\n        let subscription: any;\n\n        const callback = (event: LiveEvent) => {\n            if (liveMode === \"auto\") {\n                invalidate({\n                    resource: identifier,\n                    dataProviderName: resource?.meta?.dataProviderName,\n                    invalidates: [\"resourceAll\"],\n                    invalidationFilters: {\n                        type: \"active\",\n                        refetchType: \"active\",\n                    },\n                    invalidationOptions: { cancelRefetch: false },\n                });\n            }\n\n            onLiveEvent?.(event);\n            onLiveEventContextCallback?.(event);\n        };\n\n        if (liveMode && liveMode !== \"off\" && enabled) {\n            subscription = liveDataContext?.subscribe({\n                channel,\n                params: {\n                    resource: resource?.name,\n                    ...params,\n                },\n                types,\n                callback,\n            });\n        }\n\n        return () => {\n            if (subscription) {\n                liveDataContext?.unsubscribe(subscription);\n            }\n        };\n    }, [enabled]);\n};\n","import React from \"react\";\n\nimport { ILiveContext, ILiveContextProvider } from \"./ILiveContext\";\n\nexport const LiveContext = React.createContext<ILiveContext>(undefined);\n\nexport const LiveContextProvider: React.FC<ILiveContextProvider> = ({\n    liveProvider,\n    children,\n}) => {\n    return (\n        <LiveContext.Provider value={liveProvider}>\n            {children}\n        </LiveContext.Provider>\n    );\n};\n","import { useContext } from \"react\";\n\nimport { ResourceContext } from \"@contexts/resource\";\nimport {\n    Action,\n    BaseKey,\n    IResourceItem,\n    ResourceRouterParams,\n} from \"../../../interfaces\";\nimport { useRouterContext, useResourceWithRoute } from \"@hooks\";\nimport { useRouterType } from \"../../../contexts/router-picker\";\nimport { useParsed } from \"../../router/use-parsed\";\nimport { pickResource } from \"../../../definitions/helpers/pick-resource\";\n\nexport type UseResourceLegacyProps = {\n    /**\n     * Determines which resource to use for redirection\n     * @deprecated resourceName deprecated. Use resourceNameOrRouteName instead # https://github.com/refinedev/refine/issues/1618\n     */\n    resourceName?: string;\n    /**\n     * Determines which resource to use for redirection\n     * @default Resource name that it reads from route\n     */\n    resourceNameOrRouteName?: string;\n    /**\n     * Adds id to the end of the URL\n     * @deprecated resourceName deprecated. Use resourceNameOrRouteName instead # https://github.com/refinedev/refine/issues/1618\n     */\n    recordItemId?: BaseKey;\n};\n\n/**\n * Matches the resource by identifier.\n * If not provided, the resource from the route will be returned.\n * If your resource does not explicitly define an identifier, the resource name will be used.\n */\nexport type UseResourceParam = string | undefined;\n\ntype SelectReturnType<T extends boolean> = T extends true\n    ? { resource: IResourceItem; identifier: string }\n    : { resource: IResourceItem; identifier: string } | undefined;\n\nexport type UseResourceReturnType = {\n    resources: IResourceItem[];\n    resource?: IResourceItem;\n    /**\n     * @deprecated Use `resource.name` instead when you need to get the resource name.\n     */\n    resourceName?: string;\n    id?: BaseKey;\n    action?: Action;\n    select: <T extends boolean = true>(\n        resourceName: string,\n        force?: T,\n    ) => SelectReturnType<T>;\n    identifier?: string;\n};\n\ntype UseResourceReturnTypeWithResource = UseResourceReturnType & {\n    resource: IResourceItem;\n    identifier: string;\n};\n\n/**\n * @deprecated Use `useResource` with `identifier` property instead. (`identifier` does not check by route name in new router)\n */\nexport function useResource(\n    props: UseResourceLegacyProps,\n): UseResourceReturnType;\nexport function useResource(): UseResourceReturnType;\nexport function useResource<TIdentifier = UseResourceParam>(\n    identifier: TIdentifier,\n): TIdentifier extends NonNullable<UseResourceParam>\n    ? UseResourceReturnTypeWithResource\n    : UseResourceReturnType;\n/**\n * `useResource` is used to get `resources` that are defined as property of the `<Refine>` component.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/resource/useResource} for more details.\n */\nexport function useResource(\n    args?: UseResourceLegacyProps | UseResourceParam,\n): UseResourceReturnType {\n    const { resources } = useContext(ResourceContext);\n\n    const routerType = useRouterType();\n\n    const params = useParsed();\n\n    const oldProps = {\n        resourceName:\n            args && typeof args !== \"string\" ? args.resourceName : args,\n        resourceNameOrRouteName:\n            args && typeof args !== \"string\"\n                ? args.resourceNameOrRouteName\n                : args,\n        recordItemId:\n            args && typeof args !== \"string\" ? args.recordItemId : undefined,\n    };\n\n    const select = <T extends boolean = true>(\n        resourceName: string,\n        force = true,\n    ): SelectReturnType<T> => {\n        const isLegacy = routerType === \"legacy\";\n        const pickedResource = pickResource(resourceName, resources, isLegacy);\n\n        if (pickedResource) {\n            return {\n                resource: pickedResource,\n                identifier: pickedResource.identifier ?? pickedResource.name,\n            } as SelectReturnType<T>;\n        }\n\n        if (force) {\n            const resource: IResourceItem = {\n                name: resourceName,\n                identifier: resourceName,\n            };\n\n            const identifier = resource.identifier ?? resource.name;\n\n            return {\n                resource,\n                identifier,\n            } as SelectReturnType<T>;\n        }\n\n        return undefined as SelectReturnType<T>;\n    };\n\n    /**\n     * Legacy Router - Start\n     *\n     * using `useParams` and `route` to match resource and get params.\n     */\n    const resourceWithRoute = useResourceWithRoute();\n\n    const { useParams } = useRouterContext();\n\n    const legacyParams = useParams<Partial<ResourceRouterParams>>();\n\n    if (routerType === \"legacy\") {\n        const resourceKeyToCheck = oldProps.resourceNameOrRouteName\n            ? oldProps.resourceNameOrRouteName\n            : legacyParams.resource;\n\n        const legacyResource = resourceKeyToCheck\n            ? resourceWithRoute(resourceKeyToCheck)\n            : undefined;\n        const legacyId = oldProps?.recordItemId ?? legacyParams.id;\n        const legacyAction = legacyParams.action;\n        const legacyResourceName =\n            oldProps?.resourceName ?? legacyResource?.name;\n        const legacyIdentifier =\n            legacyResource?.identifier ?? legacyResource?.name;\n\n        return {\n            resources,\n            resource: legacyResource,\n            resourceName: legacyResourceName,\n            id: legacyId,\n            action: legacyAction,\n            select,\n            identifier: legacyIdentifier,\n        };\n    }\n    /** Legacy Router - End */\n\n    /** New Router */\n    let resource: IResourceItem | undefined = undefined;\n    // we try to pick the resource from props first\n    const identifier =\n        typeof args === \"string\" ? args : oldProps?.resourceNameOrRouteName;\n    if (identifier) {\n        const pickedFromProps = pickResource(identifier, resources);\n        if (pickedFromProps) {\n            resource = pickedFromProps;\n        } else {\n            resource = {\n                name: identifier as string,\n            };\n        }\n    } else if (params?.resource) {\n        resource = params.resource;\n    }\n\n    return {\n        resources,\n        resource,\n        resourceName: resource?.name,\n        id: params.id,\n        action: params.action,\n        select,\n        identifier: resource?.identifier ?? resource?.name,\n    };\n}\n","import React from \"react\";\n\nimport { IResourceContext } from \"./IResourceContext\";\nimport {\n    IResourceItem,\n    ResourceProps,\n} from \"../../interfaces/bindings/resource\";\nimport { useDeepMemo } from \"@hooks/deepMemo\";\nimport { legacyResourceTransform } from \"@definitions/helpers\";\n\nexport {\n    IResourceItem,\n    IResourceComponents,\n    IResourceComponentsProps,\n    IResourceContext,\n} from \"../../interfaces/bindings/resource\";\n\nexport const ResourceContext = React.createContext<IResourceContext>({\n    resources: [],\n});\n\nexport const ResourceContextProvider: React.FC<\n    React.PropsWithChildren<{ resources: ResourceProps[] }>\n> = ({ resources: providedResources, children }) => {\n    const resources: IResourceItem[] = useDeepMemo(() => {\n        return legacyResourceTransform(providedResources ?? []);\n    }, [providedResources]);\n\n    return (\n        <ResourceContext.Provider value={{ resources }}>\n            {children}\n        </ResourceContext.Provider>\n    );\n};\n","import React, { useMemo } from \"react\";\nimport { useMemoized } from \"@hooks/memoized\";\n\n/**\n * Hook that memoizes the given dependency array and checks the consecutive calls with deep equality and returns the same value as the first call if dependencies are not changed.\n * @internal\n */\nexport const useDeepMemo = <T,>(\n    fn: () => T,\n    dependencies: React.DependencyList,\n): T => {\n    const memoizedDependencies = useMemoized(dependencies);\n\n    const value = useMemo(fn, memoizedDependencies);\n\n    return value;\n};\n","import { useRef } from \"react\";\nimport isEqual from \"lodash/isEqual\";\n\n/**\n * Hook that memoizes the given value with deep equality.\n * @internal\n */\nexport const useMemoized = <T = unknown,>(value: T): T => {\n    const ref = useRef(value);\n\n    if (!isEqual(ref.current, value)) {\n        ref.current = value;\n    }\n\n    return ref.current;\n};\n","import React from \"react\";\n\n/**\n * This context is used to determine which router to use.\n *\n * This is a temporary solution until we remove the legacy router.\n */\n\nexport const RouterPickerContext = React.createContext<\"legacy\" | \"new\">(\"new\");\n\nexport const RouterPickerProvider = RouterPickerContext.Provider;\n\n/**\n * This is a temporary hook to determine which router to use.\n * It will be removed once the legacy router is removed.\n * @internal This is an internal hook.\n */\nexport const useRouterType = () => {\n    const value = React.useContext(RouterPickerContext);\n    return value;\n};\n","import React from \"react\";\nimport { useParse } from \"../use-parse\";\n\nexport const useParsed = <\n    TParams extends Record<string, any> = Record<string, any>,\n>() => {\n    const parse = useParse();\n\n    const parsed = React.useMemo(() => parse<TParams>(), [parse]);\n\n    return parsed;\n};\n","import React, { createContext, PropsWithChildren } from \"react\";\nimport { RouterBindings } from \"src/interfaces\";\n\nconst defaultBindings = {};\n\nexport const RouterBindingsContext =\n    createContext<RouterBindings>(defaultBindings);\n\nexport const RouterBindingsProvider: React.FC<\n    PropsWithChildren<{ router?: RouterBindings }>\n> = ({ children, router }) => {\n    return (\n        <RouterBindingsContext.Provider value={router ?? defaultBindings}>\n            {children}\n        </RouterBindingsContext.Provider>\n    );\n};\n","import { RouterBindingsContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\nimport { ParseFunction, ParseResponse } from \"src/interfaces\";\n\ntype UseParseType = () => <\n    TParams extends Record<string, any> = Record<string, any>,\n>() => ParseResponse<TParams>;\n\nexport const useParse: UseParseType = () => {\n    const bindings = useContext(RouterBindingsContext);\n\n    const useParse = React.useMemo(\n        () =>\n            bindings?.parse ??\n            (() =>\n                (() => {\n                    return {};\n                }) as ParseFunction),\n        [bindings?.parse],\n    );\n\n    const parse = useParse();\n\n    return parse as ReturnType<UseParseType>;\n};\n","import { useContext, useCallback } from \"react\";\nimport { ResourceContext } from \"@contexts/resource\";\nimport { IResourceItem } from \"../../../interfaces\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\n\nexport type UseResourceWithRouteReturnType = (route: string) => IResourceItem;\n\n/**\n * @deprecated Use `useResource` hook instead.\n * @internal This hook is for internal use only. And is kept for backward compatibility.\n */\nexport const useResourceWithRoute = (): UseResourceWithRouteReturnType => {\n    const { resources } = useContext(ResourceContext);\n\n    const resourceWithRoute = useCallback(\n        (route: string) => {\n            const picked = pickResource(route, resources, true);\n            if (picked) {\n                return picked;\n            }\n            return { name: route, route: route } as IResourceItem;\n        },\n        [resources],\n    );\n\n    return resourceWithRoute;\n};\n","import { useCallback } from \"react\";\nimport {\n    InvalidateOptions,\n    InvalidateQueryFilters,\n    useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { useResource } from \"@hooks/resource\";\nimport { pickDataProvider } from \"@definitions\";\nimport { BaseKey, IQueryKeys } from \"../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nexport type UseInvalidateProp = {\n    resource?: string;\n    id?: BaseKey;\n    dataProviderName?: string;\n    invalidates: Array<keyof IQueryKeys> | false;\n    invalidationFilters?: InvalidateQueryFilters;\n    invalidationOptions?: InvalidateOptions;\n};\n\nexport const useInvalidate = (): ((\n    props: UseInvalidateProp,\n) => Promise<void>) => {\n    const { resources } = useResource();\n    const queryClient = useQueryClient();\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const invalidate = useCallback(\n        async ({\n            resource,\n            dataProviderName,\n            invalidates,\n            id,\n            invalidationFilters = { type: \"all\", refetchType: \"active\" },\n            invalidationOptions = { cancelRefetch: false },\n        }: UseInvalidateProp) => {\n            if (invalidates === false) {\n                return;\n            }\n            const dp = pickDataProvider(resource, dataProviderName, resources);\n\n            const queryKey = keys()\n                .data(dp)\n                .resource(resource ?? \"\");\n\n            await Promise.all(\n                invalidates.map((key) => {\n                    switch (key) {\n                        case \"all\":\n                            return queryClient.invalidateQueries(\n                                keys().data(dp).get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        case \"list\":\n                            return queryClient.invalidateQueries(\n                                queryKey.action(\"list\").get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        case \"many\":\n                            return queryClient.invalidateQueries(\n                                queryKey.action(\"many\").get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        case \"resourceAll\":\n                            return queryClient.invalidateQueries(\n                                queryKey.get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        case \"detail\":\n                            return queryClient.invalidateQueries(\n                                queryKey\n                                    .action(\"one\")\n                                    .id(id || \"\")\n                                    .get(preferLegacyKeys),\n                                invalidationFilters,\n                                invalidationOptions,\n                            );\n                        default:\n                            return;\n                    }\n                }),\n            );\n\n            return;\n        },\n        [],\n    );\n\n    return invalidate;\n};\n","import { useContext } from \"react\";\nimport { LiveModeProps, IRefineContext } from \"../../../interfaces\";\nimport { RefineContext } from \"@contexts/refine\";\n\nexport const useLiveMode = (\n    liveMode: LiveModeProps[\"liveMode\"],\n): LiveModeProps[\"liveMode\"] => {\n    const { liveMode: liveModeFromContext } =\n        useContext<IRefineContext>(RefineContext);\n\n    return liveMode ?? liveModeFromContext;\n};\n","import { useContext, useEffect } from \"react\";\n\nimport { LiveContext } from \"@contexts/live\";\nimport {\n    BaseKey,\n    CrudFilters,\n    CrudSorting,\n    ILiveContext,\n    LiveEvent,\n    MetaQuery,\n    Pagination,\n} from \"../../../interfaces\";\n\nexport type UseSubscriptionProps = {\n    /**\n     * Channel name to subscribe.\n     */\n    channel: string;\n    /**\n     * Callback that is run when new events from subscription arrive.\n     */\n    onLiveEvent: (event: LiveEvent) => void;\n    /**\n     * Type of events to subscribe. `\"*\"` means all events.\n     * @type Array<\"deleted\" | \"updated\" | \"created\" | \"*\" | string>\n     */\n    types?: LiveEvent[\"type\"][];\n    /**\n     * Determines subscription should subscribe or not.\n     * @type Array<\"deleted\" | \"updated\" | \"created\" | \"*\" | string>\n     */\n    enabled?: boolean;\n    params?: {\n        ids?: BaseKey[];\n        id?: BaseKey;\n        meta?: MetaQuery;\n        /**\n         * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n         */\n        metaData?: MetaQuery;\n        pagination?: Pagination;\n        /**\n         * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n         */\n        hasPagination?: boolean;\n        /**\n         * @deprecated `sort` is deprecated, use `sorters` instead.\n         */\n        sort?: CrudSorting;\n        sorters?: CrudSorting;\n        filters?: CrudFilters;\n        subscriptionType?: \"useList\" | \"useOne\" | \"useMany\";\n        resource?: string;\n        [key: string]: any;\n    };\n};\n\nexport const useSubscription = ({\n    params,\n    channel,\n    types = [\"*\"],\n    enabled = true,\n    onLiveEvent,\n}: UseSubscriptionProps): void => {\n    const liveDataContext = useContext<ILiveContext>(LiveContext);\n\n    useEffect(() => {\n        let subscription: any;\n\n        if (enabled) {\n            subscription = liveDataContext?.subscribe({\n                channel,\n                params,\n                types,\n                callback: onLiveEvent,\n            });\n        }\n\n        return () => {\n            if (subscription) {\n                liveDataContext?.unsubscribe(subscription);\n            }\n        };\n    }, [enabled]);\n};\n","import { useContext } from \"react\";\n\nimport { LiveContext } from \"@contexts/live\";\nimport { ILiveContext } from \"../../../interfaces\";\n\nexport const usePublish: () => NonNullable<ILiveContext>[\"publish\"] = () => {\n    const liveContext = useContext<ILiveContext>(LiveContext);\n\n    return liveContext?.publish;\n};\n","import { useContext } from \"react\";\n\nimport { UndoableQueueContext } from \"@contexts/undoableQueue\";\nimport { IUndoableQueue, IUndoableQueueContext } from \"../../../interfaces\";\n\nexport type UseCancelNotificationType = () => {\n    notifications: IUndoableQueue[];\n    notificationDispatch: React.Dispatch<any>;\n};\n\nexport const useCancelNotification: UseCancelNotificationType = () => {\n    const { notifications, notificationDispatch } =\n        useContext<IUndoableQueueContext>(UndoableQueueContext);\n\n    return { notifications, notificationDispatch };\n};\n","import { useContext } from \"react\";\n\nimport { NotificationContext } from \"@contexts/notification\";\nimport { INotificationContext } from \"../../../interfaces\";\n\nexport const useNotification = (): INotificationContext => {\n    const { open, close } = useContext(NotificationContext);\n\n    return { open, close };\n};\n","import React, { createContext } from \"react\";\n\nimport { INotificationContext } from \"./INotificationContext\";\n\n/** @deprecated default value for notification context has no use and is an empty object.  */\nexport const defaultNotificationProvider: INotificationContext = {};\n\nexport const NotificationContext = createContext<INotificationContext>({});\n\nexport const NotificationContextProvider: React.FC<\n    INotificationContext & {\n        children?: React.ReactNode;\n    }\n> = ({ open, close, children }) => {\n    return (\n        <NotificationContext.Provider value={{ open, close }}>\n            {children}\n        </NotificationContext.Provider>\n    );\n};\n","import { useCallback } from \"react\";\n\nimport { OpenNotificationParams } from \"../../../interfaces\";\nimport { useNotification } from \"@hooks\";\n\nexport const useHandleNotification = (): typeof handleNotification => {\n    const { open } = useNotification();\n\n    const handleNotification = useCallback(\n        (\n            notification: OpenNotificationParams | false | undefined,\n            fallbackNotification?: OpenNotificationParams,\n        ) => {\n            if (notification !== false) {\n                if (notification) {\n                    open?.(notification);\n                } else if (fallbackNotification) {\n                    open?.(fallbackNotification);\n                }\n            }\n        },\n        [],\n    );\n\n    return handleNotification;\n};\n","import { useCallback, useContext } from \"react\";\nimport { TranslationContext } from \"@contexts/translation\";\n\n/**\n * If you need to change the locale at runtime, refine provides the `useSetLocale` hook.\n * It returns the changeLocale method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useSetLocale} for more details.\n */\nexport const useSetLocale = () => {\n    const { i18nProvider } = useContext(TranslationContext);\n\n    return useCallback((lang: string) => i18nProvider?.changeLocale(lang), []);\n};\n","import React from \"react\";\n\nimport { ITranslationContext } from \"../../interfaces\";\n\n/** @deprecated default value for translation context has no use and is an empty object.  */\nexport const defaultProvider: ITranslationContext = {};\n\nexport const TranslationContext = React.createContext<ITranslationContext>({});\n\nexport const TranslationContextProvider: React.FC<\n    ITranslationContext & {\n        children?: React.ReactNode;\n    }\n> = ({ children, i18nProvider }) => {\n    return (\n        <TranslationContext.Provider\n            value={{\n                i18nProvider: i18nProvider,\n            }}\n        >\n            {children}\n        </TranslationContext.Provider>\n    );\n};\n","import { useContext, useMemo } from \"react\";\nimport { TranslationContext } from \"@contexts/translation\";\n\n/**\n * If you need to translate the texts in your own components, refine provides the `useTranslate` hook.\n * It returns the translate method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useTranslate} for more details.\n */\nexport const useTranslate = () => {\n    const { i18nProvider } = useContext(TranslationContext);\n\n    const fn = useMemo(() => {\n        function translate(\n            key: string,\n            options?: any,\n            defaultMessage?: string,\n        ): string;\n        function translate(key: string, defaultMessage?: string): string;\n\n        function translate(\n            key: string,\n            options?: string | any,\n            defaultMessage?: string,\n        ) {\n            return (\n                i18nProvider?.translate(key, options, defaultMessage) ??\n                defaultMessage ??\n                (typeof options === \"string\" &&\n                typeof defaultMessage === \"undefined\"\n                    ? options\n                    : key)\n            );\n        }\n\n        return translate;\n    }, [i18nProvider]);\n\n    return fn;\n};\n","import { useContext, useCallback } from \"react\";\nimport { TranslationContext } from \"@contexts/translation\";\n\nexport type UseGetLocaleType = () => () => string | undefined;\n\n/**\n * If you need to know the current locale, refine provides the `useGetLocale` hook.\n * It returns the `getLocale` method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useGetLocale} for more details.\n */\nexport const useGetLocale: UseGetLocaleType = () => {\n    const { i18nProvider } = useContext(TranslationContext);\n\n    return useCallback(() => i18nProvider?.getLocale(), []);\n};\n","import { useState } from \"react\";\nimport { useResource, useDataProvider, useMeta } from \"@hooks\";\nimport {\n    BaseRecord,\n    MapDataFn,\n    CrudSorting,\n    CrudFilters,\n    MetaQuery,\n} from \"../../interfaces\";\nimport {\n    useUserFriendlyName,\n    pickDataProvider,\n    pickNotDeprecated,\n} from \"@definitions\";\nimport { ExportToCsv, Options } from \"export-to-csv-fix-source-map\";\n\ntype UseExportOptionsType<\n    TData extends BaseRecord = BaseRecord,\n    TVariables = any,\n> = {\n    /**\n     * Resource name for API data interactions\n     * @default Resource name that it reads from route\n     * @deprecated `resourceName` is deprecated. Use `resource` instead.\n     */\n    resourceName?: string;\n    /**\n     * Resource name for API data interactions\n     * @default Resource name that it reads from route\n     */\n    resource?: string;\n    /**\n     * A mapping function that runs for every record. Mapped data will be included in the file contents\n     */\n    mapData?: MapDataFn<TData, TVariables>;\n    /**\n     *  Sorts records\n     *  @deprecated `sorter` is deprecated. Use `sorters` instead.\n     */\n    sorter?: CrudSorting;\n    /**\n     *  Sorts records\n     */\n    sorters?: CrudSorting;\n    /**\n     *  Filters records\n     */\n    filters?: CrudFilters;\n    maxItemCount?: number;\n    /**\n     *  Requests to fetch data are made as batches by page size. By default, it is 20. Used for `getList` method of `DataProvider`\n     */\n    pageSize?: number;\n    /**\n     *  Used for exporting options\n     *  @type [Options](https://github.com/alexcaza/export-to-csv)\n     */\n    exportOptions?: Options;\n    /**\n     *  Metadata query for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     *  Metadata query for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n    /**\n     *  Callback to handle error events of this hook\n     */\n    onError?: (error: any) => void;\n};\n\ntype UseExportReturnType = {\n    isLoading: boolean;\n    triggerExport: () => Promise<void>;\n};\n\n/**\n * `useExport` hook allows you to make your resources exportable.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useExport} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TVariables - Values for params.\n *\n */\nexport const useExport = <\n    TData extends BaseRecord = BaseRecord,\n    TVariables = any,\n>({\n    resourceName,\n    resource: resourceFromProps,\n    sorter,\n    sorters,\n    filters,\n    maxItemCount,\n    pageSize = 20,\n    mapData = (item) => item as any,\n    exportOptions,\n    meta,\n    metaData,\n    dataProviderName,\n    onError,\n}: UseExportOptionsType<TData, TVariables> = {}): UseExportReturnType => {\n    const [isLoading, setIsLoading] = useState(false);\n\n    const dataProvider = useDataProvider();\n    const getMeta = useMeta();\n    const { resource, resources, identifier } = useResource(\n        pickNotDeprecated(resourceFromProps, resourceName),\n    );\n    const getFriendlyName = useUserFriendlyName();\n\n    const filename = `${getFriendlyName(\n        identifier,\n        \"plural\",\n    )}-${new Date().toLocaleString()}`;\n\n    const { getList } = dataProvider(\n        pickDataProvider(identifier, dataProviderName, resources),\n    );\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    const triggerExport = async () => {\n        setIsLoading(true);\n\n        let rawData: BaseRecord[] = [];\n\n        let current = 1;\n        let preparingData = true;\n        while (preparingData) {\n            try {\n                const { data, total } = await getList<TData>({\n                    resource: resource?.name ?? \"\",\n                    filters,\n                    sort: pickNotDeprecated(sorters, sorter),\n                    sorters: pickNotDeprecated(sorters, sorter),\n                    pagination: {\n                        current,\n                        pageSize,\n                        mode: \"server\",\n                    },\n                    meta: combinedMeta,\n                    metaData: combinedMeta,\n                });\n\n                current++;\n\n                rawData.push(...data);\n\n                if (maxItemCount && rawData.length >= maxItemCount) {\n                    rawData = rawData.slice(0, maxItemCount);\n                    preparingData = false;\n                }\n\n                if (total === rawData.length) {\n                    preparingData = false;\n                }\n            } catch (error) {\n                setIsLoading(false);\n                preparingData = false;\n\n                onError?.(error);\n\n                return;\n            }\n        }\n\n        const csvExporter = new ExportToCsv({\n            filename,\n            useKeysAsHeaders: true,\n            ...exportOptions,\n        });\n\n        csvExporter.generateCsv(rawData.map(mapData as any));\n\n        setIsLoading(false);\n    };\n\n    return {\n        isLoading,\n        triggerExport,\n    };\n};\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport warnOnce from \"warn-once\";\nimport debounce from \"lodash/debounce\";\n\nimport {\n    useWarnAboutChange,\n    useCreate,\n    useUpdate,\n    useRedirectionAfterSubmission,\n    useMutationMode,\n    useOne,\n    useRefineContext,\n    useMeta,\n    useInvalidate,\n} from \"@hooks\";\n\nimport {\n    BaseRecord,\n    CreateResponse,\n    GetOneResponse,\n    HttpError,\n    LiveModeProps,\n    RedirectAction,\n    SuccessErrorNotification,\n    UpdateResponse,\n    MutationMode,\n    BaseKey,\n    IQueryKeys,\n    FormAction,\n    MetaQuery,\n    AutoSaveProps,\n    AutoSaveReturnType,\n    OptimisticUpdateMapType,\n} from \"../../interfaces\";\nimport {\n    UpdateParams,\n    UseUpdateProps,\n    UseUpdateReturnType,\n} from \"../data/useUpdate\";\nimport { UseCreateProps, UseCreateReturnType } from \"../data/useCreate\";\nimport { redirectPage } from \"@definitions/helpers\";\nimport { useResource } from \"../resource/useResource\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type ActionParams = {\n    /**\n     * Type of the form mode\n     * @default Action that it reads from route otherwise \"create\" is used\n     */\n    action?: FormAction;\n};\n\ntype ActionFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = {\n    /**\n     * Resource name for API data interactions\n     * @default Resource name that it reads from route\n     */\n    resource?: string;\n    /**\n     * Record id for fetching\n     * @default Id that it reads from the URL\n     */\n    id?: BaseKey;\n    /**\n     * Page to redirect after a succesfull mutation\n     * @type `\"show\" | \"edit\" | \"list\" | \"create\" | false`\n     * @default `\"list\"`\n     */\n    redirect?: RedirectAction;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * Metadata query for dataProvider\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * Metadata to pass for the `useOne` query\n     */\n    queryMeta?: MetaQuery;\n    /**\n     * Metadata to pass for the mutation (`useCreate` for `create` and `clone` actions, `useUpdate` for `edit` action)\n     */\n    mutationMeta?: MetaQuery;\n    /**\n     * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n     * @default `\"pessimistic\"*`\n     */\n    mutationMode?: MutationMode;\n    /**\n     * Called when a mutation is successful\n     */\n    onMutationSuccess?: (\n        data: CreateResponse<TResponse> | UpdateResponse<TResponse>,\n        variables: TVariables,\n        context: any,\n        isAutoSave?: boolean,\n    ) => void;\n    /**\n     * Called when a mutation encounters an error\n     */\n    onMutationError?: (\n        error: TResponseError,\n        variables: TVariables,\n        context: any,\n        isAutoSave?: boolean,\n    ) => void;\n    /**\n     * Duration to wait before executing mutations when `mutationMode = \"undoable\"`\n     * @default `5000*`\n     */\n    undoableTimeout?: number;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n    /**\n     * You can use it to manage the invalidations that will occur at the end of the mutation.\n     * @type  `all`, `resourceAll`, `list`, `many`, `detail`, `false`\n     * @default `[\"list\", \"many\", \"detail\"]`\n     */\n    invalidates?: Array<keyof IQueryKeys>;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options of useOne hook used while in edit mode.\n     */\n    queryOptions?: UseQueryOptions<\n        GetOneResponse<TQueryFnData>,\n        TError,\n        GetOneResponse<TData>\n    >;\n    /**\n     * react-query's [useMutation](https://tanstack.com/query/v4/docs/reference/useMutation) options of useCreate hook used while submitting in create and clone modes.\n     */\n    createMutationOptions?: UseCreateProps<\n        TResponse,\n        TResponseError,\n        TVariables\n    >[\"mutationOptions\"];\n    /**\n     * react-query's [useMutation](https://tanstack.com/query/v4/docs/reference/useMutation) options of useUpdate hook used while submitting in edit mode.\n     */\n    updateMutationOptions?: UseUpdateProps<\n        TResponse,\n        TResponseError,\n        TVariables\n    >[\"mutationOptions\"];\n    /**\n     * If you customize the [`optimisticUpdateMap`](https://refine.dev/docs/api-reference/core/hooks/data/useUpdateMany/#optimisticupdatemap) option, you can use it to manage the invalidations that will occur at the end of the mutation.\n     * @default {\n     *   list: true,\n     *   many: true,\n     *   detail: true,\n     * }\n     */\n    optimisticUpdateMap?: OptimisticUpdateMapType<TResponse, TVariables>;\n} & SuccessErrorNotification<\n    UpdateResponse<TResponse> | CreateResponse<TResponse>,\n    TResponseError,\n    { id: BaseKey; values: TVariables } | TVariables\n> &\n    ActionParams &\n    LiveModeProps;\n\nexport type UseFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = ActionFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> &\n    ActionParams &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps &\n    AutoSaveProps<TVariables>;\n\nexport type UseFormReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = {\n    id?: BaseKey;\n    setId: Dispatch<SetStateAction<BaseKey | undefined>>;\n    queryResult?: QueryObserverResult<GetOneResponse<TData>>;\n    mutationResult:\n        | UseUpdateReturnType<TResponse, TResponseError, TVariables>\n        | UseCreateReturnType<TResponse, TResponseError, TVariables>;\n    formLoading: boolean;\n    onFinish: (\n        values: TVariables,\n    ) => Promise<CreateResponse<TResponse> | UpdateResponse<TResponse> | void>;\n    redirect: (\n        redirect: RedirectAction,\n        idFromFunction?: BaseKey | undefined,\n        routeParams?: Record<string, string | number>,\n    ) => void;\n} & UseLoadingOvertimeReturnType &\n    AutoSaveReturnType<TResponse, TResponseError, TVariables>;\n\n/**\n * `useForm` is used to manage forms. It uses Ant Design {@link https://ant.design/components/form/ Form} data scope management under the hood and returns the required props for managing the form actions.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useForm} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n * @typeParam TResponse - Result data returned by the mutation function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TData`\n * @typeParam TResponseError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}. Defaults to `TError`\n *\n */\nexport const useForm = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n>({\n    resource: resourceFromProps,\n    action: actionFromProps,\n    id: idFromProps,\n    onMutationSuccess,\n    onMutationError,\n    redirect: redirectFromProps,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    queryMeta,\n    mutationMeta,\n    mutationMode: mutationModeProp,\n    liveMode,\n    onLiveEvent,\n    liveParams,\n    undoableTimeout,\n    dataProviderName,\n    invalidates,\n    queryOptions,\n    createMutationOptions,\n    updateMutationOptions,\n    overtimeOptions,\n    autoSave,\n    optimisticUpdateMap,\n}: UseFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> = {}): UseFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n> => {\n    const invalidate = useInvalidate();\n    const { options } = useRefineContext();\n    const getMeta = useMeta();\n\n    const {\n        resource,\n        id: idFromRoute,\n        action: actionFromRoute,\n        identifier,\n    } = useResource(resourceFromProps);\n    const { identifier: inferredIdentifier } = useResource();\n\n    /** We only accept `id` from URL params if `resource` is not explicitly passed. */\n    /** This is done to avoid sending wrong requests for custom `resource` and an async `id` */\n    const getDefaultId = () => {\n        const idFromPropsOrRoute = idFromProps ?? idFromRoute;\n\n        if (resourceFromProps && resourceFromProps !== inferredIdentifier) {\n            return idFromProps;\n        }\n\n        return idFromPropsOrRoute;\n    };\n    const defaultId = getDefaultId();\n\n    // id state is needed to determine selected record in a context for example useModal\n    const [id, setId] = React.useState<BaseKey | undefined>(defaultId);\n\n    /**\n     * In some cases, `id` from the router params is not available at the first render.\n     *\n     * (e.g. when using `Next.js` and client-side-rendering, `router` is not ready to use at the first render)\n     *\n     * We're watching for `defaultId` changes and setting `id` state if it's not equal to `defaultId`.\n     */\n    React.useEffect(() => {\n        setId(defaultId);\n    }, [defaultId]);\n\n    const getAction = () => {\n        if (actionFromProps) return actionFromProps;\n        else if (actionFromRoute === \"edit\" || actionFromRoute === \"clone\")\n            return actionFromRoute;\n        else return \"create\";\n    };\n    const action = getAction();\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    const { mutationMode: mutationModeContext } = useMutationMode();\n    const mutationMode = mutationModeProp ?? mutationModeContext;\n\n    const isCreate = action === \"create\";\n    const isEdit = action === \"edit\";\n    const isClone = action === \"clone\";\n\n    warnOnce(\n        (isClone || isEdit) &&\n            Boolean(resourceFromProps) &&\n            !Boolean(idFromProps) &&\n            queryOptions?.enabled !== false,\n        `[useForm]: action: \"${action}\", resource: \"${identifier}\", id: ${id} \\n\\n` +\n            `If you don't use the \\`setId\\` method to set the \\`id\\`, you should pass the \\`id\\` prop to \\`useForm\\`. Otherwise, \\`useForm\\` will not be able to infer the \\`id\\` from the current URL. \\n\\n` +\n            `See https://refine.dev/docs/api-reference/core/hooks/useForm/#resource`,\n    );\n\n    /**\n     * Designated `redirect` route\n     */\n    const designatedRedirectAction = redirectPage({\n        redirectFromProps,\n        action,\n        redirectOptions: options.redirect,\n    });\n\n    const enableQuery = id !== undefined && (isEdit || isClone);\n\n    const queryResult = useOne<TQueryFnData, TError, TData>({\n        resource: identifier,\n        id: id ?? \"\",\n        queryOptions: {\n            enabled: enableQuery,\n            ...queryOptions,\n        },\n        liveMode,\n        onLiveEvent,\n        liveParams,\n        meta: { ...combinedMeta, ...queryMeta },\n        metaData: { ...combinedMeta, ...queryMeta },\n        dataProviderName,\n    });\n\n    const { isFetching: isFetchingQuery } = queryResult;\n\n    const mutationResultCreate = useCreate<\n        TResponse,\n        TResponseError,\n        TVariables\n    >({\n        mutationOptions: createMutationOptions,\n    });\n    const { mutate: mutateCreate, isLoading: isLoadingCreate } =\n        mutationResultCreate;\n\n    const mutationResultUpdate = useUpdate<\n        TResponse,\n        TResponseError,\n        TVariables\n    >({\n        mutationOptions: updateMutationOptions,\n    });\n    const { mutate: mutateUpdate, isLoading: isLoadingUpdate } =\n        mutationResultUpdate;\n\n    const autoSaveMutation = useUpdate<TResponse, TResponseError, TVariables>(\n        {},\n    );\n\n    const { setWarnWhen } = useWarnAboutChange();\n\n    const handleSubmitWithRedirect = useRedirectionAfterSubmission();\n\n    const onFinishCreate = async (values: TVariables) => {\n        setWarnWhen(false);\n\n        const onSuccess = (id?: BaseKey) => {\n            handleSubmitWithRedirect({\n                redirect: designatedRedirectAction,\n                resource,\n                id,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n        };\n\n        if (mutationMode !== \"pessimistic\") {\n            setTimeout(() => {\n                onSuccess();\n            });\n        }\n\n        return new Promise<CreateResponse<TResponse> | void>(\n            (resolve, reject) => {\n                if (mutationMode !== \"pessimistic\") {\n                    resolve();\n                }\n\n                if (!resource) return;\n\n                return mutateCreate(\n                    {\n                        values,\n                        resource: identifier ?? resource.name,\n                        successNotification,\n                        errorNotification,\n                        meta: { ...combinedMeta, ...mutationMeta },\n                        metaData: { ...combinedMeta, ...mutationMeta },\n                        dataProviderName,\n                        invalidates,\n                    },\n                    {\n                        onSuccess: (data, _, context) => {\n                            if (onMutationSuccess) {\n                                onMutationSuccess(data, values, context);\n                            }\n\n                            const responseId = data?.data?.id;\n\n                            onSuccess(responseId);\n\n                            resolve(data);\n                        },\n                        onError: (error: TResponseError, _, context) => {\n                            if (onMutationError) {\n                                return onMutationError(error, values, context);\n                            }\n                            reject();\n                        },\n                    },\n                );\n            },\n        );\n    };\n\n    React.useEffect(() => {\n        return () => {\n            if (\n                autoSave?.invalidateOnUnmount &&\n                autoSaveMutation.status === \"success\"\n            ) {\n                invalidate({\n                    id,\n                    invalidates: invalidates || [\"list\", \"many\", \"detail\"],\n                    dataProviderName,\n                    resource: identifier,\n                });\n            }\n        };\n    }, [autoSave?.invalidateOnUnmount, autoSaveMutation.status]);\n\n    const onFinishAutoSaveMutation = (\n        values: TVariables,\n    ): Promise<UpdateResponse<TResponse> | void> | void => {\n        if (!resource || !isEdit) return;\n\n        const variables: UpdateParams<TResponse, TResponseError, TVariables> = {\n            id: id ?? \"\",\n            values,\n            resource: identifier ?? resource.name,\n            successNotification: false,\n            errorNotification: false,\n            meta: { ...combinedMeta, ...mutationMeta },\n            metaData: { ...combinedMeta, ...mutationMeta },\n            dataProviderName,\n            invalidates: [],\n            mutationMode: \"pessimistic\",\n        };\n\n        return autoSaveMutation.mutate(variables, {\n            onSuccess: (data, _, context) => {\n                if (onMutationSuccess) {\n                    onMutationSuccess(data, values, context, true);\n                }\n            },\n            onError: (error: TResponseError, _, context) => {\n                if (onMutationError) {\n                    return onMutationError(error, values, context, true);\n                }\n            },\n        });\n    };\n\n    const onFinishAutoSave = debounce((allValues) => {\n        return onFinishAutoSaveMutation(allValues);\n    }, autoSave?.debounce || 1000);\n\n    const onFinishUpdate = async (values: TVariables) => {\n        setWarnWhen(false);\n\n        if (!resource) return;\n\n        const variables: UpdateParams<TResponse, TResponseError, TVariables> = {\n            id: id ?? \"\",\n            values,\n            resource: identifier ?? resource.name,\n            mutationMode,\n            undoableTimeout,\n            successNotification,\n            errorNotification,\n            meta: { ...combinedMeta, ...mutationMeta },\n            metaData: { ...combinedMeta, ...mutationMeta },\n            dataProviderName,\n            invalidates,\n            optimisticUpdateMap,\n        };\n\n        const onSuccess = () => {\n            handleSubmitWithRedirect({\n                redirect: designatedRedirectAction,\n                resource,\n                id,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n        };\n\n        // setWarnWhen is set to \"false\" at the start of the mutation. With the help of setTimeout we guarantee that the value false is set.\n        if (mutationMode !== \"pessimistic\") {\n            setTimeout(() => {\n                onSuccess();\n            });\n        }\n\n        // setTimeout is required to make onSuccess e.g. callbacks to work if component unmounts i.e. on route change\n        return new Promise<UpdateResponse<TResponse> | void>(\n            (resolve, reject) => {\n                if (mutationMode !== \"pessimistic\") {\n                    resolve();\n                }\n                return setTimeout(() => {\n                    mutateUpdate(variables, {\n                        onSuccess: (data, _, context) => {\n                            if (onMutationSuccess) {\n                                onMutationSuccess(data, values, context);\n                            }\n\n                            if (mutationMode === \"pessimistic\") {\n                                onSuccess();\n                            }\n\n                            resolve(data);\n                        },\n                        onError: (error: TResponseError, _, context) => {\n                            if (onMutationError) {\n                                return onMutationError(error, values, context);\n                            }\n                            reject();\n                        },\n                    });\n                });\n            },\n        );\n    };\n\n    const createResult = {\n        formLoading: isFetchingQuery || isLoadingCreate,\n        mutationResult: mutationResultCreate,\n        onFinish: onFinishCreate,\n    };\n\n    const editResult = {\n        formLoading: isFetchingQuery || isLoadingUpdate,\n        mutationResult: mutationResultUpdate,\n        onFinish: onFinishUpdate,\n    };\n\n    const result = isCreate || isClone ? createResult : editResult;\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: result.mutationResult.isLoading || queryResult.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return {\n        ...result,\n        queryResult,\n        onFinishAutoSave,\n        autoSaveProps: {\n            status: autoSaveMutation.status,\n            data: autoSaveMutation.data,\n            error: autoSaveMutation.error,\n        },\n        id,\n        setId,\n        redirect: (redirect, idFromFunction?: BaseKey | undefined) => {\n            handleSubmitWithRedirect({\n                redirect:\n                    redirect !== undefined\n                        ? redirect\n                        : isEdit\n                        ? \"list\"\n                        : \"edit\",\n                resource,\n                id: idFromFunction ?? id,\n                meta: pickNotDeprecated(meta, metaData),\n            });\n        },\n        overtime: {\n            elapsedTime,\n        },\n    };\n};\n","import { useCallback } from \"react\";\n\nimport {\n    BaseKey,\n    IResourceItem,\n    MetaDataQuery,\n    RedirectAction,\n} from \"../../interfaces\";\nimport { useNavigation } from \"@hooks\";\n\nexport type UseRedirectionAfterSubmissionType = () => (options: {\n    redirect: RedirectAction;\n    resource?: IResourceItem;\n    id?: BaseKey;\n    meta?: MetaDataQuery;\n}) => void;\n\nexport const useRedirectionAfterSubmission: UseRedirectionAfterSubmissionType =\n    () => {\n        const { show, edit, list, create } = useNavigation();\n\n        const handleSubmitWithRedirect = useCallback(\n            ({\n                redirect,\n                resource,\n                id,\n                meta = {},\n            }: {\n                redirect: RedirectAction;\n                resource?: IResourceItem;\n                id?: BaseKey;\n                meta?: MetaDataQuery;\n            }) => {\n                if (redirect && resource) {\n                    if (!!resource.show && redirect === \"show\" && id) {\n                        return show(resource, id, undefined, meta);\n                    }\n\n                    if (!!resource.edit && redirect === \"edit\" && id) {\n                        return edit(resource, id, undefined, meta);\n                    }\n\n                    if (!!resource.create && redirect === \"create\") {\n                        return create(resource, undefined, meta);\n                    }\n\n                    return list(resource, \"push\", meta);\n                } else {\n                    return;\n                }\n            },\n            [],\n        );\n\n        return handleSubmitWithRedirect;\n    };\n","import { RouterBindingsContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\n\nexport const useGo = () => {\n    const bindings = useContext(RouterBindingsContext);\n\n    const useGo = React.useMemo(\n        () => bindings?.go ?? (() => () => undefined),\n        [bindings?.go],\n    );\n\n    const go = useGo();\n\n    return go;\n};\n","import { RouterBindingsContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\n\nexport const useBack = () => {\n    const bindings = useContext(RouterBindingsContext);\n\n    const useBack = React.useMemo(\n        () => bindings?.back ?? (() => () => undefined),\n        [bindings?.back],\n    );\n\n    const back = useBack();\n\n    return back;\n};\n","import { useRouterContext, useResource } from \"@hooks\";\nimport { BaseKey, IResourceItem, MetaDataQuery } from \"../../interfaces\";\nimport { useGo } from \"@hooks/router/use-go\";\nimport { useParsed } from \"@hooks/router/use-parsed\";\nimport { useRouterType } from \"@contexts/router-picker\";\nimport { getActionRoutesFromResource } from \"@definitions/helpers/router\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\nimport { composeRoute } from \"@definitions/helpers/router/compose-route\";\nimport { useBack } from \"@hooks/router/use-back\";\n\nexport type HistoryType = \"push\" | \"replace\";\n\n/**\n * `refine` uses {@link https://reactrouter.com/en/hooks/use-navigate `React Router`} and comes with all redirects out of the box.\n * It allows you to manage your routing operations in refine.\n * Using this hook, you can manage all the routing operations of your application very easily.\n *\n * @internal This is an internal hook of refine. Do not use it directly.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation} for more details.\n */\nexport const useNavigation = () => {\n    const { resources } = useResource();\n    const routerType = useRouterType();\n    const { useHistory } = useRouterContext();\n    const history = useHistory();\n    const parsed = useParsed();\n    const go = useGo();\n    const back = useBack();\n\n    const handleUrl = (url: string, type: HistoryType = \"push\") => {\n        if (routerType === \"legacy\") {\n            history[type](url);\n        } else {\n            go({ to: url, type });\n        }\n    };\n\n    const createUrl = (\n        resource: string | IResourceItem,\n        meta: MetaDataQuery = {},\n    ) => {\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const createActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"create\");\n\n            if (!createActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                createActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                meta,\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const createActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"create\")?.route;\n\n            if (!createActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(\n                    createActionRoute,\n                    resourceItem?.meta,\n                    parsed,\n                    meta,\n                ),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const editUrl = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        meta: MetaDataQuery = {},\n    ) => {\n        const encodedId = encodeURIComponent(id);\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const editActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"edit\");\n\n            if (!editActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                editActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                {\n                    ...meta,\n                    id: encodedId,\n                },\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const editActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"edit\")?.route;\n\n            if (!editActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(editActionRoute, resourceItem?.meta, parsed, {\n                    ...meta,\n                    id: encodedId,\n                }),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const cloneUrl = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        meta: MetaDataQuery = {},\n    ) => {\n        const encodedId = encodeURIComponent(id);\n\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const cloneActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"clone\");\n\n            if (!cloneActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                cloneActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                {\n                    ...meta,\n                    id: encodedId,\n                },\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const cloneActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"clone\")?.route;\n\n            if (!cloneActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(cloneActionRoute, resourceItem?.meta, parsed, {\n                    ...meta,\n                    id: encodedId,\n                }),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const showUrl = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        meta: MetaDataQuery = {},\n    ) => {\n        const encodedId = encodeURIComponent(id);\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const showActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"show\");\n\n            if (!showActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                showActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                {\n                    ...meta,\n                    id: encodedId,\n                },\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const showActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"show\")?.route;\n\n            if (!showActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(showActionRoute, resourceItem?.meta, parsed, {\n                    ...meta,\n                    id: encodedId,\n                }),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const listUrl = (\n        resource: string | IResourceItem,\n        meta: MetaDataQuery = {},\n    ) => {\n        if (routerType === \"legacy\") {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources, true) ?? {\n                          name: resource,\n                          route: resource,\n                      }\n                    : resource;\n\n            const listActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n                true,\n            ).find((r) => r.action === \"list\");\n\n            if (!listActionRoute) {\n                return \"\";\n            }\n\n            return composeRoute(\n                listActionRoute.route,\n                resourceItem?.meta,\n                parsed,\n                meta,\n            );\n        } else {\n            const resourceItem =\n                typeof resource === \"string\"\n                    ? pickResource(resource, resources) ?? { name: resource }\n                    : resource;\n\n            const listActionRoute = getActionRoutesFromResource(\n                resourceItem,\n                resources,\n            ).find((r) => r.action === \"list\")?.route;\n\n            if (!listActionRoute) {\n                return \"\";\n            }\n\n            return go({\n                to: composeRoute(\n                    listActionRoute,\n                    resourceItem?.meta,\n                    parsed,\n                    meta,\n                ),\n                type: \"path\",\n            }) as string;\n        }\n    };\n\n    const create = (\n        resource: string | IResourceItem,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(createUrl(resource, meta), type);\n    };\n\n    const edit = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(editUrl(resource, id, meta), type);\n    };\n\n    const clone = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(cloneUrl(resource, id, meta), type);\n    };\n\n    const show = (\n        resource: string | IResourceItem,\n        id: BaseKey,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(showUrl(resource, id, meta), type);\n    };\n\n    const list = (\n        resource: string | IResourceItem,\n        type: HistoryType = \"push\",\n        meta: MetaDataQuery = {},\n    ) => {\n        handleUrl(listUrl(resource, meta), type);\n    };\n\n    /**\n     * @deprecated Please use `useGo` hook instead.\n     */\n    const push = (path: string, ...rest: unknown[]) => {\n        if (routerType === \"legacy\") {\n            history.push(path, ...rest);\n        } else {\n            go({ to: path, type: \"push\" });\n        }\n    };\n\n    /**\n     * @deprecated Please use `useGo` hook instead.\n     */\n    const replace = (path: string, ...rest: unknown[]) => {\n        if (routerType === \"legacy\") {\n            history.replace(path, ...rest);\n        } else {\n            go({ to: path, type: \"replace\" });\n        }\n    };\n\n    /**\n     * @deprecated Please use `useBack` hook instead.\n     */\n    const goBack = () => {\n        if (routerType === \"legacy\") {\n            history.goBack();\n        } else {\n            back();\n        }\n    };\n\n    return {\n        create,\n        createUrl,\n        edit,\n        editUrl,\n        clone,\n        cloneUrl,\n        show,\n        showUrl,\n        list,\n        listUrl,\n        push,\n        replace,\n        goBack,\n    };\n};\n","import React, { useState } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport warnOnce from \"warn-once\";\n\nimport { useMeta, useOne } from \"@hooks\";\n\nimport {\n    BaseRecord,\n    GetOneResponse,\n    SuccessErrorNotification,\n    MetaQuery,\n    LiveModeProps,\n    BaseKey,\n    HttpError,\n    Prettify,\n} from \"../../interfaces\";\nimport { useResource } from \"../resource/useResource\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type useShowReturnType<TData extends BaseRecord = BaseRecord> = {\n    queryResult: QueryObserverResult<GetOneResponse<TData>>;\n    showId?: BaseKey;\n    setShowId: React.Dispatch<React.SetStateAction<BaseKey | undefined>>;\n} & UseLoadingOvertimeReturnType;\n\nexport type useShowProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n> = {\n    /**\n     * Resource name for API data interactions\n     * @default Reads `:resource` from the URL\n     */\n    resource?: string;\n    /**\n     * Data item ID for API data interactions\n     * @default Reads `:id` from the URL\n     */\n    id?: BaseKey;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetOneResponse<TQueryFnData>,\n        TError,\n        GetOneResponse<TData>\n    >;\n    /**\n     * Additional meta data to pass to the data provider's `getOne`\n     */\n    meta?: MetaQuery;\n    /**\n     * Additional meta data to pass to the data provider's `getOne`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * Target data provider name for API call to be made\n     * @default `\"default\"`\n     */\n    dataProviderName?: string;\n} & LiveModeProps &\n    SuccessErrorNotification<\n        GetOneResponse<TData>,\n        TError,\n        Prettify<{ id?: BaseKey } & MetaQuery>\n    > &\n    UseLoadingOvertimeOptionsProps;\n\n/**\n * `useShow` hook allows you to fetch the desired record.\n * It uses `getOne` method as query function from the dataProvider that is\n * passed to {@link https://refine.dev/docs/api-reference/core/components/refine-config/ `<Refine>`}.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/show/useShow} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useShow = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    resource: resourceFromProp,\n    id,\n    successNotification,\n    errorNotification,\n    meta,\n    metaData,\n    liveMode,\n    onLiveEvent,\n    dataProviderName,\n    queryOptions,\n    overtimeOptions,\n}: useShowProps<\n    TQueryFnData,\n    TError,\n    TData\n> = {}): useShowReturnType<TData> => {\n    const {\n        resource,\n        id: idFromRoute,\n        identifier,\n    } = useResource(resourceFromProp);\n    const { identifier: inferredIdentifier } = useResource();\n    const getMeta = useMeta();\n\n    const getDefaultId = () => {\n        const idFromPropsOrRoute = id ?? idFromRoute;\n\n        if (resourceFromProp && resourceFromProp !== inferredIdentifier) {\n            return id;\n        }\n\n        return idFromPropsOrRoute;\n    };\n    const defaultId = getDefaultId();\n\n    const [showId, setShowId] = useState<BaseKey | undefined>(defaultId);\n\n    React.useEffect(() => {\n        setShowId(defaultId);\n    }, [defaultId]);\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    warnOnce(\n        Boolean(resourceFromProp) && !Boolean(id),\n        `[useShow]: resource: \"${identifier}\", id: ${id} \\n\\n` +\n            `If you don't use the \\`setShowId\\` method to set the \\`showId\\`, you should pass the \\`id\\` prop to \\`useShow\\`. Otherwise, \\`useShow\\` will not be able to infer the \\`id\\` from the current URL. \\n\\n` +\n            `See https://refine.dev/docs/api-reference/core/hooks/show/useShow/#resource`,\n    );\n\n    const queryResult = useOne<TQueryFnData, TError, TData>({\n        resource: identifier,\n        id: showId ?? \"\",\n        queryOptions: {\n            enabled: showId !== undefined,\n            ...queryOptions,\n        },\n        successNotification,\n        errorNotification,\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        liveMode,\n        onLiveEvent,\n        dataProviderName,\n    });\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResult.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return {\n        queryResult,\n        showId,\n        setShowId,\n        overtime: { elapsedTime },\n    };\n};\n","import { useEffect, useState } from \"react\";\nimport { parse, ParseConfig } from \"papaparse\";\nimport chunk from \"lodash/chunk\";\n\nimport { useCreate, useCreateMany, useMeta, useResource } from \"@hooks\";\nimport { MapDataFn, BaseRecord, HttpError, MetaQuery } from \"../../interfaces\";\nimport {\n    importCSVMapper,\n    sequentialPromises,\n    pickNotDeprecated,\n} from \"@definitions\";\nimport { UseCreateReturnType } from \"../../hooks/data/useCreate\";\nimport { UseCreateManyReturnType } from \"../../hooks/data/useCreateMany\";\n\nexport type ImportSuccessResult<TVariables, TData> = {\n    request: TVariables[];\n    type: \"success\";\n    response: TData[];\n};\n\nexport type ImportErrorResult<TVariables> = {\n    request: TVariables[];\n    type: \"error\";\n    response: HttpError[];\n};\n\nexport type OnFinishParams<TVariables, TData> = {\n    succeeded: ImportSuccessResult<TVariables, TData>[];\n    errored: ImportErrorResult<TVariables>[];\n};\n\nexport type OnProgressParams = {\n    totalAmount: number;\n    processedAmount: number;\n};\n\nexport type ImportOptions<\n    TItem,\n    TVariables = any,\n    TData extends BaseRecord = BaseRecord,\n> = {\n    /**\n     * Resource name for API data interactions.\n     * @default Resource name that it reads from route\n     * @deprecated `resourceName` is deprecated. Use `resource` instead.\n     */\n    resourceName?: string;\n    /**\n     * Resource name for API data interactions.\n     * @default Resource name that it reads from route\n     */\n    resource?: string;\n    /**\n     * A mapping function that runs for every record. Mapped data will be included in the file contents.\n     */\n    mapData?: MapDataFn<TItem, TVariables>;\n    /**\n     * Custom Papa Parse options.\n     * @type [`ParseConfig`](https://www.papaparse.com/docs)\n     */\n    paparseOptions?: ParseConfig;\n    /**\n     * Requests batch size. If it is 1, all records are sent one by one. By default, it is [`Number.MAX_SAFE_INTEGER`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER) to send all records in one batch. If it is more than 1, `createMany` should be implemented on DataProvider.\n     */\n    batchSize?: number;\n    /**\n     * Called with errors and successful responses when all requests are sent.\n     */\n    onFinish?: (results: OnFinishParams<TVariables, TData>) => void;\n    /**\n     *  Metadata query for `dataProvider`\n     */\n    meta?: MetaQuery;\n    /**\n     *  Metadata query for `dataProvider`\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     *  A callback function that returns a current state of uploading process.\n     *\n     *  Ex: `percentage = onProgressParams.processedAmount / onProgressParams.totalAmount * 100`\n     */\n    onProgress?: (onProgressParams: OnProgressParams) => void;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n};\n\nexport type CreatedValuesType<TVariables, TData> =\n    | ImportSuccessResult<TVariables, TData>\n    | ImportErrorResult<TVariables>;\n\nexport type HandleChangeType<TVariables, TData> = (onChangeParams: {\n    file: Partial<File>;\n}) => Promise<CreatedValuesType<TVariables, TData>[]>;\n\nexport type UseImportInputPropsType = {\n    type: \"file\";\n    accept: string;\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport type UseImportReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TVariables = {},\n    TError extends HttpError = HttpError,\n> = {\n    inputProps: UseImportInputPropsType;\n    mutationResult:\n        | UseCreateReturnType<TData, TError, TVariables>\n        | UseCreateManyReturnType<TData, TError, TVariables>;\n    isLoading: boolean;\n    handleChange: HandleChangeType<TVariables, TData>;\n};\n\n/**\n * `useImport` hook allows you to handle your csv import logic easily.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useImport} for more details.\n *\n * @typeParam TItem - Interface of parsed csv data\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useImport = <\n    TItem = any,\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables = any,\n>({\n    resourceName,\n    resource: resourceFromProps,\n    mapData = (item) => item as unknown as TVariables,\n    paparseOptions,\n    batchSize = Number.MAX_SAFE_INTEGER,\n    onFinish,\n    meta,\n    metaData,\n    onProgress,\n    dataProviderName,\n}: ImportOptions<TItem, TVariables, TData> = {}): UseImportReturnType<\n    TData,\n    TVariables,\n    TError\n> => {\n    const [processedAmount, setProcessedAmount] = useState<number>(0);\n    const [totalAmount, setTotalAmount] = useState<number>(0);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const { resource, identifier } = useResource(\n        resourceFromProps ?? resourceName,\n    );\n\n    const getMeta = useMeta();\n\n    const createMany = useCreateMany<TData, TError, TVariables>();\n    const create = useCreate<TData, TError, TVariables>();\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    let mutationResult:\n        | UseCreateReturnType<TData, TError, TVariables>\n        | UseCreateManyReturnType<TData, TError, TVariables>;\n\n    if (batchSize === 1) {\n        mutationResult = create;\n    } else {\n        mutationResult = createMany;\n    }\n\n    const handleCleanup = () => {\n        setTotalAmount(0);\n        setProcessedAmount(0);\n        setIsLoading(false);\n    };\n\n    const handleFinish = (\n        createdValues: CreatedValuesType<TVariables, TData>[],\n    ) => {\n        const result = {\n            succeeded: createdValues.filter(\n                (item) => item.type === \"success\",\n            ) as unknown as ImportSuccessResult<TVariables, TData>[],\n            errored: createdValues.filter(\n                (item) => item.type === \"error\",\n            ) as unknown as ImportErrorResult<TVariables>[],\n        };\n\n        onFinish?.(result);\n        setIsLoading(false);\n    };\n\n    useEffect(() => {\n        onProgress?.({ totalAmount, processedAmount });\n    }, [totalAmount, processedAmount]);\n\n    const handleChange: HandleChangeType<TVariables, TData> = ({ file }) => {\n        handleCleanup();\n        return new Promise<CreatedValuesType<TVariables, TData>[]>(\n            (resolve) => {\n                setIsLoading(true);\n                parse(file as any, {\n                    complete: async ({ data }: { data: unknown[][] }) => {\n                        const values = importCSVMapper(data, mapData);\n\n                        setTotalAmount(values.length);\n\n                        if (batchSize === 1) {\n                            // Create Processor Functions\n                            const valueFns = values.map((value) => {\n                                const fn = async () => {\n                                    const response = await create.mutateAsync({\n                                        resource: identifier ?? \"\",\n                                        values: value,\n                                        successNotification: false,\n                                        errorNotification: false,\n                                        dataProviderName,\n                                        meta: combinedMeta,\n                                        metaData: combinedMeta,\n                                    });\n\n                                    return { response, value };\n                                };\n                                return fn;\n                            });\n                            // Sequentially run processor functions and process resolves/rejects\n                            const createdValues = await sequentialPromises(\n                                valueFns,\n                                ({ response, value }) => {\n                                    setProcessedAmount((currentAmount) => {\n                                        return currentAmount + 1;\n                                    });\n\n                                    return {\n                                        response: [response.data],\n                                        type: \"success\",\n                                        request: [value],\n                                    } as ImportSuccessResult<TVariables, TData>;\n                                },\n                                (error: HttpError, index) => {\n                                    return {\n                                        response: [error],\n                                        type: \"error\",\n                                        request: [values[index]],\n                                    } as ImportErrorResult<TVariables>;\n                                },\n                            );\n                            // Resolve with created values\n                            resolve(createdValues);\n                        } else {\n                            // Create Chunks\n                            const chunks = chunk(values, batchSize);\n                            // Create Chunk Processor Functions\n                            const chunkedFns = chunks.map((chunkedValues) => {\n                                const fn = async () => {\n                                    const response =\n                                        await createMany.mutateAsync({\n                                            resource: identifier ?? \"\",\n                                            values: chunkedValues,\n                                            successNotification: false,\n                                            errorNotification: false,\n                                            dataProviderName,\n                                            meta: combinedMeta,\n                                            metaData: combinedMeta,\n                                        });\n\n                                    return {\n                                        response,\n                                        value: chunkedValues,\n                                        currentBatchLength:\n                                            chunkedValues.length,\n                                    };\n                                };\n\n                                return fn;\n                            });\n                            // Sequentially run chunked functions and process resolves/rejects\n                            const createdValues = await sequentialPromises(\n                                chunkedFns,\n                                ({ response, currentBatchLength, value }) => {\n                                    setProcessedAmount((currentAmount) => {\n                                        return (\n                                            currentAmount + currentBatchLength\n                                        );\n                                    });\n\n                                    return {\n                                        response: response.data,\n                                        type: \"success\",\n                                        request: value,\n                                    } as ImportSuccessResult<TVariables, TData>;\n                                },\n                                (error: HttpError, index) => {\n                                    return {\n                                        response: [error],\n                                        type: \"error\",\n                                        request: chunks[index],\n                                    } as ImportErrorResult<TVariables>;\n                                },\n                            );\n                            // resolve with all created values\n                            resolve(createdValues);\n                        }\n                    },\n\n                    ...paparseOptions,\n                });\n            },\n        ).then((createdValues) => {\n            handleFinish(createdValues);\n            return createdValues;\n        });\n    };\n\n    return {\n        inputProps: {\n            type: \"file\",\n            accept: \".csv\",\n            onChange: (event: React.ChangeEvent<HTMLInputElement>) => {\n                if (event.target.files && event.target.files.length > 0) {\n                    handleChange({ file: event.target.files[0] });\n                }\n            },\n        },\n        mutationResult,\n        isLoading,\n        handleChange,\n    };\n};\n","import { useCallback, useState } from \"react\";\n\nexport type useModalReturnType = {\n    visible: boolean;\n    show: () => void;\n    close: () => void;\n};\n\nexport type useModalProps = {\n    /**\n     * Initial state of the modal\n     */\n    defaultVisible?: boolean;\n};\n\nexport const useModal = ({\n    defaultVisible = false,\n}: useModalProps = {}): useModalReturnType => {\n    const [visible, setVisible] = useState(defaultVisible);\n\n    const show = useCallback(() => setVisible(true), [visible]);\n    const close = useCallback(() => setVisible(false), [visible]);\n\n    return {\n        visible,\n        show,\n        close,\n    };\n};\n","import React from \"react\";\nimport { useResource } from \"../../resource\";\nimport { Action, IResourceItem } from \"../../../interfaces\";\nimport { getActionRoutesFromResource } from \"../../../definitions/helpers/router\";\nimport { useParsed } from \"../use-parsed\";\nimport { composeRoute } from \"../../../definitions/helpers/router/compose-route\";\nimport { useRouterType } from \"./../../../contexts/router-picker\";\n\ntype UseToPathParams = {\n    resource?: IResourceItem;\n    action: Action;\n    meta?: Record<string, unknown>;\n    legacy?: boolean;\n};\n\ntype GetToPathFn = (params: UseToPathParams) => string | undefined;\n\n/**\n * Returns a function to get the route for a given action and resource.\n * If resource is not provided, it will use the resource from the route.\n * If the resource is not found, it will return undefined.\n * If the action is not found, it will return undefined.\n * `meta` can be provided to compose the routes with parameters. (Can be used for nested routes.)\n */\nexport const useGetToPath = (): GetToPathFn => {\n    const routerType = useRouterType();\n    const { resource: resourceFromRoute, resources } = useResource();\n    const parsed = useParsed();\n\n    const fn = React.useCallback(\n        ({ resource, action, meta }: UseToPathParams): string | undefined => {\n            const selectedResource = resource || resourceFromRoute;\n\n            if (!selectedResource) {\n                return undefined;\n            }\n\n            const actionRoutes = getActionRoutesFromResource(\n                selectedResource,\n                resources,\n                routerType === \"legacy\",\n            );\n\n            const actionRoute = actionRoutes.find(\n                (item) => item.action === action,\n            )?.route;\n\n            if (!actionRoute) {\n                return undefined;\n            }\n\n            const composed = composeRoute(\n                actionRoute,\n                selectedResource?.meta,\n                parsed,\n                meta,\n            );\n\n            return composed;\n        },\n        [resources, resourceFromRoute, parsed],\n    );\n\n    return fn;\n};\n","import { Action, IResourceItem } from \"../../../interfaces\";\nimport { useGetToPath } from \"../use-get-to-path\";\n\ntype UseToPathParams = {\n    resource?: IResourceItem;\n    action: Action;\n    meta?: Record<string, unknown>;\n    legacy?: boolean;\n};\n\n/**\n * Returns the route for a given action and resource.\n * If resource is not provided, it will use the resource from the route.\n * If the resource is not found, it will return undefined.\n * If the action is not found, it will return undefined.\n * `meta` can be provided to compose the routes with parameters. (Can be used for nested routes.)\n */\nexport const useToPath = ({\n    resource,\n    action,\n    meta,\n    legacy,\n}: UseToPathParams): string | undefined => {\n    const getToPath = useGetToPath();\n\n    return getToPath({ resource, action, meta, legacy });\n};\n","import { RouterBindingsContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\n\nexport const useLink = () => {\n    const bindings = useContext(RouterBindingsContext);\n\n    if (bindings?.Link) {\n        return bindings.Link;\n    }\n\n    const FallbackLink: Required<typeof bindings>[\"Link\"] = ({\n        to,\n        ...rest\n    }) => <a href={to} {...rest} />;\n\n    return FallbackLink;\n};\n","import { useContext } from \"react\";\nimport { RouterContext, defaultProvider } from \"@contexts/legacy-router\";\n\nexport const useRouterContext = () => {\n    const routerContextValues = useContext(RouterContext);\n\n    const { useHistory, useLocation, useParams, Prompt, Link, routes } =\n        routerContextValues ?? defaultProvider;\n\n    return {\n        useHistory,\n        useLocation,\n        useParams,\n        Prompt,\n        Link,\n        routes,\n    };\n};\n","import React from \"react\";\n\nimport { IRouterContext } from \"../../interfaces\";\n\nexport const defaultProvider: IRouterContext = {\n    useHistory: () => false,\n    useLocation: () => false,\n    useParams: () => ({} as any),\n    Prompt: () => null,\n    Link: () => null,\n};\n\nexport const LegacyRouterContext =\n    React.createContext<IRouterContext>(defaultProvider);\n\nexport const RouterContext = LegacyRouterContext;\n\nexport const LegacyRouterContextProvider: React.FC<\n    Partial<IRouterContext> & {\n        children?: React.ReactNode;\n    }\n> = ({\n    children,\n    useHistory,\n    useLocation,\n    useParams,\n    Prompt,\n    Link,\n    routes,\n}) => {\n    return (\n        <RouterContext.Provider\n            value={{\n                useHistory: useHistory ?? defaultProvider.useHistory,\n                useLocation: useLocation ?? defaultProvider.useLocation,\n                useParams: useParams ?? defaultProvider.useParams,\n                Prompt: Prompt ?? defaultProvider.Prompt,\n                Link: Link ?? defaultProvider.Link,\n                routes: routes ?? defaultProvider.routes,\n            }}\n        >\n            {children}\n        </RouterContext.Provider>\n    );\n};\n","import {\n    useQuery,\n    UseQueryOptions,\n    UseQueryResult,\n} from \"@tanstack/react-query\";\nimport { useContext } from \"react\";\n\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\nimport { CanParams, CanReturnType } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nexport type UseCanProps = CanParams & {\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<CanReturnType>;\n};\n\n/**\n * `useCan` uses the `can` as the query function for `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`}. It takes the parameters that `can` takes. It can also be configured with `queryOptions` for `useQuery`. Returns the result of `useQuery`.\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/accessControl/useCan} for more details.\n *\n * @typeParam CanParams {@link https://refine.dev/docs/core/interfaceReferences#canparams}\n * @typeParam CanReturnType {@link https://refine.dev/docs/core/interfaceReferences#canreturntype}\n *\n */\nexport const useCan = ({\n    action,\n    resource,\n    params,\n    queryOptions,\n}: UseCanProps): UseQueryResult<CanReturnType> => {\n    const { can } = useContext(AccessControlContext);\n    const { keys, preferLegacyKeys } = useKeys();\n\n    /**\n     * Since `react-query` stringifies the query keys, it will throw an error for a circular dependency if we include `React.ReactNode` elements inside the keys.\n     * The feature in #2220(https://github.com/refinedev/refine/issues/2220) includes such change and to fix this, we need to remove `icon` property in the `resource`\n     */\n    const { resource: _resource, ...paramsRest } = params ?? {};\n\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    const sanitizedResource = sanitizeResource(_resource);\n\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    const queryResponse = useQuery<CanReturnType>(\n        keys()\n            .access()\n            .resource(resource)\n            .action(action)\n            .params({\n                params: { ...paramsRest, resource: sanitizedResource },\n                enabled: queryOptions?.enabled,\n            })\n            .get(preferLegacyKeys),\n        // Enabled check for `can` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n        () =>\n            can?.({\n                action,\n                resource,\n                params: { ...paramsRest, resource: sanitizedResource },\n            }) ?? Promise.resolve({ can: true }),\n        {\n            enabled: typeof can !== \"undefined\",\n            ...queryOptions,\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useCan\", preferLegacyKeys),\n            },\n            retry: false,\n        },\n    );\n\n    return typeof can === \"undefined\"\n        ? ({ data: { can: true } } as typeof queryResponse)\n        : queryResponse;\n};\n","import React from \"react\";\n\nimport {\n    IAccessControlContext,\n    IAccessControlContextReturnType,\n} from \"./IAccessControlContext\";\n\n/** @deprecated default value for access control context has no use and is an empty object. */\nexport const defaultAccessControlContext: IAccessControlContext = {};\n\nexport const AccessControlContext =\n    React.createContext<IAccessControlContextReturnType>({\n        options: {\n            buttons: { enableAccessControl: true, hideIfUnauthorized: false },\n        },\n    });\n\nexport { IAccessControlContext };\n\nexport const AccessControlContextProvider: React.FC<\n    IAccessControlContext & {\n        children?: React.ReactNode;\n    }\n> = ({ can, children, options }) => {\n    return (\n        <AccessControlContext.Provider\n            value={{\n                can,\n                options: options\n                    ? {\n                          ...options,\n                          buttons: {\n                              enableAccessControl: true,\n                              hideIfUnauthorized: false,\n                              ...options.buttons,\n                          },\n                      }\n                    : {\n                          buttons: {\n                              enableAccessControl: true,\n                              hideIfUnauthorized: false,\n                          },\n                      },\n            }}\n        >\n            {children}\n        </AccessControlContext.Provider>\n    );\n};\n","import { IResourceItem } from \"../../../interfaces/bindings/resource\";\n\n/**\n * Remove all properties that are non-serializable from a resource object.\n */\nexport const sanitizeResource = (\n    resource?: Partial<IResourceItem> &\n        Required<Pick<IResourceItem, \"name\">> & { children?: unknown },\n):\n    | (Partial<IResourceItem> & Required<Pick<IResourceItem, \"name\">>)\n    | undefined => {\n    if (!resource) {\n        return undefined;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const {\n        icon,\n        list,\n        edit,\n        create,\n        show,\n        clone,\n        children,\n        meta,\n        options,\n        ...restResource\n    } = resource;\n\n    const { icon: _metaIcon, ...restMeta } = meta ?? {};\n    const { icon: _optionsIcon, ...restOptions } = options ?? {};\n\n    return {\n        ...restResource,\n        ...(meta ? { meta: restMeta } : {}),\n        ...(options ? { options: restOptions } : {}),\n    };\n};\n","import React from \"react\";\n\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\nimport { IAccessControlContext } from \"../../interfaces\";\n\nexport const useCanWithoutCache = (): IAccessControlContext => {\n    const { can: canFromContext } = React.useContext(AccessControlContext);\n\n    const can = React.useMemo(() => {\n        if (!canFromContext) {\n            return undefined;\n        }\n\n        const canWithSanitizedResource: NonNullable<\n            typeof canFromContext\n        > = async ({ params, ...rest }) => {\n            const sanitizedResource = params?.resource\n                ? sanitizeResource(params.resource)\n                : undefined;\n\n            return canFromContext({\n                ...rest,\n                ...(params\n                    ? {\n                          params: {\n                              ...params,\n                              resource: sanitizedResource,\n                          },\n                      }\n                    : {}),\n            });\n        };\n\n        return canWithSanitizedResource;\n    }, [canFromContext]);\n\n    return { can };\n};\n","import { useCallback, useMemo, useState } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport uniqBy from \"lodash/uniqBy\";\nimport debounce from \"lodash/debounce\";\nimport get from \"lodash/get\";\n\nimport { useList, useMany, useMeta } from \"@hooks\";\nimport {\n    CrudSorting,\n    Option,\n    BaseRecord,\n    GetManyResponse,\n    GetListResponse,\n    CrudFilters,\n    SuccessErrorNotification,\n    HttpError,\n    LiveModeProps,\n    BaseKey,\n    Pagination,\n    MetaQuery,\n    Prettify,\n} from \"../../interfaces\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\nimport { useResource } from \"../resource/useResource/index\";\nimport { BaseListProps } from \"../data/useList\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\nexport type UseSelectProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource: string;\n    /**\n     * Set the option's value\n     * @default `\"title\"`\n     */\n    optionLabel?: keyof TQueryFnData extends string\n        ? keyof TQueryFnData\n        : never;\n    /**\n     * Set the option's label value\n     * @default `\"id\"`\n     */\n    optionValue?: keyof TQueryFnData extends string\n        ? keyof TQueryFnData\n        : never;\n    /**\n     * Allow us to sort the options\n     * @deprecated Use `sorters` instead\n     */\n    sort?: CrudSorting;\n    /**\n     * Allow us to sort the options\n     */\n    sorters?: CrudSorting;\n    /**\n     * Resource name for API data interactions\n     */\n    filters?: CrudFilters;\n    /**\n     * Adds extra `options`\n     */\n    defaultValue?: BaseKey | BaseKey[];\n    /**\n     * The number of milliseconds to delay\n     * @default `300`\n     */\n    debounce?: number;\n    /**\n     * react-query [useQuery](https://react-query.tanstack.com/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >;\n    /**\n     * Pagination option from [`useList()`](/docs/api-reference/core/hooks/data/useList/)\n     * @type {  current?: number; pageSize?: number;}\n     * @default `undefined`\n     */\n    pagination?: Prettify<\n        Omit<Pagination, \"mode\"> & {\n            /**\n             * Whether to use server side pagination or not.\n             * @default \"off\"\n             */\n            mode?: Pagination[\"mode\"];\n        }\n    >;\n    /**\n     * Disabling pagination option from [`useList()`](/docs/api-reference/core/hooks/data/useList/)\n     * @type boolean\n     * @default `false`\n     * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * react-query [useQuery](https://react-query.tanstack.com/reference/useQuery) options\n     */\n    defaultValueQueryOptions?: UseQueryOptions<\n        GetManyResponse<TQueryFnData>,\n        TError\n    >;\n    /**\n     * If defined, this callback allows us to override all filters for every search request.\n     * @default `undefined`\n     */\n    onSearch?: (value: string) => CrudFilters;\n    /**\n     * Additional meta data to pass to the `useMany` from the data provider\n     */\n    meta?: MetaQuery;\n    /**\n     * Additional meta data to pass to the `useMany` from the data provider\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     * @default `default`\n     */\n    dataProviderName?: string;\n    /**\n     * Amount of records to fetch in select box list.\n     * @deprecated use [`pagination`](https://refine.dev/docs/api-reference/core/interfaceReferences/#pagination) instead\n     * @default `undefined`\n     */\n    fetchSize?: number;\n} & SuccessErrorNotification<\n    GetListResponse<TData>,\n    TError,\n    Prettify<BaseListProps>\n> &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\nexport type UseSelectReturnType<TData extends BaseRecord = BaseRecord> = {\n    queryResult: QueryObserverResult<GetListResponse<TData>>;\n    defaultValueQueryResult: QueryObserverResult<GetManyResponse<TData>>;\n    onSearch: (value: string) => void;\n    options: Option[];\n} & UseLoadingOvertimeReturnType;\n\n/**\n * `useSelect` hook is used to fetch data from the dataProvider and return the options for the select box.\n *\n * It uses `getList` method as query function from the dataProvider that is\n * passed to {@link https://refine.dev/docs/api-reference/core/components/refine-config/ `<Refine>`}.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useSelect} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useSelect = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>(\n    props: UseSelectProps<TQueryFnData, TError, TData>,\n): UseSelectReturnType<TData> => {\n    const [search, setSearch] = useState<CrudFilters>([]);\n    const [options, setOptions] = useState<Option[]>([]);\n    const [selectedOptions, setSelectedOptions] = useState<Option[]>([]);\n\n    const {\n        resource: resourceFromProps,\n        sort,\n        sorters,\n        filters = [],\n        optionLabel = \"title\",\n        optionValue = \"id\",\n        debounce: debounceValue = 300,\n        successNotification,\n        errorNotification,\n        defaultValueQueryOptions: defaultValueQueryOptionsFromProps,\n        queryOptions,\n        fetchSize,\n        pagination,\n        hasPagination = false,\n        liveMode,\n        defaultValue = [],\n        onLiveEvent,\n        onSearch: onSearchFromProp,\n        liveParams,\n        meta,\n        metaData,\n        dataProviderName,\n        overtimeOptions,\n    } = props;\n\n    const { resource, identifier } = useResource(resourceFromProps);\n\n    const getMeta = useMeta();\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n    });\n\n    const defaultValues = Array.isArray(defaultValue)\n        ? defaultValue\n        : [defaultValue];\n\n    const defaultValueQueryOnSuccess = useCallback(\n        (data: GetManyResponse<TData>) => {\n            setSelectedOptions(\n                data.data.map((item) => ({\n                    label: get(item, optionLabel) as string,\n                    value: get(item, optionValue) as string,\n                })),\n            );\n        },\n        [optionLabel, optionValue],\n    );\n\n    const defaultValueQueryOptions =\n        defaultValueQueryOptionsFromProps ?? (queryOptions as any);\n\n    const defaultValueQueryResult = useMany<TQueryFnData, TError, TData>({\n        resource: identifier,\n        ids: defaultValues,\n        queryOptions: {\n            ...defaultValueQueryOptions,\n            enabled:\n                defaultValues.length > 0 &&\n                (defaultValueQueryOptions?.enabled ?? true),\n            onSuccess: (data) => {\n                defaultValueQueryOnSuccess(data);\n                defaultValueQueryOptions?.onSuccess?.(data);\n            },\n        },\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        liveMode: \"off\",\n        dataProviderName,\n    });\n\n    const defaultQueryOnSuccess = useCallback(\n        (data: GetListResponse<TData>) => {\n            {\n                setOptions(\n                    data.data.map((item) => ({\n                        label: get(item, optionLabel) as string,\n                        value: get(item, optionValue) as string,\n                    })),\n                );\n            }\n        },\n        [optionLabel, optionValue],\n    );\n\n    const queryResult = useList<TQueryFnData, TError, TData>({\n        resource: identifier,\n        sorters: pickNotDeprecated(sorters, sort),\n        filters: filters.concat(search),\n        pagination: {\n            current: pagination?.current,\n            pageSize: pagination?.pageSize ?? fetchSize,\n            mode: pagination?.mode,\n        },\n        hasPagination,\n        queryOptions: {\n            ...queryOptions,\n            onSuccess: (data) => {\n                defaultQueryOnSuccess(data);\n                queryOptions?.onSuccess?.(data);\n            },\n        },\n        successNotification,\n        errorNotification,\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        liveMode,\n        liveParams,\n        onLiveEvent,\n        dataProviderName,\n    });\n\n    const onSearch = (value: string) => {\n        if (onSearchFromProp) {\n            setSearch(onSearchFromProp(value));\n            return;\n        }\n\n        if (!value) {\n            setSearch([]);\n            return;\n        } else {\n            setSearch([\n                {\n                    field: optionLabel,\n                    operator: \"contains\",\n                    value,\n                },\n            ]);\n        }\n    };\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResult.isFetching || defaultValueQueryResult.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return {\n        queryResult,\n        defaultValueQueryResult,\n        options: useMemo(\n            () => uniqBy([...options, ...selectedOptions], \"value\"),\n            [options, selectedOptions],\n        ),\n        onSearch: debounce(onSearch, debounceValue),\n        overtime: { elapsedTime },\n    };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { QueryObserverResult, UseQueryOptions } from \"@tanstack/react-query\";\nimport qs from \"qs\";\nimport differenceWith from \"lodash/differenceWith\";\nimport isEqual from \"lodash/isEqual\";\nimport warnOnce from \"warn-once\";\n\nimport {\n    useRouterContext,\n    useSyncWithLocation,\n    useNavigation,\n    useList,\n    useLiveMode,\n    useRouterType,\n    useResource,\n    useParsed,\n    useMeta,\n} from \"@hooks\";\nimport {\n    stringifyTableParams,\n    parseTableParams,\n    unionFilters,\n    setInitialFilters,\n    setInitialSorters,\n    unionSorters,\n} from \"@definitions/table\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\n\nimport {\n    BaseRecord,\n    CrudFilters,\n    CrudSorting,\n    GetListResponse,\n    SuccessErrorNotification,\n    HttpError,\n    MetaQuery,\n    LiveModeProps,\n    Pagination,\n    Prettify,\n} from \"../../interfaces\";\nimport { useGo } from \"@hooks/router/use-go\";\nimport { BaseListProps } from \"../data/useList\";\nimport {\n    useLoadingOvertime,\n    UseLoadingOvertimeOptionsProps,\n    UseLoadingOvertimeReturnType,\n} from \"../useLoadingOvertime\";\n\ntype SetFilterBehavior = \"merge\" | \"replace\";\n\nexport type useTableProps<TQueryFnData, TError, TData> = {\n    /**\n     * Resource name for API data interactions\n     * @default Resource name that it reads from route\n     */\n    resource?: string;\n    /**\n     * Configuration for pagination\n     */\n    pagination?: Pagination;\n    /**\n     * Initial page index\n     * @default 1\n     * @deprecated `initialCurrent` property is deprecated. Use `pagination.current` instead.\n     */\n    initialCurrent?: number;\n    /**\n     * Initial number of items per page\n     * @default 10\n     * @deprecated `initialPageSize` property is deprecated. Use `pagination.pageSize` instead.\n     */\n    initialPageSize?: number;\n    /**\n     * Sort configs\n     */\n    sorters?: {\n        /**\n         * Initial sorter state\n         */\n        initial?: CrudSorting;\n        /**\n         * Default and unchangeable sorter state\n         *  @default `[]`\n         */\n        permanent?: CrudSorting;\n        /**\n         * Whether to use server side sorting or not.\n         * @default \"server\"\n         */\n        mode?: \"server\" | \"off\";\n    };\n    /**\n     * Initial sorter state\n     * @deprecated `initialSorter` property is deprecated. Use `sorters.initial` instead.\n     */\n    initialSorter?: CrudSorting;\n    /**\n     * Default and unchangeable sorter state\n     *  @default `[]`\n     *  @deprecated `permanentSorter` property is deprecated. Use `sorters.permanent` instead.\n     */\n    permanentSorter?: CrudSorting;\n    /**\n     * Filter configs\n     */\n    filters?: {\n        /**\n         * Initial filter state\n         */\n        initial?: CrudFilters;\n        /**\n         * Default and unchangeable filter state\n         *  @default `[]`\n         */\n        permanent?: CrudFilters;\n        /**\n         * Default behavior of the `setFilters` function\n         * @default `\"merge\"`\n         */\n        defaultBehavior?: SetFilterBehavior;\n        /**\n         * Whether to use server side filter or not.\n         * @default \"server\"\n         */\n        mode?: \"server\" | \"off\";\n    };\n    /**\n     * Initial filter state\n     * @deprecated `initialFilter` property is deprecated. Use `filters.initial` instead.\n     */\n    initialFilter?: CrudFilters;\n    /**\n     * Default and unchangeable filter state\n     * @default `[]`\n     * @deprecated `permanentFilter` property is deprecated. Use `filters.permanent` instead.\n     */\n    permanentFilter?: CrudFilters;\n    /**\n     * Default behavior of the `setFilters` function\n     * @default `\"merge\"`\n     * @deprecated `defaultSetFilterBehavior` property is deprecated. Use `filters.defaultBehavior` instead.\n     */\n    defaultSetFilterBehavior?: SetFilterBehavior;\n    /**\n     * Whether to use server side pagination or not.\n     * @default `true`\n     * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * Sortings, filters, page index and records shown per page are tracked by browser history\n     * @default Value set in [Refine](/docs/api-reference/core/components/refine-config/#syncwithlocation). If a custom resource is given, it will be `false`\n     */\n    syncWithLocation?: boolean;\n    /**\n     * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n     */\n    queryOptions?: UseQueryOptions<\n        GetListResponse<TQueryFnData>,\n        TError,\n        GetListResponse<TData>\n    >;\n    /**\n     * Metadata query for dataProvider\n     */\n    meta?: MetaQuery;\n    /**\n     * Metadata query for dataProvider\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    /**\n     * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n     */\n    dataProviderName?: string;\n} & SuccessErrorNotification<\n    GetListResponse<TData>,\n    TError,\n    Prettify<BaseListProps>\n> &\n    LiveModeProps &\n    UseLoadingOvertimeOptionsProps;\n\ntype ReactSetState<T> = React.Dispatch<React.SetStateAction<T>>;\n\ntype SyncWithLocationParams = {\n    pagination: { current?: number; pageSize?: number };\n    /**\n     * @deprecated `sorter` is deprecated. Use `sorters` instead.\n     */\n    sorter?: CrudSorting;\n    sorters: CrudSorting;\n    filters: CrudFilters;\n};\n\nexport type useTableReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n> = {\n    tableQueryResult: QueryObserverResult<GetListResponse<TData>, TError>;\n    /**\n     * @deprecated `sorter` is deprecated. Use `sorters` instead.\n     */\n    sorter: CrudSorting;\n    sorters: CrudSorting;\n    /**\n     * @deprecated `setSorter` is deprecated. Use `setSorters` instead.\n     */\n    setSorter: (sorter: CrudSorting) => void;\n    setSorters: (sorter: CrudSorting) => void;\n    filters: CrudFilters;\n    setFilters: ((filters: CrudFilters, behavior?: SetFilterBehavior) => void) &\n        ((setter: (prevFilters: CrudFilters) => CrudFilters) => void);\n    createLinkForSyncWithLocation: (params: SyncWithLocationParams) => string;\n    current: number;\n    setCurrent: ReactSetState<useTableReturnType[\"current\"]>;\n    pageSize: number;\n    setPageSize: ReactSetState<useTableReturnType[\"pageSize\"]>;\n    pageCount: number;\n} & UseLoadingOvertimeReturnType;\n\n/**\n * By using useTable, you are able to get properties that are compatible with\n * Ant Design {@link https://ant.design/components/table/ `<Table>`} component.\n * All features such as sorting, filtering and pagination comes as out of box.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useTable} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nconst defaultPermanentFilter: CrudFilters = [];\nconst defaultPermanentSorter: CrudSorting = [];\n\nexport function useTable<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    initialCurrent,\n    initialPageSize,\n    hasPagination = true,\n    pagination,\n    initialSorter,\n    permanentSorter = defaultPermanentSorter,\n    defaultSetFilterBehavior,\n    initialFilter,\n    permanentFilter = defaultPermanentFilter,\n    filters: filtersFromProp,\n    sorters: sortersFromProp,\n    syncWithLocation: syncWithLocationProp,\n    resource: resourceFromProp,\n    successNotification,\n    errorNotification,\n    queryOptions,\n    liveMode: liveModeFromProp,\n    onLiveEvent,\n    liveParams,\n    meta,\n    metaData,\n    dataProviderName,\n    overtimeOptions,\n}: useTableProps<TQueryFnData, TError, TData> = {}): useTableReturnType<\n    TData,\n    TError\n> {\n    const { syncWithLocation: syncWithLocationContext } = useSyncWithLocation();\n\n    const syncWithLocation = syncWithLocationProp ?? syncWithLocationContext;\n\n    const liveMode = useLiveMode(liveModeFromProp);\n\n    const routerType = useRouterType();\n    const { useLocation } = useRouterContext();\n    const { search, pathname } = useLocation();\n    const getMeta = useMeta();\n    const parsedParams = useParsed();\n\n    const isServerSideFilteringEnabled =\n        (filtersFromProp?.mode || \"server\") === \"server\";\n    const isServerSideSortingEnabled =\n        (sortersFromProp?.mode || \"server\") === \"server\";\n    const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n    const isPaginationEnabled =\n        (pagination?.mode ?? hasPaginationString) !== \"off\";\n    const prefferedCurrent = pickNotDeprecated(\n        pagination?.current,\n        initialCurrent,\n    );\n    const prefferedPageSize = pickNotDeprecated(\n        pagination?.pageSize,\n        initialPageSize,\n    );\n    const preferredMeta = pickNotDeprecated(meta, metaData);\n\n    /** `parseTableParams` is redundant with the new routing */\n    // We want to always parse the query string even when syncWithLocation is\n    // deactivated, for hotlinking to work properly\n    const { parsedCurrent, parsedPageSize, parsedSorter, parsedFilters } =\n        parseTableParams(search ?? \"?\");\n\n    const preferredInitialFilters = pickNotDeprecated(\n        filtersFromProp?.initial,\n        initialFilter,\n    );\n    const preferredPermanentFilters =\n        pickNotDeprecated(filtersFromProp?.permanent, permanentFilter) ??\n        defaultPermanentFilter;\n\n    const preferredInitialSorters = pickNotDeprecated(\n        sortersFromProp?.initial,\n        initialSorter,\n    );\n    const preferredPermanentSorters =\n        pickNotDeprecated(sortersFromProp?.permanent, permanentSorter) ??\n        defaultPermanentSorter;\n\n    const prefferedFilterBehavior =\n        pickNotDeprecated(\n            filtersFromProp?.defaultBehavior,\n            defaultSetFilterBehavior,\n        ) ?? \"merge\";\n\n    let defaultCurrent: number;\n    let defaultPageSize: number;\n    let defaultSorter: CrudSorting | undefined;\n    let defaultFilter: CrudFilters | undefined;\n\n    if (syncWithLocation) {\n        defaultCurrent =\n            parsedParams?.params?.current ||\n            parsedCurrent ||\n            prefferedCurrent ||\n            1;\n        defaultPageSize =\n            parsedParams?.params?.pageSize ||\n            parsedPageSize ||\n            prefferedPageSize ||\n            10;\n        defaultSorter =\n            parsedParams?.params?.sorters ||\n            (parsedSorter.length ? parsedSorter : preferredInitialSorters);\n        defaultFilter =\n            parsedParams?.params?.filters ||\n            (parsedFilters.length ? parsedFilters : preferredInitialFilters);\n    } else {\n        defaultCurrent = prefferedCurrent || 1;\n        defaultPageSize = prefferedPageSize || 10;\n        defaultSorter = preferredInitialSorters;\n        defaultFilter = preferredInitialFilters;\n    }\n\n    const { replace } = useNavigation();\n    /** New way of `replace` calls to the router is using `useGo` */\n    const go = useGo();\n\n    const { resource, identifier } = useResource(resourceFromProp);\n\n    const combinedMeta = getMeta({\n        resource,\n        meta: preferredMeta,\n    });\n\n    React.useEffect(() => {\n        warnOnce(\n            typeof identifier === \"undefined\",\n            `useTable: \\`resource\\` is not defined.`,\n        );\n    }, [identifier]);\n\n    const [sorters, setSorters] = useState<CrudSorting>(\n        setInitialSorters(preferredPermanentSorters, defaultSorter ?? []),\n    );\n    const [filters, setFilters] = useState<CrudFilters>(\n        setInitialFilters(preferredPermanentFilters, defaultFilter ?? []),\n    );\n    const [current, setCurrent] = useState<number>(defaultCurrent);\n    const [pageSize, setPageSize] = useState<number>(defaultPageSize);\n\n    const createLinkForSyncWithLocation = ({\n        pagination: { current, pageSize },\n        sorter,\n        filters,\n    }: SyncWithLocationParams) => {\n        if (routerType === \"new\") {\n            return (\n                go({\n                    type: \"path\",\n                    options: {\n                        keepHash: true,\n                        keepQuery: true,\n                    },\n                    query: {\n                        ...(isPaginationEnabled ? { current, pageSize } : {}),\n                        sorters: sorter,\n                        filters,\n                        ...currentQueryParams(),\n                    },\n                }) ?? \"\"\n            );\n        } else {\n            const currentQueryParams = qs.parse(search?.substring(1)); // remove first ? character\n\n            const stringifyParams = stringifyTableParams({\n                pagination: {\n                    pageSize,\n                    current,\n                },\n                sorters: sorters ?? sorter,\n                filters,\n                ...currentQueryParams,\n            });\n            return `${pathname ?? \"\"}?${stringifyParams ?? \"\"}`;\n        }\n    };\n\n    useEffect(() => {\n        if (search === \"\") {\n            setCurrent(defaultCurrent);\n            setPageSize(defaultPageSize);\n            setSorters(\n                setInitialSorters(\n                    preferredPermanentSorters,\n                    defaultSorter ?? [],\n                ),\n            );\n            setFilters(\n                setInitialFilters(\n                    preferredPermanentFilters,\n                    defaultFilter ?? [],\n                ),\n            );\n        }\n    }, [search]);\n\n    const currentQueryParams = (): object => {\n        if (routerType === \"new\") {\n            // We get QueryString parameters that are uncontrolled by refine.\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const { sorters, filters, pageSize, current, ...rest } =\n                parsedParams?.params ?? {};\n\n            return rest;\n        } else {\n            // We get QueryString parameters that are uncontrolled by refine.\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const { sorter, filters, pageSize, current, ...rest } = qs.parse(\n                search,\n                {\n                    ignoreQueryPrefix: true,\n                },\n            );\n\n            return rest;\n        }\n    };\n\n    useEffect(() => {\n        if (syncWithLocation) {\n            // Careful! This triggers render\n            const queryParams = currentQueryParams();\n\n            if (routerType === \"new\") {\n                go({\n                    type: \"replace\",\n                    options: {\n                        keepQuery: true,\n                    },\n                    query: {\n                        ...(isPaginationEnabled ? { pageSize, current } : {}),\n                        sorters: differenceWith(\n                            sorters,\n                            preferredPermanentSorters,\n                            isEqual,\n                        ),\n                        filters: differenceWith(\n                            filters,\n                            preferredPermanentFilters,\n                            isEqual,\n                        ),\n                        // ...queryParams,\n                    },\n                });\n            } else {\n                const stringifyParams = stringifyTableParams({\n                    ...(isPaginationEnabled\n                        ? {\n                              pagination: {\n                                  pageSize,\n                                  current,\n                              },\n                          }\n                        : {}),\n                    sorters: differenceWith(\n                        sorters,\n                        preferredPermanentSorters,\n                        isEqual,\n                    ),\n                    filters: differenceWith(\n                        filters,\n                        preferredPermanentFilters,\n                        isEqual,\n                    ),\n                    ...queryParams,\n                });\n                return replace?.(`${pathname}?${stringifyParams}`, undefined, {\n                    shallow: true,\n                });\n            }\n        }\n    }, [syncWithLocation, current, pageSize, sorters, filters]);\n\n    const queryResult = useList<TQueryFnData, TError, TData>({\n        resource: identifier,\n        hasPagination,\n        pagination: { current, pageSize, mode: pagination?.mode },\n        filters: isServerSideFilteringEnabled\n            ? unionFilters(preferredPermanentFilters, filters)\n            : undefined,\n        sorters: isServerSideSortingEnabled\n            ? unionSorters(preferredPermanentSorters, sorters)\n            : undefined,\n        queryOptions,\n        successNotification,\n        errorNotification,\n        meta: combinedMeta,\n        metaData: combinedMeta,\n        liveMode,\n        liveParams,\n        onLiveEvent,\n        dataProviderName,\n    });\n\n    const setFiltersAsMerge = (newFilters: CrudFilters) => {\n        setFilters((prevFilters) =>\n            unionFilters(preferredPermanentFilters, newFilters, prevFilters),\n        );\n    };\n\n    const setFiltersAsReplace = (newFilters: CrudFilters) => {\n        setFilters(unionFilters(preferredPermanentFilters, newFilters));\n    };\n\n    const setFiltersWithSetter = (\n        setter: (prevFilters: CrudFilters) => CrudFilters,\n    ) => {\n        setFilters((prev) =>\n            unionFilters(preferredPermanentFilters, setter(prev)),\n        );\n    };\n\n    const setFiltersFn: useTableReturnType<TQueryFnData>[\"setFilters\"] = (\n        setterOrFilters,\n        behavior: SetFilterBehavior = prefferedFilterBehavior,\n    ) => {\n        if (typeof setterOrFilters === \"function\") {\n            setFiltersWithSetter(setterOrFilters);\n        } else {\n            if (behavior === \"replace\") {\n                setFiltersAsReplace(setterOrFilters);\n            } else {\n                setFiltersAsMerge(setterOrFilters);\n            }\n        }\n    };\n\n    const setSortWithUnion = (newSorter: CrudSorting) => {\n        setSorters(() => unionSorters(preferredPermanentSorters, newSorter));\n    };\n\n    const { elapsedTime } = useLoadingOvertime({\n        isLoading: queryResult.isFetching,\n        interval: overtimeOptions?.interval,\n        onInterval: overtimeOptions?.onInterval,\n    });\n\n    return {\n        tableQueryResult: queryResult,\n        sorters,\n        setSorters: setSortWithUnion,\n        sorter: sorters,\n        setSorter: setSortWithUnion,\n        filters,\n        setFilters: setFiltersFn,\n        current,\n        setCurrent,\n        pageSize,\n        setPageSize,\n        pageCount: pageSize\n            ? Math.ceil((queryResult.data?.total ?? 0) / pageSize)\n            : 1,\n        createLinkForSyncWithLocation,\n        overtime: {\n            elapsedTime,\n        },\n    };\n}\n","import { useContext } from \"react\";\nimport {\n    useMutation,\n    UseMutationOptions,\n    UseMutationResult,\n    useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { ResourceContext } from \"@contexts/resource\";\nimport { useGetIdentity } from \"@hooks/auth\";\nimport { BaseKey, LogParams } from \"../../../interfaces\";\nimport { hasPermission, pickNotDeprecated } from \"@definitions/helpers\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\ntype LogRenameData =\n    | {\n          resource?: string;\n      }\n    | undefined;\n\nexport type UseLogReturnType<TLogData, TLogRenameData> = {\n    log: UseMutationResult<TLogData, Error, LogParams>;\n    rename: UseMutationResult<\n        TLogRenameData,\n        Error,\n        {\n            id: BaseKey;\n            name: string;\n        }\n    >;\n};\n\nexport type UseLogMutationProps<\n    TLogData,\n    TLogRenameData extends LogRenameData = LogRenameData,\n> = {\n    logMutationOptions?: Omit<\n        UseMutationOptions<TLogData, Error, LogParams, unknown>,\n        \"mutationFn\"\n    >;\n    renameMutationOptions?: Omit<\n        UseMutationOptions<\n            TLogRenameData,\n            Error,\n            { id: BaseKey; name: string },\n            unknown\n        >,\n        \"mutationFn\" | \"onSuccess\"\n    >;\n};\n\n/**\n * useLog is used to `create` a new and `rename` the existing audit log.\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/audit-log/useLog} for more details.\n */\n\nexport const useLog = <\n    TLogData,\n    TLogRenameData extends LogRenameData = LogRenameData,\n>({\n    logMutationOptions,\n    renameMutationOptions,\n}: UseLogMutationProps<TLogData, TLogRenameData> = {}): UseLogReturnType<\n    TLogData,\n    TLogRenameData\n> => {\n    const queryClient = useQueryClient();\n    const auditLogContext = useContext(AuditLogContext);\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const authProvider = useActiveAuthProvider();\n\n    const { resources } = useContext(ResourceContext);\n    const {\n        data: identityData,\n        refetch,\n        isLoading,\n    } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n        queryOptions: {\n            enabled: !!auditLogContext,\n        },\n    });\n\n    const log = useMutation<TLogData, Error, LogParams, unknown>(\n        async (params) => {\n            const resource = pickResource(params.resource, resources);\n            const logPermissions = pickNotDeprecated(\n                resource?.meta?.audit,\n                resource?.options?.audit,\n                resource?.options?.auditLog?.permissions,\n            );\n\n            if (logPermissions) {\n                if (!hasPermission(logPermissions, params.action)) {\n                    return;\n                }\n            }\n\n            let authorData;\n            if (isLoading) {\n                authorData = await refetch();\n            }\n\n            return await auditLogContext.create?.({\n                ...params,\n                author: identityData ?? authorData?.data,\n            });\n        },\n        {\n            mutationKey: keys().audit().action(\"log\").get(),\n            ...logMutationOptions,\n            meta: {\n                ...logMutationOptions?.meta,\n                ...getXRay(\"useLog\", preferLegacyKeys),\n            },\n        },\n    );\n\n    const rename = useMutation<\n        TLogRenameData,\n        Error,\n        { id: BaseKey; name: string },\n        unknown\n    >(\n        async (params) => {\n            return await auditLogContext.update?.(params);\n        },\n        {\n            onSuccess: (data) => {\n                if (data?.resource) {\n                    queryClient.invalidateQueries(\n                        keys()\n                            .audit()\n                            .resource(data?.resource ?? \"\")\n                            .action(\"list\")\n                            .get(preferLegacyKeys),\n                    );\n                }\n            },\n            mutationKey: keys().audit().action(\"rename\").get(),\n            ...renameMutationOptions,\n            meta: {\n                ...renameMutationOptions?.meta,\n                ...getXRay(\"useLog\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return { log, rename };\n};\n","import React from \"react\";\n\nimport { IAuditLogContext } from \"./IAuditLogContext\";\n\nexport const AuditLogContext = React.createContext<IAuditLogContext>({});\n\nexport const AuditLogContextProvider: React.FC<\n    IAuditLogContext & {\n        children: React.ReactNode;\n    }\n> = ({ create, get, update, children }) => {\n    return (\n        <AuditLogContext.Provider value={{ create, get, update }}>\n            {children}\n        </AuditLogContext.Provider>\n    );\n};\n","import { useContext } from \"react\";\nimport {\n    useQuery,\n    UseQueryResult,\n    UseQueryOptions,\n} from \"@tanstack/react-query\";\n\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { HttpError, MetaQuery } from \"../../../interfaces\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\n\nexport type UseLogProps<TQueryFnData, TError, TData> = {\n    resource: string;\n    action?: string;\n    meta?: Record<number | string, any>;\n    author?: Record<number | string, any>;\n    queryOptions?: UseQueryOptions<TQueryFnData, TError, TData>;\n    metaData?: MetaQuery;\n};\n\n/**\n * useLogList is used to get and filter audit logs.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/audit-log/useLogList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function.\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Defaults to `TQueryFnData`\n *\n */\nexport const useLogList = <\n    TQueryFnData = any,\n    TError extends HttpError = HttpError,\n    TData = TQueryFnData,\n>({\n    resource,\n    action,\n    meta,\n    author,\n    metaData,\n    queryOptions,\n}: UseLogProps<TQueryFnData, TError, TData>): UseQueryResult<TData> => {\n    const { get } = useContext(AuditLogContext);\n    const { keys, preferLegacyKeys } = useKeys();\n\n    const queryResponse = useQuery<TQueryFnData, TError, TData>(\n        keys()\n            .audit()\n            .resource(resource)\n            .action(\"list\")\n            .params(meta)\n            .get(preferLegacyKeys),\n        () =>\n            get?.({\n                resource,\n                action,\n                author,\n                meta,\n                metaData,\n            }) ?? Promise.resolve([]),\n        {\n            enabled: typeof get !== \"undefined\",\n            ...queryOptions,\n            retry: false,\n            meta: {\n                ...queryOptions?.meta,\n                ...getXRay(\"useLogList\", preferLegacyKeys),\n            },\n        },\n    );\n\n    return queryResponse;\n};\n","import React, { useContext } from \"react\";\nimport warnOnce from \"warn-once\";\n\nimport { useRefineContext, useResource, useTranslate } from \"@hooks\";\nimport { TranslationContext } from \"@contexts/translation\";\nimport { pickNotDeprecated } from \"@definitions\";\n\nimport { IResourceItem } from \"../../interfaces\";\nimport { useRouterType } from \"@contexts/router-picker\";\nimport { getActionRoutesFromResource } from \"@definitions/helpers/router\";\nimport { pickResource } from \"../../definitions/helpers/pick-resource/index\";\nimport { composeRoute } from \"@definitions/helpers/router/compose-route\";\nimport { useParsed } from \"@hooks/router/use-parsed\";\n\nexport type BreadcrumbsType = {\n    label: string;\n    href?: string;\n    icon?: React.ReactNode;\n};\n\ntype UseBreadcrumbReturnType = {\n    breadcrumbs: BreadcrumbsType[];\n};\n\ntype UseBreadcrumbProps = {\n    /**\n     * Additional params to be used in the route generation process.\n     */\n    meta?: Record<string, string | number>;\n};\n\nexport const useBreadcrumb = ({\n    meta: metaFromProps = {},\n}: UseBreadcrumbProps = {}): UseBreadcrumbReturnType => {\n    const routerType = useRouterType();\n    const { i18nProvider } = useContext(TranslationContext);\n    const parsed = useParsed();\n    const translate = useTranslate();\n    const { resources, resource, action } = useResource();\n    const {\n        options: { textTransformers },\n    } = useRefineContext();\n\n    const breadcrumbs: BreadcrumbsType[] = [];\n\n    if (!resource?.name) {\n        return { breadcrumbs };\n    }\n\n    const addBreadcrumb = (parentName: string | IResourceItem) => {\n        const parentResource =\n            typeof parentName === \"string\"\n                ? pickResource(\n                      parentName,\n                      resources,\n                      routerType === \"legacy\",\n                  ) ?? { name: parentName }\n                : parentName;\n\n        if (parentResource) {\n            const grandParentName = pickNotDeprecated(\n                parentResource?.meta?.parent,\n                parentResource?.parentName,\n            );\n            if (grandParentName) {\n                addBreadcrumb(grandParentName);\n            }\n            const listActionOfResource = getActionRoutesFromResource(\n                parentResource,\n                resources,\n                routerType === \"legacy\",\n            ).find((r) => r.action === \"list\");\n\n            const hrefRaw = listActionOfResource?.resource?.list\n                ? listActionOfResource?.route\n                : undefined;\n\n            const href = hrefRaw\n                ? routerType === \"legacy\"\n                    ? hrefRaw\n                    : composeRoute(\n                          hrefRaw,\n                          parentResource?.meta,\n                          parsed,\n                          metaFromProps,\n                      )\n                : undefined;\n\n            breadcrumbs.push({\n                label:\n                    pickNotDeprecated(\n                        parentResource.meta?.label,\n                        parentResource.options?.label,\n                    ) ??\n                    translate(\n                        `${parentResource.name}.${parentResource.name}`,\n                        textTransformers.humanize(parentResource.name),\n                    ),\n                href: href,\n                icon: pickNotDeprecated(\n                    parentResource.meta?.icon,\n                    parentResource.options?.icon,\n                    parentResource.icon,\n                ),\n            });\n        }\n    };\n\n    addBreadcrumb(resource);\n\n    if (action && action !== \"list\") {\n        const key = `actions.${action}`;\n        const actionLabel = translate(key);\n        if (typeof i18nProvider !== \"undefined\" && actionLabel === key) {\n            warnOnce(\n                true,\n                `[useBreadcrumb]: Breadcrumb missing translate key for the \"${action}\" action. Please add \"actions.${action}\" key to your translation file.\\nFor more information, see https://refine.dev/docs/api-reference/core/hooks/useBreadcrumb/#i18n-support`,\n            );\n            breadcrumbs.push({\n                label: translate(\n                    `buttons.${action}`,\n                    textTransformers.humanize(action),\n                ),\n            });\n        } else {\n            breadcrumbs.push({\n                label: translate(key, textTransformers.humanize(action)),\n            });\n        }\n    }\n\n    return {\n        breadcrumbs,\n    };\n};\n","import React from \"react\";\nimport { useTranslate, useResource, useParsed, useRouterContext } from \"..\";\nimport { useUserFriendlyName, pickNotDeprecated } from \"@definitions\";\nimport { useRouterType } from \"../../contexts/router-picker\";\nimport { createResourceKey } from \"../../definitions/helpers/menu/create-resource-key\";\nimport { useGetToPath } from \"../router/use-get-to-path/index\";\nimport { getParentResource } from \"@definitions/helpers/router\";\nimport {\n    FlatTreeItem,\n    createTree,\n} from \"@definitions/helpers/menu/create-tree\";\n\ntype UseMenuReturnType = {\n    defaultOpenKeys: string[];\n    selectedKey: string;\n    menuItems: TreeMenuItem[];\n};\n\nexport type UseMenuProps = {\n    meta?: Record<string, any>;\n    hideOnMissingParameter?: boolean;\n};\n\nexport type TreeMenuItem = FlatTreeItem & {\n    route?: string;\n    icon?: React.ReactNode;\n    label?: string;\n    children: TreeMenuItem[];\n};\n\nconst getCleanPath = (pathname: string) => {\n    return pathname\n        .split(\"?\")[0]\n        .split(\"#\")[0]\n        .replace(/(.+)(\\/$)/, \"$1\");\n};\n\n/**\n * `useMenu` is used to get menu items of the default sidebar.\n * These items include a link to dashboard page (if it exists) and links to the user defined resources\n * (passed as children to {@link https://refine.dev/docs/core/components/refine-config `<Refine>`}).\n * This hook can also be used to build custom menus, which is also used by default sidebar to show menu items.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/ui/useMenu} for more details.\n */\nexport const useMenu = (\n    { meta, hideOnMissingParameter }: UseMenuProps = {\n        hideOnMissingParameter: true,\n    },\n): UseMenuReturnType => {\n    const translate = useTranslate();\n\n    const getToPath = useGetToPath();\n    const routerType = useRouterType();\n    const { resource, resources } = useResource();\n    const { pathname } = useParsed();\n    const { useLocation } = useRouterContext();\n    const { pathname: legacyPath } = useLocation();\n    const getFriendlyName = useUserFriendlyName();\n\n    const cleanPathname =\n        routerType === \"legacy\"\n            ? getCleanPath(legacyPath)\n            : pathname\n            ? getCleanPath(pathname)\n            : undefined;\n\n    const cleanRoute = `/${(cleanPathname ?? \"\").replace(/^\\//, \"\")}`;\n\n    const selectedKey = resource\n        ? createResourceKey(resource, resources, routerType === \"legacy\")\n        : cleanRoute ?? \"\";\n\n    const defaultOpenKeys = React.useMemo(() => {\n        if (!resource) return [];\n        let parent = getParentResource(resource, resources);\n        const keys = [createResourceKey(resource, resources)];\n        while (parent) {\n            keys.push(createResourceKey(parent, resources));\n            parent = getParentResource(parent, resources);\n        }\n        return keys;\n    }, []);\n\n    const prepareItem = React.useCallback(\n        (item: FlatTreeItem): TreeMenuItem | undefined => {\n            if (item?.meta?.hide ?? item?.options?.hide) return undefined;\n            if (!item?.list && item.children.length === 0) return undefined;\n\n            const composed = item.list\n                ? getToPath({\n                      resource: item,\n                      action: \"list\",\n                      legacy: routerType === \"legacy\",\n                      meta,\n                  })\n                : undefined;\n\n            if (\n                hideOnMissingParameter &&\n                composed &&\n                composed.match(/(\\/|^):(.+?)(\\/|$){1}/)\n            )\n                return undefined;\n\n            return {\n                ...item,\n                route: composed,\n                icon: pickNotDeprecated(\n                    item.meta?.icon,\n                    item.options?.icon,\n                    item.icon,\n                ),\n                label:\n                    pickNotDeprecated(\n                        item?.meta?.label,\n                        item?.options?.label,\n                    ) ??\n                    translate(\n                        `${item.name}.${item.name}`,\n                        getFriendlyName(item.name, \"plural\"),\n                    ),\n            };\n        },\n        [routerType, meta, translate, hideOnMissingParameter],\n    );\n\n    const treeItems = React.useMemo(() => {\n        const treeMenuItems = createTree(resources, routerType === \"legacy\");\n\n        // add paths to items and their nodes recursively\n        const prepare = (items: TreeMenuItem[]): TreeMenuItem[] => {\n            return items.flatMap((item) => {\n                const preparedNodes = prepare(item.children);\n                const newItem = prepareItem({\n                    ...item,\n                    children: preparedNodes,\n                });\n\n                if (!newItem) return [];\n\n                return [newItem];\n            });\n        };\n\n        return prepare(treeMenuItems);\n    }, [resources, routerType, prepareItem]);\n\n    return {\n        defaultOpenKeys,\n        selectedKey,\n        menuItems: treeItems,\n    };\n};\n","import { IResourceItem } from \"../../../interfaces\";\nimport {\n    getParentResource,\n    removeLeadingTrailingSlashes,\n} from \"../../helpers/router\";\n\nexport const createResourceKey = (\n    resource: IResourceItem,\n    resources: IResourceItem[],\n    legacy = false,\n) => {\n    const parents: IResourceItem[] = [];\n\n    let currentParentResource = getParentResource(resource, resources);\n    while (currentParentResource) {\n        parents.push(currentParentResource);\n        currentParentResource = getParentResource(\n            currentParentResource,\n            resources,\n        );\n    }\n    parents.reverse();\n\n    const key = [...parents, resource]\n        .map((r) =>\n            removeLeadingTrailingSlashes(\n                (legacy ? r.route : undefined) ?? r.identifier ?? r.name,\n            ),\n        )\n        .join(\"/\");\n\n    return `/${key.replace(/^\\//, \"\")}`;\n};\n","import { IResourceItem } from \"@contexts/resource\";\nimport { getParentResource } from \"../router\";\nimport { createResourceKey } from \"./create-resource-key\";\n\nexport type Tree = {\n    item: IResourceItem;\n    children: { [key: string]: Tree };\n};\n\nexport type FlatTreeItem = IResourceItem & {\n    key: string;\n    children: FlatTreeItem[];\n};\n\nexport const createTree = (\n    resources: IResourceItem[],\n    legacy = false,\n): FlatTreeItem[] => {\n    const root: Tree = {\n        item: {\n            name: \"__root__\",\n        },\n        children: {},\n    };\n\n    resources.forEach((resource) => {\n        const parents: IResourceItem[] = [];\n\n        let currentParent = getParentResource(resource, resources);\n        while (currentParent) {\n            parents.push(currentParent);\n            currentParent = getParentResource(currentParent, resources);\n        }\n        parents.reverse();\n\n        let currentTree = root;\n\n        parents.forEach((parent) => {\n            const key =\n                (legacy ? parent.route : undefined) ??\n                parent.identifier ??\n                parent.name;\n\n            if (!currentTree.children[key]) {\n                currentTree.children[key] = {\n                    item: parent,\n                    children: {},\n                };\n            }\n            currentTree = currentTree.children[key];\n        });\n\n        const key =\n            (legacy ? resource.route : undefined) ??\n            resource.identifier ??\n            resource.name;\n\n        if (!currentTree.children[key]) {\n            currentTree.children[key] = {\n                item: resource,\n                children: {},\n            };\n        }\n    });\n\n    const flatten = (tree: Tree): FlatTreeItem[] => {\n        const items: FlatTreeItem[] = [];\n\n        Object.keys(tree.children).forEach((key) => {\n            const itemKey = createResourceKey(\n                tree.children[key].item,\n                resources,\n                legacy,\n            );\n            const item: FlatTreeItem = {\n                ...tree.children[key].item,\n                key: itemKey,\n                children: flatten(tree.children[key]),\n            };\n            items.push(item);\n        });\n\n        return items;\n    };\n\n    return flatten(root);\n};\n","import { useParsed } from \"@hooks/router\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\nimport { IResourceItem, MetaQuery } from \"../../interfaces\";\n\n/**\n * Hook that returns a function to get meta.\n * The meta is a combination of the resource meta, hook meta and query params.\n * @internal\n */\nexport const useMeta = () => {\n    const { params } = useParsed();\n\n    const getMetaFn = ({\n        resource,\n        meta: metaFromProp,\n    }: {\n        resource?: IResourceItem;\n        meta?: MetaQuery;\n    } = {}) => {\n        const { meta } = sanitizeResource(resource) ?? { meta: {} };\n\n        // this fields came from the query params and should be removed from the meta because they are not part of the meta.\n        const {\n            filters: _filters,\n            sorters: _sorters,\n            current: _current,\n            pageSize: _pageSize,\n            ...additionalParams\n        } = params ?? {};\n\n        return { ...meta, ...additionalParams, ...metaFromProp };\n    };\n\n    return getMetaFn;\n};\n","import React, { useState } from \"react\";\n\nimport { useLogin, useTranslate } from \"@hooks\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\nexport interface ILoginForm {\n    username: string;\n    password: string;\n}\n\n/**\n * @deprecated LoginPage is deprecated. Use AuthPage instead. @see {@link https://refine.dev/docs/core/components/auth-page} for more details.\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#loginpage} for more details.\n */\nexport const LoginPage: React.FC = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const translate = useTranslate();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login } = useLogin<ILoginForm>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    return (\n        <>\n            <h1>{translate(\"pages.login.title\", \"Sign in your account\")}</h1>\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    login({ username, password });\n                }}\n            >\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>\n                                {translate(\n                                    \"pages.login.username\",\n                                    undefined,\n                                    \"username\",\n                                )}\n                                :\n                            </td>\n                            <td>\n                                <input\n                                    type=\"text\"\n                                    size={20}\n                                    autoCorrect=\"off\"\n                                    spellCheck={false}\n                                    autoCapitalize=\"off\"\n                                    autoFocus\n                                    required\n                                    value={username}\n                                    onChange={(e) =>\n                                        setUsername(e.target.value)\n                                    }\n                                />\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {translate(\n                                    \"pages.login.password\",\n                                    undefined,\n                                    \"password\",\n                                )}\n                                :\n                            </td>\n                            <td>\n                                <input\n                                    type=\"password\"\n                                    required\n                                    size={20}\n                                    value={password}\n                                    onChange={(e) =>\n                                        setPassword(e.target.value)\n                                    }\n                                />\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <br />\n                <input type=\"submit\" value=\"login\" />\n            </form>\n        </>\n    );\n};\n","import React, {\n    DetailedHTMLProps,\n    HTMLAttributes,\n    FormHTMLAttributes,\n} from \"react\";\n\nimport {\n    LoginPage,\n    RegisterPage,\n    ForgotPasswordPage,\n    UpdatePasswordPage,\n} from \"./components\";\n\nimport { AuthPageProps } from \"../../../interfaces\";\n\nexport type DivPropsType = DetailedHTMLProps<\n    HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n>;\nexport type FormPropsType = DetailedHTMLProps<\n    FormHTMLAttributes<HTMLFormElement>,\n    HTMLFormElement\n>;\n\nexport type AuthProps = AuthPageProps<\n    DivPropsType,\n    DivPropsType,\n    FormPropsType\n>;\n\n/**\n * **refine** has a default auth page form which is served on `/login` route when the `authProvider` configuration is provided.\n * @param title is not implemented yet.\n * @see {@link https://refine.dev/docs/api-reference/core/components/auth-page/} for more details.\n */\nexport const AuthPage: React.FC<AuthProps> = (props) => {\n    const { type } = props;\n    const renderView = () => {\n        switch (type) {\n            case \"register\":\n                return <RegisterPage {...props} />;\n            case \"forgotPassword\":\n                return <ForgotPasswordPage {...props} />;\n            case \"updatePassword\":\n                return <UpdatePasswordPage {...props} />;\n            default:\n                return <LoginPage {...props} />;\n        }\n    };\n\n    return <>{renderView()}</>;\n};\n","import React, { useState } from \"react\";\nimport { LoginPageProps, LoginFormTypes } from \"../../../../../interfaces\";\n\nimport { useRouterContext, useLink, useRouterType, useLogin } from \"@hooks\";\nimport { useTranslate } from \"@hooks/translate\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\n\ntype LoginProps = LoginPageProps<DivPropsType, DivPropsType, FormPropsType>;\n\nexport const LoginPage: React.FC<LoginProps> = ({\n    providers,\n    registerLink,\n    forgotPasswordLink,\n    rememberMe,\n    contentProps,\n    wrapperProps,\n    renderContent,\n    formProps,\n    title = undefined,\n}) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [remember, setRemember] = useState(false);\n\n    const translate = useTranslate();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login } = useLogin<LoginFormTypes>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const renderLink = (link: string, text?: string) => {\n        return <ActiveLink to={link}>{text}</ActiveLink>;\n    };\n\n    const renderProviders = () => {\n        if (providers) {\n            return providers.map((provider) => (\n                <div\n                    key={provider.name}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        marginBottom: \"1rem\",\n                    }}\n                >\n                    <button\n                        onClick={() =>\n                            login({\n                                providerName: provider.name,\n                            })\n                        }\n                        style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        {provider?.icon}\n                        {provider.label ?? <label>{provider.label}</label>}\n                    </button>\n                </div>\n            ));\n        }\n        return null;\n    };\n\n    const content = (\n        <div {...contentProps}>\n            <h1 style={{ textAlign: \"center\" }}>\n                {translate(\"pages.login.title\", \"Sign in to your account\")}\n            </h1>\n            {renderProviders()}\n            <hr />\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    login({ email, password, remember });\n                }}\n                {...formProps}\n            >\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        padding: 25,\n                    }}\n                >\n                    <label htmlFor=\"email-input\">\n                        {translate(\"pages.login.fields.email\", \"Email\")}\n                    </label>\n                    <input\n                        id=\"email-input\"\n                        name=\"email\"\n                        type=\"text\"\n                        size={20}\n                        autoCorrect=\"off\"\n                        spellCheck={false}\n                        autoCapitalize=\"off\"\n                        required\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                    <label htmlFor=\"password-input\">\n                        {translate(\"pages.login.fields.password\", \"Password\")}\n                    </label>\n                    <input\n                        id=\"password-input\"\n                        type=\"password\"\n                        name=\"password\"\n                        required\n                        size={20}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                    {rememberMe ?? (\n                        <>\n                            <label htmlFor=\"remember-me-input\">\n                                {translate(\n                                    \"pages.login.buttons.rememberMe\",\n                                    \"Remember me\",\n                                )}\n                                <input\n                                    id=\"remember-me-input\"\n                                    name=\"remember\"\n                                    type=\"checkbox\"\n                                    size={20}\n                                    checked={remember}\n                                    value={remember.toString()}\n                                    onChange={() => {\n                                        setRemember(!remember);\n                                    }}\n                                />\n                            </label>\n                        </>\n                    )}\n                    <br />\n                    {forgotPasswordLink ??\n                        renderLink(\n                            \"/forgot-password\",\n                            translate(\n                                \"pages.login.buttons.forgotPassword\",\n                                \"Forgot password?\",\n                            ),\n                        )}\n                    <input\n                        type=\"submit\"\n                        value={translate(\"pages.login.signin\", \"Sign in\")}\n                    />\n                    {registerLink ?? (\n                        <span>\n                            {translate(\n                                \"pages.login.buttons.noAccount\",\n                                \"Don’t have an account?\",\n                            )}{\" \"}\n                            {renderLink(\n                                \"/register\",\n                                translate(\"pages.login.register\", \"Sign up\"),\n                            )}\n                        </span>\n                    )}\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <div {...wrapperProps}>\n            {renderContent ? renderContent(content, title) : content}\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\nimport { RegisterPageProps } from \"../../../../../interfaces\";\n\nimport {\n    useTranslate,\n    useRouterContext,\n    useLink,\n    useRouterType,\n    useRegister,\n} from \"@hooks\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\n\ntype RegisterProps = RegisterPageProps<\n    DivPropsType,\n    DivPropsType,\n    FormPropsType\n>;\n\nexport const RegisterPage: React.FC<RegisterProps> = ({\n    providers,\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title = undefined,\n}) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const translate = useTranslate();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: register, isLoading } = useRegister({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const renderLink = (link: string, text?: string) => {\n        return <ActiveLink to={link}>{text}</ActiveLink>;\n    };\n\n    const renderProviders = () => {\n        if (providers) {\n            return providers.map((provider) => (\n                <div\n                    key={provider.name}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        marginBottom: \"1rem\",\n                    }}\n                >\n                    <button\n                        onClick={() =>\n                            register({\n                                providerName: provider.name,\n                            })\n                        }\n                        style={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        {provider?.icon}\n                        {provider.label ?? <label>{provider.label}</label>}\n                    </button>\n                </div>\n            ));\n        }\n        return null;\n    };\n\n    const content = (\n        <div {...contentProps}>\n            <h1 style={{ textAlign: \"center\" }}>\n                {translate(\"pages.register.title\", \"Sign up for your account\")}\n            </h1>\n            {renderProviders()}\n            <hr />\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    register({ email, password });\n                }}\n                {...formProps}\n            >\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        padding: 25,\n                    }}\n                >\n                    <label htmlFor=\"email-input\">\n                        {translate(\"pages.register.fields.email\", \"Email\")}\n                    </label>\n                    <input\n                        id=\"email-input\"\n                        name=\"email\"\n                        type=\"email\"\n                        size={20}\n                        autoCorrect=\"off\"\n                        spellCheck={false}\n                        autoCapitalize=\"off\"\n                        required\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                    <label htmlFor=\"password-input\">\n                        {translate(\n                            \"pages.register.fields.password\",\n                            \"Password\",\n                        )}\n                    </label>\n                    <input\n                        id=\"password-input\"\n                        name=\"password\"\n                        type=\"password\"\n                        required\n                        size={20}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                    <input\n                        type=\"submit\"\n                        value={translate(\n                            \"pages.register.buttons.submit\",\n                            \"Sign up\",\n                        )}\n                        disabled={isLoading}\n                    />\n                    {loginLink ?? (\n                        <>\n                            <span>\n                                {translate(\n                                    \"pages.login.buttons.haveAccount\",\n                                    \"Have an account?\",\n                                )}{\" \"}\n                                {renderLink(\n                                    \"/login\",\n                                    translate(\"pages.login.signin\", \"Sign in\"),\n                                )}\n                            </span>\n                        </>\n                    )}\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <div {...wrapperProps}>\n            {renderContent ? renderContent(content, title) : content}\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\n\nimport {\n    useTranslate,\n    useRouterContext,\n    useLink,\n    useRouterType,\n    useForgotPassword,\n} from \"@hooks\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport {\n    ForgotPasswordFormTypes,\n    ForgotPasswordPageProps,\n} from \"../../../../../interfaces\";\n\ntype ForgotPasswordProps = ForgotPasswordPageProps<\n    DivPropsType,\n    DivPropsType,\n    FormPropsType\n>;\n\nexport const ForgotPasswordPage: React.FC<ForgotPasswordProps> = ({\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title = undefined,\n}) => {\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const [email, setEmail] = useState(\"\");\n\n    const { mutate: forgotPassword, isLoading } =\n        useForgotPassword<ForgotPasswordFormTypes>();\n\n    const renderLink = (link: string, text?: string) => {\n        return <ActiveLink to={link}>{text}</ActiveLink>;\n    };\n\n    const content = (\n        <div {...contentProps}>\n            <h1 style={{ textAlign: \"center\" }}>\n                {translate(\n                    \"pages.forgotPassword.title\",\n                    \"Forgot your password?\",\n                )}\n            </h1>\n            <hr />\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    forgotPassword({ email });\n                }}\n                {...formProps}\n            >\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        padding: 25,\n                    }}\n                >\n                    <label htmlFor=\"email-input\">\n                        {translate(\n                            \"pages.forgotPassword.fields.email\",\n                            \"Email\",\n                        )}\n                    </label>\n                    <input\n                        id=\"email-input\"\n                        name=\"email\"\n                        type=\"mail\"\n                        autoCorrect=\"off\"\n                        spellCheck={false}\n                        autoCapitalize=\"off\"\n                        required\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                    <input\n                        type=\"submit\"\n                        disabled={isLoading}\n                        value={translate(\n                            \"pages.forgotPassword.buttons.submit\",\n                            \"Send reset instructions\",\n                        )}\n                    />\n                    <br />\n                    {loginLink ?? (\n                        <span>\n                            {translate(\n                                \"pages.register.buttons.haveAccount\",\n                                \"Have an account? \",\n                            )}{\" \"}\n                            {renderLink(\n                                \"/login\",\n                                translate(\"pages.login.signin\", \"Sign in\"),\n                            )}\n                        </span>\n                    )}\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <div {...wrapperProps}>\n            {renderContent ? renderContent(content, title) : content}\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\nimport {\n    UpdatePasswordFormTypes,\n    UpdatePasswordPageProps,\n} from \"../../../../../interfaces\";\n\nimport { useTranslate, useUpdatePassword } from \"@hooks\";\n\nimport { DivPropsType, FormPropsType } from \"../..\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\n\ntype UpdatePasswordProps = UpdatePasswordPageProps<\n    DivPropsType,\n    DivPropsType,\n    FormPropsType\n>;\n\nexport const UpdatePasswordPage: React.FC<UpdatePasswordProps> = ({\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title = undefined,\n}) => {\n    const translate = useTranslate();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: updatePassword, isLoading } =\n        useUpdatePassword<UpdatePasswordFormTypes>({\n            v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n        });\n\n    const [newPassword, setNewPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const content = (\n        <div {...contentProps}>\n            <h1 style={{ textAlign: \"center\" }}>\n                {translate(\"pages.updatePassword.title\", \"Update Password\")}\n            </h1>\n            <hr />\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    updatePassword({\n                        password: newPassword,\n                        confirmPassword,\n                    });\n                }}\n                {...formProps}\n            >\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        padding: 25,\n                    }}\n                >\n                    <label htmlFor=\"password-input\">\n                        {translate(\n                            \"pages.updatePassword.fields.password\",\n                            \"New Password\",\n                        )}\n                    </label>\n                    <input\n                        id=\"password-input\"\n                        name=\"password\"\n                        type=\"password\"\n                        required\n                        size={20}\n                        value={newPassword}\n                        onChange={(e) => setNewPassword(e.target.value)}\n                    />\n                    <label htmlFor=\"confirm-password-input\">\n                        {translate(\n                            \"pages.updatePassword.fields.confirmPassword\",\n                            \"Confirm New Password\",\n                        )}\n                    </label>\n                    <input\n                        id=\"confirm-password-input\"\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        required\n                        size={20}\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    />\n                    <input\n                        type=\"submit\"\n                        disabled={isLoading}\n                        value={translate(\n                            \"pages.updatePassword.buttons.submit\",\n                            \"Update\",\n                        )}\n                    />\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <div {...wrapperProps}>\n            {renderContent ? renderContent(content, title) : content}\n        </div>\n    );\n};\n","import React from \"react\";\n\n/**\n * **refine** shows a default ready page on root route when no `resources` is passed to the `<Refine>` component as a property.\n *\n * @deprecated `ReadyPage` is deprecated and will be removed in the next major release.\n */\nexport const ReadyPage: React.FC = () => {\n    return (\n        <>\n            <h1>Welcome on board</h1>\n            <p>Your configuration is completed.</p>\n            <p>\n                Now you can get started by adding your resources to the{\" \"}\n                <code>`resources`</code> property of <code>{\"`<Refine>`\"}</code>\n            </p>\n            <div style={{ display: \"flex\", gap: 8 }}>\n                <a href=\"https://refine.dev\" target=\"_blank\" rel=\"noreferrer\">\n                    <button>Documentation</button>\n                </a>\n                <a\n                    href=\"https://refine.dev/examples\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    <button>Examples</button>\n                </a>\n                <a\n                    href=\"https://discord.gg/refine\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    <button>Community</button>\n                </a>\n            </div>\n        </>\n    );\n};\n","import React, { useState } from \"react\";\n\nimport { useMediaQuery } from \"@definitions/helpers\";\n\ntype CardInfo = {\n    title: string;\n    description: string;\n    link: string;\n    icon: React.ReactNode;\n};\n\nconst CARDS: CardInfo[] = [\n    {\n        title: \"Documentation\",\n        description:\n            \"Learn about the technical details of using refine in your projects.\",\n        link: \"https://refine.dev/\",\n        icon: (\n            <svg\n                width=\"14\"\n                height=\"16\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path\n                    d=\"M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V5a1 1 0 0 0-1-1H3a1 1 0 0 1 0-2h10a1 1 0 1 0 0-2H2Z\"\n                    fill=\"#fff\"\n                />\n            </svg>\n        ),\n    },\n    {\n        title: \"Tutorial\",\n        description:\n            \"Learn how to use refine by building a fully-functioning CRUD app, from scratch to full launch.\",\n        link: \"https://refine.dev/docs/tutorial/introduction/index/\",\n        icon: (\n            <svg\n                width=\"16\"\n                height=\"14\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path\n                    d=\"M0 4.573c0-.475.163-.948.53-1.25a4.57 4.57 0 0 1 .854-.553L5.956.485a4.571 4.571 0 0 1 4.088 0l4.572 2.285c.308.154.594.34.853.553.306.251.47.62.517 1.01.01.055.014.112.014.169v6.5a1 1 0 0 1-2 0V6.684l-3.956 1.978a4.571 4.571 0 0 1-4.088 0L1.384 6.376a4.57 4.57 0 0 1-.853-.553C.163 5.522 0 5.05 0 4.573Z\"\n                    fill=\"#fff\"\n                />\n                <path\n                    d=\"M5.061 13.305 3 12.274V9.42l2.061 1.031a6.571 6.571 0 0 0 5.878 0L13 9.421v2.853l-2.061 1.03a6.571 6.571 0 0 1-5.878 0Z\"\n                    fill=\"#fff\"\n                />\n            </svg>\n        ),\n    },\n    {\n        title: \"Examples\",\n        description:\n            \"A collection of reference applications you can use as a starting point.\",\n        link: \"https://refine.dev/examples\",\n        icon: (\n            <svg\n                width=\"16\"\n                height=\"16\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    d=\"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v4H0V2Zm3 2a1 1 0 1 0 0-2 1 1 0 0 0 0 2Zm4-1a1 1 0 1 1-2 0 1 1 0 0 1 2 0Zm2 1a1 1 0 1 0 0-2 1 1 0 0 0 0 2Z\"\n                    fill=\"#fff\"\n                />\n                <path\n                    d=\"M0 14V8h16v6a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2Z\"\n                    fill=\"#fff\"\n                />\n            </svg>\n        ),\n    },\n    {\n        title: \"Community\",\n        description:\n            \"Join our Discord community and keep up with the latest news.\",\n        link: \"https://discord.gg/refine\",\n        icon: (\n            <svg\n                width=\"16\"\n                height=\"12\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path\n                    d=\"M13.553 1.005A13.334 13.334 0 0 0 10.253 0c-.156.276-.298.56-.423.85a12.42 12.42 0 0 0-3.664 0A8.975 8.975 0 0 0 5.744 0 13.43 13.43 0 0 0 2.44 1.007C.351 4.066-.215 7.05.068 9.99A13.36 13.36 0 0 0 4.116 12c.328-.436.618-.9.867-1.384a8.647 8.647 0 0 1-1.365-.645c.115-.082.227-.167.335-.249a9.594 9.594 0 0 0 8.094 0c.11.089.222.173.335.25-.436.254-.894.47-1.368.646.249.484.539.946.867 1.382a13.3 13.3 0 0 0 4.051-2.01c.332-3.41-.568-6.365-2.379-8.985Zm-8.21 7.176c-.79 0-1.442-.709-1.442-1.58 0-.872.63-1.587 1.439-1.587s1.456.715 1.442 1.586c-.014.872-.636 1.58-1.44 1.58Zm5.315 0c-.79 0-1.44-.709-1.44-1.58 0-.872.63-1.587 1.44-1.587.81 0 1.452.715 1.438 1.586-.014.872-.634 1.58-1.438 1.58Z\"\n                    fill=\"#fff\"\n                />\n            </svg>\n        ),\n    },\n];\n\n/**\n * It is a page that welcomes you after the configuration is completed.\n */\nexport const WelcomePage: React.FC = () => {\n    const isTablet = useMediaQuery(\"(max-width: 1010px)\");\n    const isMobile = useMediaQuery(\"(max-width: 650px)\");\n\n    const getGridTemplateColumns = () => {\n        if (isMobile) {\n            return \"1, 280px\";\n        } else if (isTablet) {\n            return \"2, 280px\";\n        } else {\n            return \"4, 208px\";\n        }\n    };\n\n    const getHeaderFontSize = () => {\n        if (isMobile) {\n            return \"32px\";\n        } else if (isTablet) {\n            return \"40px\";\n        } else {\n            return \"48px\";\n        }\n    };\n\n    const getSubHeaderFontSize = () => {\n        if (isMobile) {\n            return \"16px\";\n        } else if (isTablet) {\n            return \"20px\";\n        } else {\n            return \"24px\";\n        }\n    };\n\n    return (\n        <div\n            style={{\n                backgroundImage:\n                    \"url(https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/welcome-page.webp)\",\n                backgroundPosition: \"center top\",\n                backgroundSize: \"cover\",\n                backgroundRepeat: \"no-repeat\",\n                minHeight: \"100vh\",\n                backgroundColor: \"#0D0D12\",\n                fontFamily: \"Arial\",\n                color: \"#FFFFFF\",\n            }}\n        >\n            <div style={{ height: \"89px\" }}></div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <img\n                    src=\"https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/welcome-logo.webp\"\n                    width=\"198\"\n                    height=\"54\"\n                />\n            </div>\n            <div\n                style={{\n                    height: isTablet ? \"270px\" : \"22vw\",\n                    minHeight: isTablet ? \"270px\" : \"313px\",\n                }}\n            ></div>\n            <div\n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"16px\",\n                    textAlign: \"center\",\n                }}\n            >\n                <h1\n                    style={{\n                        fontSize: getHeaderFontSize(),\n                        fontWeight: 700,\n                        margin: \"0px\",\n                    }}\n                >\n                    Welcome Aboard!\n                </h1>\n                <h4\n                    style={{\n                        fontSize: getSubHeaderFontSize(),\n                        fontWeight: 400,\n                        margin: \"0px\",\n                    }}\n                >\n                    Your configuration is completed.\n                </h4>\n            </div>\n            <div style={{ height: \"64px\" }}></div>\n            <div\n                style={{\n                    display: \"grid\",\n                    gridTemplateColumns: `repeat(${getGridTemplateColumns()})`,\n                    justifyContent: \"center\",\n                    gap: \"48px\",\n                    paddingRight: \"16px\",\n                    paddingLeft: \"16px\",\n                    maxWidth: \"976px\",\n                    margin: \"auto\",\n                }}\n            >\n                {CARDS.map((card) => (\n                    <Card key={`welcome-page-${card.title}`} card={card} />\n                ))}\n            </div>\n            <div style={{ height: \"64px\" }}></div>\n        </div>\n    );\n};\n\ntype CardProps = {\n    card: CardInfo;\n};\n\nconst Card: React.FC<CardProps> = ({ card }) => {\n    const { title, description, icon, link } = card;\n\n    const [isHover, setIsHover] = useState(false);\n\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"16px\",\n            }}\n        >\n            <div\n                style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                }}\n            >\n                <a\n                    onPointerEnter={() => setIsHover(true)}\n                    onPointerLeave={() => setIsHover(false)}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        color: \"#fff\",\n                        textDecoration: \"none\",\n                    }}\n                    href={link}\n                >\n                    {icon}\n                    <span\n                        style={{\n                            fontSize: \"16px\",\n                            fontWeight: 700,\n                            marginLeft: \"13px\",\n                            marginRight: \"14px\",\n                        }}\n                    >\n                        {title}\n                    </span>\n                    <svg\n                        style={{\n                            transition:\n                                \"transform 0.5s ease-in-out, opacity 0.2s ease-in-out\",\n                            ...(isHover && {\n                                transform: \"translateX(4px)\",\n                                opacity: 1,\n                            }),\n                        }}\n                        width=\"12\"\n                        height=\"8\"\n                        fill=\"none\"\n                        opacity=\"0.5\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            d=\"M7.293.293a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1 0 1.414l-3 3a1 1 0 0 1-1.414-1.414L8.586 5H1a1 1 0 0 1 0-2h7.586L7.293 1.707a1 1 0 0 1 0-1.414Z\"\n                            fill=\"#fff\"\n                        />\n                    </svg>\n                </a>\n            </div>\n            <span\n                style={{\n                    fontSize: \"12px\",\n                    opacity: 0.5,\n                    lineHeight: \"16px\",\n                }}\n            >\n                {description}\n            </span>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { useQuerySubscription } from \"@refinedev/devtools-internal\";\n\nimport { ReadyPage as DefaultReadyPage, RouteChangeHandler } from \"@components\";\nimport { Telemetry } from \"@components/telemetry\";\nimport { AccessControlContextProvider } from \"@contexts/accessControl\";\nimport { AuditLogContextProvider } from \"@contexts/auditLog\";\nimport {\n    AuthBindingsContextProvider,\n    LegacyAuthContextProvider,\n} from \"@contexts/auth\";\nimport { DataContextProvider } from \"@contexts/data\";\nimport { LegacyRouterContextProvider } from \"@contexts/legacy-router\";\nimport { LiveContextProvider } from \"@contexts/live\";\nimport { NotificationContextProvider } from \"@contexts/notification\";\nimport { RefineContextProvider } from \"@contexts/refine\";\nimport { ResourceContextProvider } from \"@contexts/resource\";\nimport { TranslationContextProvider } from \"@contexts/translation\";\nimport { UndoableQueueContextProvider } from \"@contexts/undoableQueue\";\nimport { UnsavedWarnContextProvider } from \"@contexts/unsavedWarn\";\nimport { handleRefineOptions } from \"@definitions\";\nimport { useDeepMemo } from \"@hooks/deepMemo\";\nimport { RouterBindings } from \"src/interfaces/bindings\";\n\nimport { RouterPickerProvider } from \"@contexts/router-picker\";\nimport { RouterBindingsProvider } from \"../../../contexts/router\";\nimport { useRouterMisuseWarning } from \"../../../hooks/router/use-router-misuse-warning/index\";\nimport {\n    AccessControlProvider,\n    AuditLogProvider,\n    AuthBindings,\n    DashboardPageProps,\n    I18nProvider,\n    IDataContextProvider,\n    IDataMultipleContextProvider,\n    ILiveContext,\n    INotificationContext,\n    IRefineOptions,\n    IRouterProvider,\n    LayoutProps,\n    LegacyAuthProvider,\n    LiveModeProps,\n    NotificationProvider,\n    TitleProps,\n} from \"../../../interfaces\";\nimport { ResourceProps } from \"../../../interfaces/bindings/resource\";\n\nexport interface RefineProps {\n    children?: React.ReactNode;\n    /**\n     * `resources` is the predefined interaction points for a refine app. A resource represents an entity in an endpoint in the API.\n     * While this is not a required property, it is used in resource detection and creation of routes for the app.\n     * @type [`ResourceProps[]`](https://refine.dev/docs/api-reference/core/components/refine-config/#resources)\n     */\n    resources?: ResourceProps[];\n    /**\n     * **refine** needs some router functions to create resource pages, handle navigation, etc. This provider allows you to use the router library you want\n     * @type [`IRouterProvider`](https://refine.dev/docs/api-reference/core/providers/router-provider/)\n     * @deprecated This property is deprecated and was the legacy way of routing. Please use `routerProvider` with new router bindings instead.\n     */\n    legacyRouterProvider?: IRouterProvider;\n    /**\n     * Router bindings for **refine**. A simple interface for **refine** to interact with your router in a flexible way.\n     * @type [`RouterBindings`](https://refine.dev/docs/api-reference/core/bindings/router/)\n     */\n    routerProvider?: RouterBindings;\n    /**\n     * A `dataProvider` is the place where a refine app communicates with an API. Data providers also act as adapters for refine, making it possible for it to consume different API's and data services.\n     * @type [`IDataContextProvider` | `IDataMultipleContextProvider`](https://refine.dev/docs/api-reference/core/providers/data-provider/)\n     */\n    dataProvider: IDataContextProvider | IDataMultipleContextProvider;\n    /**\n     * `authProvider` handles authentication logic like login, logout flow and checking user credentials. It is an object with methods that refine uses when necessary.\n     * @type [`AuthBindings`](https://refine.dev/docs/api-reference/core/providers/auth-provider/)\n     */\n    authProvider?: AuthBindings;\n    /**\n     * `legacyAuthProvider` handles authentication logic like login, logout flow and checking user credentials. It is an object with methods that refine uses when necessary.\n     * @type [`AuthProvider`](https://refine.dev/docs/api-reference/core/providers/auth-provider/)\n     * @deprecated `legacyAuthProvider` is deprecated with refine@4, use `authProvider` instead.\n     */\n    legacyAuthProvider?: LegacyAuthProvider;\n    /**\n     * **refine** lets you add Realtime support to your app via `liveProvider`. It can be used to update and show data in Realtime throughout your app.\n     * @type [`ILiveContext`](https://refine.dev/docs/api-reference/core/providers/live-provider/)\n     */\n    liveProvider?: ILiveContext;\n    /**\n     * `notificationProvider` handles notification logics. It is an object with methods that refine uses when necessary.\n     * @type [`NotificationProvider` | `(() => NotificationProvider)`](https://refine.dev/docs/api-reference/core/providers/notification-provider/)\n     */\n    notificationProvider?: NotificationProvider | (() => NotificationProvider);\n    /**\n     * `accessControlProvider` is the entry point for implementing access control for refine apps.\n     * @type [`AccessControlProvider`](https://refine.dev/docs/api-reference/core/providers/accessControl-provider/)\n     */\n    accessControlProvider?: AccessControlProvider;\n    /**\n     * **refine** allows you to track changes in your data and keep track of who made the changes.\n     * @type [`AuditLogProvider`](https://refine.dev/docs/api-reference/core/providers/audit-log-provider#overview)\n     */\n    auditLogProvider?: AuditLogProvider;\n    /**\n     * `i18nProvider` property lets you add i18n support to your app. Making you able to use any i18n framework.\n     * @type [`i18nProvider`](https://refine.dev/docs/api-reference/core/providers/i18n-provider/)\n     */\n    i18nProvider?: I18nProvider;\n    /**\n     * A custom error component.\n     * @type [`ReactNode`](https://refine.dev/docs/api-reference/core/components/refine-config/#catchall)\n     * @deprecated Please use the `catchAll` element in your routes instead.\n     */\n    catchAll?: React.ReactNode;\n    /**\n     * Custom login component can be passed to the `LoginPage` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#loginpage)\n     * @deprecated Please use the `LoginPage` component in your routes instead.\n     */\n    LoginPage?: React.FC;\n    /**\n     * A custom dashboard page can be passed to the `DashboardPage` prop which is accessible on root route.\n     * @type [`React.FC<DashboardPageProps>`](https://refine.dev/docs/api-reference/core/components/refine-config/#dashboardpage)\n     * @deprecated Please use the `DashboardPage` component in your routes instead.\n     */\n    DashboardPage?: React.FC<DashboardPageProps>;\n    /**\n     * Custom ready page component can be set by passing to `ReadyPage` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#readypage)\n     * @deprecated This component is only used with the legacy router and will be removed in the future.\n     */\n    ReadyPage?: React.FC;\n    /**\n     * Default layout can be customized by passing the `Layout` property.\n     * @type [`React.FC<LayoutProps>`](https://refine.dev/docs/api-reference/core/components/refine-config/#layout)\n     * @deprecated Please use the `Layout` component as a children instead of a prop.\n     */\n    Layout?: React.FC<LayoutProps>;\n    /**\n     * The default sidebar can be customized by using refine hooks and passing custom components to `Sider` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#sider)\n     * @deprecated Please pass the `Sider` component to your `Layout` component.\n     */\n    Sider?: React.FC;\n    /**\n     * The default app header can be customized by passing the `Header` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#header)\n     * @deprecated Please pass the `Header` component to your `Layout` component.\n     */\n    Header?: React.FC;\n    /**\n     *The default app footer can be customized by passing the `Footer` property.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#footer)\n     * @deprecated Please pass the `Footer` component to your `Layout` component.\n     */\n    Footer?: React.FC;\n    /**\n     * The component wanted to be placed out of app layout structure can be set by passing to `OffLayoutArea` prop.\n     * @type [`React.FC`](https://refine.dev/docs/api-reference/core/components/refine-config/#offlayoutarea)\n     * @deprecated Please use your `OffLayoutArea` component as a children instead of a prop.\n     */\n    OffLayoutArea?: React.FC;\n    /**\n     * TThe app title can be set by passing the `Title` property.\n     * @type [`React.FC<TitleProps>`](https://refine.dev/docs/api-reference/core/components/refine-config/#title)\n     * @deprecated Please pass the `Title` component to your `Layout` component.\n     */\n    Title?: React.FC<TitleProps>;\n    /**\n     * Callback to handle all live events.\n     * @type [`(event: LiveEvent) => void`](https://refine.dev/docs/api-reference/core/providers/live-provider/#onliveevent)\n     */\n    onLiveEvent?: LiveModeProps[\"onLiveEvent\"];\n    /**\n     * `options` is used to configure the app.\n     * @type [`IRefineOptions`](https://refine.dev/docs/api-reference/core/components/refine-config/#options)\n     * */\n    options?: IRefineOptions;\n}\n\n/**\n * {@link https://refine.dev/docs/api-reference/core/components/refine-config `<Refine> component`} is the entry point of a refine app.\n * It is where the highest level of configuration of the app occurs.\n * Only a dataProvider is required to bootstrap the app. After adding a dataProvider, resources can be added as property.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config} for more details.\n */\nexport const Refine: React.FC<RefineProps> = ({\n    legacyAuthProvider,\n    authProvider,\n    dataProvider,\n    legacyRouterProvider,\n    routerProvider,\n    notificationProvider,\n    accessControlProvider,\n    auditLogProvider,\n    resources,\n    DashboardPage,\n    ReadyPage,\n    LoginPage,\n    catchAll,\n    children,\n    liveProvider,\n    i18nProvider,\n    Title,\n    Layout,\n    Sider,\n    Header,\n    Footer,\n    OffLayoutArea,\n    onLiveEvent,\n    options,\n}) => {\n    const {\n        optionsWithDefaults,\n        disableTelemetryWithDefault,\n        reactQueryWithDefaults,\n    } = handleRefineOptions({\n        options,\n    });\n\n    const queryClient = useDeepMemo(() => {\n        if (reactQueryWithDefaults.clientConfig instanceof QueryClient) {\n            return reactQueryWithDefaults.clientConfig;\n        }\n\n        return new QueryClient({\n            ...reactQueryWithDefaults.clientConfig,\n            defaultOptions: {\n                ...reactQueryWithDefaults.clientConfig.defaultOptions,\n                queries: {\n                    refetchOnWindowFocus: false,\n                    keepPreviousData: true,\n                    ...reactQueryWithDefaults.clientConfig.defaultOptions\n                        ?.queries,\n                },\n            },\n        });\n    }, [reactQueryWithDefaults.clientConfig]);\n\n    useQuerySubscription(queryClient);\n\n    const useNotificationProviderValues = React.useMemo(() => {\n        return typeof notificationProvider === \"function\"\n            ? notificationProvider\n            : () => notificationProvider ?? ({} as INotificationContext);\n    }, [notificationProvider]);\n\n    const notificationProviderContextValues = useNotificationProviderValues();\n\n    /**\n     * Warn our users if they are using the old way of routing in the wrong prop.\n     */\n    useRouterMisuseWarning(routerProvider);\n    /** */\n\n    /**\n     * `<ReadyPage />` is only used in the legacy routing and is not used in the new routing.\n     * If `legacyRouterProvider` is provided and `routerProvider` is not, we'll check for the `resources` prop to be empty.\n     * If `resources` is empty, then we'll render `<ReadyPage />` component.\n     */\n    if (\n        legacyRouterProvider &&\n        !routerProvider &&\n        (resources ?? []).length === 0\n    ) {\n        return ReadyPage ? <ReadyPage /> : <DefaultReadyPage />;\n    }\n\n    /** Router\n     *\n     * Handle routing from `RouterBindingsProvider` and `router` prop for the brand new way\n     * If `router` is not provided, then we'r checking for `routerProvider` prop\n     * If `routerProvider` is provided, then `RouterContextProvider` is used\n     * If none of them is provided, then `RouterBindingsProvider` is used because it supports undefined router\n     *\n     * `RouterContextProvider` is skipped whenever possible and by this way,\n     * we can achieve backward compability only when its provided by user\n     *\n     */\n    const { RouterComponent = React.Fragment } = !routerProvider\n        ? legacyRouterProvider ?? {}\n        : {};\n    /** */\n\n    return (\n        <QueryClientProvider client={queryClient}>\n            <NotificationContextProvider {...notificationProviderContextValues}>\n                <LegacyAuthContextProvider\n                    {...(legacyAuthProvider ?? {})}\n                    isProvided={Boolean(legacyAuthProvider)}\n                >\n                    <AuthBindingsContextProvider\n                        {...(authProvider ?? {})}\n                        isProvided={Boolean(authProvider)}\n                    >\n                        <DataContextProvider {...dataProvider}>\n                            <LiveContextProvider liveProvider={liveProvider}>\n                                <RouterPickerProvider\n                                    value={\n                                        legacyRouterProvider && !routerProvider\n                                            ? \"legacy\"\n                                            : \"new\"\n                                    }\n                                >\n                                    <RouterBindingsProvider\n                                        router={routerProvider}\n                                    >\n                                        <LegacyRouterContextProvider\n                                            {...legacyRouterProvider}\n                                        >\n                                            <ResourceContextProvider\n                                                resources={resources ?? []}\n                                            >\n                                                <TranslationContextProvider\n                                                    i18nProvider={i18nProvider}\n                                                >\n                                                    <AccessControlContextProvider\n                                                        {...(accessControlProvider ??\n                                                            {})}\n                                                    >\n                                                        <AuditLogContextProvider\n                                                            {...(auditLogProvider ??\n                                                                {})}\n                                                        >\n                                                            <UndoableQueueContextProvider>\n                                                                <RefineContextProvider\n                                                                    mutationMode={\n                                                                        optionsWithDefaults.mutationMode\n                                                                    }\n                                                                    warnWhenUnsavedChanges={\n                                                                        optionsWithDefaults.warnWhenUnsavedChanges\n                                                                    }\n                                                                    syncWithLocation={\n                                                                        optionsWithDefaults.syncWithLocation\n                                                                    }\n                                                                    Title={\n                                                                        Title\n                                                                    }\n                                                                    undoableTimeout={\n                                                                        optionsWithDefaults.undoableTimeout\n                                                                    }\n                                                                    catchAll={\n                                                                        catchAll\n                                                                    }\n                                                                    DashboardPage={\n                                                                        DashboardPage\n                                                                    }\n                                                                    LoginPage={\n                                                                        LoginPage\n                                                                    }\n                                                                    Layout={\n                                                                        Layout\n                                                                    }\n                                                                    Sider={\n                                                                        Sider\n                                                                    }\n                                                                    Footer={\n                                                                        Footer\n                                                                    }\n                                                                    Header={\n                                                                        Header\n                                                                    }\n                                                                    OffLayoutArea={\n                                                                        OffLayoutArea\n                                                                    }\n                                                                    hasDashboard={\n                                                                        !!DashboardPage\n                                                                    }\n                                                                    liveMode={\n                                                                        optionsWithDefaults.liveMode\n                                                                    }\n                                                                    onLiveEvent={\n                                                                        onLiveEvent\n                                                                    }\n                                                                    options={\n                                                                        optionsWithDefaults\n                                                                    }\n                                                                >\n                                                                    <UnsavedWarnContextProvider>\n                                                                        <RouterComponent>\n                                                                            {\n                                                                                children\n                                                                            }\n                                                                            {!disableTelemetryWithDefault && (\n                                                                                <Telemetry />\n                                                                            )}\n                                                                            <RouteChangeHandler />\n                                                                        </RouterComponent>\n                                                                    </UnsavedWarnContextProvider>\n                                                                </RefineContextProvider>\n                                                            </UndoableQueueContextProvider>\n                                                        </AuditLogContextProvider>\n                                                    </AccessControlContextProvider>\n                                                </TranslationContextProvider>\n                                            </ResourceContextProvider>\n                                        </LegacyRouterContextProvider>\n                                    </RouterBindingsProvider>\n                                </RouterPickerProvider>\n                            </LiveContextProvider>\n                        </DataContextProvider>\n                    </AuthBindingsContextProvider>\n                </LegacyAuthContextProvider>\n            </NotificationContextProvider>\n        </QueryClientProvider>\n    );\n};\n","import React from \"react\";\n\nimport { useTelemetryData } from \"@hooks/useTelemetryData\";\n\nimport { ITelemetryData } from \"../../interfaces/telemetry\";\n\nconst encode = (payload: ITelemetryData): string | undefined => {\n    try {\n        const stringifiedPayload = JSON.stringify(payload || {});\n\n        if (typeof btoa !== \"undefined\") {\n            return btoa(stringifiedPayload);\n        }\n\n        return Buffer.from(stringifiedPayload).toString(\"base64\");\n    } catch (err) {\n        return undefined;\n    }\n};\n\nconst throughImage = (src: string) => {\n    const img = new Image();\n\n    img.src = src;\n};\n\nconst throughFetch = (src: string) => {\n    fetch(src);\n};\n\nconst transport = (src: string) => {\n    if (typeof Image !== \"undefined\") {\n        throughImage(src);\n    } else if (typeof fetch !== \"undefined\") {\n        throughFetch(src);\n    }\n};\n\nexport const Telemetry: React.FC<{}> = () => {\n    const payload = useTelemetryData();\n    const sent = React.useRef(false);\n\n    React.useEffect(() => {\n        if (sent.current) {\n            return;\n        }\n        const encoded = encode(payload);\n\n        if (!encoded) {\n            return;\n        }\n\n        transport(`https://telemetry.refine.dev/telemetry?payload=${encoded}`);\n        sent.current = true;\n    }, []);\n\n    return null;\n};\n","import { useContext } from \"react\";\n\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { LiveContext } from \"@contexts/live\";\nimport { RouterContext } from \"@contexts/legacy-router\";\nimport { DataContext } from \"@contexts/data\";\nimport { TranslationContext } from \"@contexts/translation\";\nimport { NotificationContext } from \"@contexts/notification\";\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { useResource } from \"@hooks/resource\";\n\nimport { ITelemetryData } from \"../../interfaces/telemetry\";\nimport { useIsExistAuthentication, useRefineContext } from \"..\";\n\n// It reads and updates from package.json during build. ref: tsup.config.ts\nconst REFINE_VERSION = \"4.42.4\";\n\nexport const useTelemetryData = (): ITelemetryData => {\n    const auth = useIsExistAuthentication();\n    const auditLogContext = useContext(AuditLogContext);\n    const liveContext = useContext(LiveContext);\n    const routerContext = useContext(RouterContext);\n    const dataContext = useContext(DataContext);\n    const { i18nProvider } = useContext(TranslationContext);\n    const notificationContext = useContext(NotificationContext);\n    const accessControlContext = useContext(AccessControlContext);\n    const { resources } = useResource();\n    const refineOptions = useRefineContext();\n\n    const auditLog =\n        !!auditLogContext.create ||\n        !!auditLogContext.get ||\n        !!auditLogContext.update;\n\n    const live =\n        !!liveContext?.publish ||\n        !!liveContext?.subscribe ||\n        !!liveContext?.unsubscribe;\n\n    const router =\n        !!routerContext.useHistory ||\n        !!routerContext.Link ||\n        !!routerContext.Prompt ||\n        !!routerContext.useLocation ||\n        !!routerContext.useParams;\n\n    const data = !!dataContext;\n\n    const i18n =\n        !!i18nProvider?.changeLocale ||\n        !!i18nProvider?.getLocale ||\n        !!i18nProvider?.translate;\n\n    const notification =\n        !!notificationContext.close || !!notificationContext.open;\n\n    const accessControl = !!accessControlContext.can;\n\n    const projectId = refineOptions?.options?.projectId;\n\n    return {\n        providers: {\n            auth,\n            auditLog,\n            live,\n            router,\n            data,\n            i18n,\n            notification,\n            accessControl,\n        },\n        version: REFINE_VERSION,\n        resourceCount: resources.length,\n        projectId,\n    };\n};\n","import { IRouterProvider, RouterBindings } from \"src/interfaces\";\n\nexport const checkRouterPropMisuse = (\n    value: IRouterProvider | RouterBindings,\n) => {\n    // check if `routerProvider` prop is passed with legacy properties.\n    // If yes, console.warn the user to use `legacyRuterProvider` prop instead.\n    const bindings = [\"go\", \"parse\", \"back\", \"Link\"];\n\n    // check if `value` contains properties other than `bindings`\n    const otherProps = Object.keys(value).filter(\n        (key) => !bindings.includes(key),\n    );\n\n    const hasOtherProps = otherProps.length > 0;\n\n    if (hasOtherProps) {\n        console.warn(\n            `Unsupported properties are found in \\`routerProvider\\` prop. You provided \\`${otherProps.join(\n                \", \",\n            )}\\`. Supported properties are \\`${bindings.join(\n                \", \",\n            )}\\`. You may wanted to use \\`legacyRouterProvider\\` prop instead.`,\n        );\n\n        return true;\n    }\n\n    return false;\n};\n","import { checkRouterPropMisuse } from \"@definitions/helpers/check-router-prop-misuse\";\nimport React from \"react\";\nimport { RouterBindings } from \"src/interfaces\";\n\nexport const useRouterMisuseWarning = (value?: RouterBindings) => {\n    const warned = React.useRef(false);\n\n    React.useEffect(() => {\n        if (warned.current === false) {\n            if (value) {\n                const warn = checkRouterPropMisuse(value);\n                if (warn) {\n                    warned.current = true;\n                }\n            }\n        }\n    }, [value]);\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport { ActionTypes } from \"@contexts/undoableQueue\";\nimport { useCancelNotification, useNotification, useTranslate } from \"@hooks\";\nimport { IUndoableQueue } from \"../../interfaces\";\n\nimport { userFriendlySecond } from \"@definitions/helpers\";\n\nexport const UndoableQueue: React.FC<{\n    notification: IUndoableQueue;\n}> = ({ notification }) => {\n    const translate = useTranslate();\n\n    const { notificationDispatch } = useCancelNotification();\n    const { open } = useNotification();\n\n    const [timeoutId, setTimeoutId] = useState<number | undefined>();\n\n    const cancelNotification = () => {\n        if (notification.isRunning === true) {\n            if (notification.seconds === 0) {\n                notification.doMutation();\n            }\n            if (!notification.isSilent) {\n                open?.({\n                    key: `${notification.id}-${notification.resource}-notification`,\n                    type: \"progress\",\n                    message: translate(\n                        \"notifications.undoable\",\n                        {\n                            seconds: userFriendlySecond(notification.seconds),\n                        },\n                        `You have ${userFriendlySecond(\n                            notification.seconds,\n                        )} seconds to undo`,\n                    ),\n                    cancelMutation: notification.cancelMutation,\n                    undoableTimeout: userFriendlySecond(notification.seconds),\n                });\n            }\n\n            if (notification.seconds > 0) {\n                if (timeoutId) {\n                    clearTimeout(timeoutId);\n                }\n\n                const newTimeoutId = setTimeout(() => {\n                    notificationDispatch({\n                        type: ActionTypes.DECREASE_NOTIFICATION_SECOND,\n                        payload: {\n                            id: notification.id,\n                            seconds: notification.seconds,\n                            resource: notification.resource,\n                        },\n                    });\n                }, 1000) as unknown as number;\n\n                setTimeoutId(newTimeoutId);\n            }\n        }\n    };\n\n    useEffect(() => {\n        cancelNotification();\n    }, [notification]);\n\n    return null;\n};\n","import React, { useEffect } from \"react\";\n\nimport {\n    useRefineContext,\n    useRouterContext,\n    useTranslate,\n    useWarnAboutChange,\n} from \"@hooks\";\nimport { LayoutProps, TitleProps } from \"../../interfaces\";\n\nexport interface LayoutWrapperProps {\n    /**\n     * Outer component that renders other components\n     * @default *\n     */\n    Layout?: React.FC<LayoutProps>;\n    /**\n     * [Custom sider to use](/api-reference/core/components/refine-config.md#sider)\n     * @default *\n     */\n    Sider?: React.FC;\n    /**\n     * [Custom header to use](/api-reference/core/components/refine-config.md#header)\n     * @default *\n     */\n    Header?: React.FC;\n    /**\n     * [Custom title to use](/api-reference/core/components/refine-config.md#title)\n     * @default *\n     */\n    Title?: React.FC<TitleProps>;\n    /**\n     * [Custom footer to use](/api-reference/core/components/refine-config.md#footer)\n     * @default *\n     */\n    Footer?: React.FC;\n    /**\n     * [Custom off layout area to use](/api-reference/core/components/refine-config.md#offlayoutarea)\n     * @default *\n     */\n    OffLayoutArea?: React.FC;\n    children: React.ReactNode;\n}\n\n/**\n * `<LayoutWrapper>` wraps its contents in **refine's** layout with all customizations made in {@link https://refine.dev/docs/core/components/refine-config `<Refine>`} component.\n * It is the default layout used in resource pages.\n * It can be used in custom pages to use global layout.\n *\n * @see {@link https://refine.dev/docs/core/components/layout-wrapper} for more details.\n *\n * @deprecated This component is obsolete and only works with the legacy router providers.\n */\nexport const LayoutWrapper: React.FC<LayoutWrapperProps> = ({\n    children,\n    Layout: LayoutFromProps,\n    Sider: SiderFromProps,\n    Header: HeaderFromProps,\n    Title: TitleFromProps,\n    Footer: FooterFromProps,\n    OffLayoutArea: OffLayoutAreaFromProps,\n}) => {\n    const { Layout, Footer, Header, Sider, Title, OffLayoutArea } =\n        useRefineContext();\n\n    const LayoutToRender = LayoutFromProps ?? Layout;\n\n    return (\n        <LayoutToRender\n            Sider={SiderFromProps ?? Sider}\n            Header={HeaderFromProps ?? Header}\n            Footer={FooterFromProps ?? Footer}\n            Title={TitleFromProps ?? Title}\n            OffLayoutArea={OffLayoutAreaFromProps ?? OffLayoutArea}\n        >\n            {children}\n            <UnsavedPrompt />\n        </LayoutToRender>\n    );\n};\n\nconst UnsavedPrompt: React.FC = () => {\n    const { Prompt } = useRouterContext();\n\n    const translate = useTranslate();\n\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n\n    const warnWhenListener = (e: {\n        preventDefault: () => void;\n        returnValue: string;\n    }) => {\n        e.preventDefault();\n\n        e.returnValue = translate(\n            \"warnWhenUnsavedChanges\",\n            \"Are you sure you want to leave? You have unsaved changes.\",\n        );\n\n        return e.returnValue;\n    };\n\n    useEffect(() => {\n        if (warnWhen) {\n            window.addEventListener(\"beforeunload\", warnWhenListener);\n        }\n\n        return window.removeEventListener(\"beforeunload\", warnWhenListener);\n    }, [warnWhen]);\n\n    return (\n        <Prompt\n            when={warnWhen}\n            message={translate(\n                \"warnWhenUnsavedChanges\",\n                \"Are you sure you want to leave? You have unsaved changes.\",\n            )}\n            setWarnWhen={setWarnWhen}\n        />\n    );\n};\n","import React from \"react\";\n\nimport {\n    useGo,\n    useNavigation,\n    useParsed,\n    useRouterContext,\n    useRouterType,\n    useIsAuthenticated,\n} from \"@hooks\";\nimport { useActiveAuthProvider } from \"@definitions/index\";\nimport { GoConfig } from \"src/interfaces\";\n\n/**\n * This hook is used to avoid React's invalid setState call warning.\n * When `go` is called during the render phase, it's updating the internal router state before the render phase is finished.\n * This causes React to throw an error. This hook is used to defer the `go` call to the effect calls.\n */\nconst useDeferredGo = () => {\n    const go = useGo();\n\n    const [config, setConfig] = React.useState<GoConfig | undefined>(undefined);\n\n    React.useEffect(() => {\n        if (config) {\n            go(config);\n        }\n    }, [config]);\n\n    const cb = React.useCallback(\n        (props: GoConfig) => {\n            if (!config) {\n                setConfig(props);\n            }\n        },\n        [config],\n    );\n\n    return cb;\n};\n\nexport type AuthenticatedCommonProps = {\n    /**\n     * Whether to redirect user if not logged in or not.\n     * If not set, user will be redirected to `redirectTo` property of the `check` function's response.\n     * This behavior is only available for new auth providers.\n     * Legacy auth providers will redirect to `/login` by default if this property is not set.\n     * If set to a string, user will be redirected to that string.\n     *\n     * This property only works if `fallback` is **not set**.\n     */\n    redirectOnFail?: string | true;\n    /**\n     * Whether to append current path to search params of the redirect url at `to` property.\n     *\n     * By default, `to` parameter is used by successful invocations of the `useLogin` hook.\n     * If `to` present, it will be used as the redirect url after successful login.\n     */\n    appendCurrentPathToQuery?: boolean;\n    /**\n     * Content to show if user is not logged in.\n     */\n    fallback?: React.ReactNode;\n    /**\n     * Content to show while checking whether user is logged in or not.\n     */\n    loading?: React.ReactNode;\n    /**\n     * Content to show if user is logged in\n     */\n    children?: React.ReactNode;\n};\n\nexport type LegacyAuthenticatedProps = {\n    v3LegacyAuthProviderCompatible: true;\n} & AuthenticatedCommonProps;\n\nexport type AuthenticatedProps = {\n    v3LegacyAuthProviderCompatible?: false;\n} & AuthenticatedCommonProps;\n\nexport function Authenticated(\n    props: LegacyAuthenticatedProps,\n): JSX.Element | null;\n\nexport function Authenticated(props: AuthenticatedProps): JSX.Element | null;\n\n/**\n * `<Authenticated>` is the component form of {@link https://refine.dev/docs/api-reference/core/hooks/auth/useAuthenticated `useAuthenticated`}. It internally uses `useAuthenticated` to provide it's functionality.\n *\n * @see {@link https://refine.dev/docs/core/components/auth/authenticated `<Authenticated>`} component for more details.\n */\nexport function Authenticated({\n    redirectOnFail = true,\n    appendCurrentPathToQuery = true,\n    children,\n    fallback: fallbackContent,\n    loading: loadingContent,\n}: AuthenticatedProps | LegacyAuthenticatedProps): JSX.Element | null {\n    const activeAuthProvider = useActiveAuthProvider();\n    const routerType = useRouterType();\n\n    const hasAuthProvider = Boolean(activeAuthProvider?.isProvided);\n    const isLegacyAuth = Boolean(activeAuthProvider?.isLegacy);\n    const isLegacyRouter = routerType === \"legacy\";\n\n    const parsed = useParsed();\n    const go = useGo();\n    const deferredGo = useDeferredGo();\n    const { replace } = useNavigation();\n    const { useLocation } = useRouterContext();\n    const legacyLocation = useLocation();\n\n    const {\n        isLoading,\n        isFetching,\n        // isRefetching,\n        isSuccess,\n        data: {\n            authenticated: isAuthenticatedStatus,\n            redirectTo: authenticatedRedirect,\n        } = {},\n        refetch,\n    } = useIsAuthenticated({\n        v3LegacyAuthProviderCompatible: isLegacyAuth,\n    });\n\n    React.useEffect(() => {\n        /**\n         * Refetch the authentication status if the content is changed (e.g. redirected or updated)\n         *\n         * This is done to avoid re-rendering the wrappers with the same content.\n         */\n\n        refetch();\n    }, [children, fallbackContent]);\n\n    const state = React.useRef<{\n        status: \"initial\" | \"pending\" | \"settled\";\n        content: React.ReactNode;\n    }>({\n        status: isLoading ? \"initial\" : \"pending\",\n        content: loadingContent ?? null,\n    });\n\n    /**\n     * Update state when fetching the authentication response.\n     */\n    if (isFetching) {\n        state.current.status = \"pending\";\n    } else if (!isFetching) {\n        state.current.status = \"settled\";\n    }\n\n    /**\n     * Authentication status\n     */\n    const isAuthenticated = hasAuthProvider\n        ? isLegacyAuth\n            ? isSuccess\n            : isAuthenticatedStatus\n        : true;\n\n    if (state.current.status === \"settled\") {\n        /**\n         * If the state is settled, and query is resolved.\n         */\n        if (isAuthenticated) {\n            /**\n             * If user is authenticated, show the children.\n             */\n            state.current.content = <>{children ?? null}</>;\n        } else if (typeof fallbackContent !== \"undefined\") {\n            /**\n             * If user is not authenticated, and `fallback` is present, show the fallback content.\n             */\n            state.current.content = <>{fallbackContent}</>;\n        } else {\n            /**\n             * If there's no `fallback` content, redirect will be applied.\n             */\n\n            /**\n             * Current pathname to append to the redirect url.\n             */\n            const pathname = `${\n                isLegacyRouter ? legacyLocation?.pathname : parsed.pathname\n            }`.replace(/(\\?.*|#.*)$/, \"\");\n\n            /**\n             * Redirect url to use, if `redirectOnFail` is set to a string,\n             * it will be used instead of `redirectTo` property of the `check` function's response.\n             */\n            const appliedRedirect = isLegacyAuth\n                ? typeof redirectOnFail === \"string\"\n                    ? redirectOnFail\n                    : \"/login\"\n                : typeof redirectOnFail === \"string\"\n                ? redirectOnFail\n                : (authenticatedRedirect as string | undefined);\n\n            /**\n             * Redirect if `appliedRedirect` is set.\n             */\n            if (appliedRedirect) {\n                if (isLegacyRouter) {\n                    const toQuery = appendCurrentPathToQuery\n                        ? `?to=${encodeURIComponent(pathname)}`\n                        : \"\";\n                    replace(`${appliedRedirect}${toQuery}`);\n                } else {\n                    deferredGo({\n                        to: appliedRedirect,\n                        query: appendCurrentPathToQuery\n                            ? {\n                                  to: parsed.params?.to\n                                      ? parsed.params.to\n                                      : go({\n                                            to: pathname,\n                                            options: { keepQuery: true },\n                                            type: \"path\",\n                                        }),\n                              }\n                            : undefined,\n                        type: \"replace\",\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * If there's no `authProvider` set, we don't need to check whether user is logged in or not.\n     */\n    if (!hasAuthProvider) {\n        return <>{children ?? null}</>;\n    }\n\n    /**\n     * Returning the content based on the state, `fallback` or `children`.\n     */\n    return <>{state.current.content}</>;\n}\n","import { useEffect } from \"react\";\nimport { useRouterContext } from \"@hooks\";\nimport { useLegacyAuthContext } from \"@contexts/auth\";\n\nexport const RouteChangeHandler: React.FC = () => {\n    const { useLocation } = useRouterContext();\n\n    const { checkAuth } = useLegacyAuthContext();\n    const location = useLocation();\n\n    useEffect(() => {\n        checkAuth?.().catch(() => false);\n    }, [location?.pathname]);\n\n    return null;\n};\n","import React, { useEffect } from \"react\";\n\nimport { useCan, useResource } from \"@hooks\";\nimport { BaseKey, IResourceItem, ITreeMenu } from \"../../interfaces\";\n\ntype CanParams = {\n    resource?: IResourceItem & { children?: ITreeMenu[] };\n    id?: BaseKey;\n    [key: string]: any;\n};\n\ntype OnUnauthorizedProps = {\n    resource?: string;\n    reason?: string;\n    action: string;\n    params: CanParams;\n};\n\ntype CanAccessBaseProps = {\n    /**\n     * Resource name for API data interactions\n     */\n    resource?: string;\n    /**\n     * Intended action on resource\n     */\n    action: string;\n    /**\n     * Parameters associated with the resource\n     * @type { resource?: [IResourceItem](https://refine.dev/docs/api-reference/core/interfaceReferences/#canparams), id?: [BaseKey](https://refine.dev/docs/api-reference/core/interfaceReferences/#basekey), [key: string]: any }\n     */\n    params?: CanParams;\n    /**\n     * Content to show if access control returns `false`\n     */\n    fallback?: React.ReactNode;\n    /**\n     * Callback function to be called if access control returns `can: false`\n     */\n    onUnauthorized?: (props: OnUnauthorizedProps) => void;\n    children: React.ReactNode;\n};\n\ntype CanAccessWithoutParamsProps = {\n    [key in Exclude<\n        keyof CanAccessBaseProps,\n        \"fallback\" | \"children\"\n    >]?: undefined;\n} & {\n    [key in \"fallback\" | \"children\"]?: CanAccessBaseProps[key];\n};\n\nexport type CanAccessProps = CanAccessBaseProps | CanAccessWithoutParamsProps;\n\nexport const CanAccess: React.FC<CanAccessProps> = ({\n    resource: resourceFromProp,\n    action: actionFromProp,\n    params: paramsFromProp,\n    fallback,\n    onUnauthorized,\n    children,\n    ...rest\n}) => {\n    const {\n        resource,\n        id: idFromRoute,\n        action: actionFromRoute,\n    } = useResource(resourceFromProp);\n    const { identifier } = useResource();\n\n    const getDefaultId = () => {\n        const idFromPropsOrRoute = paramsFromProp?.id ?? idFromRoute;\n\n        if (resourceFromProp && resourceFromProp !== identifier) {\n            return paramsFromProp?.id;\n        }\n\n        return idFromPropsOrRoute;\n    };\n    const defaultId = getDefaultId();\n\n    const resourceName = resourceFromProp ?? resource?.name;\n    const action = actionFromProp ?? actionFromRoute ?? \"\";\n    const params = paramsFromProp ?? {\n        id: defaultId,\n        resource: resource,\n    };\n\n    const { data } = useCan({\n        resource: resourceName,\n        action,\n        params,\n    });\n\n    useEffect(() => {\n        if (onUnauthorized && data?.can === false) {\n            onUnauthorized({\n                resource: resourceName,\n                action,\n                reason: data?.reason,\n                params,\n            });\n        }\n    }, [data?.can]);\n\n    if (data?.can) {\n        if (React.isValidElement(children)) {\n            const Children = React.cloneElement(children, rest);\n            return Children;\n        }\n\n        return <>{children}</>;\n    }\n\n    if (data?.can === false) {\n        return <>{fallback ?? null}</>;\n    }\n\n    return null;\n};\n","import React, { useEffect } from \"react\";\nimport { CSSRules } from \"./styles\";\n\nexport const GitHubBanner = () => {\n    useEffect(() => {\n        const styleTag = document.createElement(\"style\");\n        document.head.appendChild(styleTag);\n        CSSRules.forEach((rule) =>\n            styleTag.sheet?.insertRule(rule, styleTag.sheet.cssRules.length),\n        );\n    }, []);\n\n    return (\n        <div\n            className=\"banner\"\n            style={{\n                flexDirection: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                position: \"relative\",\n                padding: \"8px 16px\",\n                backgroundColor: \"#0d0d0d\",\n                borderBottom: \"1px solid rgba(255, 255, 255, 0.15)\",\n            }}\n        >\n            {/* sider offset for center alignment */}\n            <div\n                style={{\n                    width: \"200px\",\n                }}\n            />\n            <a\n                className=\"gh-link\"\n                href=\"https://s.refine.dev/github-support\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n            >\n                <div\n                    className=\"content\"\n                    style={{\n                        position: \"relative\",\n                        zIndex: 2,\n                        color: \"#fff\",\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        gap: \"8px\",\n                    }}\n                >\n                    <span\n                        className=\"wizard\"\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            width: \"32px\",\n                            height: \"32px\",\n                            fontSize: \"32px\",\n                            lineHeight: \"32px\",\n                        }}\n                    >\n                        🧙‍♂️\n                    </span>\n                    <span\n                        className=\"text\"\n                        style={{\n                            padding: \"4px 0\",\n                            fontSize: \"16px\",\n                            lineHeight: \"24px\",\n                            textShadow: \"0px 0px 4px rgba(255, 255, 255, 0.5)\",\n                        }}\n                    >\n                        refine grants your wishes! Please give us a ⭐️ on\n                        GitHub to keep the magic going.\n                    </span>\n                </div>\n            </a>\n        </div>\n    );\n};\n","export const CSSRules = [\n    `\n    .banner {\n        display: flex;\n        @media (max-width: 1000px) {\n            display: none;\n        }\n    }`,\n    `\n    .banner::before,\n    .banner::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n    }\n    `,\n    `\n    .banner::before {\n        background-image: linear-gradient(\n            270deg,\n            rgba(255, 76, 77, 0.35) 0%,\n            rgba(255, 153, 51, 0.35) 12.5%,\n            rgba(255, 191, 0, 0.35) 25%,\n            rgba(38, 217, 127, 0.35) 37.5%,\n            rgba(71, 235, 235, 0.35) 50%,\n            rgba(0, 128, 255, 0.35) 62.5%,\n            rgba(51, 51, 255, 0.35) 75%,\n            rgba(128, 0, 255, 0.35) 87.5%,\n            rgba(237, 94, 201, 0.35) 100%\n        );\n        background-position: 0 0;\n        background-size: 200% 100%;\n        background-repeat: repeat-x;\n        animation: bgpos 4s linear infinite;\n      }\n    `,\n    `\n    .banner::after {\n        background: linear-gradient(\n          180deg,\n          rgba(13, 13, 13, 0.85) 0%,\n          rgba(13, 13, 13, 0) 100%\n        );\n    }\n    `,\n    `\n    @keyframes bgpos {\n        0% {\n            background-position: 0 0;\n        }\n\n        100% {\n            background-position: -200% 0;\n        }\n    }\n    `,\n    `\n    .gh-link, .gh-link:hover, .gh-link:active, .gh-link:visited, .gh-link:focus {\n        text-decoration: none;\n        z-index: 9;\n    }\n    `,\n];\n","export { useForm, UseFormProps, UseFormReturnType } from \"./useForm\";\nexport {\n    useStepsForm,\n    UseStepsFormProps,\n    UseStepsFormReturnType,\n} from \"./useStepsForm\";\nexport {\n    useModalForm,\n    UseModalFormProps,\n    UseModalFormReturnType,\n} from \"./useModalForm\";\n","import React, { useEffect } from \"react\";\nimport {\n    useForm as useHookForm,\n    UseFormProps as UseHookFormProps,\n    UseFormReturn,\n    FieldValues,\n    UseFormHandleSubmit,\n    Path,\n} from \"react-hook-form\";\nimport {\n    BaseRecord,\n    HttpError,\n    useForm as useFormCore,\n    useWarnAboutChange,\n    UseFormProps as UseFormCoreProps,\n    UseFormReturnType as UseFormReturnTypeCore,\n    useTranslate,\n    useRefineContext,\n} from \"@refinedev/core\";\n\nexport type UseFormReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables extends FieldValues = FieldValues,\n    TContext extends object = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormReturn<TVariables, TContext> & {\n    refineCore: UseFormReturnTypeCore<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    >;\n    saveButtonProps: {\n        disabled: boolean;\n        onClick: (e: React.BaseSyntheticEvent) => void;\n    };\n};\n\nexport type UseFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables extends FieldValues = FieldValues,\n    TContext extends object = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = {\n    /**\n     * Configuration object for the core of the [useForm](/docs/api-reference/core/hooks/useForm/)\n     * @type [`UseFormCoreProps<TQueryFnData, TError, TVariables, TData, TResponse, TResponseError>`](/docs/api-reference/core/hooks/useForm/#properties)\n     */\n    refineCoreProps?: UseFormCoreProps<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    >;\n    /**\n     * When you have unsaved changes and try to leave the current page, **refine** shows a confirmation modal box.\n     * @default `false*`\n     */\n    warnWhenUnsavedChanges?: boolean;\n    /**\n     * Disables server-side validation\n     * @default false\n     * @see {@link https://refine.dev/docs/advanced-tutorials/forms/server-side-form-validation/}\n     */\n    disableServerSideValidation?: boolean;\n} & UseHookFormProps<TVariables, TContext>;\n\nexport const useForm = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables extends FieldValues = FieldValues,\n    TContext extends object = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n>({\n    refineCoreProps,\n    warnWhenUnsavedChanges: warnWhenUnsavedChangesProp,\n    disableServerSideValidation: disableServerSideValidationProp = false,\n    ...rest\n}: UseFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TContext,\n    TData,\n    TResponse,\n    TResponseError\n> = {}): UseFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TContext,\n    TData,\n    TResponse,\n    TResponseError\n> => {\n    const { options } = useRefineContext();\n    const disableServerSideValidation =\n        options?.disableServerSideValidation || disableServerSideValidationProp;\n\n    const translate = useTranslate();\n\n    const {\n        warnWhenUnsavedChanges: warnWhenUnsavedChangesRefine,\n        setWarnWhen,\n    } = useWarnAboutChange();\n    const warnWhenUnsavedChanges =\n        warnWhenUnsavedChangesProp ?? warnWhenUnsavedChangesRefine;\n\n    const useHookFormResult = useHookForm<TVariables, TContext>({\n        ...rest,\n    });\n\n    const {\n        watch,\n        setValue,\n        getValues,\n        handleSubmit: handleSubmitReactHookForm,\n        setError,\n    } = useHookFormResult;\n\n    const useFormCoreResult = useFormCore<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TData,\n        TResponse,\n        TResponseError\n    >({\n        ...refineCoreProps,\n        onMutationError: (error, _variables, _context) => {\n            if (disableServerSideValidation) {\n                refineCoreProps?.onMutationError?.(error, _variables, _context);\n                return;\n            }\n\n            const errors = error?.errors;\n\n            for (const key in errors) {\n                // when the key is not registered in the form, react-hook-form not working\n                const isKeyInVariables = Object.keys(_variables).includes(\n                    key.split(\".\")[0],\n                );\n                if (!isKeyInVariables) {\n                    continue;\n                }\n\n                const fieldError = errors[key];\n\n                let newError = \"\";\n\n                if (Array.isArray(fieldError)) {\n                    newError = fieldError.join(\" \");\n                }\n\n                if (typeof fieldError === \"string\") {\n                    newError = fieldError;\n                }\n\n                if (typeof fieldError === \"boolean\" && fieldError) {\n                    newError = \"Field is not valid.\";\n                }\n\n                if (typeof fieldError === \"object\" && \"key\" in fieldError) {\n                    const translatedMessage = translate(\n                        fieldError.key,\n                        fieldError.message,\n                    );\n\n                    newError = translatedMessage;\n                }\n\n                setError(key as Path<TVariables>, {\n                    message: newError,\n                });\n            }\n\n            refineCoreProps?.onMutationError?.(error, _variables, _context);\n        },\n    });\n\n    const { queryResult, onFinish, formLoading, onFinishAutoSave } =\n        useFormCoreResult;\n\n    useEffect(() => {\n        const data = queryResult?.data?.data;\n        if (!data) return;\n\n        const registeredFields = Object.keys(getValues());\n\n        Object.entries(data).forEach(([key, value]) => {\n            const name = key as Path<TVariables>;\n\n            if (registeredFields.includes(name)) {\n                setValue(name, value);\n            }\n        });\n    }, [queryResult?.data, setValue, getValues]);\n\n    useEffect(() => {\n        const subscription = watch((values: any, { type }: { type?: any }) => {\n            if (type === \"change\") {\n                onValuesChange(values);\n            }\n        });\n        return () => subscription.unsubscribe();\n    }, [watch]);\n\n    const onValuesChange = (changeValues: TVariables) => {\n        if (warnWhenUnsavedChanges) {\n            setWarnWhen(true);\n        }\n\n        if (refineCoreProps?.autoSave) {\n            setWarnWhen(false);\n\n            const onFinishProps = refineCoreProps.autoSave?.onFinish;\n\n            if (onFinishProps) {\n                return onFinishAutoSave(onFinishProps(changeValues));\n            }\n\n            return onFinishAutoSave(changeValues);\n        }\n\n        return changeValues;\n    };\n\n    const handleSubmit: UseFormHandleSubmit<TVariables> =\n        (onValid, onInvalid) => async (e) => {\n            setWarnWhen(false);\n            return handleSubmitReactHookForm(onValid, onInvalid)(e);\n        };\n\n    const saveButtonProps = {\n        disabled: formLoading,\n        onClick: (e: React.BaseSyntheticEvent) => {\n            handleSubmit(onFinish, () => false)(e);\n        },\n    };\n\n    return {\n        ...useHookFormResult,\n        handleSubmit,\n        refineCore: useFormCoreResult,\n        saveButtonProps,\n    };\n};\n","import { useEffect, useState } from \"react\";\nimport { FieldValues, Path } from \"react-hook-form\";\nimport { BaseRecord, HttpError } from \"@refinedev/core\";\n\nimport { useForm, UseFormProps, UseFormReturnType } from \"../useForm\";\n\nexport type UseStepsFormReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables extends FieldValues = FieldValues,\n    TContext extends object = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TContext,\n    TData,\n    TResponse,\n    TResponseError\n> & {\n    steps: {\n        currentStep: number;\n        gotoStep: (step: number) => void;\n    };\n};\n\nexport type UseStepsFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables extends FieldValues = FieldValues,\n    TContext extends object = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TContext,\n    TData,\n    TResponse,\n    TResponseError\n> & {\n    /**\n     * @description Configuration object for the steps.\n     * `defaultStep`: Allows you to set the initial step.\n     * \n     * `isBackValidate`: Whether to validation the current step when going back.\n     * @type `{\n      defaultStep?: number;\n      isBackValidate?: boolean;\n      }`\n     * @default `defaultStep = 0` `isBackValidate = false`\n     */\n    stepsProps?: {\n        defaultStep?: number;\n        isBackValidate?: boolean;\n    };\n};\n\nexport const useStepsForm = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables extends FieldValues = FieldValues,\n    TContext extends object = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n>({\n    stepsProps,\n    ...rest\n}: UseStepsFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TContext,\n    TData,\n    TResponse,\n    TResponseError\n> = {}): UseStepsFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TContext,\n    TData,\n    TResponse,\n    TResponseError\n> => {\n    const { defaultStep = 0, isBackValidate = false } = stepsProps ?? {};\n    const [current, setCurrent] = useState(defaultStep);\n\n    const useHookFormResult = useForm<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TContext,\n        TData,\n        TResponse,\n        TResponseError\n    >({\n        ...rest,\n    });\n\n    const {\n        trigger,\n        getValues,\n        setValue,\n        formState: { dirtyFields },\n        refineCore: { queryResult },\n    } = useHookFormResult;\n\n    useEffect(() => {\n        const data = queryResult?.data?.data;\n        if (!data) return;\n\n        const registeredFields = Object.keys(getValues());\n        Object.entries(data).forEach(([key, value]) => {\n            const name = key as Path<TVariables>;\n\n            if (registeredFields.includes(name)) {\n                if (!dirtyFields[name]) {\n                    setValue(name, value);\n                }\n            }\n        });\n    }, [queryResult?.data, current, setValue, getValues]);\n\n    const go = (step: number) => {\n        let targetStep = step;\n\n        if (step < 0) {\n            targetStep = 0;\n        }\n\n        setCurrent(targetStep);\n    };\n\n    const gotoStep = async (step: number) => {\n        if (step === current) {\n            return;\n        }\n\n        if (step < current && !isBackValidate) {\n            go(step);\n            return;\n        }\n\n        const isValid = await trigger();\n        if (isValid) {\n            go(step);\n        }\n    };\n\n    return {\n        ...useHookFormResult,\n        steps: {\n            currentStep: current,\n            gotoStep,\n        },\n    };\n};\n","import { useCallback } from \"react\";\nimport {\n    BaseKey,\n    BaseRecord,\n    FormWithSyncWithLocationParams,\n    HttpError,\n    useGo,\n    useModal,\n    useParsed,\n    useResource,\n    useUserFriendlyName,\n    useTranslate,\n    useWarnAboutChange,\n    useInvalidate,\n} from \"@refinedev/core\";\nimport { FieldValues } from \"react-hook-form\";\n\nimport { useForm, UseFormProps, UseFormReturnType } from \"../useForm\";\nimport React from \"react\";\n\nexport type UseModalFormReturnType<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables extends FieldValues = FieldValues,\n    TContext extends object = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TContext,\n    TData,\n    TResponse,\n    TResponseError\n> & {\n    modal: {\n        submit: (values: TVariables) => void;\n        close: () => void;\n        show: (id?: BaseKey) => void;\n        visible: boolean;\n        title: string;\n    };\n};\n\nexport type UseModalFormProps<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables extends FieldValues = FieldValues,\n    TContext extends object = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n> = UseFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TContext,\n    TData,\n    TResponse,\n    TResponseError\n> & {\n    /**\n     * @description Configuration object for the modal.\n     * `defaultVisible`: Initial visibility state of the modal.\n     * \n     * `autoSubmitClose`: Whether the form should be submitted when the modal is closed.\n     * \n     * `autoResetForm`: Whether the form should be reset when the form is submitted.\n     * @type `{\n      defaultVisible?: boolean;\n      autoSubmitClose?: boolean;\n      autoResetForm?: boolean;\n      }`\n     * @default `defaultVisible = false` `autoSubmitClose = true` `autoResetForm = true`\n     */\n    modalProps?: {\n        defaultVisible?: boolean;\n        autoSubmitClose?: boolean;\n        autoResetForm?: boolean;\n    };\n} & FormWithSyncWithLocationParams;\n\nexport const useModalForm = <\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TVariables extends FieldValues = FieldValues,\n    TContext extends object = {},\n    TData extends BaseRecord = TQueryFnData,\n    TResponse extends BaseRecord = TData,\n    TResponseError extends HttpError = TError,\n>({\n    modalProps,\n    refineCoreProps,\n    syncWithLocation,\n    ...rest\n}: UseModalFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TContext,\n    TData,\n    TResponse,\n    TResponseError\n> = {}): UseModalFormReturnType<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TContext,\n    TData,\n    TResponse,\n    TResponseError\n> => {\n    const invalidate = useInvalidate();\n    const [initiallySynced, setInitiallySynced] = React.useState(false);\n\n    const translate = useTranslate();\n\n    const { resource: resourceProp, action: actionProp } =\n        refineCoreProps ?? {};\n\n    const {\n        resource,\n        action: actionFromParams,\n        identifier,\n    } = useResource(resourceProp);\n\n    const parsed = useParsed();\n    const go = useGo();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const action = actionProp ?? actionFromParams ?? \"\";\n\n    const syncingId = !(\n        typeof syncWithLocation === \"object\" &&\n        syncWithLocation?.syncId === false\n    );\n\n    const syncWithLocationKey =\n        typeof syncWithLocation === \"object\" && \"key\" in syncWithLocation\n            ? syncWithLocation.key\n            : resource && action && syncWithLocation\n            ? `modal-${identifier}-${action}`\n            : undefined;\n\n    const {\n        defaultVisible = false,\n        autoSubmitClose = true,\n        autoResetForm = true,\n    } = modalProps ?? {};\n\n    const useHookFormResult = useForm<\n        TQueryFnData,\n        TError,\n        TVariables,\n        TContext,\n        TData,\n        TResponse,\n        TResponseError\n    >({\n        refineCoreProps: {\n            ...refineCoreProps,\n            meta: {\n                ...(syncWithLocationKey\n                    ? { [syncWithLocationKey]: undefined }\n                    : {}),\n                ...refineCoreProps?.meta,\n            },\n        },\n        ...rest,\n    });\n\n    const {\n        reset,\n        refineCore: { onFinish, id, setId, autoSaveProps },\n        saveButtonProps,\n        handleSubmit,\n    } = useHookFormResult;\n\n    const { visible, show, close } = useModal({\n        defaultVisible,\n    });\n\n    React.useEffect(() => {\n        if (initiallySynced === false && syncWithLocationKey) {\n            const openStatus = parsed?.params?.[syncWithLocationKey]?.open;\n            if (typeof openStatus === \"boolean\") {\n                if (openStatus) {\n                    show();\n                }\n            } else if (typeof openStatus === \"string\") {\n                if (openStatus === \"true\") {\n                    show();\n                }\n            }\n\n            if (syncingId) {\n                const idFromParams = parsed?.params?.[syncWithLocationKey]?.id;\n                if (idFromParams) {\n                    setId?.(idFromParams);\n                }\n            }\n\n            setInitiallySynced(true);\n        }\n    }, [syncWithLocationKey, parsed, syncingId, setId]);\n\n    React.useEffect(() => {\n        if (initiallySynced === true) {\n            if (visible && syncWithLocationKey) {\n                go({\n                    query: {\n                        [syncWithLocationKey]: {\n                            ...parsed?.params?.[syncWithLocationKey],\n                            open: true,\n                            ...(syncingId && id && { id }),\n                        },\n                    },\n                    options: { keepQuery: true },\n                    type: \"replace\",\n                });\n            } else if (syncWithLocationKey && !visible) {\n                go({\n                    query: {\n                        [syncWithLocationKey]: undefined,\n                    },\n                    options: { keepQuery: true },\n                    type: \"replace\",\n                });\n            }\n        }\n    }, [id, visible, show, syncWithLocationKey, syncingId]);\n\n    const submit = async (values: TVariables) => {\n        await onFinish(values);\n\n        if (autoSubmitClose) {\n            close();\n        }\n\n        if (autoResetForm) {\n            reset();\n        }\n    };\n\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const handleClose = useCallback(() => {\n        if (\n            autoSaveProps.status === \"success\" &&\n            refineCoreProps?.autoSave?.invalidateOnClose\n        ) {\n            invalidate({\n                id,\n                invalidates: refineCoreProps.invalidates || [\n                    \"list\",\n                    \"many\",\n                    \"detail\",\n                ],\n                dataProviderName: refineCoreProps.dataProviderName,\n                resource: identifier,\n            });\n        }\n\n        if (warnWhen) {\n            const warnWhenConfirm = window.confirm(\n                translate(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (warnWhenConfirm) {\n                setWarnWhen(false);\n            } else {\n                return;\n            }\n        }\n\n        setId?.(undefined);\n        close();\n    }, [warnWhen, autoSaveProps.status]);\n\n    const handleShow = useCallback(\n        (showId?: BaseKey) => {\n            if (typeof showId !== \"undefined\") {\n                setId?.(showId);\n            }\n            const needsIdToOpen = action === \"edit\" || action === \"clone\";\n            const hasId =\n                typeof showId !== \"undefined\" || typeof id !== \"undefined\";\n            if (needsIdToOpen ? hasId : true) {\n                show();\n            }\n        },\n        [id],\n    );\n\n    const title = translate(\n        `${identifier}.titles.${actionProp}`,\n        undefined,\n        `${getUserFriendlyName(\n            `${actionProp} ${\n                resource?.meta?.label ??\n                resource?.options?.label ??\n                resource?.label ??\n                identifier\n            }`,\n            \"singular\",\n        )}`,\n    );\n\n    return {\n        modal: {\n            submit,\n            close: handleClose,\n            show: handleShow,\n            visible,\n            title,\n        },\n        ...useHookFormResult,\n        saveButtonProps: {\n            ...saveButtonProps,\n            onClick: (e) => handleSubmit(submit)(e),\n        },\n    };\n};\n","export type { RefineBreadcrumbProps } from \"./types\";\n\nexport type {\n    RefineButtonCommonProps,\n    RefineButtonDataProps,\n    RefineButtonLinkingProps,\n    RefineButtonResourceProps,\n    RefineButtonSingleProps,\n    RefineCloneButtonProps,\n    RefineCreateButtonProps,\n    RefineDeleteButtonProps,\n    RefineEditButtonProps,\n    RefineExportButtonProps,\n    RefineImportButtonProps,\n    RefineListButtonProps,\n    RefineRefreshButtonProps,\n    RefineSaveButtonProps,\n    RefineShowButtonProps,\n} from \"./types\";\n\nexport type {\n    RefineCrudCreateProps,\n    RefineCrudEditProps,\n    RefineCrudListProps,\n    RefineCrudShowProps,\n    ActionButtonRenderer,\n} from \"./types\";\n\nexport type { RefineErrorPageProps, RefineReadyPageProps } from \"./types\";\n\nexport type {\n    RefineFieldBooleanProps,\n    RefineFieldCommonProps,\n    RefineFieldDateProps,\n    RefineFieldEmailProps,\n    RefineFieldFileProps,\n    RefineFieldImageProps,\n    RefineFieldUrlProps,\n    RefineFieldMarkdownProps,\n    RefineFieldNumberProps,\n    RefineFieldTagProps,\n    RefineFieldTextProps,\n    RefineFieldTooltipProps,\n} from \"./types\";\n\nexport type {\n    RefineLayoutFooterProps,\n    RefineLayoutHeaderProps,\n    RefineLayoutLayoutProps,\n    RefineLayoutSiderProps,\n    RefineLayoutTitleProps,\n    RefineThemedLayoutSiderProps,\n    RefineThemedLayoutHeaderProps,\n    RefineThemedLayoutProps,\n    RefineLayoutThemedTitleProps,\n    RefineThemedLayoutV2Props,\n    RefineThemedLayoutV2SiderProps,\n    RefineThemedLayoutV2HeaderProps,\n} from \"./types\";\n\nexport { RefineButtonTestIds } from \"./ids\";\nexport * from \"./classNames\";\n","export const RefineButtonTestIds = {\n    CloneButton: \"refine-clone-button\",\n    DeleteButton: \"refine-delete-button\",\n    EditButton: \"refine-edit-button\",\n    SaveButton: \"refine-save-button\",\n    CreateButton: \"refine-create-button\",\n    ImportButton: \"refine-import-button\",\n    ExportButton: \"refine-export-button\",\n    ListButton: \"refine-list-button\",\n    RefreshButton: \"refine-refresh-button\",\n    ShowButton: \"refine-show-button\",\n};\n","export const RefinePageHeaderClassNames = {\n    Title: \"refine-pageHeader-title\",\n    SubTitle: \"refine-pageHeader-subTitle\",\n};\n\nexport const RefineButtonClassNames = {\n    CloneButton: \"refine-clone-button\",\n    DeleteButton: \"refine-delete-button\",\n    EditButton: \"refine-edit-button\",\n    SaveButton: \"refine-save-button\",\n    CreateButton: \"refine-create-button\",\n    ImportButton: \"refine-import-button\",\n    ExportButton: \"refine-export-button\",\n    ListButton: \"refine-list-button\",\n    RefreshButton: \"refine-refresh-button\",\n    ShowButton: \"refine-show-button\",\n};\n","/** @deprecated not exists anymore - this type exists as a fallback for existing usages */\nexport type ThemeInput = any;\n\n/** Notistack */\n/**\n * Part of the following typing and documentation is from material-ui/src/Snackbar/Snackbar.d.ts\n */\nexport {\n    SnackbarProvider,\n    withSnackbar,\n    SnackbarContent as NotistackSnackbarContent,\n    useSnackbar,\n} from \"notistack\";\n\nexport type {\n    WithSnackbarProps,\n    SnackbarKey,\n    ProviderContext,\n    VariantType,\n    CloseReason,\n    SnackbarMessage,\n    SnackbarAction,\n    SnackbarContentCallback,\n    TransitionCloseHandler,\n    TransitionEnterHandler,\n    TransitionHandler,\n    ContainerClassKey as NotistackContainerClassKey,\n    VariantClassKey,\n    CombinedClassKey,\n    SnackbarOrigin,\n    IconVariant,\n    TransitionHandlerProps,\n    SnackbarContentProps,\n    SnackbarProps,\n    SharedProps,\n    OptionsObject,\n    SnackbarProviderProps,\n} from \"notistack\";\n\nexport * from \"./components\";\nexport * from \"./hooks\";\nexport * from \"./theme\";\nexport * from \"./providers\";\nexport * from \"./contexts\";\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\n\nimport { RefineLayoutLayoutProps } from \"./types\";\nimport { Sider as DefaultSider } from \"./sider\";\nimport { Header as DefaultHeader } from \"./header\";\n\n/**\n * @deprecated use `<ThemedLayout>` instead with 100% backward compatibility.\n * @see https://refine.dev/docs/api-reference/mui/components/mui-themed-layout\n **/\nexport const Layout: React.FC<RefineLayoutLayoutProps> = ({\n    Sider,\n    Header,\n    Title,\n    Footer,\n    OffLayoutArea,\n    children,\n}) => {\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n\n    return (\n        <Box display=\"flex\" flexDirection=\"row\">\n            <SiderToRender Title={Title} />\n            <Box\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    flex: 1,\n                    minHeight: \"100vh\",\n                }}\n            >\n                <HeaderToRender />\n                <Box\n                    component=\"main\"\n                    sx={{\n                        p: { xs: 1, md: 2, lg: 3 },\n                        flexGrow: 1,\n                        bgcolor: (theme) => theme.palette.background.default,\n                    }}\n                >\n                    {children}\n                </Box>\n                {Footer && <Footer />}\n            </Box>\n            {OffLayoutArea && <OffLayoutArea />}\n        </Box>\n    );\n};\n","import React, { useState } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\n\nimport ListOutlined from \"@mui/icons-material/ListOutlined\";\nimport Logout from \"@mui/icons-material/Logout\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport ChevronLeft from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRight from \"@mui/icons-material/ChevronRight\";\nimport MenuRounded from \"@mui/icons-material/MenuRounded\";\nimport Dashboard from \"@mui/icons-material/Dashboard\";\n\nimport {\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useLogout,\n    useTitle,\n    useTranslate,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    useMenu,\n    useRefineContext,\n    useActiveAuthProvider,\n    pickNotDeprecated,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\n\nimport { RefineLayoutSiderProps } from \"../types\";\n\nimport { Title as DefaultTitle } from \"@components\";\n\nexport const Sider: React.FC<RefineLayoutSiderProps> = ({\n    Title: TitleFromProps,\n    render,\n    meta,\n}) => {\n    const [collapsed, setCollapsed] = useState(false);\n    const [opened, setOpened] = useState(false);\n\n    const drawerWidth = () => {\n        if (collapsed) return 64;\n        return 200;\n    };\n\n    const t = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n    const { hasDashboard } = useRefineContext();\n    const translate = useTranslate();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n    const isExistAuthentication = useIsExistAuthentication();\n    const TitleFromContext = useTitle();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const [open, setOpen] = useState<{ [k: string]: any }>({});\n\n    React.useEffect(() => {\n        setOpen((previous) => {\n            const previousKeys: string[] = Object.keys(previous);\n            const previousOpenKeys = previousKeys.filter(\n                (key) => previous[key],\n            );\n\n            const uniqueKeys = new Set([\n                ...previousOpenKeys,\n                ...defaultOpenKeys,\n            ]);\n            const uniqueKeysRecord = Object.fromEntries(\n                Array.from(uniqueKeys.values()).map((key) => [key, true]),\n            );\n            return uniqueKeysRecord;\n        });\n    }, [defaultOpenKeys]);\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n    const handleClick = (key: string) => {\n        setOpen({ ...open, [key]: !open[key] });\n    };\n\n    const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n        return tree.map((item: ITreeMenu) => {\n            const {\n                icon,\n                label,\n                route,\n                name,\n                children,\n                parentName,\n                meta,\n                options,\n            } = item;\n            const isOpen = open[item.key || \"\"] || false;\n\n            const isSelected = item.key === selectedKey;\n            const isNested = !(\n                pickNotDeprecated(meta?.parent, options?.parent, parentName) ===\n                undefined\n            );\n\n            if (children.length > 0) {\n                return (\n                    <CanAccess\n                        key={item.key}\n                        resource={name.toLowerCase()}\n                        action=\"list\"\n                        params={{\n                            resource: item,\n                        }}\n                    >\n                        <div key={item.key}>\n                            <Tooltip\n                                title={label ?? name}\n                                placement=\"right\"\n                                disableHoverListener={!collapsed}\n                                arrow\n                            >\n                                <ListItemButton\n                                    onClick={() => {\n                                        if (collapsed) {\n                                            setCollapsed(false);\n                                            if (!isOpen) {\n                                                handleClick(item.key || \"\");\n                                            }\n                                        } else {\n                                            handleClick(item.key || \"\");\n                                        }\n                                    }}\n                                    sx={{\n                                        pl: isNested ? 4 : 2,\n                                        justifyContent: \"center\",\n                                        \"&.Mui-selected\": {\n                                            \"&:hover\": {\n                                                backgroundColor: \"transparent\",\n                                            },\n                                            backgroundColor: \"transparent\",\n                                        },\n                                    }}\n                                >\n                                    <ListItemIcon\n                                        sx={{\n                                            justifyContent: \"center\",\n                                            minWidth: 36,\n                                            color: \"secondary.contrastText\",\n                                        }}\n                                    >\n                                        {icon ?? <ListOutlined />}\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={label}\n                                        primaryTypographyProps={{\n                                            noWrap: true,\n                                            fontSize: \"14px\",\n                                            fontWeight: isSelected\n                                                ? \"bold\"\n                                                : \"normal\",\n                                        }}\n                                    />\n                                    {!collapsed &&\n                                        (isOpen ? (\n                                            <ExpandLess />\n                                        ) : (\n                                            <ExpandMore />\n                                        ))}\n                                </ListItemButton>\n                            </Tooltip>\n                            {!collapsed && (\n                                <Collapse\n                                    in={open[item.key || \"\"]}\n                                    timeout=\"auto\"\n                                    unmountOnExit\n                                >\n                                    <List component=\"div\" disablePadding>\n                                        {renderTreeView(children, selectedKey)}\n                                    </List>\n                                </Collapse>\n                            )}\n                        </div>\n                    </CanAccess>\n                );\n            }\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{ resource: item }}\n                >\n                    <Tooltip\n                        title={label ?? name}\n                        placement=\"right\"\n                        disableHoverListener={!collapsed}\n                        arrow\n                    >\n                        <ListItemButton\n                            component={ActiveLink}\n                            to={route}\n                            selected={isSelected}\n                            onClick={() => {\n                                setOpened(false);\n                            }}\n                            sx={{\n                                pl: isNested ? 4 : 2,\n                                py: isNested ? 1.25 : 1,\n                                \"&.Mui-selected\": {\n                                    \"&:hover\": {\n                                        backgroundColor: \"transparent\",\n                                    },\n                                    backgroundColor: \"transparent\",\n                                },\n                                justifyContent: \"center\",\n                            }}\n                        >\n                            <ListItemIcon\n                                sx={{\n                                    justifyContent: \"center\",\n                                    minWidth: 36,\n                                    color: \"secondary.contrastText\",\n                                }}\n                            >\n                                {icon ?? <ListOutlined />}\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={label}\n                                primaryTypographyProps={{\n                                    noWrap: true,\n                                    fontSize: \"14px\",\n                                    fontWeight: isSelected ? \"bold\" : \"normal\",\n                                }}\n                            />\n                        </ListItemButton>\n                    </Tooltip>\n                </CanAccess>\n            );\n        });\n    };\n\n    const dashboard = hasDashboard ? (\n        <CanAccess resource=\"dashboard\" action=\"list\">\n            <Tooltip\n                title={translate(\"dashboard.title\", \"Dashboard\")}\n                placement=\"right\"\n                disableHoverListener={!collapsed}\n                arrow\n            >\n                <ListItemButton\n                    component={ActiveLink}\n                    to=\"/\"\n                    selected={selectedKey === \"/\"}\n                    onClick={() => {\n                        setOpened(false);\n                    }}\n                    sx={{\n                        pl: 2,\n                        py: 1,\n                        \"&.Mui-selected\": {\n                            \"&:hover\": {\n                                backgroundColor: \"transparent\",\n                            },\n                            backgroundColor: \"transparent\",\n                        },\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <ListItemIcon\n                        sx={{\n                            justifyContent: \"center\",\n                            minWidth: 36,\n                            color: \"secondary.contrastText\",\n                        }}\n                    >\n                        <Dashboard />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={translate(\"dashboard.title\", \"Dashboard\")}\n                        primaryTypographyProps={{\n                            noWrap: true,\n                            fontSize: \"14px\",\n                            fontWeight: selectedKey === \"/\" ? \"bold\" : \"normal\",\n                        }}\n                    />\n                </ListItemButton>\n            </Tooltip>\n        </CanAccess>\n    ) : null;\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                translate(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Tooltip\n            title={t(\"buttons.logout\", \"Logout\")}\n            placement=\"right\"\n            disableHoverListener={!collapsed}\n            arrow\n        >\n            <ListItemButton\n                key=\"logout\"\n                onClick={handleLogout}\n                sx={{ justifyContent: \"center\" }}\n            >\n                <ListItemIcon\n                    sx={{\n                        justifyContent: \"center\",\n                        minWidth: 36,\n                        color: \"secondary.contrastText\",\n                    }}\n                >\n                    <Logout />\n                </ListItemIcon>\n                <ListItemText\n                    primary={t(\"buttons.logout\", \"Logout\")}\n                    primaryTypographyProps={{\n                        noWrap: true,\n                        fontSize: \"14px\",\n                    }}\n                />\n            </ListItemButton>\n        </Tooltip>\n    );\n\n    const items = renderTreeView(menuItems, selectedKey);\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                logout,\n                items,\n                collapsed,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    const drawer = (\n        <List disablePadding sx={{ mt: 1, color: \"secondary.contrastText\" }}>\n            {renderSider()}\n        </List>\n    );\n\n    return (\n        <>\n            <Box\n                sx={{\n                    width: { xs: drawerWidth() },\n                    display: {\n                        xs: \"none\",\n                        md: \"block\",\n                    },\n                    transition: \"width 0.3s ease\",\n                }}\n            />\n            <Box\n                component=\"nav\"\n                sx={{\n                    position: \"fixed\",\n                    zIndex: 1101,\n                    width: { sm: drawerWidth() },\n                    display: \"flex\",\n                }}\n            >\n                <Drawer\n                    variant=\"temporary\"\n                    open={opened}\n                    onClose={() => setOpened(false)}\n                    ModalProps={{\n                        keepMounted: true, // Better open performance on mobile.\n                    }}\n                    sx={{\n                        display: { sm: \"block\", md: \"none\" },\n                        \"& .MuiDrawer-paper\": {\n                            width: 256,\n                            bgcolor: \"secondary.main\",\n                        },\n                    }}\n                >\n                    <Box\n                        sx={{\n                            height: 64,\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <RenderToTitle collapsed={false} />\n                    </Box>\n                    {drawer}\n                </Drawer>\n                <Drawer\n                    variant=\"permanent\"\n                    PaperProps={{ elevation: 1 }}\n                    sx={{\n                        display: { xs: \"none\", md: \"block\" },\n                        \"& .MuiDrawer-paper\": {\n                            width: drawerWidth,\n                            bgcolor: \"secondary.main\",\n                            overflow: \"hidden\",\n                            transition:\n                                \"width 200ms cubic-bezier(0.4, 0, 0.6, 1) 0ms\",\n                        },\n                    }}\n                    open\n                >\n                    <Box\n                        sx={{\n                            height: 64,\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <RenderToTitle collapsed={collapsed} />\n                    </Box>\n                    <Box\n                        sx={{\n                            flexGrow: 1,\n                            overflowX: \"hidden\",\n                            overflowY: \"auto\",\n                        }}\n                    >\n                        {drawer}\n                    </Box>\n                    <Button\n                        sx={{\n                            background: \"rgba(0,0,0,.5)\",\n                            color: \"secondary.contrastText\",\n                            textAlign: \"center\",\n                            borderRadius: 0,\n                            borderTop: \"1px solid #ffffff1a\",\n                        }}\n                        fullWidth\n                        size=\"large\"\n                        onClick={() => setCollapsed((prev) => !prev)}\n                    >\n                        {collapsed ? <ChevronRight /> : <ChevronLeft />}\n                    </Button>\n                </Drawer>\n                <Box\n                    sx={{\n                        display: { xs: \"block\", md: \"none\" },\n                        position: \"fixed\",\n                        top: \"64px\",\n                        left: \"0px\",\n                        borderRadius: \"0 6px 6px 0\",\n                        bgcolor: \"secondary.main\",\n                        zIndex: 1199,\n                        width: \"36px\",\n                    }}\n                >\n                    <IconButton\n                        sx={{ color: \"#fff\", width: \"36px\" }}\n                        onClick={() => setOpened((prev) => !prev)}\n                    >\n                        <MenuRounded />\n                    </IconButton>\n                </Box>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\nimport { useGetIdentity, useActiveAuthProvider } from \"@refinedev/core\";\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Stack from \"@mui/material/Stack\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Avatar from \"@mui/material/Avatar\";\n\nimport { RefineLayoutHeaderProps } from \"../types\";\n\nexport const Header: React.FC<RefineLayoutHeaderProps> = () => {\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const shouldRenderHeader = user && (user.name || user.avatar);\n\n    return shouldRenderHeader ? (\n        <AppBar color=\"default\" position=\"sticky\" elevation={1}>\n            <Toolbar>\n                <Stack\n                    direction=\"row\"\n                    width=\"100%\"\n                    justifyContent=\"flex-end\"\n                    alignItems=\"center\"\n                >\n                    <Stack\n                        direction=\"row\"\n                        gap=\"16px\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n                    >\n                        <Typography variant=\"subtitle2\">\n                            {user?.name}\n                        </Typography>\n                        <Avatar src={user?.avatar} alt={user?.name} />\n                    </Stack>\n                </Stack>\n            </Toolbar>\n        </AppBar>\n    ) : null;\n};\n","import React from \"react\";\nimport {\n    useRouterContext,\n    TitleProps,\n    useLink,\n    useRouterType,\n} from \"@refinedev/core\";\n\nimport Button from \"@mui/material/Button\";\n\nexport const Title: React.FC<TitleProps> = ({ collapsed }) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <Button fullWidth variant=\"text\" disableRipple>\n            <ActiveLink to=\"/\">\n                {collapsed ? (\n                    <img\n                        src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine-mini.svg\"\n                        alt=\"Refine\"\n                        width=\"28px\"\n                        style={{ maxHeight: \"38px\" }}\n                    />\n                ) : (\n                    <img\n                        src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                        alt=\"Refine\"\n                        width=\"140px\"\n                    />\n                )}\n            </ActiveLink>\n        </Button>\n    );\n};\n","import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\n\nimport { ThemedSider as DefaultSider } from \"./sider\";\nimport { ThemedHeader as DefaultHeader } from \"./header\";\nimport { RefineThemedLayoutProps } from \"./types\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/mui/components/mui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedLayout: React.FC<RefineThemedLayoutProps> = ({\n    Sider,\n    Header,\n    Title,\n    Footer,\n    OffLayoutArea,\n    children,\n}) => {\n    const [isSiderOpen, setIsSiderOpen] = useState(true);\n\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n\n    return (\n        <Box display=\"flex\" flexDirection=\"row\">\n            <SiderToRender\n                Title={Title}\n                isSiderOpen={isSiderOpen}\n                onToggleSiderClick={(isOpen) => setIsSiderOpen(Boolean(isOpen))}\n            />\n            <Box\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    flex: 1,\n                    minHeight: \"100vh\",\n                }}\n            >\n                <HeaderToRender\n                    isSiderOpen={isSiderOpen}\n                    onToggleSiderClick={() => setIsSiderOpen((prev) => !prev)}\n                />\n                <Box\n                    component=\"main\"\n                    sx={{\n                        p: { xs: 1, md: 2, lg: 3 },\n                        flexGrow: 1,\n                        bgcolor: (theme) => theme.palette.background.default,\n                    }}\n                >\n                    {children}\n                </Box>\n                {Footer && <Footer />}\n            </Box>\n            {OffLayoutArea && <OffLayoutArea />}\n        </Box>\n    );\n};\n","import React, { useState } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Paper from \"@mui/material/Paper\";\n\nimport ListOutlined from \"@mui/icons-material/ListOutlined\";\nimport Logout from \"@mui/icons-material/Logout\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport ChevronLeft from \"@mui/icons-material/ChevronLeft\";\nimport MenuRounded from \"@mui/icons-material/MenuRounded\";\nimport Dashboard from \"@mui/icons-material/Dashboard\";\n\nimport {\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useLogout,\n    useTitle,\n    useTranslate,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    useMenu,\n    useRefineContext,\n    useActiveAuthProvider,\n    pickNotDeprecated,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\n\nimport { RefineThemedLayoutSiderProps } from \"../types\";\n\nimport { ThemedTitle as DefaultTitle } from \"@components\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/mui/components/mui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedSider: React.FC<RefineThemedLayoutSiderProps> = ({\n    Title: TitleFromProps,\n    render,\n    meta,\n    isSiderOpen,\n    onToggleSiderClick,\n}) => {\n    const [opened, setOpened] = useState(false);\n\n    const drawerWidth = () => {\n        if (isSiderOpen) return 240;\n        return 56;\n    };\n\n    const t = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n    const { hasDashboard } = useRefineContext();\n    const translate = useTranslate();\n\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n    const isExistAuthentication = useIsExistAuthentication();\n    const TitleFromContext = useTitle();\n    const authProvider = useActiveAuthProvider();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const [open, setOpen] = useState<{ [k: string]: any }>({});\n\n    React.useEffect(() => {\n        setOpen((previous) => {\n            const previousKeys: string[] = Object.keys(previous);\n            const previousOpenKeys = previousKeys.filter(\n                (key) => previous[key],\n            );\n\n            const uniqueKeys = new Set([\n                ...previousOpenKeys,\n                ...defaultOpenKeys,\n            ]);\n            const uniqueKeysRecord = Object.fromEntries(\n                Array.from(uniqueKeys.values()).map((key) => [key, true]),\n            );\n            return uniqueKeysRecord;\n        });\n    }, [defaultOpenKeys]);\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n    const handleClick = (key: string) => {\n        setOpen({ ...open, [key]: !open[key] });\n    };\n\n    const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n        return tree.map((item: ITreeMenu) => {\n            const {\n                icon,\n                label,\n                route,\n                name,\n                children,\n                parentName,\n                meta,\n                options,\n            } = item;\n            const isOpen = open[item.key || \"\"] || false;\n\n            const isSelected = item.key === selectedKey;\n            const isNested = !(\n                pickNotDeprecated(meta?.parent, options?.parent, parentName) ===\n                undefined\n            );\n\n            if (children.length > 0) {\n                return (\n                    <CanAccess\n                        key={item.key}\n                        resource={name.toLowerCase()}\n                        action=\"list\"\n                        params={{\n                            resource: item,\n                        }}\n                    >\n                        <div key={item.key}>\n                            <Tooltip\n                                title={label ?? name}\n                                placement=\"right\"\n                                disableHoverListener={isSiderOpen}\n                                arrow\n                            >\n                                <ListItemButton\n                                    onClick={() => {\n                                        if (!isSiderOpen) {\n                                            onToggleSiderClick?.(true);\n                                            if (!isOpen) {\n                                                handleClick(item.key || \"\");\n                                            }\n                                        } else {\n                                            handleClick(item.key || \"\");\n                                        }\n                                    }}\n                                    sx={{\n                                        pl: isNested ? 4 : 2,\n                                        justifyContent: \"center\",\n                                        marginTop: \"8px\",\n                                    }}\n                                >\n                                    <ListItemIcon\n                                        sx={{\n                                            justifyContent: \"center\",\n                                            minWidth: \"24px\",\n                                            transition: \"margin-right 0.3s\",\n                                            marginRight: isSiderOpen\n                                                ? \"12px\"\n                                                : \"0px\",\n                                            color: \"currentColor\",\n                                        }}\n                                    >\n                                        {icon ?? <ListOutlined />}\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={label}\n                                        primaryTypographyProps={{\n                                            noWrap: true,\n                                            fontSize: \"14px\",\n                                        }}\n                                    />\n                                    {isOpen ? (\n                                        <ExpandLess\n                                            sx={{\n                                                color: \"text.icon\",\n                                            }}\n                                        />\n                                    ) : (\n                                        <ExpandMore\n                                            sx={{\n                                                color: \"text.icon\",\n                                            }}\n                                        />\n                                    )}\n                                </ListItemButton>\n                            </Tooltip>\n                            {isSiderOpen && (\n                                <Collapse\n                                    in={open[item.key || \"\"]}\n                                    timeout=\"auto\"\n                                    unmountOnExit\n                                >\n                                    <List component=\"div\" disablePadding>\n                                        {renderTreeView(children, selectedKey)}\n                                    </List>\n                                </Collapse>\n                            )}\n                        </div>\n                    </CanAccess>\n                );\n            }\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{ resource: item }}\n                >\n                    <Tooltip\n                        title={label ?? name}\n                        placement=\"right\"\n                        disableHoverListener={isSiderOpen}\n                        arrow\n                    >\n                        <ListItemButton\n                            component={ActiveLink}\n                            to={route}\n                            selected={isSelected}\n                            onClick={() => {\n                                setOpened(false);\n                            }}\n                            sx={{\n                                pl: isNested ? 4 : 2,\n                                py: isNested ? 1.25 : 1,\n                                justifyContent: \"center\",\n                                color: isSelected\n                                    ? \"primary.main\"\n                                    : \"text.primary\",\n                            }}\n                        >\n                            <ListItemIcon\n                                sx={{\n                                    justifyContent: \"center\",\n                                    transition: \"margin-right 0.3s\",\n                                    marginRight: isSiderOpen ? \"12px\" : \"0px\",\n                                    minWidth: \"24px\",\n                                    color: \"currentColor\",\n                                }}\n                            >\n                                {icon ?? <ListOutlined />}\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={label}\n                                primaryTypographyProps={{\n                                    noWrap: true,\n                                    fontSize: \"14px\",\n                                }}\n                            />\n                        </ListItemButton>\n                    </Tooltip>\n                </CanAccess>\n            );\n        });\n    };\n\n    const dashboard = hasDashboard ? (\n        <CanAccess resource=\"dashboard\" action=\"list\">\n            <Tooltip\n                title={translate(\"dashboard.title\", \"Dashboard\")}\n                placement=\"right\"\n                disableHoverListener={isSiderOpen}\n                arrow\n            >\n                <ListItemButton\n                    component={ActiveLink}\n                    to=\"/\"\n                    selected={selectedKey === \"/\"}\n                    onClick={() => {\n                        setOpened(false);\n                    }}\n                    sx={{\n                        pl: 2,\n                        py: 1,\n                        justifyContent: \"center\",\n                        color:\n                            selectedKey === \"/\"\n                                ? \"primary.main\"\n                                : \"text.primary\",\n                    }}\n                >\n                    <ListItemIcon\n                        sx={{\n                            justifyContent: \"center\",\n                            minWidth: \"24px\",\n                            transition: \"margin-right 0.3s\",\n                            marginRight: isSiderOpen ? \"12px\" : \"0px\",\n                            color: \"currentColor\",\n                            fontSize: \"14px\",\n                        }}\n                    >\n                        <Dashboard />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={translate(\"dashboard.title\", \"Dashboard\")}\n                        primaryTypographyProps={{\n                            noWrap: true,\n                            fontSize: \"14px\",\n                        }}\n                    />\n                </ListItemButton>\n            </Tooltip>\n        </CanAccess>\n    ) : null;\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                t(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Tooltip\n            title={t(\"buttons.logout\", \"Logout\")}\n            placement=\"right\"\n            disableHoverListener={isSiderOpen}\n            arrow\n        >\n            <ListItemButton\n                key=\"logout\"\n                onClick={() => handleLogout()}\n                sx={{\n                    justifyContent: \"center\",\n                }}\n            >\n                <ListItemIcon\n                    sx={{\n                        justifyContent: \"center\",\n                        minWidth: \"24px\",\n                        transition: \"margin-right 0.3s\",\n                        marginRight: isSiderOpen ? \"12px\" : \"0px\",\n                        marginLeft: \"2px\",\n                        color: \"currentColor\",\n                    }}\n                >\n                    <Logout />\n                </ListItemIcon>\n                <ListItemText\n                    primary={t(\"buttons.logout\", \"Logout\")}\n                    primaryTypographyProps={{\n                        noWrap: true,\n                        fontSize: \"14px\",\n                    }}\n                />\n            </ListItemButton>\n        </Tooltip>\n    );\n\n    const items = renderTreeView(menuItems, selectedKey);\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                logout,\n                items,\n                collapsed: !isSiderOpen,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    const drawer = (\n        <List\n            disablePadding\n            sx={{\n                flexGrow: 1,\n                paddingTop: \"16px\",\n            }}\n        >\n            {renderSider()}\n        </List>\n    );\n\n    return (\n        <>\n            <Box\n                sx={{\n                    width: { xs: drawerWidth() },\n                    display: {\n                        xs: \"none\",\n                        md: \"block\",\n                    },\n                    transition: \"width 0.3s ease\",\n                }}\n            />\n            <Box\n                component=\"nav\"\n                sx={{\n                    position: \"fixed\",\n                    zIndex: 1101,\n                    width: { sm: drawerWidth() },\n                    display: \"flex\",\n                }}\n            >\n                <Drawer\n                    variant=\"temporary\"\n                    elevation={2}\n                    open={opened}\n                    onClose={() => setOpened(false)}\n                    ModalProps={{\n                        keepMounted: true, // Better open performance on mobile.\n                    }}\n                    sx={{\n                        display: {\n                            sm: \"block\",\n                            md: \"none\",\n                        },\n                    }}\n                >\n                    <Box\n                        sx={{\n                            width: drawerWidth(),\n                        }}\n                    >\n                        <Box\n                            sx={{\n                                height: 64,\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                paddingLeft: \"16px\",\n                                fontSize: \"14px\",\n                            }}\n                        >\n                            <RenderToTitle collapsed={false} />\n                        </Box>\n                        {drawer}\n                    </Box>\n                </Drawer>\n                <Drawer\n                    variant=\"permanent\"\n                    sx={{\n                        display: { xs: \"none\", md: \"block\" },\n                        \"& .MuiDrawer-paper\": {\n                            width: drawerWidth,\n                            overflow: \"hidden\",\n                            transition:\n                                \"width 200ms cubic-bezier(0.4, 0, 0.6, 1) 0ms\",\n                        },\n                    }}\n                    open\n                >\n                    <Paper\n                        elevation={0}\n                        sx={{\n                            fontSize: \"14px\",\n                            width: \"100%\",\n                            height: 64,\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: !isSiderOpen\n                                ? \"center\"\n                                : \"space-between\",\n                            paddingLeft: !isSiderOpen ? 0 : \"16px\",\n                            paddingRight: !isSiderOpen ? 0 : \"8px\",\n                            variant: \"outlined\",\n                            borderRadius: 0,\n                            borderBottom: (theme) =>\n                                `1px solid ${theme.palette.action.focus}`,\n                        }}\n                    >\n                        <RenderToTitle collapsed={!isSiderOpen} />\n                        {isSiderOpen && (\n                            <IconButton\n                                size=\"small\"\n                                onClick={() => onToggleSiderClick?.(false)}\n                            >\n                                {<ChevronLeft />}\n                            </IconButton>\n                        )}\n                    </Paper>\n                    <Box\n                        sx={{\n                            flexGrow: 1,\n                            overflowX: \"hidden\",\n                            overflowY: \"auto\",\n                        }}\n                    >\n                        {drawer}\n                    </Box>\n                </Drawer>\n                <IconButton\n                    sx={(theme) => {\n                        const { palette } = theme;\n                        const { mode, getContrastText, primary, background } =\n                            palette;\n\n                        return {\n                            color:\n                                mode === \"light\"\n                                    ? getContrastText(primary.main)\n                                    : getContrastText(background.paper),\n                            display: { xs: \"flex\", md: \"none\" },\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            position: \"fixed\",\n                            top: \"12px\",\n                            left: \"16px\",\n                            zIndex: 1199,\n                            height: \"36px\",\n                            width: \"36px\",\n                        };\n                    }}\n                    onClick={() => setOpened((prev) => !prev)}\n                >\n                    <MenuRounded />\n                </IconButton>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\nimport { useGetIdentity, useActiveAuthProvider } from \"@refinedev/core\";\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Stack from \"@mui/material/Stack\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Avatar from \"@mui/material/Avatar\";\nimport IconButton from \"@mui/material/IconButton\";\n\nimport Menu from \"@mui/icons-material/Menu\";\n\nimport { RefineThemedLayoutHeaderProps } from \"../types\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/mui/components/mui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedHeader: React.FC<RefineThemedLayoutHeaderProps> = ({\n    isSiderOpen,\n    onToggleSiderClick,\n    toggleSiderIcon: toggleSiderIconFromProps,\n}) => {\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const hasSidebarToggle = Boolean(onToggleSiderClick);\n\n    return (\n        <AppBar position=\"sticky\">\n            <Toolbar>\n                {hasSidebarToggle && (\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={() => onToggleSiderClick?.()}\n                        edge=\"start\"\n                        sx={{\n                            mr: 2,\n                            display: { xs: \"none\", md: \"flex\" },\n                            ...(isSiderOpen && { display: \"none\" }),\n                        }}\n                    >\n                        {toggleSiderIconFromProps?.(Boolean(isSiderOpen)) ?? (\n                            <Menu />\n                        )}\n                    </IconButton>\n                )}\n                <Stack\n                    direction=\"row\"\n                    width=\"100%\"\n                    justifyContent=\"flex-end\"\n                    alignItems=\"center\"\n                >\n                    <Stack\n                        direction=\"row\"\n                        gap=\"16px\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n                    >\n                        <Typography\n                            sx={{\n                                display: { xs: \"none\", md: \"block\" },\n                            }}\n                            variant=\"subtitle2\"\n                        >\n                            {user?.name}\n                        </Typography>\n                        <Avatar src={user?.avatar} alt={user?.name} />\n                    </Stack>\n                </Stack>\n            </Toolbar>\n        </AppBar>\n    );\n};\n","import React from \"react\";\nimport { useRouterContext, useLink, useRouterType } from \"@refinedev/core\";\n\nimport MuiLink from \"@mui/material/Link\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { RefineLayoutThemedTitleProps } from \"../types\";\n\nconst defaultText = \"refine Project\";\n\nconst defaultIcon = (\n    <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-testid=\"refine-logo\"\n    >\n        <path\n            d=\"M12 9C13.6569 9 15 7.65685 15 6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6C9 7.65685 10.3431 9 12 9Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM8 6C8 3.79086 9.79086 2 12 2C14.2091 2 16 3.79086 16 6V18C16 20.2091 14.2091 22 12 22C9.79086 22 8 20.2091 8 18V6Z\"\n            fill=\"currentColor\"\n        />\n    </svg>\n);\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/mui/components/mui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedTitle: React.FC<RefineLayoutThemedTitleProps> = ({\n    collapsed,\n    wrapperStyles,\n    icon = defaultIcon,\n    text = defaultText,\n}) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <MuiLink\n            to=\"/\"\n            component={ActiveLink}\n            underline=\"none\"\n            sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: \"12px\",\n                ...wrapperStyles,\n            }}\n        >\n            <SvgIcon height=\"24px\" width=\"24px\" color=\"primary\">\n                {icon}\n            </SvgIcon>\n            {!collapsed && (\n                <Typography\n                    variant=\"h6\"\n                    fontWeight={700}\n                    color=\"text.primary\"\n                    fontSize=\"inherit\"\n                    textOverflow=\"ellipsis\"\n                    overflow=\"hidden\"\n                >\n                    {text}\n                </Typography>\n            )}\n        </MuiLink>\n    );\n};\n","import React from \"react\";\n\nimport Box from \"@mui/material/Box\";\n\nimport { ThemedLayoutContextProvider } from \"@contexts\";\nimport { ThemedSiderV2 as DefaultSider } from \"./sider\";\nimport { ThemedHeaderV2 as DefaultHeader } from \"./header\";\nimport { RefineThemedLayoutV2Props } from \"./types\";\n\nexport const ThemedLayoutV2: React.FC<RefineThemedLayoutV2Props> = ({\n    Sider,\n    Header,\n    Title,\n    Footer,\n    OffLayoutArea,\n    children,\n    initialSiderCollapsed,\n}) => {\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n\n    return (\n        <ThemedLayoutContextProvider\n            initialSiderCollapsed={initialSiderCollapsed}\n        >\n            <Box display=\"flex\" flexDirection=\"row\">\n                <SiderToRender Title={Title} />\n                <Box\n                    sx={[\n                        {\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            flex: 1,\n                            minHeight: \"100vh\",\n                        },\n                        { overflow: \"auto\" },\n                        { overflow: \"clip\" },\n                    ]}\n                >\n                    <HeaderToRender />\n                    <Box\n                        component=\"main\"\n                        sx={{\n                            p: { xs: 1, md: 2, lg: 3 },\n                            flexGrow: 1,\n                            bgcolor: (theme) =>\n                                theme.palette.background.default,\n                        }}\n                    >\n                        {children}\n                    </Box>\n                    {Footer && <Footer />}\n                </Box>\n                {OffLayoutArea && <OffLayoutArea />}\n            </Box>\n        </ThemedLayoutContextProvider>\n    );\n};\n","import React, { ReactNode, useState } from \"react\";\n\nimport { IThemedLayoutContext } from \"./IThemedLayoutContext\";\n\nexport const ThemedLayoutContext = React.createContext<IThemedLayoutContext>({\n    siderCollapsed: false,\n    mobileSiderOpen: false,\n    setSiderCollapsed: () => undefined,\n    setMobileSiderOpen: () => undefined,\n});\n\nexport const ThemedLayoutContextProvider: React.FC<{\n    children: ReactNode;\n    initialSiderCollapsed?: boolean;\n}> = ({ children, initialSiderCollapsed }) => {\n    const [siderCollapsed, setSiderCollapsed] = useState(\n        initialSiderCollapsed ?? false,\n    );\n    const [mobileSiderOpen, setMobileSiderOpen] = useState(false);\n\n    return (\n        <ThemedLayoutContext.Provider\n            value={{\n                siderCollapsed,\n                mobileSiderOpen,\n                setSiderCollapsed,\n                setMobileSiderOpen,\n            }}\n        >\n            {children}\n        </ThemedLayoutContext.Provider>\n    );\n};\n","import React, { CSSProperties, useState } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Paper from \"@mui/material/Paper\";\n\nimport ListOutlined from \"@mui/icons-material/ListOutlined\";\nimport Logout from \"@mui/icons-material/Logout\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport ChevronLeft from \"@mui/icons-material/ChevronLeft\";\nimport Dashboard from \"@mui/icons-material/Dashboard\";\n\nimport {\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useLogout,\n    useTitle,\n    useTranslate,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    useMenu,\n    useRefineContext,\n    useActiveAuthProvider,\n    pickNotDeprecated,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\nimport { RefineThemedLayoutV2SiderProps } from \"../types\";\n\nimport { ThemedTitleV2 as DefaultTitle } from \"@components\";\nimport { useThemedLayoutContext } from \"@hooks\";\n\nexport const ThemedSiderV2: React.FC<RefineThemedLayoutV2SiderProps> = ({\n    Title: TitleFromProps,\n    render,\n    meta,\n    activeItemDisabled = false,\n}) => {\n    const {\n        siderCollapsed,\n        setSiderCollapsed,\n        mobileSiderOpen,\n        setMobileSiderOpen,\n    } = useThemedLayoutContext();\n\n    const drawerWidth = () => {\n        if (siderCollapsed) return 56;\n        return 240;\n    };\n\n    const t = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n    const { hasDashboard } = useRefineContext();\n    const translate = useTranslate();\n\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n    const isExistAuthentication = useIsExistAuthentication();\n    const TitleFromContext = useTitle();\n    const authProvider = useActiveAuthProvider();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const [open, setOpen] = useState<{ [k: string]: any }>({});\n\n    React.useEffect(() => {\n        setOpen((previous) => {\n            const previousKeys: string[] = Object.keys(previous);\n            const previousOpenKeys = previousKeys.filter(\n                (key) => previous[key],\n            );\n\n            const uniqueKeys = new Set([\n                ...previousOpenKeys,\n                ...defaultOpenKeys,\n            ]);\n            const uniqueKeysRecord = Object.fromEntries(\n                Array.from(uniqueKeys.values()).map((key) => [key, true]),\n            );\n            return uniqueKeysRecord;\n        });\n    }, [defaultOpenKeys]);\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n    const handleClick = (key: string) => {\n        setOpen({ ...open, [key]: !open[key] });\n    };\n\n    const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n        return tree.map((item: ITreeMenu) => {\n            const {\n                icon,\n                label,\n                route,\n                name,\n                children,\n                parentName,\n                meta,\n                options,\n            } = item;\n            const isOpen = open[item.key || \"\"] || false;\n\n            const isSelected = item.key === selectedKey;\n            const isNested = !(\n                pickNotDeprecated(meta?.parent, options?.parent, parentName) ===\n                undefined\n            );\n\n            if (children.length > 0) {\n                return (\n                    <CanAccess\n                        key={item.key}\n                        resource={name.toLowerCase()}\n                        action=\"list\"\n                        params={{\n                            resource: item,\n                        }}\n                    >\n                        <div key={item.key}>\n                            <Tooltip\n                                title={label ?? name}\n                                placement=\"right\"\n                                disableHoverListener={!siderCollapsed}\n                                arrow\n                            >\n                                <ListItemButton\n                                    onClick={() => {\n                                        if (siderCollapsed) {\n                                            setSiderCollapsed(false);\n                                            if (!isOpen) {\n                                                handleClick(item.key || \"\");\n                                            }\n                                        } else {\n                                            handleClick(item.key || \"\");\n                                        }\n                                    }}\n                                    sx={{\n                                        pl: isNested ? 4 : 2,\n                                        justifyContent: \"center\",\n                                        marginTop: \"8px\",\n                                    }}\n                                >\n                                    <ListItemIcon\n                                        sx={{\n                                            justifyContent: \"center\",\n                                            minWidth: \"24px\",\n                                            transition: \"margin-right 0.3s\",\n                                            marginRight: siderCollapsed\n                                                ? \"0px\"\n                                                : \"12px\",\n                                            color: \"currentColor\",\n                                        }}\n                                    >\n                                        {icon ?? <ListOutlined />}\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={label}\n                                        primaryTypographyProps={{\n                                            noWrap: true,\n                                            fontSize: \"14px\",\n                                        }}\n                                    />\n                                    {isOpen ? (\n                                        <ExpandLess\n                                            sx={{\n                                                color: \"text.icon\",\n                                            }}\n                                        />\n                                    ) : (\n                                        <ExpandMore\n                                            sx={{\n                                                color: \"text.icon\",\n                                            }}\n                                        />\n                                    )}\n                                </ListItemButton>\n                            </Tooltip>\n                            {!siderCollapsed && (\n                                <Collapse\n                                    in={open[item.key || \"\"]}\n                                    timeout=\"auto\"\n                                    unmountOnExit\n                                >\n                                    <List component=\"div\" disablePadding>\n                                        {renderTreeView(children, selectedKey)}\n                                    </List>\n                                </Collapse>\n                            )}\n                        </div>\n                    </CanAccess>\n                );\n            }\n\n            const linkStyle: CSSProperties =\n                activeItemDisabled && isSelected\n                    ? { pointerEvents: \"none\" }\n                    : {};\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{ resource: item }}\n                >\n                    <Tooltip\n                        title={label ?? name}\n                        placement=\"right\"\n                        disableHoverListener={!siderCollapsed}\n                        arrow\n                    >\n                        <ListItemButton\n                            component={ActiveLink}\n                            to={route}\n                            selected={isSelected}\n                            style={linkStyle}\n                            onClick={() => {\n                                setMobileSiderOpen(false);\n                            }}\n                            sx={{\n                                pl: isNested ? 4 : 2,\n                                py: isNested ? 1.25 : 1,\n                                justifyContent: \"center\",\n                                color: isSelected\n                                    ? \"primary.main\"\n                                    : \"text.primary\",\n                            }}\n                        >\n                            <ListItemIcon\n                                sx={{\n                                    justifyContent: \"center\",\n                                    transition: \"margin-right 0.3s\",\n                                    marginRight: siderCollapsed\n                                        ? \"0px\"\n                                        : \"12px\",\n                                    minWidth: \"24px\",\n                                    color: \"currentColor\",\n                                }}\n                            >\n                                {icon ?? <ListOutlined />}\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={label}\n                                primaryTypographyProps={{\n                                    noWrap: true,\n                                    fontSize: \"14px\",\n                                }}\n                            />\n                        </ListItemButton>\n                    </Tooltip>\n                </CanAccess>\n            );\n        });\n    };\n\n    const dashboard = hasDashboard ? (\n        <CanAccess resource=\"dashboard\" action=\"list\">\n            <Tooltip\n                title={translate(\"dashboard.title\", \"Dashboard\")}\n                placement=\"right\"\n                disableHoverListener={!siderCollapsed}\n                arrow\n            >\n                <ListItemButton\n                    component={ActiveLink}\n                    to=\"/\"\n                    selected={selectedKey === \"/\"}\n                    onClick={() => {\n                        setMobileSiderOpen(false);\n                    }}\n                    sx={{\n                        pl: 2,\n                        py: 1,\n                        justifyContent: \"center\",\n                        color:\n                            selectedKey === \"/\"\n                                ? \"primary.main\"\n                                : \"text.primary\",\n                    }}\n                >\n                    <ListItemIcon\n                        sx={{\n                            justifyContent: \"center\",\n                            minWidth: \"24px\",\n                            transition: \"margin-right 0.3s\",\n                            marginRight: siderCollapsed ? \"0px\" : \"12px\",\n                            color: \"currentColor\",\n                            fontSize: \"14px\",\n                        }}\n                    >\n                        <Dashboard />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={translate(\"dashboard.title\", \"Dashboard\")}\n                        primaryTypographyProps={{\n                            noWrap: true,\n                            fontSize: \"14px\",\n                        }}\n                    />\n                </ListItemButton>\n            </Tooltip>\n        </CanAccess>\n    ) : null;\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                t(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Tooltip\n            title={t(\"buttons.logout\", \"Logout\")}\n            placement=\"right\"\n            disableHoverListener={!siderCollapsed}\n            arrow\n        >\n            <ListItemButton\n                key=\"logout\"\n                onClick={() => handleLogout()}\n                sx={{\n                    justifyContent: \"center\",\n                }}\n            >\n                <ListItemIcon\n                    sx={{\n                        justifyContent: \"center\",\n                        minWidth: \"24px\",\n                        transition: \"margin-right 0.3s\",\n                        marginRight: siderCollapsed ? \"0px\" : \"12px\",\n                        color: \"currentColor\",\n                    }}\n                >\n                    <Logout />\n                </ListItemIcon>\n                <ListItemText\n                    primary={t(\"buttons.logout\", \"Logout\")}\n                    primaryTypographyProps={{\n                        noWrap: true,\n                        fontSize: \"14px\",\n                    }}\n                />\n            </ListItemButton>\n        </Tooltip>\n    );\n\n    const items = renderTreeView(menuItems, selectedKey);\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                logout,\n                items,\n                collapsed: siderCollapsed,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    const drawer = (\n        <List\n            disablePadding\n            sx={{\n                flexGrow: 1,\n                paddingTop: \"16px\",\n            }}\n        >\n            {renderSider()}\n        </List>\n    );\n\n    return (\n        <>\n            <Box\n                sx={{\n                    width: { xs: drawerWidth() },\n                    display: {\n                        xs: \"none\",\n                        md: \"block\",\n                    },\n                    transition: \"width 0.3s ease\",\n                }}\n            />\n            <Box\n                component=\"nav\"\n                sx={{\n                    position: \"fixed\",\n                    zIndex: 1101,\n                    width: { sm: drawerWidth() },\n                    display: \"flex\",\n                }}\n            >\n                <Drawer\n                    variant=\"temporary\"\n                    elevation={2}\n                    open={mobileSiderOpen}\n                    onClose={() => setMobileSiderOpen(false)}\n                    ModalProps={{\n                        keepMounted: true, // Better open performance on mobile.\n                    }}\n                    sx={{\n                        display: {\n                            sm: \"block\",\n                            md: \"none\",\n                        },\n                    }}\n                >\n                    <Box\n                        sx={{\n                            width: drawerWidth(),\n                        }}\n                    >\n                        <Box\n                            sx={{\n                                height: 64,\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                paddingLeft: \"16px\",\n                                fontSize: \"14px\",\n                            }}\n                        >\n                            <RenderToTitle collapsed={false} />\n                        </Box>\n                        {drawer}\n                    </Box>\n                </Drawer>\n                <Drawer\n                    variant=\"permanent\"\n                    sx={{\n                        display: { xs: \"none\", md: \"block\" },\n                        \"& .MuiDrawer-paper\": {\n                            width: drawerWidth(),\n                            overflow: \"hidden\",\n                            transition:\n                                \"width 200ms cubic-bezier(0.4, 0, 0.6, 1) 0ms\",\n                        },\n                    }}\n                    open\n                >\n                    <Paper\n                        elevation={0}\n                        sx={{\n                            fontSize: \"14px\",\n                            width: \"100%\",\n                            height: 64,\n                            display: \"flex\",\n                            flexShrink: 0,\n                            alignItems: \"center\",\n                            justifyContent: siderCollapsed\n                                ? \"center\"\n                                : \"space-between\",\n                            paddingLeft: siderCollapsed ? 0 : \"16px\",\n                            paddingRight: siderCollapsed ? 0 : \"8px\",\n                            variant: \"outlined\",\n                            borderRadius: 0,\n                            borderBottom: (theme) =>\n                                `1px solid ${theme.palette.action.focus}`,\n                        }}\n                    >\n                        <RenderToTitle collapsed={siderCollapsed} />\n                        {!siderCollapsed && (\n                            <IconButton\n                                size=\"small\"\n                                onClick={() => setSiderCollapsed(true)}\n                            >\n                                {<ChevronLeft />}\n                            </IconButton>\n                        )}\n                    </Paper>\n                    <Box\n                        sx={{\n                            flexGrow: 1,\n                            overflowX: \"hidden\",\n                            overflowY: \"auto\",\n                        }}\n                    >\n                        {drawer}\n                    </Box>\n                </Drawer>\n            </Box>\n        </>\n    );\n};\n","import {\n    useSelect as useSelectCore,\n    HttpError,\n    UseSelectProps,\n    UseSelectReturnType,\n    BaseRecord,\n} from \"@refinedev/core\";\n\nimport type { AutocompleteProps } from \"@mui/material/Autocomplete\";\n\nimport isEqual from \"lodash/isEqual\";\nimport unionWith from \"lodash/unionWith\";\n\nexport type UseAutocompleteProps<TQueryFnData, TError, TData> = Pick<\n    UseSelectProps<TQueryFnData, TError, TData>,\n    \"resource\"\n> &\n    Omit<\n        UseSelectProps<TQueryFnData, TError, TData>,\n        \"optionLabel\" | \"optionValue\"\n    >;\n\ntype AutocompletePropsType<TQueryFnData> = Required<\n    Pick<\n        AutocompleteProps<TQueryFnData, boolean, boolean, boolean>,\n        \"options\" | \"loading\" | \"onInputChange\" | \"filterOptions\"\n    >\n>;\n\nexport type UseAutocompleteReturnType<TData extends BaseRecord> = Omit<\n    UseSelectReturnType<TData>,\n    \"options\"\n> & {\n    autocompleteProps: AutocompletePropsType<TData>;\n};\n\n/**\n * `useAutocomplete` hook is used to fetch data from the dataProvider and return the options for the select box.\n *\n * It uses `getList` method as query function from the dataProvider that is\n * passed to {@link https://refine.dev/docs/api-reference/core/components/refine-config `<Refine>`}.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/hooks/useAutocomplete/} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useAutocomplete = <\n    TQueryFnData extends BaseRecord = any,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>(\n    props: UseAutocompleteProps<TQueryFnData, TError, TData>,\n): UseAutocompleteReturnType<TData> => {\n    const { queryResult, defaultValueQueryResult, onSearch, overtime } =\n        useSelectCore<TQueryFnData, TError, TData>(props);\n\n    return {\n        autocompleteProps: {\n            options: unionWith(\n                queryResult.data?.data || [],\n                defaultValueQueryResult.data?.data || [],\n                isEqual,\n            ),\n            loading:\n                queryResult.isFetching || defaultValueQueryResult.isFetching,\n            onInputChange: (event, value) => {\n                if (event?.type === \"change\") {\n                    onSearch(value);\n                } else if (event?.type === \"click\") {\n                    onSearch(\"\");\n                }\n            },\n            filterOptions: (x) => x,\n        },\n        onSearch,\n        queryResult,\n        defaultValueQueryResult,\n        overtime,\n    };\n};\n","import {\n    BaseRecord,\n    CrudFilters,\n    HttpError,\n    Pagination,\n    pickNotDeprecated,\n    Prettify,\n    useLiveMode,\n    useTable as useTableCore,\n    useTableProps as useTablePropsCore,\n    useTableReturnType as useTableReturnTypeCore,\n    useLoadingOvertime,\n} from \"@refinedev/core\";\nimport { useState } from \"react\";\n\nimport type {\n    DataGridProps,\n    GridFilterModel,\n    GridSortModel,\n} from \"@mui/x-data-grid\";\n\nimport { darken, useTheme } from \"@mui/material/styles\";\n\nimport differenceWith from \"lodash/differenceWith\";\nimport isEqual from \"lodash/isEqual\";\n\nimport {\n    transformCrudFiltersToFilterModel,\n    transformCrudSortingToSortModel,\n    transformFilterModelToCrudFilters,\n    transformSortModelToCrudSorting,\n} from \"@definitions\";\n\ntype DataGridPropsType = Required<\n    Pick<\n        DataGridProps,\n        | \"rows\"\n        | \"loading\"\n        | \"rowCount\"\n        | \"sortingMode\"\n        | \"sortModel\"\n        | \"onSortModelChange\"\n        | \"filterMode\"\n        | \"onFilterModelChange\"\n        | \"sx\"\n        | \"disableRowSelectionOnClick\"\n        | \"onStateChange\"\n        | \"paginationMode\"\n    >\n> &\n    Pick<\n        DataGridProps,\n        \"paginationModel\" | \"onPaginationModelChange\" | \"filterModel\"\n    >;\n\nexport type UseDataGridProps<TQueryFnData, TError, TSearchVariables, TData> =\n    Omit<\n        useTablePropsCore<TQueryFnData, TError, TData>,\n        \"pagination\" | \"filters\"\n    > & {\n        onSearch?: (\n            data: TSearchVariables,\n        ) => CrudFilters | Promise<CrudFilters>;\n        pagination?: Prettify<\n            Omit<Pagination, \"pageSize\"> & {\n                /**\n                 * Initial number of items per page\n                 * @default 25\n                 */\n                pageSize?: number;\n            }\n        >;\n        filters?: Prettify<\n            Omit<\n                NonNullable<\n                    useTablePropsCore<TQueryFnData, TError, TData>[\"filters\"]\n                >,\n                \"defaultBehavior\"\n            > & {\n                /**\n                 * Default behavior of the `setFilters` function\n                 * @default \"replace\"\n                 */\n                defaultBehavior?: \"replace\" | \"merge\";\n            }\n        >;\n    };\n\nexport type UseDataGridReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n> = useTableReturnTypeCore<TData, TError> & {\n    dataGridProps: DataGridPropsType;\n    search: (value: TSearchVariables) => Promise<void>;\n};\n\n/**\n * By using useDataGrid, you are able to get properties that are compatible with\n * Material UI {@link https://mui.com/x/react-data-grid/ `<DataGrid>`} component.\n * All features such as sorting, filtering and pagination comes as out of box.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/hooks/useDataGrid/} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TSearchVariables - Values for search params\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport function useDataGrid<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    onSearch: onSearchProp,\n    initialCurrent,\n    initialPageSize = 25,\n    pagination,\n    hasPagination = true,\n    initialSorter,\n    permanentSorter,\n    defaultSetFilterBehavior = \"replace\",\n    initialFilter,\n    permanentFilter,\n    filters: filtersFromProp,\n    sorters: sortersFromProp,\n    syncWithLocation: syncWithLocationProp,\n    resource: resourceFromProp,\n    successNotification,\n    errorNotification,\n    queryOptions,\n    liveMode: liveModeFromProp,\n    onLiveEvent,\n    liveParams,\n    meta,\n    metaData,\n    dataProviderName,\n    overtimeOptions,\n}: UseDataGridProps<\n    TQueryFnData,\n    TError,\n    TSearchVariables,\n    TData\n> = {}): UseDataGridReturnType<TData, TError, TSearchVariables> {\n    const theme = useTheme();\n    const liveMode = useLiveMode(liveModeFromProp);\n\n    const [columnsTypes, setColumnsType] = useState<Record<string, string>>();\n\n    const {\n        tableQueryResult,\n        current,\n        setCurrent,\n        pageSize,\n        setPageSize,\n        filters,\n        setFilters,\n        sorters,\n        setSorters,\n        sorter,\n        setSorter,\n        pageCount,\n        createLinkForSyncWithLocation,\n        overtime,\n    } = useTableCore<TQueryFnData, TError, TData>({\n        permanentSorter,\n        permanentFilter,\n        initialCurrent,\n        initialPageSize,\n        pagination,\n        hasPagination,\n        initialSorter,\n        initialFilter,\n        filters: filtersFromProp,\n        sorters: sortersFromProp,\n        syncWithLocation: syncWithLocationProp,\n        defaultSetFilterBehavior,\n        resource: resourceFromProp,\n        successNotification,\n        errorNotification,\n        queryOptions,\n        liveMode: liveModeFromProp,\n        onLiveEvent,\n        liveParams,\n        meta: pickNotDeprecated(meta, metaData),\n        metaData: pickNotDeprecated(meta, metaData),\n        dataProviderName,\n        overtimeOptions,\n    });\n\n    const [muiCrudFilters, setMuiCrudFilters] = useState<CrudFilters>(filters);\n\n    const { data, isFetched, isLoading } = tableQueryResult;\n\n    const isServerSideFilteringEnabled =\n        (filtersFromProp?.mode || \"server\") === \"server\";\n    const isServerSideSortingEnabled =\n        (sortersFromProp?.mode || \"server\") === \"server\";\n    const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n    const isPaginationEnabled =\n        (pagination?.mode ?? hasPaginationString) !== \"off\";\n\n    const preferredPermanentSorters =\n        pickNotDeprecated(sortersFromProp?.permanent, permanentSorter) ?? [];\n    const preferredPermanentFilters =\n        pickNotDeprecated(filtersFromProp?.permanent, permanentFilter) ?? [];\n\n    const handlePageChange = (page: number) => {\n        if (isPaginationEnabled) {\n            setCurrent(page + 1);\n        }\n    };\n    const handlePageSizeChange = (pageSize: number) => {\n        if (isPaginationEnabled) {\n            setPageSize(pageSize);\n        }\n    };\n\n    const handleSortModelChange = (sortModel: GridSortModel) => {\n        const crudSorting = transformSortModelToCrudSorting(sortModel);\n        setSorters(crudSorting);\n    };\n\n    const handleFilterModelChange = (filterModel: GridFilterModel) => {\n        const crudFilters = transformFilterModelToCrudFilters(filterModel);\n        setMuiCrudFilters(crudFilters);\n        setFilters(crudFilters.filter((f) => f.value !== \"\"));\n        if (isPaginationEnabled) {\n            setCurrent(1);\n        }\n    };\n\n    const search = async (value: TSearchVariables) => {\n        if (onSearchProp) {\n            const searchFilters = await onSearchProp(value);\n            setMuiCrudFilters(searchFilters);\n            setFilters(searchFilters.filter((f) => f.value !== \"\"));\n            if (isPaginationEnabled) {\n                setCurrent(1);\n            }\n        }\n    };\n\n    const dataGridPaginationValues = (): Pick<\n        DataGridProps,\n        \"paginationModel\" | \"onPaginationModelChange\"\n    > &\n        Required<Pick<DataGridProps, \"paginationMode\">> => {\n        if (isPaginationEnabled) {\n            return {\n                paginationMode: \"server\" as const,\n                paginationModel: {\n                    page: current - 1,\n                    pageSize,\n                },\n                onPaginationModelChange: (model) => {\n                    handlePageChange(model.page);\n                    handlePageSizeChange(model.pageSize);\n                },\n            };\n        }\n\n        return {\n            paginationMode: \"client\" as const,\n        };\n    };\n\n    return {\n        tableQueryResult,\n        dataGridProps: {\n            disableRowSelectionOnClick: true,\n            rows: data?.data || [],\n            loading: liveMode === \"auto\" ? isLoading : !isFetched,\n            rowCount: data?.total || 0,\n            ...dataGridPaginationValues(),\n            sortingMode: isServerSideSortingEnabled ? \"server\" : \"client\",\n            sortModel: transformCrudSortingToSortModel(\n                differenceWith(sorters, preferredPermanentSorters, isEqual),\n            ),\n            onSortModelChange: handleSortModelChange,\n            filterMode: isServerSideFilteringEnabled ? \"server\" : \"client\",\n            filterModel: transformCrudFiltersToFilterModel(\n                differenceWith(\n                    muiCrudFilters,\n                    preferredPermanentFilters,\n                    isEqual,\n                ),\n                columnsTypes,\n            ),\n            onFilterModelChange: handleFilterModelChange,\n            onStateChange: (state) => {\n                const newColumnsTypes = Object.fromEntries(\n                    Object.entries(state.columns.lookup).map(([key, value]) => {\n                        return [key, (value as any).type];\n                    }),\n                );\n                const isStateChanged = !isEqual(newColumnsTypes, columnsTypes);\n\n                if (isStateChanged) {\n                    setColumnsType(newColumnsTypes);\n                }\n            },\n            sx: {\n                border: \"none\",\n                \"& .MuiDataGrid-columnHeaders\": {\n                    background: darken(theme.palette.background.paper, 0.05),\n                    borderBottom: `1px solid ${darken(\n                        theme.palette.background.paper,\n                        0.1,\n                    )}`,\n                },\n                \"& .MuiDataGrid-cell\": {\n                    borderBottom: `1px solid ${darken(\n                        theme.palette.background.paper,\n                        0.05,\n                    )}`,\n                },\n            },\n        },\n        current,\n        setCurrent,\n        pageSize,\n        setPageSize,\n        pageCount,\n        sorters,\n        setSorters,\n        sorter,\n        setSorter,\n        filters,\n        setFilters,\n        search,\n        createLinkForSyncWithLocation,\n        overtime,\n    };\n}\n","import type {\n    GridFilterItem,\n    GridFilterModel,\n    GridSortModel,\n} from \"@mui/x-data-grid\";\nimport { GridLogicOperator } from \"@mui/x-data-grid\";\n\nimport {\n    CrudFilters,\n    CrudOperators,\n    CrudSorting,\n    LogicalFilter,\n} from \"@refinedev/core\";\n\nexport const transformSortModelToCrudSorting = (\n    sortModel: GridSortModel,\n): CrudSorting => {\n    const sorter = sortModel.map(({ field, sort }) => ({\n        field,\n        order: sort || \"asc\",\n    }));\n    return sorter;\n};\n\nexport const transformCrudSortingToSortModel = (\n    crudSorting: CrudSorting,\n): GridSortModel => {\n    const sortModel = crudSorting.map(({ field, order }) => ({\n        field,\n        sort: order,\n    }));\n    return sortModel;\n};\n\nexport const transformMuiOperatorToCrudOperator = (\n    operatorValue?: string,\n): Exclude<CrudOperators, \"or\"> => {\n    if (!operatorValue) {\n        return \"eq\";\n    }\n\n    switch (operatorValue) {\n        case \"equals\":\n        case \"is\":\n        case \"=\":\n            return \"eq\";\n        case \"!=\":\n        case \"not\":\n            return \"ne\";\n        case \">\":\n        case \"after\":\n            return \"gt\";\n        case \">=\":\n        case \"onOrAfter\":\n            return \"gte\";\n        case \"<\":\n        case \"before\":\n            return \"lt\";\n        case \"<=\":\n        case \"onOrBefore\":\n            return \"lte\";\n        case \"isEmpty\":\n            return \"null\";\n        case \"isNotEmpty\":\n            return \"nnull\";\n        default:\n            return operatorValue as Exclude<CrudOperators, \"or\">;\n    }\n};\n\nexport const transformFilterModelToCrudFilters = ({\n    items,\n    logicOperator,\n}: GridFilterModel): CrudFilters => {\n    const filters = items.map(({ field, value, operator }) => ({\n        field: field,\n        value: value ?? \"\",\n        operator: transformMuiOperatorToCrudOperator(operator),\n    }));\n\n    if (logicOperator === GridLogicOperator.Or) {\n        return [{ operator: \"or\", value: filters }];\n    }\n    return filters;\n};\n\nexport const transformCrudOperatorToMuiOperator = (\n    operator: CrudOperators,\n    columnType?: string,\n): string => {\n    switch (columnType) {\n        case \"number\":\n            switch (operator) {\n                case \"eq\":\n                    return \"=\";\n                case \"ne\":\n                    return \"!=\";\n                case \"gt\":\n                    return \">\";\n                case \"gte\":\n                    return \">=\";\n                case \"lt\":\n                    return \"<\";\n                case \"lte\":\n                    return \"<=\";\n                case \"null\":\n                    return \"isEmpty\";\n                case \"nnull\":\n                    return \"isNotEmpty\";\n                default:\n                    return operator;\n            }\n        case \"singleSelect\":\n        case \"boolean\":\n            switch (operator) {\n                case \"eq\":\n                    return \"is\";\n                default:\n                    return operator;\n            }\n        case undefined:\n        case \"string\":\n            switch (operator) {\n                case \"eq\":\n                    return \"equals\";\n                case \"contains\":\n                    return \"contains\";\n                case \"null\":\n                    return \"isEmpty\";\n                case \"nnull\":\n                    return \"isNotEmpty\";\n                default:\n                    return operator;\n            }\n        case \"date\":\n        case \"dateTime\":\n            switch (operator) {\n                case \"eq\":\n                    return \"is\";\n                case \"ne\":\n                    return \"not\";\n                case \"gt\":\n                    return \"after\";\n                case \"gte\":\n                    return \"onOrAfter\";\n                case \"lt\":\n                    return \"before\";\n                case \"lte\":\n                    return \"onOrBefore\";\n                case \"null\":\n                    return \"isEmpty\";\n                case \"nnull\":\n                    return \"isNotEmpty\";\n                default:\n                    return operator;\n            }\n        default:\n            return operator;\n    }\n};\n\nexport const transformCrudFiltersToFilterModel = (\n    crudFilters: CrudFilters,\n    columnsType?: Record<string, string>,\n): GridFilterModel | undefined => {\n    const gridFilterItems: GridFilterItem[] = [];\n\n    const isExistOrFilter = crudFilters.some(\n        (filter) => filter.operator === \"or\",\n    );\n\n    if (columnsType) {\n        if (isExistOrFilter) {\n            const orLogicalFilters = crudFilters.find(\n                (filter) => filter.operator === \"or\",\n            )?.value as LogicalFilter[];\n\n            orLogicalFilters.map(({ field, value, operator }) => {\n                const columnType = columnsType[field];\n\n                gridFilterItems.push({\n                    field: field,\n                    operator: transformCrudOperatorToMuiOperator(\n                        operator,\n                        columnType,\n                    ),\n                    value: value === \"\" ? undefined : value,\n                    id: field + operator,\n                });\n            });\n        } else {\n            (crudFilters as LogicalFilter[]).map(\n                ({ field, value, operator }) => {\n                    const columnType = columnsType[field];\n\n                    gridFilterItems.push({\n                        field: field,\n                        operator: transformCrudOperatorToMuiOperator(\n                            operator,\n                            columnType,\n                        ),\n                        value: value === \"\" ? undefined : value,\n                        id: field + operator,\n                    });\n                },\n            );\n        }\n    }\n\n    return {\n        items: gridFilterItems,\n        // If there is \"or\" filter, default link operator is \"or\"\n        logicOperator: isExistOrFilter\n            ? GridLogicOperator.Or\n            : GridLogicOperator.And,\n    };\n};\n","import { useContext } from \"react\";\n\nimport { ThemedLayoutContext } from \"../../contexts/themedLayoutContext\";\n\nexport type UseSiderVisibleType = {\n    siderVisible: boolean;\n    drawerSiderVisible: boolean;\n    setSiderVisible: (visible: boolean) => void;\n    setDrawerSiderVisible: (visible: boolean) => void;\n};\n\n/**\n * @deprecated Please use `useThemedLayoutContext` instead.\n */\nexport const useSiderVisible = (): UseSiderVisibleType => {\n    const {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    } = useContext(ThemedLayoutContext);\n\n    return {\n        siderVisible: mobileSiderOpen,\n        setSiderVisible: setMobileSiderOpen,\n        drawerSiderVisible: !siderCollapsed,\n        setDrawerSiderVisible: (visible) => setSiderCollapsed(!visible),\n    };\n};\n","import { useContext } from \"react\";\n\nimport { ThemedLayoutContext } from \"../../contexts\";\nimport { IThemedLayoutContext } from \"../../contexts/themedLayoutContext/IThemedLayoutContext\";\n\nexport type UseThemedLayoutContextType = IThemedLayoutContext;\n\nexport const useThemedLayoutContext = (): UseThemedLayoutContextType => {\n    const {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    } = useContext(ThemedLayoutContext);\n\n    return {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    };\n};\n","import React from \"react\";\nimport {\n    useGetIdentity,\n    useActiveAuthProvider,\n    pickNotDeprecated,\n} from \"@refinedev/core\";\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Stack from \"@mui/material/Stack\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Avatar from \"@mui/material/Avatar\";\n\nimport { RefineThemedLayoutV2HeaderProps } from \"../types\";\n\nimport { HamburgerMenu } from \"../hamburgerMenu\";\n\nexport const ThemedHeaderV2: React.FC<RefineThemedLayoutV2HeaderProps> = ({\n    isSticky,\n    sticky,\n}) => {\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const prefferedSticky = pickNotDeprecated(sticky, isSticky) ?? true;\n\n    return (\n        <AppBar position={prefferedSticky ? \"sticky\" : \"relative\"}>\n            <Toolbar>\n                <HamburgerMenu />\n                <Stack\n                    direction=\"row\"\n                    width=\"100%\"\n                    justifyContent=\"flex-end\"\n                    alignItems=\"center\"\n                >\n                    <Stack\n                        direction=\"row\"\n                        gap=\"16px\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n                    >\n                        {user?.name && (\n                            <Typography\n                                variant=\"subtitle2\"\n                                data-testid=\"header-user-name\"\n                            >\n                                {user?.name}\n                            </Typography>\n                        )}\n                        {user?.avatar && (\n                            <Avatar src={user?.avatar} alt={user?.name} />\n                        )}\n                    </Stack>\n                </Stack>\n            </Toolbar>\n        </AppBar>\n    );\n};\n","import React from \"react\";\n\nimport IconButton from \"@mui/material/IconButton\";\nimport Menu from \"@mui/icons-material/Menu\";\n\nimport type { IconButtonProps } from \"@mui/material/IconButton\";\n\nimport { useThemedLayoutContext } from \"@hooks\";\n\nconst HamburgerIcon = (props: IconButtonProps) => (\n    <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        edge=\"start\"\n        {...props}\n    >\n        <Menu />\n    </IconButton>\n);\n\nexport const HamburgerMenu: React.FC = () => {\n    const {\n        siderCollapsed,\n        setSiderCollapsed,\n        mobileSiderOpen,\n        setMobileSiderOpen,\n    } = useThemedLayoutContext();\n\n    return (\n        <>\n            <HamburgerIcon\n                onClick={() => setSiderCollapsed(!siderCollapsed)}\n                sx={{\n                    mr: 2,\n                    display: { xs: \"none\", md: \"flex\" },\n                    ...(!siderCollapsed && { display: \"none\" }),\n                }}\n            />\n            <HamburgerIcon\n                onClick={() => setMobileSiderOpen(!mobileSiderOpen)}\n                sx={{\n                    mr: 2,\n                    display: { xs: \"flex\", md: \"none\" },\n                    ...(mobileSiderOpen && { display: \"none\" }),\n                }}\n            />\n        </>\n    );\n};\n","import React from \"react\";\nimport { useRouterContext, useLink, useRouterType } from \"@refinedev/core\";\n\nimport MuiLink from \"@mui/material/Link\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { RefineLayoutThemedTitleProps } from \"../types\";\n\nconst defaultText = \"refine Project\";\n\nconst defaultIcon = (\n    <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-testid=\"refine-logo\"\n    >\n        <path\n            d=\"M12 9C13.6569 9 15 7.65685 15 6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6C9 7.65685 10.3431 9 12 9Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM8 6C8 3.79086 9.79086 2 12 2C14.2091 2 16 3.79086 16 6V18C16 20.2091 14.2091 22 12 22C9.79086 22 8 20.2091 8 18V6Z\"\n            fill=\"currentColor\"\n        />\n    </svg>\n);\n\nexport const ThemedTitleV2: React.FC<RefineLayoutThemedTitleProps> = ({\n    collapsed,\n    wrapperStyles,\n    icon = defaultIcon,\n    text = defaultText,\n}) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <MuiLink\n            to=\"/\"\n            component={ActiveLink}\n            underline=\"none\"\n            sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: \"12px\",\n                ...wrapperStyles,\n            }}\n        >\n            <SvgIcon height=\"24px\" width=\"24px\" color=\"primary\">\n                {icon}\n            </SvgIcon>\n            {!collapsed && (\n                <Typography\n                    variant=\"h6\"\n                    fontWeight={700}\n                    color=\"text.primary\"\n                    fontSize=\"inherit\"\n                    textOverflow=\"ellipsis\"\n                    overflow=\"hidden\"\n                >\n                    {text}\n                </Typography>\n            )}\n        </MuiLink>\n    );\n};\n","import * as React from \"react\";\nimport { LoginPageProps, useActiveAuthProvider } from \"@refinedev/core\";\nimport { useForm } from \"@refinedev/react-hook-form\";\n\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\n\nimport { BaseRecord, HttpError, useLogin, useTranslate } from \"@refinedev/core\";\n\ntype ILoginForm = {\n    username: string;\n    password: string;\n    remember?: boolean;\n};\n\n/**\n * @deprecated LoginPage is deprecated. Use AuthPage instead. @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page} for more details.\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#loginpage} for more details.\n */\nexport const LoginPage: React.FC<LoginPageProps> = () => {\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, ILoginForm>();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login, isLoading } = useLogin<ILoginForm>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const translate = useTranslate();\n\n    return (\n        <>\n            <Box\n                component=\"div\"\n                sx={{\n                    background: `radial-gradient(50% 50% at 50% 50%, #63386A 0%, #310438 100%)`,\n                    backgroundSize: \"cover\",\n                }}\n            >\n                <Container\n                    component=\"main\"\n                    maxWidth=\"xs\"\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100vh\",\n                    }}\n                >\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <div>\n                            <img\n                                src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                                alt=\"Refine Logo\"\n                                style={{ maxWidth: 200 }}\n                            />\n                        </div>\n                        <Box mt={4}>\n                            <Card>\n                                <CardContent sx={{ paddingX: \"32px\" }}>\n                                    <Typography\n                                        component=\"h1\"\n                                        variant=\"h5\"\n                                        align=\"center\"\n                                        sx={{\n                                            fontWeight: \"700\",\n                                            margin: \"12px 0\",\n                                        }}\n                                    >\n                                        {translate(\n                                            \"pages.login.title\",\n                                            \"Sign in your account\",\n                                        )}\n                                    </Typography>\n                                    <Box\n                                        component=\"form\"\n                                        onSubmit={handleSubmit((data) => {\n                                            login(data);\n                                        })}\n                                        gap=\"16px\"\n                                    >\n                                        <TextField\n                                            {...register(\"username\", {\n                                                required: true,\n                                            })}\n                                            id=\"username\"\n                                            margin=\"normal\"\n                                            size=\"small\"\n                                            fullWidth\n                                            label={translate(\n                                                \"pages.login.username\",\n                                                \"Username\",\n                                            )}\n                                            name=\"username\"\n                                            autoComplete=\"username\"\n                                            autoFocus\n                                        />\n                                        <TextField\n                                            {...register(\"password\", {\n                                                required: true,\n                                            })}\n                                            id=\"password\"\n                                            size=\"small\"\n                                            margin=\"normal\"\n                                            fullWidth\n                                            name=\"password\"\n                                            label={translate(\n                                                \"pages.login.password\",\n                                                \"Password\",\n                                            )}\n                                            helperText={\n                                                errors?.password?.message\n                                            }\n                                            type=\"password\"\n                                            placeholder=\"●●●●●●●●\"\n                                            autoComplete=\"current-password\"\n                                        />\n                                        <Box\n                                            component=\"div\"\n                                            sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"space-between\",\n                                                alignItems: \"center\",\n                                            }}\n                                        >\n                                            <FormControlLabel\n                                                sx={{\n                                                    span: {\n                                                        fontSize: \"12px\",\n                                                        color: \"text.secondary\",\n                                                    },\n                                                }}\n                                                color=\"secondary\"\n                                                control={\n                                                    <Checkbox\n                                                        size=\"small\"\n                                                        id=\"remember\"\n                                                        {...register(\n                                                            \"remember\",\n                                                        )}\n                                                    />\n                                                }\n                                                label={translate(\n                                                    \"pages.login.remember\",\n                                                    \"Remember me\",\n                                                )}\n                                            />\n                                            <Link\n                                                href=\"#\"\n                                                sx={{\n                                                    fontSize: \"12px\",\n                                                    textDecoration: \"none\",\n                                                }}\n                                            >\n                                                <Typography\n                                                    sx={{\n                                                        fontSize: \"12px\",\n                                                    }}\n                                                >\n                                                    {translate(\n                                                        \"pages.login.forgotPassword\",\n                                                        \"Forgot password?\",\n                                                    )}\n                                                </Typography>\n                                            </Link>\n                                        </Box>\n                                        <Button\n                                            type=\"submit\"\n                                            fullWidth\n                                            variant=\"contained\"\n                                            sx={{\n                                                my: \"8px\",\n                                                color: \"white\",\n                                            }}\n                                            disabled={isLoading}\n                                        >\n                                            {translate(\n                                                \"pages.login.signin\",\n                                                \"Sign in\",\n                                            )}\n                                        </Button>\n                                        <Box style={{ marginTop: 8 }}>\n                                            <Typography variant=\"subtitle2\">\n                                                {translate(\n                                                    \"pages.login.noAccount\",\n                                                    \"Don’t have an account?\",\n                                                )}{\" \"}\n                                                <Link\n                                                    underline=\"none\"\n                                                    href=\"#\"\n                                                    style={{\n                                                        fontWeight: \"bold\",\n                                                    }}\n                                                >\n                                                    {translate(\n                                                        \"pages.login.signup\",\n                                                        \"Sign up\",\n                                                    )}\n                                                </Link>\n                                            </Typography>\n                                        </Box>\n                                    </Box>\n                                </CardContent>\n                            </Card>\n                        </Box>\n                    </Box>\n                </Container>\n            </Box>\n        </>\n    );\n};\n","import * as React from \"react\";\nimport { RefineReadyPageProps } from \"@refinedev/ui-types\";\n\nimport Stack from \"@mui/material/Stack\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Link from \"@mui/material/Link\";\n\n/**\n * @deprecated `ReadyPage` is deprecated and will be removed in the next major release.\n */\nexport const ReadyPage: React.FC<RefineReadyPageProps> = () => {\n    const renderCode = (text: string) => (\n        <Typography\n            sx={{\n                backgroundColor: (theme) =>\n                    theme.palette.secondary.contrastText,\n                color: (theme) => theme.palette.secondary.main,\n                display: \"inline-block\",\n                fontFamily: \"monospace\",\n            }}\n        >\n            {text}\n        </Typography>\n    );\n    return (\n        <>\n            <Grid\n                container\n                sx={{\n                    backgroundColor: (theme) => theme.palette.secondary.main,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    height: \"100vh\",\n                    backgroundImage:\n                        \"url('https://refine.ams3.cdn.digitaloceanspaces.com/login-background/background.png')\",\n                    backgroundSize: \"cover\",\n                }}\n                p={3}\n            >\n                <Grid\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    flex={1}\n                    alignItems=\"center\"\n                    color={(theme) => theme.palette.primary.contrastText}\n                >\n                    <Typography display=\"flex\" justifyContent=\"center\">\n                        <img\n                            style={{ marginBottom: \"48px\" }}\n                            src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                            alt=\"Refine Logo\"\n                        />\n                    </Typography>\n                    <Typography\n                        variant=\"h2\"\n                        fontWeight=\"bold\"\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                    >\n                        Welcome on board\n                    </Typography>\n                    <Typography variant=\"h5\" mt={2}>\n                        Your configuration is completed.\n                    </Typography>\n                    <Typography variant=\"h6\" mt={2}>\n                        Now you can get started by adding your resources to the{\" \"}\n                        {renderCode(`resources`)} property of{\" \"}\n                        {renderCode(`Refine`)}\n                    </Typography>\n                    <Grid\n                        item\n                        sm={12}\n                        mt={12}\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                    >\n                        <Stack\n                            spacing={2}\n                            direction={{ xs: \"column\", sm: \"row\" }}\n                        >\n                            <Link\n                                href=\"https://refine.dev\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                style={{\n                                    textDecoration: \"none\",\n                                }}\n                            >\n                                <Button variant=\"outlined\" fullWidth>\n                                    Documentation\n                                </Button>\n                            </Link>\n                            <Link\n                                href=\"https://refine.dev/examples\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                style={{\n                                    textDecoration: \"none\",\n                                }}\n                            >\n                                <Button variant=\"outlined\" fullWidth>\n                                    Examples\n                                </Button>\n                            </Link>\n                            <Link\n                                href=\"https://discord.gg/refine\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                style={{\n                                    textDecoration: \"none\",\n                                }}\n                            >\n                                <Button variant=\"outlined\" fullWidth>\n                                    Community\n                                </Button>\n                            </Link>\n                        </Stack>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n","import React from \"react\";\nimport { WelcomePage as WelcomePageFromCore } from \"@refinedev/core\";\n\n/**\n * It is a page that welcomes you after the configuration is completed.\n * @deprecated `WelcomePage` is deprecated. Use `WelcomePage` from `@refinedev/core` instead.\n */\nexport const WelcomePage: React.FC = () => {\n    return <WelcomePageFromCore />;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useGo, useResource, useRouterType } from \"@refinedev/core\";\nimport { RefineErrorPageProps } from \"@refinedev/ui-types\";\nimport { useNavigation, useTranslate } from \"@refinedev/core\";\n\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\n\nimport Info from \"@mui/icons-material/Info\";\n\nexport const ErrorComponent: React.FC<RefineErrorPageProps> = () => {\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const { push } = useNavigation();\n    const go = useGo();\n    const routerType = useRouterType();\n\n    const { resource, action } = useResource();\n\n    const translate = useTranslate();\n\n    useEffect(() => {\n        if (resource && action) {\n            setErrorMessage(\n                translate(\n                    \"pages.error.info\",\n                    {\n                        action,\n                        resource: resource?.name,\n                    },\n                    `You may have forgotten to add the \"${action}\" component to \"${resource?.name}\" resource.`,\n                ),\n            );\n        }\n    }, [action, resource]);\n\n    return (\n        <Grid\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            mt={20}\n        >\n            <Grid\n                container\n                direction=\"column\"\n                display=\"flex\"\n                alignItems=\"center\"\n            >\n                <Typography variant=\"h1\">404</Typography>\n                <Stack direction=\"row\" spacing=\"2\">\n                    <Typography>\n                        {translate(\n                            \"pages.error.404\",\n                            \"Sorry, the page you visited does not exist.\",\n                        )}\n                    </Typography>\n\n                    {errorMessage && (\n                        <Tooltip title={errorMessage}>\n                            <Info data-testid=\"error-component-tooltip\" />\n                        </Tooltip>\n                    )}\n                </Stack>\n                <Button\n                    onClick={() => {\n                        if (routerType === \"legacy\") {\n                            push(\"/\");\n                        } else {\n                            go({ to: \"/\" });\n                        }\n                    }}\n                >\n                    {translate(\"pages.error.backHome\", \"Back Home\")}\n                </Button>\n            </Grid>\n        </Grid>\n    );\n};\n","import React from \"react\";\nimport type { BoxProps } from \"@mui/material/Box\";\nimport type { CardProps } from \"@mui/material/Card\";\n\nimport { AuthPageProps, RegisterFormTypes } from \"@refinedev/core\";\n\nimport { UseFormProps } from \"@refinedev/react-hook-form\";\n\nimport {\n    LoginPage,\n    RegisterPage,\n    ForgotPasswordPage,\n    UpdatePasswordPage,\n} from \"./components\";\n\nexport interface FormPropsType extends UseFormProps {\n    onSubmit?: (values: RegisterFormTypes) => void;\n}\n\nexport type AuthProps = AuthPageProps<BoxProps, CardProps, FormPropsType>;\n\n/**\n * **refine** has a default auth page form served on the `/login` route when the `authProvider` configuration is provided.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/} for more details.\n */\nexport const AuthPage: React.FC<AuthProps> = (props) => {\n    const { type } = props;\n    const renderView = () => {\n        switch (type) {\n            case \"register\":\n                return <RegisterPage {...props} />;\n            case \"forgotPassword\":\n                return <ForgotPasswordPage {...props} />;\n            case \"updatePassword\":\n                return <UpdatePasswordPage {...props} />;\n            default:\n                return <LoginPage {...props} />;\n        }\n    };\n\n    return <>{renderView()}</>;\n};\n","import * as React from \"react\";\nimport {\n    LoginPageProps,\n    LoginFormTypes,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport { useForm } from \"@refinedev/react-hook-form\";\nimport { FormProvider } from \"react-hook-form\";\n\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Divider from \"@mui/material/Divider\";\nimport MuiLink from \"@mui/material/Link\";\nimport Stack from \"@mui/material/Stack\";\n\nimport type { BoxProps } from \"@mui/material/Box\";\nimport type { CardContentProps } from \"@mui/material/CardContent\";\n\nimport {\n    BaseRecord,\n    HttpError,\n    useLogin,\n    useTranslate,\n    useRouterContext,\n    useRouterType,\n    useLink,\n} from \"@refinedev/core\";\nimport { layoutStyles, titleStyles } from \"../styles\";\n\nimport { FormPropsType } from \"../../index\";\nimport { ThemedTitle } from \"@components\";\n\ntype LoginProps = LoginPageProps<BoxProps, CardContentProps, FormPropsType>;\n\n/**\n * login will be used as the default type of the <AuthPage> component. The login page will be used to log in to the system.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#login} for more details.\n */\nexport const LoginPage: React.FC<LoginProps> = ({\n    providers,\n    registerLink,\n    forgotPasswordLink,\n    rememberMe,\n    contentProps,\n    wrapperProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const methods = useForm<BaseRecord, HttpError, LoginFormTypes>({\n        ...useFormProps,\n    });\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = methods;\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login, isLoading } = useLogin<LoginFormTypes>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? (\n                    <ThemedTitle\n                        collapsed={false}\n                        wrapperStyles={{\n                            gap: \"8px\",\n                        }}\n                    />\n                )}\n            </div>\n        );\n\n    const renderProviders = () => {\n        if (providers && providers.length > 0) {\n            return (\n                <>\n                    <Stack spacing={1}>\n                        {providers.map((provider: any) => {\n                            return (\n                                <Button\n                                    key={provider.name}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    sx={{\n                                        color: \"primary.light\",\n                                        borderColor: \"primary.light\",\n                                        textTransform: \"none\",\n                                    }}\n                                    onClick={() =>\n                                        login({ providerName: provider.name })\n                                    }\n                                    startIcon={provider.icon}\n                                >\n                                    {provider.label}\n                                </Button>\n                            );\n                        })}\n                    </Stack>\n                    <Divider\n                        sx={{\n                            fontSize: \"12px\",\n                            marginY: \"16px\",\n                        }}\n                    >\n                        {translate(\"pages.login.divider\", \"or\")}\n                    </Divider>\n                </>\n            );\n        }\n        return null;\n    };\n\n    const Content = (\n        <Card {...(contentProps ?? {})}>\n            <CardContent sx={{ p: \"32px\", \"&:last-child\": { pb: \"32px\" } }}>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                    align=\"center\"\n                    style={titleStyles}\n                    color=\"primary\"\n                    fontWeight={700}\n                >\n                    {translate(\"pages.login.title\", \"Sign in to your account\")}\n                </Typography>\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => {\n                        if (onSubmit) {\n                            return onSubmit(data);\n                        }\n\n                        return login(data);\n                    })}\n                >\n                    {renderProviders()}\n                    <TextField\n                        {...register(\"email\", {\n                            required: true,\n                        })}\n                        id=\"email\"\n                        margin=\"normal\"\n                        fullWidth\n                        label={translate(\"pages.login.fields.email\", \"Email\")}\n                        error={!!errors.email}\n                        name=\"email\"\n                        type=\"email\"\n                        autoComplete=\"email\"\n                        sx={{\n                            mt: 0,\n                        }}\n                    />\n                    <TextField\n                        {...register(\"password\", {\n                            required: true,\n                        })}\n                        id=\"password\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"password\"\n                        label={translate(\n                            \"pages.login.fields.password\",\n                            \"Password\",\n                        )}\n                        helperText={errors?.password?.message}\n                        error={!!errors.password}\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        autoComplete=\"current-password\"\n                        sx={{\n                            mb: 0,\n                        }}\n                    />\n\n                    <Box\n                        component=\"div\"\n                        sx={{\n                            mt: \"24px\",\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        {rememberMe ?? (\n                            <FormControlLabel\n                                sx={{\n                                    span: {\n                                        fontSize: \"14px\",\n                                        color: \"text.secondary\",\n                                    },\n                                }}\n                                color=\"secondary\"\n                                control={\n                                    <Checkbox\n                                        size=\"small\"\n                                        id=\"remember\"\n                                        {...register(\"remember\")}\n                                    />\n                                }\n                                label={translate(\n                                    \"pages.login.buttons.rememberMe\",\n                                    \"Remember me\",\n                                )}\n                            />\n                        )}\n                        {forgotPasswordLink ?? (\n                            <MuiLink\n                                variant=\"body2\"\n                                color=\"primary\"\n                                fontSize=\"12px\"\n                                component={ActiveLink}\n                                underline=\"none\"\n                                to=\"/forgot-password\"\n                            >\n                                {translate(\n                                    \"pages.login.buttons.forgotPassword\",\n                                    \"Forgot password?\",\n                                )}\n                            </MuiLink>\n                        )}\n                    </Box>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        disabled={isLoading}\n                        sx={{ mt: \"24px\" }}\n                    >\n                        {translate(\"pages.login.signin\", \"Sign in\")}\n                    </Button>\n                    {registerLink ?? (\n                        <Box\n                            sx={{\n                                mt: \"24px\",\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                            }}\n                        >\n                            <Typography\n                                textAlign=\"center\"\n                                variant=\"body2\"\n                                component=\"span\"\n                                fontSize=\"12px\"\n                            >\n                                {translate(\n                                    \"pages.login.buttons.noAccount\",\n                                    \"Don’t have an account?\",\n                                )}\n                            </Typography>\n                            <MuiLink\n                                ml=\"4px\"\n                                fontSize=\"12px\"\n                                variant=\"body2\"\n                                color=\"primary\"\n                                component={ActiveLink}\n                                underline=\"none\"\n                                to=\"/register\"\n                                fontWeight=\"bold\"\n                            >\n                                {translate(\"pages.login.signup\", \"Sign up\")}\n                            </MuiLink>\n                        </Box>\n                    )}\n                </Box>\n            </CardContent>\n        </Card>\n    );\n\n    return (\n        <FormProvider {...methods}>\n            <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n                <Container\n                    component=\"main\"\n                    maxWidth=\"xs\"\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100vh\",\n                    }}\n                >\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        {renderContent ? (\n                            renderContent(Content, PageTitle)\n                        ) : (\n                            <>\n                                {PageTitle}\n                                {Content}\n                            </>\n                        )}\n                    </Box>\n                </Container>\n            </Box>\n        </FormProvider>\n    );\n};\n","import { CSSProperties } from \"react\";\n\nexport const layoutStyles: CSSProperties = {};\n\nexport const titleStyles: CSSProperties = {\n    textAlign: \"center\",\n    fontSize: \"24px\",\n    marginBottom: \"24px\",\n    overflowWrap: \"break-word\",\n    hyphens: \"manual\",\n    textOverflow: \"unset\",\n    whiteSpace: \"pre-wrap\",\n};\n","import * as React from \"react\";\nimport {\n    RegisterFormTypes,\n    RegisterPageProps,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport { useForm } from \"@refinedev/react-hook-form\";\n\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Divider from \"@mui/material/Divider\";\nimport Stack from \"@mui/material/Stack\";\nimport MuiLink from \"@mui/material/Link\";\n\nimport type { BoxProps } from \"@mui/material/Box\";\nimport type { CardContentProps } from \"@mui/material/CardContent\";\n\nimport {\n    BaseRecord,\n    HttpError,\n    useTranslate,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    useRegister,\n} from \"@refinedev/core\";\n\nimport { layoutStyles, titleStyles } from \"../styles\";\nimport { FormPropsType } from \"../../index\";\nimport { ThemedTitle } from \"@components/themedLayout/title\";\n\ntype RegisterProps = RegisterPageProps<\n    BoxProps,\n    CardContentProps,\n    FormPropsType\n>;\n\n/**\n * The register page will be used to register new users. You can use the following props for the <AuthPage> component when the type is \"register\".\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#register} for more details.\n */\nexport const RegisterPage: React.FC<RegisterProps> = ({\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    providers,\n    formProps,\n    title,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, RegisterFormTypes>({\n        ...useFormProps,\n    });\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: registerMutate, isLoading } =\n        useRegister<RegisterFormTypes>({\n            v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n        });\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? (\n                    <ThemedTitle\n                        collapsed={false}\n                        wrapperStyles={{\n                            gap: \"8px\",\n                        }}\n                    />\n                )}\n            </div>\n        );\n\n    const renderProviders = () => {\n        if (providers && providers.length > 0) {\n            return (\n                <>\n                    <Stack spacing={1}>\n                        {providers.map((provider: any) => {\n                            return (\n                                <Button\n                                    key={provider.name}\n                                    color=\"secondary\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    sx={{\n                                        color: \"primary.light\",\n                                        borderColor: \"primary.light\",\n                                        textTransform: \"none\",\n                                    }}\n                                    onClick={() =>\n                                        registerMutate({\n                                            providerName: provider.name,\n                                        })\n                                    }\n                                    startIcon={provider.icon}\n                                >\n                                    {provider.label}\n                                </Button>\n                            );\n                        })}\n                    </Stack>\n                    <Divider sx={{ fontSize: 12, marginY: \"16px\" }}>\n                        {translate(\"pages.login.divider\", \"or\")}\n                    </Divider>\n                </>\n            );\n        }\n        return null;\n    };\n\n    const Content = (\n        <Card {...(contentProps ?? {})}>\n            <CardContent sx={{ p: \"32px\", \"&:last-child\": { pb: \"32px\" } }}>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                    align=\"center\"\n                    style={titleStyles}\n                    color=\"primary\"\n                    fontWeight={700}\n                >\n                    {translate(\n                        \"pages.register.title\",\n                        \"Sign up for your account\",\n                    )}\n                </Typography>\n                {renderProviders()}\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => {\n                        if (onSubmit) {\n                            return onSubmit(data);\n                        }\n\n                        return registerMutate(data);\n                    })}\n                >\n                    <TextField\n                        {...register(\"email\", {\n                            required: true,\n                            pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                message: translate(\n                                    \"pages.register.errors.validEmail\",\n                                    \"Invalid email address\",\n                                ),\n                            },\n                        })}\n                        id=\"email\"\n                        margin=\"normal\"\n                        fullWidth\n                        label={translate(\"pages.register.email\", \"Email\")}\n                        error={!!errors.email}\n                        helperText={\n                            errors[\"email\"] ? errors[\"email\"].message : \"\"\n                        }\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        sx={{\n                            mt: 0,\n                        }}\n                    />\n                    <TextField\n                        {...register(\"password\", {\n                            required: true,\n                        })}\n                        id=\"password\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"password\"\n                        label={translate(\n                            \"pages.register.fields.password\",\n                            \"Password\",\n                        )}\n                        helperText={\n                            errors[\"password\"] ? errors[\"password\"].message : \"\"\n                        }\n                        error={!!errors.password}\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        autoComplete=\"current-password\"\n                        sx={{\n                            mb: 0,\n                        }}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        disabled={isLoading}\n                        sx={{\n                            mt: \"24px\",\n                        }}\n                    >\n                        {translate(\"pages.register.signup\", \"Sign up\")}\n                    </Button>\n                    {loginLink ?? (\n                        <Box\n                            display=\"flex\"\n                            justifyContent=\"flex-end\"\n                            alignItems=\"center\"\n                            sx={{\n                                mt: \"24px\",\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                            }}\n                        >\n                            <Typography\n                                variant=\"body2\"\n                                component=\"span\"\n                                fontSize=\"12px\"\n                            >\n                                {translate(\n                                    \"pages.login.buttons.haveAccount\",\n                                    \"Have an account?\",\n                                )}\n                            </Typography>\n                            <MuiLink\n                                ml=\"4px\"\n                                variant=\"body2\"\n                                color=\"primary\"\n                                component={ActiveLink}\n                                underline=\"none\"\n                                to=\"/login\"\n                                fontSize=\"12px\"\n                                fontWeight=\"bold\"\n                            >\n                                {translate(\"pages.login.signin\", \"Sign in\")}\n                            </MuiLink>\n                        </Box>\n                    )}\n                </Box>\n            </CardContent>\n        </Card>\n    );\n\n    return (\n        <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n            <Container\n                component=\"main\"\n                maxWidth=\"xs\"\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    height: \"100vh\",\n                }}\n            >\n                {renderContent ? (\n                    renderContent(Content, PageTitle)\n                ) : (\n                    <>\n                        {PageTitle}\n                        {Content}\n                    </>\n                )}\n            </Container>\n        </Box>\n    );\n};\n","import Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport MuiLink from \"@mui/material/Link\";\n\nimport type { BoxProps } from \"@mui/material/Box\";\nimport type { CardContentProps } from \"@mui/material/CardContent\";\n\nimport {\n    ForgotPasswordFormTypes,\n    ForgotPasswordPageProps,\n} from \"@refinedev/core\";\nimport { useForm } from \"@refinedev/react-hook-form\";\nimport * as React from \"react\";\n\nimport {\n    BaseRecord,\n    HttpError,\n    useForgotPassword,\n    useLink,\n    useRouterContext,\n    useRouterType,\n    useTranslate,\n} from \"@refinedev/core\";\n\nimport { ThemedTitle } from \"@components\";\nimport { FormPropsType } from \"../../index\";\nimport { layoutStyles, titleStyles } from \"../styles\";\n\ntype ForgotPasswordProps = ForgotPasswordPageProps<\n    BoxProps,\n    CardContentProps,\n    FormPropsType\n>;\n\n/**\n * The forgotPassword type is a page that allows users to reset their passwords. You can use this page to reset your password.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#forgot-password} for more details.\n */\nexport const ForgotPasswordPage: React.FC<ForgotPasswordProps> = ({\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, ForgotPasswordFormTypes>({\n        ...useFormProps,\n    });\n\n    const { mutate, isLoading } = useForgotPassword<ForgotPasswordFormTypes>();\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? (\n                    <ThemedTitle\n                        collapsed={false}\n                        wrapperStyles={{\n                            gap: \"8px\",\n                        }}\n                    />\n                )}\n            </div>\n        );\n\n    const Content = (\n        <Card {...(contentProps ?? {})}>\n            <CardContent sx={{ p: \"32px\", \"&:last-child\": { pb: \"32px\" } }}>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                    align=\"center\"\n                    style={titleStyles}\n                    color=\"primary\"\n                    fontWeight={700}\n                >\n                    {translate(\n                        \"pages.forgotPassword.title\",\n                        \"Forgot your password?\",\n                    )}\n                </Typography>\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => {\n                        if (onSubmit) {\n                            return onSubmit(data);\n                        }\n\n                        return mutate(data);\n                    })}\n                >\n                    <TextField\n                        {...register(\"email\", {\n                            required: true,\n                            pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                message: translate(\n                                    \"pages.register.errors.validEmail\",\n                                    \"Invalid email address\",\n                                ),\n                            },\n                        })}\n                        id=\"email\"\n                        margin=\"normal\"\n                        fullWidth\n                        label={translate(\n                            \"pages.forgotPassword.fields.email\",\n                            \"Email\",\n                        )}\n                        name=\"email\"\n                        type=\"email\"\n                        error={!!errors.email}\n                        autoComplete=\"email\"\n                        sx={{\n                            m: 0,\n                        }}\n                    />\n                    {loginLink ?? (\n                        <Box textAlign=\"right\" sx={{ mt: \"24px\" }}>\n                            <Typography\n                                variant=\"body2\"\n                                component=\"span\"\n                                fontSize=\"12px\"\n                            >\n                                {translate(\n                                    \"pages.register.buttons.haveAccount\",\n                                    \"Have an account?\",\n                                )}\n                            </Typography>{\" \"}\n                            <MuiLink\n                                variant=\"body2\"\n                                component={ActiveLink}\n                                underline=\"none\"\n                                to=\"/login\"\n                                fontWeight=\"bold\"\n                                fontSize=\"12px\"\n                                color=\"primary.light\"\n                            >\n                                {translate(\"pages.login.signin\", \"Sign in\")}\n                            </MuiLink>\n                        </Box>\n                    )}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: \"24px\" }}\n                        disabled={isLoading}\n                    >\n                        {translate(\n                            \"pages.forgotPassword.buttons.submit\",\n                            \"Send reset instructions\",\n                        )}\n                    </Button>\n                </Box>\n            </CardContent>\n        </Card>\n    );\n\n    return (\n        <>\n            <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n                <Container\n                    component=\"main\"\n                    maxWidth=\"xs\"\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100vh\",\n                    }}\n                >\n                    {renderContent ? (\n                        renderContent(Content, PageTitle)\n                    ) : (\n                        <>\n                            {PageTitle}\n                            {Content}\n                        </>\n                    )}\n                </Container>\n            </Box>\n        </>\n    );\n};\n","import * as React from \"react\";\nimport {\n    UpdatePasswordFormTypes,\n    UpdatePasswordPageProps,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\n\nimport { useForm } from \"@refinedev/react-hook-form\";\n\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\n\nimport type { BoxProps } from \"@mui/material/Box\";\nimport type { CardContentProps } from \"@mui/material/CardContent\";\n\nimport {\n    BaseRecord,\n    HttpError,\n    useTranslate,\n    useUpdatePassword,\n} from \"@refinedev/core\";\n\nimport { layoutStyles, titleStyles } from \"../styles\";\nimport { FormPropsType } from \"../../index\";\nimport { ThemedTitle } from \"@components\";\n\ntype UpdatePasswordProps = UpdatePasswordPageProps<\n    BoxProps,\n    CardContentProps,\n    FormPropsType\n>;\n\n/**\n * The updatePassword type is the page used to update the password of the user.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#update-password} for more details.\n */\nexport const UpdatePasswordPage: React.FC<UpdatePasswordProps> = ({\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title = undefined,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const {\n        register,\n        watch,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, UpdatePasswordFormTypes>({\n        ...useFormProps,\n    });\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: update, isLoading } =\n        useUpdatePassword<UpdatePasswordFormTypes>({\n            v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n        });\n\n    const translate = useTranslate();\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? (\n                    <ThemedTitle\n                        collapsed={false}\n                        wrapperStyles={{\n                            gap: \"8px\",\n                        }}\n                    />\n                )}\n            </div>\n        );\n\n    const Content = (\n        <Card {...(contentProps ?? {})}>\n            <CardContent sx={{ p: \"32px\", \"&:last-child\": { pb: \"32px\" } }}>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                    align=\"center\"\n                    style={titleStyles}\n                    color=\"primary\"\n                    fontWeight={700}\n                >\n                    {translate(\n                        \"pages.updatePassword.title\",\n                        \"Set New Password\",\n                    )}\n                </Typography>\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => {\n                        if (onSubmit) {\n                            return onSubmit(data);\n                        }\n\n                        return update(data);\n                    })}\n                >\n                    <TextField\n                        {...register(\"password\", {\n                            required: true,\n                        })}\n                        id=\"password\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"password\"\n                        label={translate(\n                            \"pages.updatePassword.fields.password\",\n                            \"New Password\",\n                        )}\n                        helperText={errors?.password?.message}\n                        error={!!errors?.password}\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        autoComplete=\"current-password\"\n                        sx={{\n                            m: 0,\n                        }}\n                    />\n\n                    <TextField\n                        {...register(\"confirmPassword\", {\n                            required: true,\n                            validate: (value?: string) => {\n                                if (watch(\"password\") !== value) {\n                                    return translate(\n                                        \"pages.updatePassword.errors.confirmPasswordNotMatch\",\n                                        \"Passwords do not match\",\n                                    );\n                                }\n                                return true;\n                            },\n                        })}\n                        id=\"confirmPassword\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"confirmPassword\"\n                        label={translate(\n                            \"pages.updatePassword.fields.confirmPassword\",\n                            \"Confirm New Password\",\n                        )}\n                        helperText={errors?.confirmPassword?.message}\n                        error={!!errors?.confirmPassword}\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        autoComplete=\"current-confirm-password\"\n                        sx={{\n                            mb: 0,\n                        }}\n                    />\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{\n                            mt: \"24px\",\n                        }}\n                        disabled={isLoading}\n                    >\n                        {translate(\n                            \"pages.updatePassword.buttons.submit\",\n                            \"Update\",\n                        )}\n                    </Button>\n                </Box>\n            </CardContent>\n        </Card>\n    );\n\n    return (\n        <>\n            <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n                <Container\n                    component=\"main\"\n                    maxWidth=\"xs\"\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100vh\",\n                    }}\n                >\n                    {renderContent ? (\n                        renderContent(Content, PageTitle)\n                    ) : (\n                        <>\n                            {PageTitle}\n                            {Content}\n                        </>\n                    )}\n                </Container>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\n\nimport {\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useRouterType,\n    useBack,\n    useResource,\n} from \"@refinedev/core\";\n\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nimport { Breadcrumb, SaveButton, SaveButtonProps } from \"@components\";\nimport { CreateProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\n/**\n * `<Create>` provides us a layout to display the page.\n * It does not contain any logic but adds extra functionalities like action buttons and giving titles to the page.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/create} for more details.\n */\nexport const Create: React.FC<CreateProps> = ({\n    title,\n    children,\n    saveButtonProps: saveButtonPropsFromProps,\n    resource: resourceFromProps,\n    isLoading = false,\n    breadcrumb: breadcrumbFromProps,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n    footerButtonProps,\n    footerButtons,\n    goBack: goBackFromProps,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const { goBack } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const { resource, action, identifier } = useResource(resourceFromProps);\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const saveButtonProps: SaveButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        ...saveButtonPropsFromProps,\n    };\n\n    const defaultFooterButtons = <SaveButton {...saveButtonProps} />;\n\n    return (\n        <Card {...(wrapperProps ?? {})}>\n            {breadcrumbComponent}\n            <CardHeader\n                sx={{\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    \".MuiCardHeader-action\": {\n                        margin: 0,\n                        alignSelf: \"center\",\n                    },\n                }}\n                title={\n                    title ?? (\n                        <Typography\n                            variant=\"h5\"\n                            className={RefinePageHeaderClassNames.Title}\n                        >\n                            {translate(\n                                `${identifier}.titles.create`,\n                                `Create ${getUserFriendlyName(\n                                    resource?.meta?.label ??\n                                        resource?.options?.label ??\n                                        resource?.label ??\n                                        identifier,\n                                    \"singular\",\n                                )}`,\n                            )}\n                        </Typography>\n                    )\n                }\n                avatar={\n                    typeof goBackFromProps !== \"undefined\" ? (\n                        goBackFromProps\n                    ) : (\n                        <IconButton\n                            onClick={\n                                action !== \"list\" ||\n                                typeof action !== \"undefined\"\n                                    ? routerType === \"legacy\"\n                                        ? goBack\n                                        : back\n                                    : undefined\n                            }\n                        >\n                            <ArrowBackIcon />\n                        </IconButton>\n                    )\n                }\n                action={\n                    headerButtons ? (\n                        <Box\n                            display=\"flex\"\n                            gap=\"16px\"\n                            {...(headerButtonProps ?? {})}\n                        >\n                            {headerButtons\n                                ? typeof headerButtons === \"function\"\n                                    ? headerButtons({\n                                          defaultButtons: null,\n                                      })\n                                    : headerButtons\n                                : null}\n                        </Box>\n                    ) : undefined\n                }\n                {...(headerProps ?? {})}\n            />\n            <CardContent {...(contentProps ?? {})}>{children}</CardContent>\n            <CardActions\n                sx={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    gap: \"16px\",\n                    padding: \"16px\",\n                }}\n                {...(footerButtonProps ?? {})}\n            >\n                {footerButtons\n                    ? typeof footerButtons === \"function\"\n                        ? footerButtons({\n                              defaultButtons: defaultFooterButtons,\n                              saveButtonProps,\n                          })\n                        : footerButtons\n                    : defaultFooterButtons}\n            </CardActions>\n        </Card>\n    );\n};\n","import React from \"react\";\n\nimport {\n    useMutationMode,\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useToPath,\n    useResource,\n    useRouterType,\n    useBack,\n    useGo,\n} from \"@refinedev/core\";\n\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nimport {\n    DeleteButton,\n    RefreshButton,\n    ListButton,\n    SaveButton,\n    Breadcrumb,\n    ListButtonProps,\n    RefreshButtonProps,\n    DeleteButtonProps,\n    SaveButtonProps,\n    AutoSaveIndicator,\n} from \"@components\";\nimport { EditProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\n/**\n * `<Edit>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/edit} for more details.\n */\nexport const Edit: React.FC<EditProps> = ({\n    title,\n    saveButtonProps: saveButtonPropsFromProps,\n    mutationMode: mutationModeProp,\n    recordItemId,\n    children,\n    deleteButtonProps: deleteButtonPropsFromProps,\n    canDelete,\n    resource: resourceFromProps,\n    isLoading = false,\n    breadcrumb: breadcrumbFromProps,\n    dataProviderName,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n    footerButtonProps,\n    footerButtons,\n    goBack: goBackFromProps,\n    autoSaveProps,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n    const { mutationMode: mutationModeContext } = useMutationMode();\n    const mutationMode = mutationModeProp ?? mutationModeContext;\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const go = useGo();\n    const { goBack, list: legacyGoList } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const {\n        resource,\n        action,\n        id: idFromParams,\n        identifier,\n    } = useResource(resourceFromProps);\n\n    const goListPath = useToPath({\n        resource,\n        action: \"list\",\n    });\n\n    const id = recordItemId ?? idFromParams;\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const hasList = resource?.list && !recordItemId;\n    const isDeleteButtonVisible =\n        canDelete ??\n        ((resource?.meta?.canDelete ?? resource?.canDelete) ||\n            deleteButtonPropsFromProps);\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const listButtonProps: ListButtonProps | undefined = hasList\n        ? {\n              ...(isLoading ? { disabled: true } : {}),\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n          }\n        : undefined;\n\n    const refreshButtonProps: RefreshButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        recordItemId: id,\n        dataProviderName,\n    };\n\n    const defaultHeaderButtons = (\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n            {autoSaveProps && <AutoSaveIndicator {...autoSaveProps} />}\n            {hasList && <ListButton {...listButtonProps} />}\n            <RefreshButton {...refreshButtonProps} />\n        </Box>\n    );\n\n    const deleteButtonProps: DeleteButtonProps | undefined =\n        isDeleteButtonVisible\n            ? ({\n                  ...(isLoading ? { disabled: true } : {}),\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  mutationMode,\n                  variant: \"outlined\",\n                  onSuccess: () => {\n                      if (routerType === \"legacy\") {\n                          legacyGoList(resource?.route ?? resource?.name ?? \"\");\n                      } else {\n                          go({ to: goListPath });\n                      }\n                  },\n                  recordItemId: id,\n                  dataProviderName,\n                  ...deleteButtonPropsFromProps,\n              } as const)\n            : undefined;\n\n    const saveButtonProps: SaveButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        ...saveButtonPropsFromProps,\n    };\n\n    const defaultFooterButtons = (\n        <>\n            {isDeleteButtonVisible && <DeleteButton {...deleteButtonProps} />}\n            <SaveButton {...saveButtonProps} />\n        </>\n    );\n\n    return (\n        <Card {...(wrapperProps ?? {})}>\n            {breadcrumbComponent}\n            <CardHeader\n                sx={{\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    \".MuiCardHeader-action\": {\n                        margin: 0,\n                        alignSelf: \"center\",\n                    },\n                }}\n                title={\n                    title ?? (\n                        <Typography\n                            variant=\"h5\"\n                            className={RefinePageHeaderClassNames.Title}\n                        >\n                            {translate(\n                                `${identifier}.titles.edit`,\n                                `Edit ${getUserFriendlyName(\n                                    resource?.meta?.label ??\n                                        resource?.options?.label ??\n                                        resource?.label ??\n                                        identifier,\n                                    \"singular\",\n                                )}`,\n                            )}\n                        </Typography>\n                    )\n                }\n                avatar={\n                    typeof goBackFromProps !== \"undefined\" ? (\n                        goBackFromProps\n                    ) : (\n                        <IconButton\n                            onClick={\n                                action !== \"list\" &&\n                                typeof action !== \"undefined\"\n                                    ? routerType === \"legacy\"\n                                        ? goBack\n                                        : back\n                                    : undefined\n                            }\n                        >\n                            <ArrowBackIcon />\n                        </IconButton>\n                    )\n                }\n                action={\n                    <Box\n                        display=\"flex\"\n                        gap=\"16px\"\n                        {...(headerButtonProps ?? {})}\n                    >\n                        {headerButtons\n                            ? typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: defaultHeaderButtons,\n                                      listButtonProps,\n                                      refreshButtonProps,\n                                  })\n                                : headerButtons\n                            : defaultHeaderButtons}\n                    </Box>\n                }\n                {...(headerProps ?? {})}\n            />\n            <CardContent {...(contentProps ?? {})}>{children}</CardContent>\n            <CardActions\n                sx={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    gap: \"16px\",\n                    padding: \"16px\",\n                }}\n                {...(footerButtonProps ?? {})}\n            >\n                {footerButtons\n                    ? typeof footerButtons === \"function\"\n                        ? footerButtons({\n                              defaultButtons: defaultFooterButtons,\n                              deleteButtonProps,\n                              saveButtonProps,\n                          })\n                        : footerButtons\n                    : defaultFooterButtons}\n            </CardActions>\n        </Card>\n    );\n};\n","import React from \"react\";\n\nimport {\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useRouterType,\n    useResource,\n} from \"@refinedev/core\";\n\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nimport { CreateButton, Breadcrumb, CreateButtonProps } from \"@components\";\n\nimport { ListProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\n/**\n * `<List>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/list} for more details.\n */\nexport const List: React.FC<ListProps> = ({\n    title,\n    canCreate,\n    children,\n    createButtonProps: createButtonPropsFromProps,\n    resource: resourceFromProps,\n    breadcrumb: breadcrumbFromProps,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const routerType = useRouterType();\n\n    const { resource, identifier } = useResource(resourceFromProps);\n\n    const isCreateButtonVisible =\n        canCreate ??\n        ((resource?.canCreate ?? !!resource?.create) ||\n            createButtonPropsFromProps);\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const createButtonProps: CreateButtonProps | undefined =\n        isCreateButtonVisible\n            ? {\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  ...createButtonPropsFromProps,\n              }\n            : undefined;\n\n    const defaultHeaderButtons = isCreateButtonVisible ? (\n        <CreateButton {...createButtonProps} />\n    ) : null;\n\n    return (\n        <Card {...(wrapperProps ?? {})}>\n            {breadcrumbComponent}\n            <CardHeader\n                sx={{\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    \".MuiCardHeader-action\": {\n                        margin: 0,\n                        alignSelf: \"center\",\n                    },\n                }}\n                title={\n                    title ?? (\n                        <Typography\n                            variant=\"h5\"\n                            className={RefinePageHeaderClassNames.Title}\n                        >\n                            {translate(\n                                `${identifier}.titles.list`,\n                                getUserFriendlyName(\n                                    resource?.meta?.label ??\n                                        resource?.options?.label ??\n                                        resource?.label ??\n                                        identifier,\n                                    \"plural\",\n                                ),\n                            )}\n                        </Typography>\n                    )\n                }\n                action={\n                    <Box display=\"flex\" gap=\"16px\" {...headerButtonProps}>\n                        {headerButtons\n                            ? typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: defaultHeaderButtons,\n                                      createButtonProps,\n                                  })\n                                : headerButtons\n                            : defaultHeaderButtons}\n                    </Box>\n                }\n                {...(headerProps ?? {})}\n            />\n            <CardContent {...(contentProps ?? {})}>{children}</CardContent>\n        </Card>\n    );\n};\n","import React from \"react\";\nimport {\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useRouterType,\n    useBack,\n    useGo,\n    useResource,\n    useToPath,\n} from \"@refinedev/core\";\n\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nimport {\n    DeleteButton,\n    RefreshButton,\n    ListButton,\n    EditButton,\n    Breadcrumb,\n    ListButtonProps,\n    EditButtonProps,\n    DeleteButtonProps,\n    RefreshButtonProps,\n} from \"@components\";\nimport { ShowProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\n/**\n * `<Show>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/show} for more details.\n */\nexport const Show: React.FC<ShowProps> = ({\n    title,\n    canEdit,\n    canDelete,\n    isLoading = false,\n    children,\n    resource: resourceFromProps,\n    recordItemId,\n    breadcrumb: breadcrumbFromProps,\n    dataProviderName,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n    footerButtonProps,\n    footerButtons,\n    goBack: goBackFromProps,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const go = useGo();\n    const { goBack, list: legacyGoList } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const {\n        resource,\n        action,\n        id: idFromParams,\n        identifier,\n    } = useResource(resourceFromProps);\n\n    const goListPath = useToPath({\n        resource,\n        action: \"list\",\n    });\n\n    const id = recordItemId ?? idFromParams;\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const hasList = resource?.list && !recordItemId;\n    const hasDelete =\n        canDelete ?? resource?.meta?.canDelete ?? resource?.canDelete;\n    const isDeleteButtonVisible = hasDelete && typeof id !== \"undefined\";\n    const isEditButtonVisible =\n        canEdit ?? resource?.canEdit ?? !!resource?.edit;\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const listButtonProps: ListButtonProps | undefined = hasList\n        ? {\n              ...(isLoading ? { disabled: true } : {}),\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n          }\n        : undefined;\n    const editButtonProps: EditButtonProps | undefined = isEditButtonVisible\n        ? {\n              ...(isLoading ? { disabled: true } : {}),\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n              recordItemId: id,\n          }\n        : undefined;\n    const deleteButtonProps: DeleteButtonProps | undefined =\n        isDeleteButtonVisible\n            ? {\n                  ...(isLoading ? { disabled: true } : {}),\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  recordItemId: id,\n                  onSuccess: () => {\n                      if (routerType === \"legacy\") {\n                          legacyGoList(resource?.route ?? resource?.name ?? \"\");\n                      } else {\n                          go({ to: goListPath });\n                      }\n                  },\n                  dataProviderName,\n              }\n            : undefined;\n    const refreshButtonProps: RefreshButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        recordItemId: id,\n        dataProviderName,\n    };\n\n    const defaultHeaderButtons = (\n        <>\n            {hasList && <ListButton {...listButtonProps} />}\n            {isEditButtonVisible && <EditButton {...editButtonProps} />}\n            {isDeleteButtonVisible && <DeleteButton {...deleteButtonProps} />}\n            <RefreshButton {...refreshButtonProps} />\n        </>\n    );\n\n    return (\n        <Card {...(wrapperProps ?? {})}>\n            {breadcrumbComponent}\n            <CardHeader\n                sx={{\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    \".MuiCardHeader-action\": {\n                        margin: 0,\n                        alignSelf: \"center\",\n                    },\n                }}\n                title={\n                    title ?? (\n                        <Typography\n                            variant=\"h5\"\n                            className={RefinePageHeaderClassNames.Title}\n                        >\n                            {translate(\n                                `${identifier}.titles.show`,\n                                `Show ${getUserFriendlyName(\n                                    resource?.meta?.label ??\n                                        resource?.options?.label ??\n                                        resource?.label ??\n                                        identifier,\n                                    \"singular\",\n                                )}`,\n                            )}\n                        </Typography>\n                    )\n                }\n                avatar={\n                    typeof goBackFromProps !== \"undefined\" ? (\n                        goBackFromProps\n                    ) : (\n                        <IconButton\n                            onClick={\n                                action !== \"list\" &&\n                                typeof action !== \"undefined\"\n                                    ? routerType === \"legacy\"\n                                        ? goBack\n                                        : back\n                                    : undefined\n                            }\n                        >\n                            <ArrowBackIcon />\n                        </IconButton>\n                    )\n                }\n                action={\n                    <Box\n                        display=\"flex\"\n                        gap=\"16px\"\n                        {...(headerButtonProps ?? {})}\n                    >\n                        {headerButtons\n                            ? typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: defaultHeaderButtons,\n                                      deleteButtonProps,\n                                      editButtonProps,\n                                      listButtonProps,\n                                      refreshButtonProps,\n                                  })\n                                : headerButtons\n                            : defaultHeaderButtons}\n                    </Box>\n                }\n                {...(headerProps ?? {})}\n            />\n            <CardContent {...(contentProps ?? {})}>{children}</CardContent>\n            <CardActions\n                sx={{ padding: \"16px\" }}\n                {...(footerButtonProps ?? {})}\n            >\n                {footerButtons\n                    ? typeof footerButtons === \"function\"\n                        ? footerButtons({ defaultButtons: null })\n                        : footerButtons\n                    : null}\n            </CardActions>\n        </Card>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useNavigation,\n    useTranslate,\n    useCan,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport Button from \"@mui/material/Button\";\nimport AddBoxOutlined from \"@mui/icons-material/AddBoxOutlined\";\n\nimport { CreateButtonProps } from \"../types\";\n\n/**\n * <CreateButton> uses Material UI {@link https://mui.com/components/buttons/ `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#create `create`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful to redirect the app to the create page route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/create-button} for more details.\n */\nexport const CreateButton: React.FC<CreateButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { createUrl: generateCreateUrl } = useNavigation();\n\n    const { resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"create\",\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n        params: {\n            resource,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const createUrl = resource ? generateCreateUrl(resource, meta) : \"\";\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={createUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={!hideText && <AddBoxOutlined {...svgIconProps} />}\n                title={disabledTitle()}\n                variant=\"contained\"\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.CreateButton}\n                className={RefineButtonClassNames.CreateButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <AddBoxOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.create\", \"Create\")\n                )}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport Button from \"@mui/material/Button\";\nimport EditOutlined from \"@mui/icons-material/EditOutlined\";\n\nimport { EditButtonProps } from \"../types\";\n\n/**\n * `<EditButton>` uses uses Material UI {@link https://mui.com/components/buttons/ `<Button>`} component.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#edit `edit`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the edit page with the record id route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/edit-button} for more details.\n */\nexport const EditButton: React.FC<EditButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n    const translate = useTranslate();\n\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { editUrl: generateEditUrl } = useNavigation();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"edit\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const editUrl =\n        resource && (recordItemId ?? id)\n            ? generateEditUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={editUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={\n                    !hideText && (\n                        <EditOutlined\n                            sx={{ selfAlign: \"center\" }}\n                            {...svgIconProps}\n                        />\n                    )\n                }\n                title={disabledTitle()}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.EditButton}\n                className={RefineButtonClassNames.EditButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <EditOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.edit\", \"Edit\")\n                )}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useDelete,\n    useTranslate,\n    useMutationMode,\n    useCan,\n    useResource,\n    pickNotDeprecated,\n    useWarnAboutChange,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\n\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\nimport DeleteOutline from \"@mui/icons-material/DeleteOutline\";\n\nimport { DeleteButtonProps } from \"../types\";\n\n/**\n * `<DeleteButton>` uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} and {@link https://mui.com/material-ui/react-dialog/#main-content `<Dialog>`} components.\n * When you try to delete something, a dialog modal shows up and asks for confirmation. When confirmed it executes the `useDelete` method provided by your `dataProvider`.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/delete-button} for more details.\n */\nexport const DeleteButton: React.FC<DeleteButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    onSuccess,\n    mutationMode: mutationModeProp,\n    children,\n    successNotification,\n    errorNotification,\n    hideText = false,\n    accessControl,\n    meta,\n    metaData,\n    dataProviderName,\n    confirmTitle,\n    confirmOkText,\n    confirmCancelText,\n    svgIconProps,\n    invalidates,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n    const translate = useTranslate();\n\n    const { id, resource, identifier } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { mutationMode: mutationModeContext } = useMutationMode();\n\n    const mutationMode = mutationModeProp ?? mutationModeContext;\n\n    const { mutate, isLoading, variables } = useDelete();\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"delete\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleCloseOnConfirm = () => {\n        if ((recordItemId ?? id) && identifier) {\n            setWarnWhen(false);\n            setOpen(false);\n            mutate(\n                {\n                    id: recordItemId ?? id ?? \"\",\n                    resource: identifier,\n                    mutationMode,\n                    successNotification,\n                    errorNotification,\n                    meta: pickNotDeprecated(meta, metaData),\n                    metaData: pickNotDeprecated(meta, metaData),\n                    dataProviderName,\n                    invalidates,\n                },\n                {\n                    onSuccess: (value) => {\n                        onSuccess && onSuccess(value);\n                    },\n                },\n            );\n        }\n    };\n\n    const { sx, ...restProps } = rest;\n\n    const { setWarnWhen } = useWarnAboutChange();\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <div>\n            <LoadingButton\n                color=\"error\"\n                onClick={handleClickOpen}\n                disabled={data?.can === false}\n                loading={(recordItemId ?? id) === variables?.id && isLoading}\n                startIcon={!hideText && <DeleteOutline {...svgIconProps} />}\n                title={disabledTitle()}\n                sx={{ minWidth: 0, ...sx }}\n                loadingPosition={hideText ? \"center\" : \"start\"}\n                data-testid={RefineButtonTestIds.DeleteButton}\n                className={RefineButtonClassNames.DeleteButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <DeleteOutline fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.delete\", \"Delete\")\n                )}\n            </LoadingButton>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {confirmTitle ??\n                        translate(\"buttons.confirm\", \"Are you sure?\")}\n                </DialogTitle>\n                <DialogActions sx={{ justifyContent: \"center\" }}>\n                    <Button onClick={handleClose}>\n                        {confirmCancelText ??\n                            translate(\"buttons.cancel\", \"Cancel\")}\n                    </Button>\n                    <Button\n                        color=\"error\"\n                        onClick={handleCloseOnConfirm}\n                        autoFocus\n                    >\n                        {confirmOkText ?? translate(\"buttons.delete\", \"Delete\")}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n","import React from \"react\";\nimport {\n    useTranslate,\n    useResource,\n    useInvalidate,\n    queryKeys,\n    pickDataProvider,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport RefreshOutlined from \"@mui/icons-material/RefreshOutlined\";\n\nimport { RefreshButtonProps } from \"../types\";\n\nimport { useQueryClient } from \"@tanstack/react-query\";\n\n/**\n * `<RefreshButton>` uses uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} component\n * to update the data shown on the page via the {@link https://refine.dev/docs/api-reference/core/hooks/invalidate/useInvalidate `useInvalidate`} hook.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/refresh-button} for more details.\n */\nexport const RefreshButton: React.FC<RefreshButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    dataProviderName,\n    svgIconProps,\n    children,\n    onClick,\n    meta: _meta,\n    metaData: _metaData,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const queryClient = useQueryClient();\n    const invalidates = useInvalidate();\n\n    const { resources, identifier, id } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const isInvalidating = !!queryClient.isFetching({\n        queryKey: queryKeys(\n            identifier,\n            pickDataProvider(identifier, dataProviderName, resources),\n        ).detail(recordItemId ?? id),\n    });\n\n    const handleInvalidate = () => {\n        invalidates({\n            id: recordItemId ?? id,\n            invalidates: [\"detail\"],\n            dataProviderName,\n            resource: identifier,\n        });\n    };\n\n    const { sx, ...restProps } = rest;\n\n    return (\n        <LoadingButton\n            startIcon={!hideText && <RefreshOutlined {...svgIconProps} />}\n            loading={isInvalidating}\n            loadingPosition={hideText ? \"center\" : \"start\"}\n            onClick={(e) => {\n                onClick ? onClick(e) : handleInvalidate();\n            }}\n            sx={{ minWidth: 0, ...sx }}\n            data-testid={RefineButtonTestIds.RefreshButton}\n            className={RefineButtonClassNames.RefreshButton}\n            {...restProps}\n        >\n            {hideText ? (\n                <RefreshOutlined fontSize=\"small\" {...svgIconProps} />\n            ) : (\n                children ?? translate(\"buttons.refresh\", \"Refresh\")\n            )}\n        </LoadingButton>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport Button from \"@mui/material/Button\";\nimport VisibilityOutlined from \"@mui/icons-material/VisibilityOutlined\";\n\nimport { ShowButtonProps } from \"../types\";\n\n/**\n * `<ShowButton>` uses uses Material UI {@link https://mui.com/components/buttons/ `<Button>`} component.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#show `show`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when red sirecting the app to the show page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/show-button} for more details.\n */\nexport const ShowButton: React.FC<ShowButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n    const { showUrl: generateShowUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"show\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const showUrl =\n        resource && (recordItemId || id)\n            ? generateShowUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={showUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={\n                    !hideText && <VisibilityOutlined {...svgIconProps} />\n                }\n                title={disabledTitle()}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.ShowButton}\n                className={RefineButtonClassNames.ShowButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <VisibilityOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.show\", \"Show\")\n                )}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    pickNotDeprecated,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport Button from \"@mui/material/Button\";\nimport ListOutlined from \"@mui/icons-material/ListOutlined\";\n\nimport { ListButtonProps } from \"../types\";\n\n/**\n * `<ListButton>` is using uses Material UI {@link https://mui.com/components/buttons/ `<Button>`} component.\n * It uses the  {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#list `list`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the list page route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/list-button} for more details.\n */\nexport const ListButton: React.FC<ListButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n    const { listUrl: generateListUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { resource, identifier } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"list\",\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n        params: {\n            resource,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const listUrl = resource ? generateListUrl(resource, meta) : \"\";\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={listUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={!hideText && <ListOutlined {...svgIconProps} />}\n                title={disabledTitle()}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.ListButton}\n                className={RefineButtonClassNames.ListButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <ListOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ??\n                    translate(\n                        `${\n                            identifier ??\n                            resourceNameFromProps ??\n                            resourceNameOrRouteName\n                        }.titles.list`,\n                        getUserFriendlyName(\n                            resource?.meta?.label ??\n                                resource?.label ??\n                                identifier ??\n                                pickNotDeprecated(\n                                    resourceNameFromProps,\n                                    resourceNameOrRouteName,\n                                ),\n                            \"plural\",\n                        ),\n                    )\n                )}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport ImportExportOutlined from \"@mui/icons-material/ImportExportOutlined\";\n\nimport { ExportButtonProps } from \"../types\";\n\n/**\n * `<ExportButton>` uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} with a default export icon and a default text with \"Export\".\n * It only has presentational value.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/export-button} for more details.\n */\nexport const ExportButton: React.FC<ExportButtonProps> = ({\n    hideText = false,\n    children,\n    loading = false,\n    svgIconProps,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const { sx, ...restProps } = rest;\n\n    return (\n        <LoadingButton\n            {...rest}\n            loading={loading}\n            startIcon={!hideText && <ImportExportOutlined {...svgIconProps} />}\n            loadingPosition={hideText ? \"center\" : \"start\"}\n            sx={{ minWidth: 0, ...sx }}\n            data-testid={RefineButtonTestIds.ExportButton}\n            className={RefineButtonClassNames.ExportButton}\n            {...restProps}\n        >\n            {hideText ? (\n                <ImportExportOutlined fontSize=\"small\" {...svgIconProps} />\n            ) : (\n                children ?? translate(\"buttons.export\", \"Export\")\n            )}\n        </LoadingButton>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport SaveOutlined from \"@mui/icons-material/SaveOutlined\";\n\nimport { SaveButtonProps } from \"../types\";\n\n/**\n * `<SaveButton>` uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} component.\n * It uses it for presantation purposes only. Some of the hooks that refine has adds features to this button.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/save-button} for more details.\n */\nexport const SaveButton: React.FC<SaveButtonProps> = ({\n    hideText = false,\n    svgIconProps,\n    children,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const { sx, ...restProps } = rest;\n\n    return (\n        <LoadingButton\n            startIcon={!hideText && <SaveOutlined {...svgIconProps} />}\n            sx={{ minWidth: 0, ...sx }}\n            variant=\"contained\"\n            data-testid={RefineButtonTestIds.SaveButton}\n            className={RefineButtonClassNames.SaveButton}\n            {...restProps}\n        >\n            {hideText ? (\n                <SaveOutlined fontSize=\"small\" {...svgIconProps} />\n            ) : (\n                children ?? translate(\"buttons.save\", \"Save\")\n            )}\n        </LoadingButton>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport Button from \"@mui/material/Button\";\nimport AddBoxOutlined from \"@mui/icons-material/AddBoxOutlined\";\n\nimport { CloneButtonProps } from \"../types\";\n\n/**\n * `<CloneButton>` uses Material UI {@link https://mui.com/components/buttons/ `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#clone `clone`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation useNavigation} under the hood.\n * It can be useful when redirecting the app to the create page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/clone-button} for more details.\n *\n */\nexport const CloneButton: React.FC<CloneButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const { cloneUrl: generateCloneUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"create\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const cloneUrl =\n        resource && (recordItemId || id)\n            ? generateCloneUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={cloneUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={!hideText && <AddBoxOutlined {...svgIconProps} />}\n                title={disabledTitle()}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.CloneButton}\n                className={RefineButtonClassNames.CloneButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <AddBoxOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.clone\", \"Clone\")\n                )}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport ImportExportOutlined from \"@mui/icons-material/ImportExportOutlined\";\n\nimport { ImportButtonProps } from \"../types\";\n\n/**\n * `<ImportButton>` is compatible with the {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useImport/ `useImport`} core hook.\n * It uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content  `<LoadingButton>`} and native html {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input  `<input>`} element.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/import-button} for more details.\n */\nexport const ImportButton: React.FC<ImportButtonProps> = ({\n    inputProps,\n    hideText = false,\n    loading = false,\n    svgIconProps,\n    children,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const { sx, ...restProps } = rest;\n\n    return (\n        <label htmlFor=\"contained-button-file\">\n            <input {...inputProps} id=\"contained-button-file\" multiple hidden />\n            <LoadingButton\n                component=\"span\"\n                startIcon={\n                    !hideText && <ImportExportOutlined {...svgIconProps} />\n                }\n                loadingPosition={hideText ? \"center\" : \"start\"}\n                loading={loading}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.ImportButton}\n                className={RefineButtonClassNames.ImportButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <ImportExportOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.import\", \"Import\")\n                )}\n            </LoadingButton>\n        </label>\n    );\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\n\ntype CircularDeterminateProps = {\n    undoableTimeout: number;\n    message: string;\n};\n\nexport const CircularDeterminate: React.FC<CircularDeterminateProps> = ({\n    undoableTimeout,\n    message,\n}) => {\n    const [progress, setProgress] = useState(100);\n\n    const [timeCount, setTimeCount] = useState(undoableTimeout);\n\n    useEffect(() => {\n        const increaseProgress = 100 / undoableTimeout;\n        const timer = setInterval(() => {\n            setTimeCount((prevProgress) => prevProgress - 1);\n            setProgress((prevProgress) => prevProgress - increaseProgress);\n        }, 1000);\n\n        if (timeCount === 0) {\n            clearInterval(timer);\n        }\n\n        return () => {\n            clearInterval(timer);\n        };\n    }, [timeCount]);\n\n    return (\n        <>\n            <Box sx={{ position: \"relative\", display: \"inline-flex\" }}>\n                <CircularProgress\n                    color=\"inherit\"\n                    variant=\"determinate\"\n                    value={progress}\n                />\n                <Box\n                    sx={{\n                        top: 0,\n                        left: 0,\n                        bottom: 0,\n                        right: 0,\n                        position: \"absolute\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Typography component=\"div\">{timeCount}</Typography>\n                </Box>\n            </Box>\n            <Box\n                sx={{\n                    marginLeft: \"10px\",\n                    maxWidth: { xs: \"150px\", md: \"100%\" },\n                }}\n            >\n                <Typography variant=\"subtitle2\">{message}</Typography>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { TextFieldProps } from \"../types\";\n\n/**\n * This field lets you show basic text. It uses Materail UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/text} for more details.\n */\nconst TextField: React.FC<TextFieldProps> = ({ value, ...rest }) => {\n    return (\n        <Typography variant=\"body2\" {...rest}>\n            {value}\n        </Typography>\n    );\n};\n\nexport { TextField as TextFieldComponent };\n","import React from \"react\";\nimport Chip from \"@mui/material/Chip\";\n\nimport { TagFieldProps } from \"../types\";\n\n/**\n * This field lets you display a value in a tag. It uses Material UI {@link https://mui.com/material-ui/react-chip/#main-content `<Chip>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/tag} for more details.\n */\nexport const TagField: React.FC<TagFieldProps> = ({ value, ...rest }) => {\n    return <Chip label={value?.toString()} {...rest} />;\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\n\nimport { EmailFieldProps } from \"../types\";\n\n/**\n * This field is used to display email values. It uses the {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>` }\n * and {@link https://mui.com/material-ui/react-link/#main-content `<Link>`} components from Material UI.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/email} for more details.\n */\nexport const EmailField: React.FC<EmailFieldProps> = ({ value, ...rest }) => {\n    return (\n        <Typography variant=\"body2\">\n            <Link href={`mailto:${value}`} {...rest}>\n                {value}\n            </Link>\n        </Typography>\n    );\n};\n","import React from \"react\";\n\nimport Tooltip from \"@mui/material/Tooltip\";\nimport CheckOutlined from \"@mui/icons-material/CheckOutlined\";\nimport CloseOutlined from \"@mui/icons-material/CloseOutlined\";\n\nimport { BooleanFieldProps } from \"../types\";\n\n/**\n * This field is used to display boolean values. It uses the {@link https://mui.com/material-ui/react-tooltip/#main-content `<Tooltip>`} values from Materila UI.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/boolean} for more details.\n */\nexport const BooleanField: React.FC<BooleanFieldProps> = ({\n    value,\n    valueLabelTrue = \"true\",\n    valueLabelFalse = \"false\",\n    trueIcon,\n    falseIcon,\n    svgIconProps,\n    ...rest\n}) => {\n    return (\n        <Tooltip title={value ? valueLabelTrue : valueLabelFalse} {...rest}>\n            {value ? (\n                <span>{trueIcon ?? <CheckOutlined {...svgIconProps} />}</span>\n            ) : (\n                <span>{falseIcon ?? <CloseOutlined {...svgIconProps} />}</span>\n            )}\n        </Tooltip>\n    );\n};\n","import React from \"react\";\n\nimport dayjs from \"dayjs\";\n\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat\";\n\nimport Typography from \"@mui/material/Typography\";\n\nimport { DateFieldProps } from \"../types\";\n\ndayjs.extend(LocalizedFormat);\n\nconst defaultLocale = dayjs.locale();\n\n/**\n * This field is used to display dates. It uses {@link https://day.js.org/docs/en/display/format `Day.js`} to display date format and\n * Material UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`} component\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/date} for more details.\n */\nexport const DateField: React.FC<DateFieldProps> = ({\n    value,\n    locales,\n    format: dateFormat = \"L\",\n    ...rest\n}) => {\n    return (\n        <Typography variant=\"body2\" {...rest}>\n            {dayjs(value)\n                .locale(locales || defaultLocale)\n                .format(dateFormat)}\n        </Typography>\n    );\n};\n","import React from \"react\";\n\nimport { UrlField } from \"@components\";\n\nimport { FileFieldProps } from \"../types\";\n\n/**\n * This field is used to display files and  uses Material UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`}  and {@link https://mui.com/material-ui/react-link/#main-content `<Link>`} components.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/file} for more details.\n */\nexport const FileField: React.FC<FileFieldProps> = ({\n    title,\n    src,\n    ...rest\n}) => {\n    return (\n        <UrlField value={src} title={title} {...rest}>\n            {title ?? src}\n        </UrlField>\n    );\n};\n","import React from \"react\";\nimport Link from \"@mui/material/Link\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { UrlFieldProps } from \"../types\";\n\n/**\n * This field lets you embed a link.It uses the {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>` }\n * and {@link https://mui.com/material-ui/react-link/#main-content `<Link>`} components from Material UI.\n * You can pass a URL in its `value` property and you can show a text in its place by passing any `children`.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/url} for more details.\n */\nexport const UrlField: React.FC<UrlFieldProps> = ({\n    children,\n    value,\n    ...rest\n}) => {\n    return (\n        <Typography variant=\"body2\">\n            <Link href={value} {...rest}>\n                {children ?? value}\n            </Link>\n        </Typography>\n    );\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { NumberFieldProps } from \"../types\";\n\nfunction toLocaleStringSupportsOptions() {\n    return !!(\n        typeof Intl == \"object\" &&\n        Intl &&\n        typeof Intl.NumberFormat == \"function\"\n    );\n}\n\n/**\n * This field is used to display a number formatted according to the browser locale, right aligned. and uses {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl `Intl`} to display date format\n * and Material UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`} component.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/number} for more details.\n */\nexport const NumberField: React.FC<NumberFieldProps> = ({\n    value,\n    locale,\n    options,\n    ...rest\n}) => {\n    const number = Number(value);\n\n    return (\n        <Typography variant=\"body2\" {...rest}>\n            {toLocaleStringSupportsOptions()\n                ? number.toLocaleString(locale, options)\n                : number}\n        </Typography>\n    );\n};\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\n\nimport { MarkdownFieldProps } from \"../types\";\n\n/**\n * This field lets you display markdown content. It supports {@link https://github.github.com/gfm/ GitHub Flavored Markdown}.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/markdown} for more details.\n */\nexport const MarkdownField: React.FC<MarkdownFieldProps> = ({ value = \"\" }) => {\n    return <ReactMarkdown plugins={[gfm]}>{value}</ReactMarkdown>;\n};\n","import React from \"react\";\nimport {\n    matchResourceFromRoute,\n    useBreadcrumb,\n    useLink,\n    useRefineContext,\n    useResource,\n    useRouterContext,\n    useRouterType,\n} from \"@refinedev/core\";\nimport { RefineBreadcrumbProps } from \"@refinedev/ui-types\";\n\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\n\nimport type { BreadcrumbsProps as MuiBreadcrumbProps } from \"@mui/material/Breadcrumbs\";\nimport type { LinkProps } from \"@mui/material/Link\";\n\nimport HomeOutlined from \"@mui/icons-material/HomeOutlined\";\n\nexport type BreadcrumbProps = RefineBreadcrumbProps<MuiBreadcrumbProps>;\n\nexport const Breadcrumb: React.FC<BreadcrumbProps> = ({\n    breadcrumbProps,\n    showHome = true,\n    hideIcons = false,\n    meta,\n}) => {\n    const { breadcrumbs } = useBreadcrumb({ meta });\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : NewLink;\n\n    const { hasDashboard } = useRefineContext();\n\n    const { resources } = useResource();\n\n    const rootRouteResource = matchResourceFromRoute(\"/\", resources);\n\n    if (breadcrumbs.length === 1) {\n        return null;\n    }\n\n    const LinkRouter = (props: LinkProps & { to?: string }) => (\n        <Link {...props} component={ActiveLink} />\n    );\n\n    return (\n        <Breadcrumbs\n            aria-label=\"breadcrumb\"\n            sx={{\n                paddingY: 2,\n                paddingX: 2,\n                ...(breadcrumbProps?.sx ?? {}),\n            }}\n            {...breadcrumbProps}\n        >\n            {showHome && (hasDashboard || rootRouteResource.found) && (\n                <LinkRouter\n                    underline=\"hover\"\n                    sx={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                    }}\n                    color=\"inherit\"\n                    to=\"/\"\n                >\n                    {rootRouteResource?.resource?.meta?.icon ?? (\n                        <HomeOutlined\n                            sx={{\n                                fontSize: \"18px\",\n                            }}\n                        />\n                    )}\n                </LinkRouter>\n            )}\n            {breadcrumbs.map(({ label, icon, href }) => {\n                return (\n                    <Grid\n                        key={label}\n                        sx={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            \"& .MuiSvgIcon-root\": {\n                                fontSize: \"16px\",\n                            },\n                        }}\n                    >\n                        {!hideIcons && icon}\n                        {href ? (\n                            <LinkRouter\n                                underline=\"hover\"\n                                sx={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    fontSize: \"14px\",\n                                }}\n                                color=\"inherit\"\n                                to={href}\n                                variant=\"subtitle1\"\n                                marginLeft={0.5}\n                            >\n                                {label}\n                            </LinkRouter>\n                        ) : (\n                            <Typography fontSize=\"14px\">{label}</Typography>\n                        )}\n                    </Grid>\n                );\n            })}\n        </Breadcrumbs>\n    );\n};\n","import React from \"react\";\nimport { AutoSaveIndicatorProps, useTranslate } from \"@refinedev/core\";\nimport Typography from \"@mui/material/Typography\";\nimport MoreHorizOutlinedIcon from \"@mui/icons-material/MoreHorizOutlined\";\nimport SyncOutlinedIcon from \"@mui/icons-material/SyncOutlined\";\nimport TaskAltOutlinedIcon from \"@mui/icons-material/TaskAltOutlined\";\nimport ErrorOutlineOutlinedIcon from \"@mui/icons-material/ErrorOutlineOutlined\";\n\nexport const AutoSaveIndicator: React.FC<AutoSaveIndicatorProps> = ({\n    status,\n}) => {\n    const translate = useTranslate();\n    let message = null;\n    let icon = <MoreHorizOutlinedIcon fontSize=\"small\" />;\n\n    switch (status) {\n        case \"success\":\n            message = translate(\"autoSave.success\", \"saved\");\n            icon = <TaskAltOutlinedIcon fontSize=\"small\" />;\n            break;\n        case \"error\":\n            message = translate(\"autoSave.error\", \"auto save failure\");\n            icon = <ErrorOutlineOutlinedIcon fontSize=\"small\" />;\n\n            break;\n        case \"loading\":\n            message = translate(\"autoSave.loading\", \"saving...\");\n            icon = <SyncOutlinedIcon fontSize=\"small\" />;\n            break;\n        default:\n            // for idle\n            message = translate(\"autoSave.idle\", \"waiting for changes\");\n            break;\n    }\n\n    return (\n        <Typography\n            color=\"gray\"\n            fontSize=\"0.8rem\"\n            position=\"relative\"\n            display=\"flex\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n            marginRight=\".3rem\"\n        >\n            {message}\n            <span\n                style={{ position: \"relative\", top: \"3px\", marginLeft: \"3px\" }}\n            >\n                {icon}\n            </span>\n        </Typography>\n    );\n};\n","import type { Theme, ThemeOptions } from \"@mui/material/styles\";\nimport { createTheme } from \"@mui/material/styles\";\n\nimport { lightPalette } from \"./palette/lightPalette\";\nimport { darkPalette } from \"./palette/darkPalette\";\nimport { typography } from \"./typography\";\nimport { RefinePalettes } from \"./palette\";\n\nconst commonThemeProperties: ThemeOptions = {\n    shape: {\n        borderRadius: 6,\n    },\n    typography: {\n        ...typography,\n    },\n};\n\nconst LightTheme = createTheme({\n    ...commonThemeProperties,\n    palette: lightPalette,\n    components: {\n        MuiAppBar: {\n            styleOverrides: {\n                colorDefault: {\n                    backgroundColor: \"#fff\",\n                },\n            },\n        },\n        MuiPaper: {\n            styleOverrides: {\n                root: {\n                    backgroundImage:\n                        \"linear-gradient(rgba(255, 255, 255, 0.01), rgba(255, 255, 255, 0.01))\",\n                },\n            },\n        },\n        MuiTypography: {\n            styleOverrides: {\n                h5: {\n                    fontWeight: 800,\n                    lineHeight: \"2rem\",\n                },\n            },\n        },\n    },\n});\n\nconst DarkTheme = createTheme({\n    ...commonThemeProperties,\n    palette: darkPalette,\n    components: {\n        MuiPaper: {\n            styleOverrides: {\n                root: {\n                    backgroundImage:\n                        \"linear-gradient(rgba(255, 255, 255, 0.025), rgba(255, 255, 255, 0.025))\",\n                },\n            },\n        },\n        MuiAppBar: {\n            defaultProps: {\n                color: \"transparent\",\n            },\n        },\n        MuiTypography: {\n            styleOverrides: {\n                h5: {\n                    fontWeight: 800,\n                    lineHeight: \"2rem\",\n                },\n            },\n        },\n    },\n});\n\nconst RefineThemes = Object.keys(RefinePalettes).reduce((acc, key) => {\n    const paletteName = key as keyof typeof RefinePalettes;\n\n    return {\n        ...acc,\n        [key]: createTheme({\n            palette: {\n                ...RefinePalettes[paletteName],\n            },\n            components: {\n                MuiButton: {\n                    styleOverrides: {\n                        root: ({ ownerState }) => ({\n                            ...(ownerState.variant === \"contained\" &&\n                                ownerState.color === \"primary\" && {\n                                    color: \"#fff\",\n                                }),\n                        }),\n                    },\n                },\n            },\n        }),\n    };\n}, {}) as Record<keyof typeof RefinePalettes, Theme>;\n\nexport { LightTheme, DarkTheme, RefineThemes };\n","import type { PaletteOptions } from \"@mui/material/styles\";\n\nexport const lightPalette: PaletteOptions = {\n    mode: \"light\",\n    primary: {\n        main: \"#67be23\",\n        contrastText: \"#fff\",\n    },\n    secondary: {\n        main: \"#2A132E\",\n        contrastText: \"#fff\",\n    },\n    background: {\n        default: \"#f0f0f0\",\n        paper: \"#ffffff\",\n    },\n    success: {\n        main: \"#67be23\",\n        contrastText: \"#fff\",\n    },\n    error: {\n        main: \"#fa541c\",\n        contrastText: \"#fff\",\n    },\n    warning: {\n        main: \"#fa8c16\",\n        contrastText: \"#fff\",\n    },\n    info: {\n        main: \"#0b82f0\",\n        contrastText: \"#fff\",\n    },\n    divider: \"rgba(0,0,0,0)\",\n    text: {\n        primary: \"#626262\",\n        secondary: \"#9f9f9f\",\n        disabled: \"#c1c1c1\",\n    },\n};\n","import type { PaletteOptions } from \"@mui/material/styles\";\n\nexport const darkPalette: PaletteOptions = {\n    mode: \"dark\",\n    primary: {\n        main: \"#67be23\",\n        contrastText: \"#fff\",\n    },\n    secondary: {\n        main: \"#2A132E\",\n        contrastText: \"#fff\",\n    },\n    background: {\n        default: \"#212121\",\n        paper: \"#242424\",\n    },\n    success: {\n        main: \"#67be23\",\n        contrastText: \"#fff\",\n    },\n    error: {\n        main: \"#ee2a1e\",\n        contrastText: \"#fff\",\n    },\n    warning: {\n        main: \"#fa8c16\",\n        contrastText: \"#fff\",\n    },\n    info: {\n        main: \"#1890ff\",\n        contrastText: \"#fff\",\n    },\n    divider: \"rgba(0,0,0,0)\",\n    text: {\n        primary: \"#fff\",\n        secondary: \"rgba(255,255,255,0.7)\",\n        disabled: \"#d1d1d1\",\n    },\n};\n","import type { TypographyVariantsOptions } from \"@mui/material/styles\";\n\nexport const typography: TypographyVariantsOptions = {\n    fontFamily: [\n        \"Montserrat\",\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n};\n","export const RefinePalettes = {\n    Blue: {\n        mode: \"light\",\n        primary: {\n            main: \"#1976D2\",\n            light: \"#4791db\",\n            dark: \"#115293\",\n        },\n    },\n    BlueDark: {\n        mode: \"dark\",\n        primary: {\n            main: \"#67b7f7\",\n            light: \"#85c5f8\",\n            dark: \"#4880ac\",\n        },\n    },\n    Purple: {\n        mode: \"light\",\n        primary: {\n            main: \"#7B1FA2\",\n            light: \"#954bb4\",\n            dark: \"#561571\",\n        },\n    },\n    PurpleDark: {\n        mode: \"dark\",\n        primary: {\n            main: \"#AB47BC\",\n            light: \"#bb6bc9\",\n            dark: \"#773183\",\n        },\n    },\n    Magenta: {\n        mode: \"light\",\n        primary: {\n            main: \"#C2185B\",\n            light: \"#ce467b\",\n            dark: \"#87103f\",\n        },\n    },\n    MagentaDark: {\n        mode: \"dark\",\n        primary: {\n            main: \"#EC407A\",\n            light: \"#ef6694\",\n            dark: \"#a52c55\",\n        },\n    },\n    Red: {\n        mode: \"light\",\n        primary: {\n            main: \"#D32F2F\",\n            light: \"#db5858\",\n            dark: \"#932020\",\n        },\n    },\n    RedDark: {\n        mode: \"dark\",\n        primary: {\n            main: \"#EF5350\",\n            light: \"#f27573\",\n            dark: \"#a73a38\",\n        },\n    },\n    Orange: {\n        mode: \"light\",\n        primary: {\n            main: \"#F57C00\",\n            light: \"#f79633\",\n            dark: \"#ab5600\",\n        },\n    },\n    OrangeDark: {\n        mode: \"dark\",\n        primary: {\n            main: \"#FFA726\",\n            light: \"#ffb851\",\n            dark: \"#b2741a\",\n        },\n    },\n    Yellow: {\n        mode: \"light\",\n        primary: {\n            main: \"#FFA000\",\n            light: \"#ffb333\",\n            dark: \"#b27000\",\n        },\n    },\n    YellowDark: {\n        mode: \"dark\",\n        primary: {\n            main: \"#FFCA28\",\n            light: \"#ffd453\",\n            dark: \"#E87040\",\n        },\n    },\n    Green: {\n        mode: \"light\",\n        primary: {\n            main: \"#689F38\",\n            light: \"#86b25f\",\n            dark: \"#486f27\",\n        },\n    },\n    GreenDark: {\n        mode: \"dark\",\n        primary: {\n            main: \"#9CCC65\",\n            light: \"#afd683\",\n            dark: \"#6d8e46\",\n        },\n    },\n} as const;\n","import React from \"react\";\nimport { NotificationProvider } from \"@refinedev/core\";\n\nimport { useSnackbar } from \"notistack\";\n\nimport { CircularDeterminate } from \"@components\";\n\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport UndoOutlined from \"@mui/icons-material/UndoOutlined\";\n\nexport const notificationProvider = (): NotificationProvider => {\n    const { closeSnackbar, enqueueSnackbar } = useSnackbar();\n\n    const notificationProvider: NotificationProvider = {\n        open: ({\n            message,\n            type,\n            undoableTimeout,\n            key,\n            cancelMutation,\n            description,\n        }) => {\n            if (type === \"progress\") {\n                const action = (key: any) => (\n                    <IconButton\n                        onClick={() => {\n                            cancelMutation?.();\n                            closeSnackbar(key);\n                        }}\n                        color=\"inherit\"\n                    >\n                        <UndoOutlined />\n                    </IconButton>\n                );\n                enqueueSnackbar(\n                    <>\n                        <CircularDeterminate\n                            undoableTimeout={undoableTimeout ?? 0}\n                            message={message}\n                        />\n                    </>,\n                    {\n                        action,\n                        anchorOrigin: {\n                            vertical: \"top\",\n                            horizontal: \"right\",\n                        },\n                        preventDuplicate: true,\n                        key,\n                        autoHideDuration: (undoableTimeout ?? 0) * 1000,\n                        disableWindowBlurListener: true,\n                    },\n                );\n            } else {\n                enqueueSnackbar(\n                    <Box>\n                        <Typography variant=\"subtitle2\" component=\"h6\">\n                            {description}\n                        </Typography>\n                        <Typography variant=\"caption\" component=\"p\">\n                            {message}\n                        </Typography>\n                    </Box>,\n                    {\n                        variant: type,\n                        anchorOrigin: {\n                            vertical: \"top\",\n                            horizontal: \"right\",\n                        },\n                        disableWindowBlurListener: true,\n                    },\n                );\n            }\n        },\n        close: (key) => {\n            closeSnackbar(key);\n        },\n    };\n\n    return notificationProvider;\n};\n","import { styled } from \"@mui/material/styles\";\nimport { SnackbarProvider } from \"notistack\";\n\nexport const RefineSnackbarProvider = styled(SnackbarProvider)`\n    &.SnackbarItem-contentRoot {\n        background-color: ${(props) => props.theme.palette.background.default};\n        color: ${(props) => props.theme.palette.primary.main};\n    }\n    &.SnackbarItem-variantSuccess {\n        background-color: ${(props) => props.theme.palette.success.main};\n        color: ${(props) => props.theme.palette.success.contrastText};\n    }\n    &.SnackbarItem-variantError {\n        background-color: ${(props) => props.theme.palette.error.main};\n        color: ${(props) => props.theme.palette.error.contrastText};\n    }\n    &.SnackbarItem-variantInfo {\n        background-color: ${(props) => props.theme.palette.info.main};\n        color: ${(props) => props.theme.palette.info.contrastText};\n    }\n    &.SnackbarItem-variantWarning {\n        background-color: ${(props) => props.theme.palette.warning.main};\n        color: ${(props) => props.theme.palette.warning.contrastText};\n    }\n`;\n","import React from \"react\";\nimport { useResource } from \"@refinedev/core\";\n\nimport { ShowInferencer } from \"./show\";\nimport { ListInferencer } from \"./list\";\nimport { CreateInferencer } from \"./create\";\nimport { EditInferencer } from \"./edit\";\n\nimport type { InferencerComponentProps } from \"../../types\";\n\nconst MuiInferencer: React.FC<InferencerComponentProps> = ({\n    action: actionFromProps,\n    id: idFromProps,\n    ...props\n}) => {\n    const { action, id } = useResource();\n\n    switch (actionFromProps ?? action) {\n        case \"show\":\n            return <ShowInferencer {...props} id={idFromProps ?? id} />;\n        case \"create\":\n            return <CreateInferencer {...props} id={idFromProps ?? id} />;\n        case \"edit\":\n            return <EditInferencer {...props} id={idFromProps ?? id} />;\n        default:\n            return <ListInferencer {...props} id={idFromProps ?? id} />;\n    }\n};\n\nexport { MuiInferencer };\nexport {\n    ShowInferencer as MuiShowInferencer,\n    renderer as MuiShowRenderer,\n} from \"./show\";\nexport {\n    EditInferencer as MuiEditInferencer,\n    renderer as MuiEditRenderer,\n} from \"./edit\";\nexport {\n    ListInferencer as MuiListInferencer,\n    renderer as MuiListRenderer,\n} from \"./list\";\nexport {\n    CreateInferencer as MuiCreateInferencer,\n    renderer as MuiCreateRenderer,\n} from \"./create\";\nexport * from \"../../types\";\n","import {\n    Show,\n    TagField,\n    TextFieldComponent,\n    EmailField,\n    UrlField,\n    BooleanField,\n    DateField,\n    MarkdownField,\n    NumberField,\n} from \"@refinedev/mui\";\n\nimport Typography from \"@mui/material/Typography\";\nimport Stack from \"@mui/material/Stack\";\n\nimport { createInferencer } from \"../../create-inferencer\";\nimport {\n    jsx,\n    componentName,\n    accessor,\n    printImports,\n    noOp,\n    getVariableName,\n    translatePrettyString,\n    getMetaProps,\n    idQuoteWrapper,\n} from \"../../utilities\";\n\nimport { ErrorComponent } from \"./error\";\nimport { LoadingComponent } from \"./loading\";\nimport { SharedCodeViewer } from \"../../components/shared-code-viewer\";\n\nimport {\n    InferencerResultComponent,\n    InferField,\n    ImportElement,\n    RendererContext,\n} from \"../../types\";\n\n/**\n * a renderer function for show page in Material UI\n * @internal used internally from inferencer components\n */\nexport const renderer = ({\n    resource,\n    fields,\n    meta,\n    isCustomPage,\n    id,\n    i18n,\n}: RendererContext) => {\n    const COMPONENT_NAME = componentName(\n        resource.label ?? resource.name,\n        \"show\",\n    );\n    const recordName = \"record\";\n    const imports: Array<ImportElement> = [\n        [\"useShow\", \"@refinedev/core\"],\n        [\"Show\", \"@refinedev/mui\"],\n        [\"Typography\", \"@mui/material\"],\n        [\"Stack\", \"@mui/material\"],\n        [\"IResourceComponentsProps\", \"@refinedev/core\"],\n    ];\n\n    if (i18n) {\n        imports.push([\"useTranslate\", \"@refinedev/core\"]);\n    }\n\n    const relationFields: (InferField | null)[] = fields.filter(\n        (field) => field?.relation && !field?.fieldable && field?.resource,\n    );\n\n    const relationHooksCode = relationFields\n        .filter(Boolean)\n        .map((field) => {\n            if (field?.relation && !field.fieldable && field.resource) {\n                if (field.multiple) {\n                    imports.push([\"useMany\", \"@refinedev/core\"]);\n\n                    let ids = accessor(recordName, field.key);\n\n                    if (field.accessor) {\n                        ids = `${accessor(\n                            recordName,\n                            field.key,\n                        )}?.map((item: any) => ${accessor(\n                            \"item\",\n                            undefined,\n                            field.accessor,\n                        )})`;\n                    }\n\n                    return `\n                const { data: ${getVariableName(\n                    field.key,\n                    \"Data\",\n                )}, isLoading: ${getVariableName(field.key, \"IsLoading\")} } =\n                useMany({\n                    resource: \"${field.resource.name}\",\n                    ids: ${ids} || [],\n                    queryOptions: {\n                        enabled: !!${recordName} && !!${ids}?.length,\n                    },\n                    ${getMetaProps(\n                        field?.resource?.identifier ?? field?.resource?.name,\n                        meta,\n                        \"getMany\",\n                    )}\n                });\n                `;\n                }\n\n                imports.push([\"useOne\", \"@refinedev/core\"]);\n\n                return `\n                const { data: ${getVariableName(\n                    field.key,\n                    \"Data\",\n                )}, isLoading: ${getVariableName(field.key, \"IsLoading\")} } =\n                useOne({\n                    resource: \"${field.resource.name}\",\n                    id: ${accessor(\n                        recordName,\n                        field.key,\n                        field.accessor,\n                        false,\n                    )} || \"\",\n                    queryOptions: {\n                        enabled: !!${recordName},\n                    },\n                    ${getMetaProps(\n                        field?.resource?.identifier ?? field?.resource?.name,\n                        meta,\n                        \"getOne\",\n                    )}\n                });\n            `;\n            }\n            return undefined;\n        })\n        .filter(Boolean);\n\n    const renderRelationFields = (field: InferField) => {\n        if (field.relation && field.resource) {\n            const variableName = getVariableName(field.key, \"Data\");\n            const variableIsLoading = getVariableName(field.key, \"IsLoading\");\n\n            if (field.multiple) {\n                const variableDataLength =\n                    accessor(recordName, field.key) + \"?.length\";\n                imports.push([\"TagField\", \"@refinedev/mui\"]);\n\n                return jsx`\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                    ${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                        noQuotes: true,\n                    })}\n                </Typography>\n                {${variableIsLoading} && ${variableDataLength} ? (\n                    <>\n                        Loading...\n                    </>\n                    ) : (\n                    <>\n                    ${(() => {\n                        if (field.relationInfer) {\n                            if (field.relationInfer?.accessor) {\n                                if (\n                                    Array.isArray(field.relationInfer.accessor)\n                                ) {\n                                    return `Not Handled.`;\n                                } else {\n                                    const mapItemName = getVariableName(\n                                        field.key,\n                                    );\n                                    const val = accessor(\n                                        mapItemName,\n                                        undefined,\n                                        field.relationInfer.accessor,\n                                    );\n                                    return `\n                                        {record?.${field.key}?.length ? <Stack direction=\"row\" spacing={1}>\n                                            {${variableName}?.data?.map((${mapItemName}: any) => (\n                                                <TagField key={${val}} value={${val}} />\n                                            ))}\n                                        </Stack> : <></>}\n                                    `;\n                                }\n                            } else {\n                                return `Not Handled.`;\n                            }\n                        } else {\n                            return `not-handled - relation with multiple but no resource`;\n                        }\n                    })()}\n                    </>\n                )}\n                `;\n            }\n\n            if (field.fieldable) {\n                return jsx`\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                    ${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                        noQuotes: true,\n                    })}\n                </Typography>\n                <TextField value={${accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                )}} />\n                `;\n            }\n\n            return jsx`\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                    ${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                        noQuotes: true,\n                    })}\n                </Typography>\n\n                {${variableIsLoading} ? (\n                    <>Loading...</>\n                ) : (\n                    <>\n                    ${(() => {\n                        if (field.relationInfer) {\n                            if (field.relationInfer?.accessor) {\n                                if (\n                                    Array.isArray(field.relationInfer.accessor)\n                                ) {\n                                    return `{${accessor(\n                                        `${variableName}?.data`,\n                                        undefined,\n                                        field.relationInfer.accessor,\n                                        ' + \" \" + ',\n                                    )}}`;\n                                } else {\n                                    return `{${variableName}?.data?.${field.relationInfer.accessor}}`;\n                                }\n                            } else {\n                                return `{${variableName}?.data}`;\n                            }\n                        } else {\n                            return `{${variableName}?.data?.id}`;\n                        }\n                    })()}\n                    </>\n                )}\n                `;\n        }\n        return undefined;\n    };\n\n    const textFields = (field: InferField) => {\n        if (field.type === \"text\") {\n            imports.push([\"TextFieldComponent as TextField\", \"@refinedev/mui\"]);\n\n            if (field.multiple) {\n                imports.push([\"TagField\", \"@refinedev/mui\"]);\n\n                const val = accessor(\"item\", undefined, field.accessor);\n\n                return jsx`\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                    ${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                        noQuotes: true,\n                    })}\n                </Typography>\n                <Stack direction=\"row\" spacing={1}>\n                {${accessor(recordName, field.key)}?.map((item: any) => (\n                    <TagField value={${val}} key={${val}} />\n                ))}\n                </Stack>\n            `;\n            }\n\n            return jsx`\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                    ${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                        noQuotes: true,\n                    })}\n                </Typography>\n                <TextField value={${accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                )}} />\n            `;\n        }\n        return undefined;\n    };\n\n    const imageFields = (field: InferField) => {\n        if (field.type === \"image\") {\n            if (field.multiple) {\n                const val = accessor(\"item\", undefined, field.accessor);\n\n                return jsx`\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                    ${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                        noQuotes: true,\n                    })}\n                </Typography>\n                <Stack direction=\"row\" spacing={1}>\n                {${accessor(recordName, field.key)}?.map((item: any) => (\n                    <img style={{ maxWidth: 200, width: \"100%\", height: 200 }} src={${val}} key={${val}} />\n                ))}\n                </Stack>\n            `;\n            }\n\n            return jsx`\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                    ${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                        noQuotes: true,\n                    })}\n                </Typography>\n                <img style={{ maxWidth: 200, width: \"100%\", height: 200 }} src={${accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                    \" + \",\n                )}} />\n                `;\n        }\n        return undefined;\n    };\n\n    const emailFields = (field: InferField) => {\n        if (field.type === \"email\") {\n            imports.push([\"EmailField\", \"@refinedev/mui\"]);\n\n            if (field.multiple) {\n                imports.push([\"TagField\", \"@refinedev/mui\"]);\n\n                const val = accessor(\"item\", undefined, field.accessor);\n\n                return jsx`\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                    ${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                        noQuotes: true,\n                    })}\n                </Typography>\n                <Stack direction=\"row\" spacing={1}>\n                {${accessor(recordName, field.key)}?.map((item: any) => (\n                    <TagField value={${val}} key={${val}} />\n                ))}\n                </Stack>\n            `;\n            }\n            return jsx`\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                    ${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                        noQuotes: true,\n                    })}\n                </Typography>\n                <EmailField value={${accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                    \" + \",\n                )}} />\n            `;\n        }\n        return undefined;\n    };\n\n    const urlFields = (field: InferField) => {\n        if (field.type === \"url\") {\n            imports.push([\"UrlField\", \"@refinedev/mui\"]);\n\n            if (field.multiple) {\n                imports.push([\"TagField\", \"@refinedev/mui\"]);\n\n                const val = accessor(\"item\", undefined, field.accessor);\n\n                return jsx`\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                    ${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                        noQuotes: true,\n                    })}\n                </Typography>\n                <Stack direction=\"row\" spacing={1}>\n                {${accessor(recordName, field.key)}?.map((item: any) => (\n                    <TagField value={${val}} key={${val}} />\n                ))}\n                </Stack>\n            `;\n            }\n            return jsx`\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                    ${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                        noQuotes: true,\n                    })}\n                </Typography>\n                <UrlField value={${accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                    \" + \",\n                )}} />\n            `;\n        }\n        return undefined;\n    };\n\n    const booleanFields = (field: InferField) => {\n        if (field.type === \"boolean\") {\n            imports.push([\"BooleanField\", \"@refinedev/mui\"]);\n\n            if (field.multiple) {\n                imports.push([\"TagField\", \"@refinedev/mui\"]);\n\n                const val = accessor(\"item\", undefined, field.accessor);\n\n                return jsx`\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                    ${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                        noQuotes: true,\n                    })}\n                </Typography>\n                <Stack direction=\"row\" spacing={1}>\n                {${accessor(\n                    recordName,\n                    field.key,\n                )}?.map((item: any, index: number) => (\n                    <TagField value={${val}} key={index} />\n                ))}\n                </Stack>\n            `;\n            }\n\n            return jsx`\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                    ${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                        noQuotes: true,\n                    })}\n                </Typography>\n                <BooleanField value={${accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                    \" && \",\n                )}} />\n            `;\n        }\n        return undefined;\n    };\n\n    const dateFields = (field: InferField) => {\n        if (field.type === \"date\") {\n            imports.push([\"DateField\", \"@refinedev/mui\"]);\n\n            if (field.multiple) {\n                const val = accessor(\"item\", undefined, field.accessor);\n\n                return jsx`\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                    ${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                        noQuotes: true,\n                    })}\n                </Typography>\n                <Stack direction=\"row\" spacing={1}>\n                {${accessor(recordName, field.key)}?.map((item: any) => (\n                    <DateField value={${val}} key={${val}} />\n                ))}\n                </Stack>\n            `;\n            }\n\n            return jsx`\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                    ${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                        noQuotes: true,\n                    })}\n                </Typography>\n                <DateField value={${accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                    \" + ' ' + \",\n                )}} />\n            `;\n        }\n        return undefined;\n    };\n\n    const richtextFields = (field: InferField) => {\n        if (field.type === \"richtext\") {\n            imports.push([\"MarkdownField\", \"@refinedev/mui\"]);\n\n            return jsx`\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                    ${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                        noQuotes: true,\n                    })}\n                </Typography>\n                <MarkdownField value={${accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                    ' + \" \" + ',\n                )}} />\n            `;\n        }\n\n        return undefined;\n    };\n\n    const numberFields = (field: InferField) => {\n        if (field.type === \"number\") {\n            imports.push([\"NumberField\", \"@refinedev/mui\"]);\n\n            if (field.multiple) {\n                imports.push([\"TagField\", \"@refinedev/mui\"]);\n\n                const val = accessor(\"item\", undefined, field.accessor);\n\n                return jsx`\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                    ${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                        noQuotes: true,\n                    })}\n                </Typography>\n                <Stack direction=\"row\" spacing={1}>\n                {${accessor(recordName, field.key)}?.map((item: any) => (\n                    <TagField value={${val}} key={${val}} />\n                ))}\n                </Stack>\n            `;\n            }\n\n            return jsx`\n                <Typography variant=\"body1\" fontWeight=\"bold\">\n                    ${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                        noQuotes: true,\n                    })}\n                </Typography>\n                <NumberField value={${accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                    ' + \" \" + ',\n                )} ?? \"\"} />\n            `;\n        }\n        return undefined;\n    };\n\n    const renderedFields: Array<string | undefined> = fields.map((field) => {\n        switch (field?.type) {\n            case \"text\":\n                return textFields(field);\n            case \"number\":\n                return numberFields(field);\n            case \"richtext\":\n                return richtextFields(field);\n            case \"email\":\n                return emailFields(field);\n            case \"image\":\n                return imageFields(field);\n            case \"date\":\n                return dateFields(field);\n            case \"boolean\":\n                return booleanFields(field);\n            case \"url\":\n                return urlFields(field);\n            case \"relation\":\n                return renderRelationFields(field);\n            default:\n                return undefined;\n        }\n    });\n\n    noOp(imports);\n    const useTranslateHook = i18n && `const translate = useTranslate();`;\n\n    return jsx`\n    ${printImports(imports)}\n\n    export const ${COMPONENT_NAME}: React.FC<IResourceComponentsProps> = () => {\n        ${useTranslateHook}\n        const { queryResult } = useShow(${\n            isCustomPage\n                ? `{ \n                    resource: \"${resource.name}\", \n                    id: ${idQuoteWrapper(id)},\n                    ${getMetaProps(\n                        resource?.identifier ?? resource?.name,\n                        meta,\n                        \"getOne\",\n                    )}\n                }`\n                : getMetaProps(\n                      resource?.identifier ?? resource?.name,\n                      meta,\n                      \"getOne\",\n                  )\n                ? `{ ${getMetaProps(\n                      resource?.identifier ?? resource?.name,\n                      meta,\n                      \"getOne\",\n                  )} }`\n                : \"\"\n        });\n        const { data, isLoading } = queryResult;\n    \n        const ${recordName} = data?.data;\n    \n        ${relationHooksCode}\n\n        return (\n            <Show isLoading={isLoading}>\n                <Stack gap={1}>\n                    ${renderedFields.join(\"\")}\n                </Stack>\n            </Show>\n        );\n    };\n    `;\n};\n\n/**\n * @experimental This is an experimental component\n */\nexport const ShowInferencer: InferencerResultComponent = createInferencer({\n    type: \"show\",\n    additionalScope: [\n        [\n            \"@refinedev/mui\",\n            \"RefineMui\",\n            {\n                Show,\n                TagField,\n                TextFieldComponent,\n                EmailField,\n                UrlField,\n                BooleanField,\n                DateField,\n                MarkdownField,\n                NumberField,\n            },\n        ],\n        [\"@mui/material\", \"MuiMaterial\", { Typography, Stack }],\n    ],\n    codeViewerComponent: SharedCodeViewer,\n    loadingComponent: LoadingComponent,\n    errorComponent: ErrorComponent,\n    renderer,\n});\n","import React, { useContext } from \"react\";\nimport { useResource, TranslationContext } from \"@refinedev/core\";\n\nimport {\n    CreateInferencer,\n    InferencerComponentProps,\n    InferencerResultComponent,\n    InferField,\n} from \"../types\";\n\nimport { composeInferencers } from \"../compose-inferencers\";\nimport { composeTransformers } from \"../compose-transformers\";\n\nimport { defaultElements } from \"../field-inferencers\";\nimport { defaultTransformers } from \"../field-transformers\";\nimport { LiveComponent } from \"../components\";\nimport { useInferFetch } from \"../use-infer-fetch\";\nimport { useRelationFetch } from \"../use-relation-fetch\";\n\nimport { prepareLiveCode, componentName, removeHiddenCode } from \"../utilities\";\n\n/**\n * CreateInferencer is a function that creates a Inferencer component.\n *\n * Inferencer will handle the data fetching and the infering parts,\n * then it will invoke the `renderer` function to generate the code.\n * The generated code will be used to render the component by `react-live`.\n * Its required to havee`additionalScope` prop when using packages other than `react` and `@refinedev/core`.\n *\n * @param config - Inferencer configuration.\n * @param config.type - Infering type.\n * @param config.additionalScope - Additional scope for live code.\n * @param config.renderer - String renderer for Inferencer.\n * @param config.fieldTransformers - Field transformers.\n * @param config.customElements - Field inferencers.\n * @param config.codeViewerComponent - Code viewer component.\n * @param config.errorComponent - Error component.\n * @param config.loadingComponent - Loading component.\n */\nexport const createInferencer: CreateInferencer = ({\n    type,\n    additionalScope = [],\n    customElements = [],\n    fieldTransformers = [],\n    renderer,\n    loadingComponent: LoadingComponent,\n    errorComponent: ErrorComponent,\n    codeViewerComponent: CodeViewerComponent,\n}) => {\n    const infer = composeInferencers([...defaultElements, ...customElements]);\n    const transform = composeTransformers([\n        ...defaultTransformers,\n        ...fieldTransformers,\n    ]);\n\n    const Inferencer = ({\n        resourceName,\n        fieldTransformer,\n        hideCodeViewerInProduction,\n        meta,\n        id,\n    }: {\n        resourceName?: string;\n        hideCodeViewerInProduction?: boolean;\n        fieldTransformer?: InferencerComponentProps[\"fieldTransformer\"];\n        meta?: InferencerComponentProps[\"meta\"];\n        id?: string | number;\n    }) => {\n        const { resource, resources } = useResource(resourceName);\n        const { i18nProvider } = useContext(TranslationContext);\n\n        const { resource: resourceFromURL } = useResource();\n\n        const {\n            data: record,\n            datas: records,\n            loading: recordLoading,\n            initial: isInitialLoad,\n            error: inferError,\n        } = useInferFetch(type, resourceName ?? resource?.name, id, meta);\n\n        const inferSingleField = (\n            key: string,\n            value: any,\n            record: Record<string, unknown>,\n        ) => {\n            const inferResult = infer(key, value, record, infer, type);\n\n            if (inferResult) {\n                if (resource) {\n                    const transformed = transform(\n                        [inferResult] as InferField[],\n                        resources,\n                        resource,\n                        record,\n                        infer,\n                        type,\n                    );\n\n                    const customTransformedFields = fieldTransformer\n                        ? transformed.flatMap((field) => {\n                              const result = fieldTransformer(field);\n\n                              return result ? [result] : [];\n                          })\n                        : transformed;\n\n                    return customTransformedFields?.[0];\n                }\n            }\n\n            return undefined;\n        };\n\n        const inferSingleRecord = (record: Record<string, unknown>) => {\n            const inferred = Object.keys(record)\n                .map((key) => {\n                    const value = record[key];\n\n                    const inferResult = inferSingleField(key, value, record);\n\n                    return inferResult;\n                })\n                .filter(Boolean);\n\n            return inferred as InferField[];\n        };\n\n        const inferMultipleRecords = (records: Record<string, unknown>[]) => {\n            // infer each record\n            // get the most common one for each field\n            // also get the first occurence of the each most common field/key and construct a fresh record from them.\n            // return the fresh record and the inferred fields\n\n            const inferred = records.map((record) => inferSingleRecord(record));\n\n            const allUniqueKeys = records\n                .flatMap((record) => Object.keys(record))\n                .filter((key, index, self) => self.indexOf(key) === index);\n\n            const mostCommonRecord: Record<string, unknown> = {};\n\n            const mostCommonFields = allUniqueKeys.map((key) => {\n                const fields = inferred.map((fields) =>\n                    fields.find((field) => field.key === key),\n                );\n\n                const mostCommonField = fields.reduce(\n                    (acc, field, index) => {\n                        if (!field) {\n                            return acc;\n                        }\n\n                        const count = fields.filter(\n                            (f) =>\n                                f?.key === field.key && f?.type === field.type,\n                        ).length;\n\n                        if (count > acc.count) {\n                            mostCommonRecord[key] = records[index][key];\n\n                            return {\n                                count,\n                                field,\n                            };\n                        }\n\n                        return acc;\n                    },\n                    { count: 0, field: undefined } as {\n                        count: number;\n                        field: undefined | InferField;\n                    },\n                );\n\n                return mostCommonField.field;\n            });\n\n            const response = {\n                commonRecord: mostCommonRecord,\n                inferredFields: mostCommonFields,\n            };\n\n            return response;\n        };\n\n        const [rawResults, recordInUse]: [\n            InferField[],\n            Record<string, unknown> | undefined,\n        ] = React.useMemo(() => {\n            if (records && (type === \"list\" || type === \"create\")) {\n                const inferred = inferMultipleRecords(records);\n\n                return [\n                    inferred.inferredFields as InferField[],\n                    inferred.commonRecord,\n                ];\n            }\n            if (record) {\n                const inferred = Object.keys(record)\n                    .map((key) => {\n                        const value = record[key];\n\n                        const inferResult = infer(\n                            key,\n                            value,\n                            record,\n                            infer,\n                            type,\n                        );\n\n                        return inferResult;\n                    })\n                    .filter(Boolean);\n\n                if (resource) {\n                    const transformed = transform(\n                        inferred as InferField[],\n                        resources,\n                        resource,\n                        record,\n                        infer,\n                        type,\n                    );\n\n                    const customTransformedFields = fieldTransformer\n                        ? transformed.flatMap((field) => {\n                              const result = fieldTransformer(field);\n\n                              return result ? [result] : [];\n                          })\n                        : transformed;\n\n                    return [customTransformedFields, record];\n                }\n\n                return [[], record];\n            }\n\n            return [[], undefined];\n        }, [record, records, resources, resource, fieldTransformer]);\n\n        const {\n            fields: results,\n            loading: relationLoading,\n            // initial: relationInitial,\n        } = useRelationFetch({\n            record: recordInUse,\n            fields: rawResults,\n            infer,\n            meta,\n        });\n\n        const clearedFields = React.useMemo(() => {\n            const cleanFields: InferField[] = [];\n\n            results.forEach((f, idx, arr) => {\n                if (f.resource) {\n                    if (\n                        cleanFields.findIndex(\n                            (el) => el.resource?.name === f.resource?.name,\n                        ) > -1\n                    ) {\n                        return;\n                    }\n                    const duplicates = arr.filter((field, index) => {\n                        if (index !== idx) {\n                            const currentFieldHasResource = f.resource;\n                            const fieldHasResource = field.resource;\n                            const hasAnyIdentifier =\n                                field.resource?.identifier ||\n                                f.resource?.identifier;\n                            const isSameResource = hasAnyIdentifier\n                                ? field.resource?.identifier ===\n                                  f.resource?.identifier\n                                : field.resource?.name === f.resource?.name;\n\n                            return (\n                                currentFieldHasResource &&\n                                fieldHasResource &&\n                                isSameResource\n                            );\n                        } else {\n                            return false;\n                        }\n                    });\n                    if (duplicates.length > 0) {\n                        if (type === \"create\" || type === \"edit\") {\n                            let toPush: InferField | undefined = undefined;\n\n                            [f, ...duplicates].find((el) => {\n                                if (\n                                    el.fieldable !== true &&\n                                    toPush === undefined\n                                ) {\n                                    toPush = el;\n                                }\n                            });\n                            if (toPush) {\n                                cleanFields.push(toPush);\n                            } else {\n                                cleanFields.push(f);\n                            }\n                        } else {\n                            let toPush: InferField | undefined = undefined;\n\n                            [f, ...duplicates].find((el) => {\n                                if (\n                                    el.fieldable !== false &&\n                                    toPush === undefined\n                                ) {\n                                    toPush = el;\n                                }\n                            });\n\n                            if (toPush) {\n                                cleanFields.push(toPush);\n                            } else {\n                                cleanFields.push(f);\n                            }\n                        }\n                    } else {\n                        cleanFields.push(f);\n                    }\n                } else {\n                    cleanFields.push(f);\n                }\n            });\n\n            return cleanFields;\n        }, [results, type]);\n\n        const code = React.useMemo(() => {\n            if (\n                !recordLoading &&\n                !relationLoading &&\n                !isInitialLoad &&\n                resource\n            ) {\n                return renderer({\n                    resource,\n                    resources,\n                    fields: clearedFields,\n                    infer,\n                    meta,\n                    isCustomPage: resource.name !== resourceFromURL?.name,\n                    id,\n                    i18n: !!i18nProvider,\n                });\n            }\n            return \"\";\n        }, [\n            resource,\n            resources,\n            clearedFields,\n            recordLoading,\n            relationLoading,\n        ]);\n\n        const hiddenCodeViewer =\n            process.env.NODE_ENV !== \"development\" &&\n            hideCodeViewerInProduction;\n\n        return (\n            <>\n                {LoadingComponent && (recordLoading || relationLoading) && (\n                    <LoadingComponent />\n                )}\n                {!recordLoading && !relationLoading && (\n                    <>\n                        <LiveComponent\n                            fetchError={\n                                !recordLoading && inferError\n                                    ? inferError\n                                    : !recordLoading &&\n                                      !isInitialLoad &&\n                                      !record\n                            }\n                            code={prepareLiveCode(\n                                code,\n                                componentName(\n                                    resource?.meta?.label ??\n                                        resource?.options?.label ??\n                                        resource?.label ??\n                                        resource?.name ??\n                                        \"Resource\",\n                                    type,\n                                ),\n                            )}\n                            errorComponent={ErrorComponent}\n                            additionalScope={additionalScope}\n                        />\n                        {typeof CodeViewerComponent !== \"undefined\" &&\n                        !hiddenCodeViewer ? (\n                            <CodeViewerComponent\n                                code={removeHiddenCode(code)}\n                                loading={recordLoading || relationLoading}\n                            />\n                        ) : null}\n                    </>\n                )}\n            </>\n        );\n    };\n\n    const InferencerComponent: InferencerResultComponent = ({\n        name,\n        resource,\n        fieldTransformer,\n        meta,\n        hideCodeViewerInProduction,\n        id,\n    }) => {\n        const { resource: resourceItem } = useResource(resource ?? name);\n\n        const key = `${\n            resourceItem?.identifier ?? resourceItem?.name\n        }-${type}-${id}`;\n\n        return (\n            <Inferencer\n                hideCodeViewerInProduction={hideCodeViewerInProduction}\n                fieldTransformer={fieldTransformer}\n                resourceName={resource ?? name}\n                meta={meta ?? {}}\n                key={key}\n                id={id}\n            />\n        );\n    };\n\n    return InferencerComponent;\n};\n","const urlLikeKeyRegexp = /(image|photo|avatar|url|logo|cover|thumbnail|icon)/i;\n\n/**\n * Returns a list of keys that are likely to be fieldable.\n * @example getFieldableKeys(\"user\", { id: 1, name: \"John\" }) === \"name\"\n */\nexport const getFieldableKeys = (\n    key: string,\n    data: Record<string, unknown>,\n): string | string[] | undefined => {\n    const fieldableProperties = [\n        \"name\",\n        \"label\",\n        \"title\",\n        \"count\",\n        \"content\",\n        \"username\",\n        \"nickname\",\n        \"login\",\n        \"firstName\",\n        \"lastName\",\n        \"url\",\n    ];\n\n    if (urlLikeKeyRegexp.test(key)) {\n        fieldableProperties.unshift(\"url\");\n    }\n\n    const firstAvailable = fieldableProperties.find(\n        (fkey) => fkey in data && !!data[fkey],\n    );\n\n    if (firstAvailable) {\n        if (firstAvailable === \"firstName\" && \"lastName\" in data) {\n            return [\"firstName\", \"lastName\"];\n        }\n\n        return firstAvailable;\n    }\n\n    return undefined;\n};\n","import { IResourceItem } from \"@refinedev/core\";\nimport { pickNotDeprecated } from \"@refinedev/core\";\n\n/**\n * Picks the data provider for the given resource. Which can be overridden by the resource itself.\n */\nexport function pickDataProvider(\n    resourceName?: string,\n    dataProviderName?: string,\n    resources?: IResourceItem[],\n) {\n    if (dataProviderName) {\n        return dataProviderName;\n    }\n\n    const resource = resources?.find((item) => item.name === resourceName);\n\n    const meta = pickNotDeprecated(resource?.meta, resource?.options);\n    if (meta?.dataProviderName) {\n        return meta.dataProviderName;\n    }\n\n    return \"default\";\n}\n\n/**\n * Picks the data provider for the given resource. Which can be overridden by the resource itself.\n * This is a simpler version of the above function which works with the resource item instead of the resource name and additional arguments.\n */\nexport const dataProviderFromResource = (resource?: IResourceItem) => {\n    return resource?.options?.dataProviderName;\n};\n","import { InferField } from \"../../types\";\n\n/**\n * Each field inferencer will run with every property of a record and output a result.\n * In these outputs, one with the highest priority will be picked as the inferred field.\n */\nexport const pickInferredField = (\n    inferredFields: Array<InferField | null | false>,\n): InferField | null => {\n    // filter out null and false values and sort by priority then return the first one\n    // priority is a number, the higher the number the higher the priority\n    // if there is no priority, it will be 0\n    const field = (\n        [...inferredFields].filter(Boolean) as Array<InferField>\n    ).sort((a, b) => (b.priority || 0) - (a.priority || 0))[0];\n\n    if (!field) {\n        return null;\n    }\n\n    return field;\n};\n","import prettier from \"prettier/standalone\";\nimport tsParser from \"prettier/parser-typescript\";\n\n/**\n * Standalone prettier formatter with typescript parser\n * to format the generated code.\n */\nexport const prettierFormat = (code: string) => {\n    try {\n        const formatted = prettier.format(code, {\n            parser: \"typescript\",\n            plugins: [tsParser],\n            arrowParens: \"always\",\n            trailingComma: \"all\",\n            semi: true,\n            tabWidth: 4,\n            printWidth: 80,\n        });\n\n        return formatted;\n    } catch (error) {\n        console.warn(\"Formatting error in inferencer\", error);\n        return code;\n    }\n};\n","/**\n * This helper removes the recurring spaces from the code.\n */\nexport const prettySpaces = (content: string): string => {\n    return content.replace(/ {2,}/g, \" \").replace(/\\n{2,}/g, \"\\n\");\n};\n","import { FieldInferencer } from \"../types\";\n\nexport const relationRegexp = /(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\\[\\])?$/;\n\nexport const relationInfer: FieldInferencer = (key, value) => {\n    const isRelation = relationRegexp.test(key);\n    const isBasicValue = typeof value === \"string\" || typeof value === \"number\";\n    const isBasicArray =\n        Array.isArray(value) &&\n        value.every((v) => typeof v === \"string\" || typeof v === \"number\");\n\n    if ((isRelation && isBasicValue) || (isRelation && isBasicArray)) {\n        return {\n            key,\n            relation: true,\n            multiple: isBasicArray ? true : false,\n            type: \"relation\",\n            priority: 1,\n        };\n    }\n\n    return false;\n};\n","import { relationRegexp } from \"../../field-inferencers/relation\";\n\n/**\n * Removes the relation suffix from a string.\n * @example removeRelationSuffix(\"category_id\") === \"category\"\n */\nexport const removeRelationSuffix = (key: string) => {\n    return key.replace(relationRegexp, \"\");\n};\n","import { removeRelationSuffix } from \"../remove-relation-suffix\";\n\n/**\n * This helper will prettify the string.\n */\nexport const prettyString = (str: string) => {\n    const clean = removeRelationSuffix(str);\n    // Convert camelCase to camel Case\n    const camelCase = clean.replace(/([a-z])([A-Z])/g, \"$1 $2\");\n    // Convert snake_case to snake case\n    const snakeCase = camelCase.replace(/_/g, \" \");\n    // Convert kebab-case to kebab case\n    const kebabCase = snakeCase.replace(/-/g, \" \");\n    // Capitalize the string\n    const capitalized = kebabCase\n        .split(\" \")\n        .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n        .join(\" \");\n\n    return capitalized;\n};\n","import { IResourceItem } from \"@refinedev/core\";\nimport { prettyString } from \"../pretty-string\";\nimport { InferField } from \"../../types\";\n\nexport const translatePrettyString = (payload: {\n    resource: IResourceItem;\n    field: InferField;\n    i18n?: boolean;\n    noQuotes?: boolean;\n    noBraces?: boolean;\n}) => {\n    const { resource, field, i18n } = payload;\n\n    if (i18n) {\n        const translate = `translate(\"${resource.name}.fields.${field.key}\")`;\n\n        if (payload.noBraces) {\n            return `${translate}`;\n        }\n        return `{${translate}}`;\n    }\n\n    const prettedString = prettyString(field.key);\n    if (payload.noQuotes) {\n        return prettedString;\n    }\n\n    return `\"${prettedString}\"`;\n};\n","import pluralize from \"pluralize\";\n\nexport const toSingular = (str = \"\") => {\n    return pluralize.isSingular(str) ? str : pluralize.singular(str);\n};\n","import pluralize from \"pluralize\";\n\nexport const toPlural = (str = \"\") => {\n    return pluralize.isPlural(str) ? str : pluralize.plural(str);\n};\n","/**\n * `react-live` does not support `export` statements in the code.\n * This function will remove the `export` statements from the code.\n */\nexport const replaceExports = (code: string) => {\n    // remove export statements from the code but keep the variables\n    const newCode = code.replace(\n        /export\\s+(const|let|var|type|interface|function|class)\\s+(\\w+)\\s*(=|:)\\s*/g,\n        \"$1 $2 = \",\n    );\n\n    // remove default exports, check line by line, lines can be indented so ignore the tabs and spaces at the beginning\n    const lines = newCode.split(\"\\n\");\n    const newLines = lines.filter(\n        (line) => !line.trim().startsWith(\"export default\"),\n    );\n\n    return newLines.join(\"\\n\");\n};\n","import { prettySpaces } from \"../pretty-spaces\";\n\nconst packageRegex =\n    /import(?:(?:(?:[ \\n\\t]+([^ *\\n\\t\\{\\},]+)[ \\n\\t]*(?:,|[ \\n\\t]+))?([ \\n\\t]*\\{(?:[ \\n\\t]*[^ \\n\\t\"'\\{\\}]+[ \\n\\t]*,?)+\\})?[ \\n\\t]*)|[ \\n\\t]*\\*[ \\n\\t]*as[ \\n\\t]+([^ \\n\\t\\{\\}]+)[ \\n\\t]+)from[ \\n\\t]*(?:['\"])([^'\"\\n]+)(?:['\"])(?:;?)/g;\n\nconst sideEffectRegex = /import[ \\n\\t](?:['\"])([^'\"\\n]+)(?:['\"])(?:;?)/g;\n\nconst nameChangeRegex = /((?:\\w|\\s|_)*)( as )((?:\\w|\\s|_)*)( |,)?/g;\n\n/**\n * This function will replace the imports in the code since `react-live` does not support `import` statements.\n * `modules` is an object with keys as `package name` and values as `variable name`.\n */\nexport const replaceImports = (\n    content: string,\n    modules: Record<string, string> = {},\n): string => {\n    const matches = content.matchAll(packageRegex);\n\n    const imports = new Set();\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    for (const match of matches) {\n        const [, defaultImport, namedImports, namespaceImport, packageName] =\n            match;\n\n        if (packageName in modules) {\n            const importName = modules[packageName];\n\n            /**\n             * React and its exports are already available in the scope of the code.\n             * Restructuring them in import statements will cause errors.\n             * To avoid that, we are not replacing the import statements for React.\n             * This way, generated code can have \"react\" imports without any errors.\n             */\n            if (packageName === \"react\") {\n                continue;\n            }\n\n            if (defaultImport) {\n                imports.add(\n                    `const { default: ${defaultImport} } = ${importName};`,\n                );\n            }\n\n            if (namedImports) {\n                imports.add(\n                    `const${namedImports.replace(\n                        nameChangeRegex,\n                        `$1: $3$4`,\n                    )} = ${importName};`,\n                );\n            }\n\n            if (namespaceImport) {\n                imports.add(`const ${namespaceImport} = ${importName};`);\n            }\n        }\n    }\n\n    return prettySpaces(`\n    ${Array.from(imports).join(\"\\n\")}\n    ${content.replace(packageRegex, \"\").replace(sideEffectRegex, \"\")}\n    `);\n};\n","import pluralize from \"pluralize\";\nimport { IResourceItem } from \"@refinedev/core\";\n\nimport { InferField } from \"../../types\";\n\nimport { removeRelationSuffix } from \"../remove-relation-suffix\";\n\n/**\n * Checks if the given property can be relation by checking the existing resources.\n */\nexport const resourceFromInferred = (\n    field: InferField | false | null,\n    resources: IResourceItem[],\n): IResourceItem | undefined => {\n    if (!field) {\n        return undefined;\n    }\n\n    const resource = resources.find((el) => {\n        const stripped = removeRelationSuffix(field.key);\n\n        return (\n            el.name === stripped ||\n            el.name ===\n                (pluralize.isPlural(stripped)\n                    ? stripped\n                    : pluralize.plural(stripped)) ||\n            el.name ===\n                (pluralize.isSingular(stripped)\n                    ? stripped\n                    : pluralize.singular(stripped))\n        );\n    });\n\n    return resource;\n};\n","import pluralize from \"pluralize\";\nimport { prettyString } from \"../pretty-string\";\n\n/**\n * Returns the component name based on the resource name and inferencer type.\n * @example componentName(\"users\", \"list\") === \"UserList\"\n */\nexport const componentName = (\n    resourceName: string,\n    type: \"list\" | \"show\" | \"edit\" | \"create\",\n    fallbackResourceName = \"Inferred\",\n) => {\n    // replace all non-alphanumeric characters with a space\n    const sanitized = resourceName.replace(/[^a-zA-Z0-9]/g, \" \");\n    // convert to singular\n    const singular = pluralize.singular(sanitized);\n    // prettify the string without spaces\n    const prettified = prettyString(singular).replace(/ /g, \"\");\n    // if prettified is empty, return the fallbackResourceName\n    const resourceComponentName = prettified || fallbackResourceName;\n    // get pretty type name\n    const prettyType = type.charAt(0).toUpperCase() + type.slice(1);\n\n    // if resourceName is not starting with an alphabetical character, return Type + resourceName\n    // e.g. \"123users\" => \"List123Users\"\n    if (!/^[a-zA-Z]/.test(resourceComponentName)) {\n        return `${prettyType}${resourceComponentName}`;\n    }\n    // e.g. \"users\" => \"UserList\"\n    return `${resourceComponentName}${prettyType}`;\n};\n","const handleExpression = (expression: unknown) => {\n    if (!expression) {\n        return \"\";\n    }\n\n    if (Array.isArray(expression)) {\n        return expression.join(\"\");\n    }\n\n    if (typeof expression === \"string\") {\n        return expression;\n    }\n\n    if (typeof expression === \"object\") {\n        return expression.toString();\n    }\n\n    if (typeof expression === \"function\") {\n        return expression.toString();\n    }\n\n    if (typeof expression === \"number\") {\n        return String(expression);\n    }\n\n    if (typeof expression === \"boolean\" && expression) {\n        return \"true\";\n    }\n\n    return expression;\n};\n\n/**\n * This is a hacky helper to allow syntax highlighting to work in the template literals. (`renderer` function in inferencers)\n * Additionally, it parses expressions like jsx does.\n */\nexport const jsx = (\n    strings: TemplateStringsArray,\n    ...expressions: unknown[]\n) => {\n    const parsed = strings.reduce(\n        (result, currentString, i) =>\n            `${result}${currentString}${handleExpression(expressions[i])}`,\n        \"\",\n    );\n\n    return parsed.trim();\n};\n","/**\n * Code will be generated to be ready to copy and paste into a live environment.\n * But, `react-live` with `noInline={true}` will not work with this code and require `render` method to be called with the component.\n * This function will use the component name and the code and append the `render` method to the code.\n */\nexport const prepareLiveCode = (code?: string, componentName?: string) => {\n    return `\n    ${code ?? \"\"}\n    \n    render(typeof ${componentName} !== \"undefined\" ? <${componentName} /> : <></>);\n    `;\n};\n","export const removeHiddenCode = (code?: string) => {\n    // hidden blocks are wrapped in `/* hidden-start */` and `/* hidden-end */`\n    // these blocks can present multiple times in the code\n\n    return code?.replace(\n        /(\\/\\* hidden-start \\*\\/)(.|\\n)*?(\\/\\* hidden-end \\*\\/)/g,\n        \"\",\n    );\n};\n","import { InferField } from \"../../types\";\n\nconst dotAccessableRegex = /^[a-zA-Z_$][a-zA-Z_$0-9]*$/;\n\nexport const shouldDotAccess = (property: string) => {\n    return dotAccessableRegex.test(property);\n};\n\nfunction accessorSingle(variableName: string, key?: string, accessor?: string) {\n    let base = `${variableName}`;\n\n    if (key) {\n        base += \"?.\";\n        if (shouldDotAccess(key)) {\n            base += key;\n        } else {\n            base += `['${key}']`;\n        }\n    }\n\n    if (accessor) {\n        base += `?.`;\n        if (shouldDotAccess(accessor)) {\n            base += accessor;\n        } else {\n            base += `['${accessor}']`;\n        }\n    }\n\n    return base;\n}\n\nfunction accessorMultiple(variable: string, key?: string, accessor?: string[]) {\n    const all = (accessor ?? []).map((a) => accessorSingle(variable, key, a));\n\n    return all;\n}\n\n/**\n * Returns a string that can be used to access the given field.\n * @example accessor(\"myVar\", \"some\", \"thing\") === \"myVar?.some?.thing\"\n * @example accessor(\"myVar\", \"so-me\", th.ing\") === \"myVar?.['so-me']['th.ing']\"\n */\nexport const accessor = (\n    variable: string,\n    key?: string,\n    accessor?: string | string[],\n    joiner: string | false = ' + \" \" + ',\n): string => {\n    if (Array.isArray(accessor)) {\n        if (joiner) {\n            return accessorMultiple(variable, key, accessor).join(joiner);\n        } else {\n            return accessorSingle(variable, key, accessor[0]);\n        }\n    } else {\n        return accessorSingle(variable, key, accessor);\n    }\n};\n\nexport const dotAccessor = (\n    variable: string,\n    key?: string,\n    accessor?: string | string[],\n) => {\n    let str = variable;\n\n    if (key) {\n        str += `.${key}`;\n    }\n\n    if (accessor) {\n        if (Array.isArray(accessor)) {\n            str += `.${accessor[0]}`;\n        } else {\n            str += `.${accessor}`;\n        }\n    }\n\n    return str;\n};\n\nexport const getAccessorKey = (field: InferField) => {\n    return Array.isArray(field.accessor) || field.multiple\n        ? `accessorKey: \"${field.key}\"`\n        : field.accessor\n        ? `accessorKey: \"${dotAccessor(field.key, undefined, field.accessor)}\"`\n        : `accessorKey: \"${field.key}\"`;\n};\n","import { ImportElement } from \"../../types\";\n\nexport const printImports = (imports: Array<ImportElement>) => {\n    const byModule = imports.reduce((acc, [element, module, isDefault]) => {\n        if (!acc[module]) {\n            acc[module] = [] as Array<\n                string | [variable: string, isDefault?: boolean]\n            >;\n        }\n\n        if (!acc[module].includes(element)) {\n            if (isDefault) {\n                acc[module].push([element, true]);\n            } else {\n                acc[module].push(element);\n            }\n        }\n\n        return acc;\n    }, {} as Record<string, Array<string | [variable: string, isDefault?: boolean]>>);\n\n    const lines = Object.entries(byModule).map(([module, elements]) => {\n        const defaultImport = elements.find((e) => Array.isArray(e) && e[1]);\n        const named = elements.filter((e) => typeof e === \"string\");\n        const defaultStr = defaultImport ? `${defaultImport[0]}` : \"\";\n        const namedStr = named.length ? `{ ${named.join(\", \")} }` : \"\";\n        return `import ${defaultStr}${\n            defaultStr && namedStr ? \", \" : \"\"\n        }${namedStr} from \"${module}\";`;\n    });\n\n    return lines;\n};\n","const identifierRegexp = /^id$/i;\n\nexport const isIDKey = (key: string): boolean => identifierRegexp.test(key);\n","// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const noOp = (arg1: any) => {};\n","import { prettyString } from \"../pretty-string\";\n\n/**\n * Returns the valid variable name for the given string and the given suffixOrPrefix.\n * @example getVariableName(\"user\", \"data\") === \"usersData\"\n * @example getVariableName(\"1234\", \"data\") === \"data1234\"\n * @example getVariableName(\"users-account\", \"selectProps\") === \"usersAccountSelectProps\"\n */\nexport const getVariableName = (fieldKey: string, suffixOrPrefix = \"\") => {\n    // if fieldKey is number, return with prefix\n    // e.g. (12345, Data) => \"data12345\"\n    if (Number.isInteger(Number(fieldKey))) {\n        const lowerCaseFirstLetter =\n            suffixOrPrefix.charAt(0).toLowerCase() + suffixOrPrefix.slice(1);\n        return lowerCaseFirstLetter + fieldKey;\n    }\n\n    // if fieldKey is start with numbers, replace the numbers with empty string\n    // e.g. 123users => \"users\"\n    const fieldKeyWithoutNumbers = fieldKey.replace(/^\\d+/, \"\");\n\n    // if fieldKeyWithoutNumbers has invalid characters, replace them with \"-\"\n    // e.g. \"users/account\" => \"users-account\"\n    const fieldKeyWithoutInvalidCharacters = fieldKeyWithoutNumbers.replace(\n        /[^a-zA-Z0-9]/g,\n        \"-\",\n    );\n\n    // Convert to PascalCase\n    const prettyPluralVariableName = prettyString(\n        fieldKeyWithoutInvalidCharacters,\n    ).replace(/ /g, \"\");\n\n    const variableName = `${\n        prettyPluralVariableName.charAt(0).toLowerCase() +\n        prettyPluralVariableName.slice(1)\n    }${suffixOrPrefix.charAt(0).toUpperCase() + suffixOrPrefix.slice(1)}`;\n\n    return variableName;\n};\n","import { InferencerComponentProps } from \"../../types\";\n\ntype Action = keyof NonNullable<InferencerComponentProps[\"meta\"]>[string];\n\nexport const getMetaProps = (\n    identifier?: string,\n    meta?: InferencerComponentProps[\"meta\"],\n    action?: Action,\n) => {\n    if (meta && action && identifier) {\n        const metaValues = identifier ? meta[identifier] : {};\n        const metaValue = metaValues?.[action] ?? metaValues?.default;\n        if (metaValue) {\n            return `meta: ${JSON.stringify(metaValue)},`;\n        }\n        return \"\";\n    }\n    return \"\";\n};\n\nexport const pickMeta = (\n    identifier?: string,\n    meta?: InferencerComponentProps[\"meta\"],\n    actions?: Action[],\n) => {\n    if (meta && actions && identifier) {\n        const metaValues = identifier ? meta[identifier] : {};\n\n        const actionsToCheck = [...actions, \"default\"] as Action[];\n\n        const metaValue = actionsToCheck.reduce((acc, action) => {\n            return acc ?? metaValues?.[action];\n        }, undefined as Record<string, unknown> | undefined);\n\n        if (metaValue) {\n            return metaValue;\n        }\n    }\n    return undefined;\n};\n","/**\n * If the `id` is a string, it will be wrapped in quotes.\n */\nexport const idQuoteWrapper = (\n    id: string | number | undefined,\n): string | number | undefined => {\n    if (id === undefined) return id;\n    if (typeof id === \"string\") return `\"${id}\"`;\n\n    return id;\n};\n","import { FieldInferencer } from \"../types\";\nimport { pickInferredField } from \"../utilities\";\n\n/**\n * Compose multiple field inferencers into one\n * @param inferencers The inferencer functions to compose\n */\nexport const composeInferencers = (\n    inferencers: Array<FieldInferencer>,\n): FieldInferencer => {\n    const fieldInferencer: FieldInferencer = (\n        key,\n        value,\n        record,\n        infer = fieldInferencer,\n        type,\n    ) => {\n        const inferences = inferencers.map((inferencer) =>\n            inferencer(key, value, record, infer, type),\n        );\n        const picked = pickInferredField(inferences);\n\n        return picked;\n    };\n\n    return fieldInferencer;\n};\n","import { FieldTransformer } from \"../types\";\n\n/**\n * Compose multiple field transformers into one\n * @param transformers The transformer functions to compose\n */\nexport const composeTransformers = (\n    transformers: Array<FieldTransformer>,\n): FieldTransformer => {\n    const fieldTransformer: FieldTransformer = (\n        fields,\n        resources,\n        resource,\n        record,\n        infer,\n        type,\n    ) => {\n        return transformers.reduce((acc, transformer) => {\n            return transformer(acc, resources, resource, record, infer, type);\n        }, fields);\n    };\n\n    return fieldTransformer;\n};\n","import { FieldInferencer, InferType } from \"../types\";\n\nexport const arrayInfer: FieldInferencer = (\n    key,\n    value,\n    record,\n    infer,\n    type,\n) => {\n    const isArray = Array.isArray(value);\n    const isBasicArray =\n        Array.isArray(value) &&\n        value.every((v) => typeof v === \"string\" || typeof v === \"number\");\n\n    if (isArray) {\n        if (!isBasicArray) {\n            const inferredInnerType = infer(key, value[0], record, infer, type);\n            if (inferredInnerType) {\n                return {\n                    ...inferredInnerType,\n                    key,\n                    multiple: true,\n                    priority: 1,\n                };\n            } else {\n                return false;\n            }\n        }\n        const basicType = infer(key, value[0], record, infer, type) || {\n            type: \"string\" as InferType,\n        };\n\n        return {\n            key,\n            multiple: true,\n            priority: 1,\n            type: basicType?.type,\n        };\n    }\n\n    return false;\n};\n","import { FieldInferencer } from \"../types\";\n\nexport const booleanInfer: FieldInferencer = (key, value) => {\n    const isBoolean = typeof value === \"boolean\";\n\n    if (isBoolean) {\n        return {\n            key,\n            type: \"boolean\",\n        };\n    }\n\n    return false;\n};\n","import dayjs from \"dayjs\";\nimport { FieldInferencer } from \"../types\";\n\nconst dateSuffixRegexp = /(_at|_on|At|On|AT|ON)(\\[\\])?$/;\n\nconst dateSeparators = [\"/\", \":\", \"-\", \".\"];\n\nexport const dateInfer: FieldInferencer = (key, value) => {\n    const isDateField =\n        dateSuffixRegexp.test(key) && dayjs(value as string).isValid();\n\n    const isValidDateString =\n        typeof value === \"string\" && dayjs(value).isValid();\n\n    const hasDateSeparator =\n        typeof value === \"string\" &&\n        dateSeparators.some((s) => value.includes(s));\n\n    if (hasDateSeparator && (isDateField || isValidDateString)) {\n        return {\n            key,\n            type: \"date\",\n            priority: 1,\n        };\n    }\n\n    return false;\n};\n","import { FieldInferencer } from \"../types\";\n\nconst emailRegexp =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const emailInfer: FieldInferencer = (key, value) => {\n    const isValidEmail = typeof value === \"string\" && emailRegexp.test(value);\n\n    if (isValidEmail) {\n        return {\n            key,\n            type: \"email\",\n            priority: 1,\n        };\n    }\n\n    return false;\n};\n","import { FieldInferencer } from \"../types\";\n\nconst imageRegexp = /\\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i;\n\nexport const imageInfer: FieldInferencer = (key, value) => {\n    const isImageURI = typeof value === \"string\" && imageRegexp.test(value);\n\n    if (isImageURI) {\n        return {\n            key,\n            type: \"image\",\n            priority: 2,\n        };\n    }\n\n    return false;\n};\n","import { FieldInferencer } from \"../types\";\n\nexport const nullishInfer: FieldInferencer = (key, value) => {\n    const isUndefined = typeof value === \"undefined\";\n    const isNull = value === null;\n\n    if (isUndefined || isNull) {\n        return null;\n    }\n\n    return false;\n};\n","import { FieldInferencer } from \"../types\";\n\nexport const numberInfer: FieldInferencer = (key, value) => {\n    const isNonEmptyString = typeof value === \"string\" && value.length > 0;\n    const isNotNaN = !isNaN(value as number);\n\n    const isNumericString = isNonEmptyString && isNotNaN;\n    const isNumber = typeof value === \"number\";\n\n    const isNumeric = isNumericString || isNumber;\n\n    if (isNumeric) {\n        return {\n            key,\n            type: \"number\",\n        };\n    }\n\n    return false;\n};\n","import { getFieldableKeys } from \"../utilities\";\nimport { FieldInferencer } from \"../types\";\n\nconst idPropertyRegexp = /id$/i;\n\nexport const objectInfer: FieldInferencer = (\n    key,\n    value,\n    record,\n    infer,\n    type,\n) => {\n    const isNotNull = value !== null;\n    const isNotArray = !Array.isArray(value);\n    const isObject = typeof value === \"object\";\n\n    if (isNotNull && isNotArray && isObject) {\n        const onlyHasId =\n            Object.keys(value).length === 1 &&\n            idPropertyRegexp.test(Object.keys(value)[0]);\n\n        const hasId = Object.keys(value).some((k) => idPropertyRegexp.test(k));\n\n        if (onlyHasId) {\n            return {\n                key,\n                type: \"relation\",\n                relation: true,\n                accessor: \"id\",\n                priority: 1,\n            };\n        }\n\n        const fieldableKeys = getFieldableKeys(\n            key,\n            value as Record<string, unknown>,\n        );\n\n        const hasFieldableKeys = fieldableKeys\n            ? fieldableKeys.length > 0\n            : false;\n\n        if (hasFieldableKeys && fieldableKeys) {\n            const innerFieldKey =\n                fieldableKeys && Array.isArray(fieldableKeys)\n                    ? fieldableKeys[0]\n                    : fieldableKeys;\n\n            const innerFieldType = infer(\n                innerFieldKey,\n                (value as Record<string, unknown>)[innerFieldKey],\n                value as Record<string, unknown>,\n                infer,\n                type,\n            );\n\n            if (innerFieldType) {\n                const accessor = Array.isArray(fieldableKeys)\n                    ? fieldableKeys.map((el) => {\n                          if (innerFieldType.accessor) {\n                              return `${el}.${\n                                  Array.isArray(innerFieldType.accessor)\n                                      ? innerFieldType.accessor[0]\n                                      : innerFieldType.accessor\n                              }`;\n                          } else {\n                              return el;\n                          }\n                      })\n                    : innerFieldType.accessor\n                    ? Array.isArray(innerFieldType.accessor)\n                        ? `${fieldableKeys}.${innerFieldType.accessor[0]}`\n                        : `${fieldableKeys}.${innerFieldType.accessor}`\n                    : fieldableKeys;\n\n                if (\n                    innerFieldType?.type === \"text\" &&\n                    (type === \"create\" || type === \"edit\") &&\n                    hasId\n                ) {\n                    return {\n                        key,\n                        type: \"relation\",\n                        relation: true,\n                        accessor: \"id\",\n                        priority: 1,\n                    };\n                }\n\n                return {\n                    ...innerFieldType,\n                    fieldable: true,\n                    key,\n                    accessor: accessor,\n                    priority: 1,\n                };\n            }\n        }\n\n        return {\n            key,\n            fieldable: false,\n            type: \"object\",\n            priority: 1,\n        };\n    }\n\n    return false;\n};\n","import { FieldInferencer } from \"../types\";\n\nexport const richtextInfer: FieldInferencer = (key, value) => {\n    const isLongText = typeof value === \"string\" && value.length > 100;\n\n    if (isLongText) {\n        return {\n            key,\n            type: \"richtext\",\n            priority: 1,\n        };\n    }\n\n    return false;\n};\n","import { FieldInferencer } from \"../types\";\n\nexport const textInfer: FieldInferencer = (key, value) => {\n    const isText = typeof value === \"string\";\n\n    if (isText) {\n        return {\n            key,\n            type: \"text\",\n        };\n    }\n\n    return false;\n};\n","import { FieldInferencer } from \"../types\";\n\nconst urlRegexp = /^(https?|ftp):\\/\\/(-\\.)?([^\\s/?\\.#-]+\\.?)+(\\/[^\\s]*)?$/i;\n\nexport const urlInfer: FieldInferencer = (key, value) => {\n    const isValidURL = typeof value === \"string\" && urlRegexp.test(value);\n\n    if (isValidURL) {\n        return {\n            key,\n            type: \"url\",\n            priority: 1,\n        };\n    }\n\n    return false;\n};\n","import { arrayInfer } from \"./array\";\nimport { booleanInfer } from \"./boolean\";\nimport { dateInfer } from \"./date\";\nimport { emailInfer } from \"./email\";\nimport { imageInfer } from \"./image\";\nimport { nullishInfer } from \"./nullish\";\nimport { numberInfer } from \"./number\";\nimport { objectInfer } from \"./object\";\nimport { relationInfer } from \"./relation\";\nimport { richtextInfer } from \"./richtext\";\nimport { textInfer } from \"./text\";\nimport { urlInfer } from \"./url\";\n\nexport const defaultElements = [\n    arrayInfer,\n    booleanInfer,\n    dateInfer,\n    emailInfer,\n    imageInfer,\n    nullishInfer,\n    numberInfer,\n    objectInfer,\n    relationInfer,\n    richtextInfer,\n    textInfer,\n    urlInfer,\n];\n","import { FieldTransformer, InferField } from \"../types\";\n\nexport const basicToRelation: FieldTransformer = (\n    fields,\n    resources,\n    resource,\n    record,\n) => {\n    const mapped: Array<InferField> = fields.map((field) => {\n        if (\n            !field.relation &&\n            (field.type === \"text\" ||\n                field.type === \"richtext\" ||\n                field.type === \"number\") &&\n            !field.canRelation\n        ) {\n            // check if value is a valid id (regex)\n            // if multiple, check value by value\n            // take accessor into account (should be single only)\n            // valid id should be a valid uuid (meaning, lowercase alphanumeric with dashes)\n            const validUUIdRegex = /^[a-z0-9-]+$/;\n\n            const isValidUUID = (value: unknown) => {\n                return validUUIdRegex.test(`${value}`);\n            };\n\n            const isNotSelf = field.key.toLowerCase() !== \"id\";\n\n            const singleOrNoAccessor =\n                !field.accessor || typeof field.accessor === \"string\";\n\n            // in case of multiple accessors, we can't infer a relation\n            // or if the field is the id field\n            if (!singleOrNoAccessor || !isNotSelf) {\n                return field;\n            }\n\n            const valuesToCheck = field.multiple\n                ? (record[field.key] as unknown[])\n                : [record[field.key]];\n\n            const allValid = valuesToCheck.every((value) => {\n                return isValidUUID(\n                    field.accessor\n                        ? (value as Record<string, unknown>)[\n                              field.accessor as string\n                          ]\n                        : value,\n                );\n            });\n\n            if (allValid) {\n                return {\n                    ...field,\n                    canRelation: true,\n                };\n            }\n\n            return field;\n        }\n        return field;\n    });\n\n    return mapped;\n};\n","import { FieldTransformer, InferField } from \"../types\";\n\nconst imageFieldLikeRegexp = /(image|photo|avatar|cover|thumbnail|icon)/i;\n\nexport const imageByKey: FieldTransformer = (fields) => {\n    const mapped: Array<InferField> = fields.map((field) => {\n        if (field.type === \"url\" && imageFieldLikeRegexp.test(field.key)) {\n            return {\n                ...field,\n                type: \"image\",\n            };\n        }\n\n        return field;\n    });\n\n    return mapped;\n};\n","import { resourceFromInferred } from \"../utilities\";\nimport { FieldTransformer, InferField } from \"../types\";\n\nexport const relationByResource: FieldTransformer = (\n    fields,\n    resources,\n    // resource,\n    // record,\n    // infer,\n) => {\n    const mapped: Array<InferField> = fields.map((field) => {\n        const inferResource = resourceFromInferred(field, resources);\n\n        if (inferResource) {\n            return {\n                ...field,\n                relation: true,\n                type: \"relation\",\n                resource: inferResource,\n            };\n        }\n\n        return field;\n    });\n\n    return mapped;\n};\n","import { FieldTransformer, InferField } from \"../types\";\n\nexport const relationToFieldable: FieldTransformer = (\n    fields,\n    resources,\n    resource,\n    record,\n    infer,\n    type,\n) => {\n    const mapped: Array<InferField> = fields.map((field) => {\n        if (field.relation && field.type === \"relation\" && !field.resource) {\n            const value = field.accessor\n                ? (record[field.key] as any)[field.accessor as string]\n                : record[field.key];\n\n            const inferredType = infer(field.key, value, record, infer, type);\n\n            if (inferredType && inferredType.type !== \"relation\") {\n                return {\n                    ...field,\n                    fieldable: true,\n                    relation: false,\n                    type: inferredType.type,\n                    canRelation: true,\n                };\n            }\n        }\n\n        return field;\n    });\n\n    return mapped;\n};\n","import { basicToRelation } from \"./basic-to-relation\";\nimport { imageByKey } from \"./image-by-key\";\nimport { relationByResource } from \"./relation-by-resource\";\nimport { relationToFieldable } from \"./relation-to-fieldable\";\n\nexport const defaultTransformers = [\n    imageByKey,\n    relationByResource,\n    relationToFieldable,\n    basicToRelation,\n];\n","import React from \"react\";\nimport * as RefineCore from \"@refinedev/core\";\n\nimport { LivePreview, LiveProvider, ContextProps } from \"@aliemir/react-live\";\n\nimport { replaceImports, replaceExports } from \"../../utilities\";\nimport { AdditionalScopeType, LiveComponentProps } from \"../../types\";\n\nconst defaultScope: Array<AdditionalScopeType> = [\n    [\"react\", \"React\", React],\n    [\"@refinedev/core\", \"RefineCore\", RefineCore],\n];\n\nconst InferencerLiveContext = React.createContext<ContextProps>(\n    {} as ContextProps,\n);\n\n/**\n * Live Component will render the code with `react-live`.\n * Errors will be handled by `ErrorComponent`.\n */\nexport const LiveComponent: React.FC<LiveComponentProps> = ({\n    fetchError,\n    code,\n    additionalScope,\n    errorComponent: ErrorComponent,\n}) => {\n    const sanitized =\n        (code &&\n            replaceExports(\n                replaceImports(\n                    code,\n                    [...defaultScope, ...(additionalScope ?? [])].reduce(\n                        (\n                            acc,\n                            [\n                                packageName,\n                                variableName,\n                                _module,\n                                ignoreReplacement,\n                            ],\n                        ) => {\n                            if (ignoreReplacement) {\n                                return acc;\n                            }\n                            return {\n                                ...acc,\n                                [packageName]: variableName,\n                            };\n                        },\n                        {},\n                    ),\n                ),\n            )) ??\n        \"\";\n\n    const scope = React.useMemo(() => {\n        return {\n            React,\n            ...React,\n            ...[...defaultScope, ...(additionalScope ?? [])].reduce(\n                (acc, [_packageName, variableName, packageContent]) => {\n                    return {\n                        ...acc,\n                        [variableName]: packageContent,\n                    };\n                },\n                {},\n            ),\n        };\n    }, [additionalScope]);\n\n    const ErrorComponentWithError = React.useMemo(() => {\n        const LiveErrorComponent = () => {\n            const { error } = React.useContext(InferencerLiveContext);\n\n            if (ErrorComponent) {\n                return (\n                    <ErrorComponent\n                        error={\n                            error\n                                ? `<p>An error occured while rendering the generated component.You can check the generated code from the below \"Show Code\" button and fix the error manually.</p>\n                                    <p>If you think this is a bug, please report the issue at <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/refinedev/refine/issues\">https://github.com/refinedev/refine/issues</a></p>\n                                    <p>Exception:</p>\n                                    <code>${error}</code>`\n                                : typeof fetchError === \"string\"\n                                ? fetchError\n                                : fetchError\n                                ? `<p>Something went wrong while fetching the resource data.</p>\n                                    <p>To learn more about the Inferencer, please check the <a href=\"https://refine.dev/docs/packages/documentation/inferencer/\" target=\"_blank\">documentation</a>.</p>`\n                                : undefined\n                        }\n                    />\n                );\n            }\n\n            return null;\n        };\n\n        return LiveErrorComponent;\n    }, [ErrorComponent, fetchError]);\n\n    return (\n        <LiveProvider\n            Context={InferencerLiveContext}\n            code={sanitized}\n            scope={scope}\n            noInline\n        >\n            {!fetchError && <LivePreview Context={InferencerLiveContext} />}\n            <ErrorComponentWithError />\n        </LiveProvider>\n    );\n};\n","import React, { SVGProps } from \"react\";\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport theme from \"prism-react-renderer/themes/vsDark\";\n\nimport { CreateInferencerConfig } from \"../../types\";\nimport { prettierFormat } from \"../../utilities\";\n\nexport const SharedCodeViewer: CreateInferencerConfig[\"codeViewerComponent\"] =\n    ({ code: rawCode, loading }) => {\n        const code = React.useMemo(() => {\n            return prettierFormat(rawCode ?? \"\");\n        }, [rawCode]);\n\n        const [settled, setSettled] = React.useState(false);\n        const [isModalVisible, setIsModalVisible] = React.useState(false);\n        const [isVisible, setIsVisible] = React.useState(false);\n        const [isColumn, setIsColumn] = React.useState(false);\n        const [isModalButtonHover, setIsModalButtonHover] =\n            React.useState(false);\n\n        // Settled Check\n        React.useEffect(() => {\n            if (!loading) {\n                const timeout = setTimeout(() => {\n                    setSettled(true);\n                }, 300);\n\n                return () => {\n                    clearTimeout(timeout);\n                };\n            }\n\n            return () => undefined;\n        }, [loading]);\n\n        // Visibility Check\n        React.useEffect(() => {\n            if (typeof window !== \"undefined\") {\n                const mediaQuery = window.matchMedia(\"(max-width: 449px)\");\n                if (mediaQuery.matches) {\n                    setIsVisible(false);\n                } else {\n                    setIsVisible(true);\n                }\n\n                const handleResize = () => {\n                    if (mediaQuery.matches) {\n                        setIsVisible(false);\n                    } else {\n                        setIsVisible(true);\n                    }\n                };\n\n                window.addEventListener(\"resize\", handleResize);\n\n                return () => {\n                    window.removeEventListener(\"resize\", handleResize);\n                };\n            }\n\n            return () => undefined;\n        }, []);\n\n        // Flex Direction Check\n        React.useEffect(() => {\n            if (typeof window !== \"undefined\") {\n                const mediaQuery = window.matchMedia(\"(max-width: 1280px)\");\n                if (mediaQuery.matches) {\n                    setIsColumn(true);\n                } else {\n                    setIsColumn(false);\n                }\n\n                const handleResize = () => {\n                    if (mediaQuery.matches) {\n                        setIsColumn(true);\n                    } else {\n                        setIsColumn(false);\n                    }\n                };\n\n                window.addEventListener(\"resize\", handleResize);\n\n                return () => {\n                    window.removeEventListener(\"resize\", handleResize);\n                };\n            }\n\n            return () => undefined;\n        }, []);\n\n        if (code && !loading) {\n            return (\n                <>\n                    {isVisible && (\n                        <div\n                            className=\"refine-inferencer--code-viewer\"\n                            style={{\n                                position: \"sticky\",\n                                bottom: \"24px\",\n                                paddingTop: \"24px\",\n                                left: 0,\n                                right: 0,\n                                width: \"100%\",\n                                zIndex: 10,\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                transition: \"all 0.2s ease\",\n                                opacity: settled && !isModalVisible ? 1 : 0,\n                                transform:\n                                    settled && !isModalVisible\n                                        ? \"translateY(0)\"\n                                        : \"translateY(100px)\",\n                            }}\n                        >\n                            <div\n                                style={{\n                                    width: \"calc(100% - calc(64px * 2))\",\n                                    maxWidth: \"1080px\",\n                                    padding: \"20px\",\n                                    backgroundColor: \"#1A1A1A\",\n                                    boxShadow:\n                                        \"0px 4px 16px -4px rgba(0, 0, 0, 0.5), 0px 8px 32px -8px rgba(0, 0, 0, 0.35)\",\n                                    borderRadius: \"16px\",\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    justifyContent: \"space-between\",\n                                    flexDirection: isColumn ? \"column\" : \"row\",\n                                    gap: \"12px\",\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        alignItems: \"flex-start\",\n                                        gap: \"8px\",\n                                    }}\n                                >\n                                    <div>\n                                        <InfoIcon />\n                                    </div>\n                                    <div\n                                        style={{\n                                            fontSize: \"14px\",\n                                            lineHeight: \"20px\",\n                                            color: \"#ffffff\",\n                                        }}\n                                    >\n                                        <p\n                                            style={{\n                                                padding: 0,\n                                                margin: 0,\n                                            }}\n                                        >\n                                            Most of the page code is\n                                            auto-generated by the{\" \"}\n                                            <span\n                                                style={{\n                                                    textDecoration: \"underline\",\n                                                }}\n                                            >\n                                                Inferencer\n                                            </span>{\" \"}\n                                            feature, based on your backend data\n                                            structure.\n                                        </p>\n                                        <p\n                                            style={{\n                                                padding: 0,\n                                                margin: 0,\n                                            }}\n                                        >\n                                            While this is an excellent way to\n                                            experiment with refine,{\" \"}\n                                            <span style={{ fontWeight: 600 }}>\n                                                it&apos;s not intended to be\n                                                used on production.\n                                            </span>\n                                        </p>\n                                    </div>\n                                </div>\n                                <div>\n                                    <button\n                                        onPointerEnter={() =>\n                                            setIsModalButtonHover(true)\n                                        }\n                                        onPointerLeave={() =>\n                                            setIsModalButtonHover(false)\n                                        }\n                                        onClick={() => setIsModalVisible(true)}\n                                        style={{\n                                            appearance: \"none\",\n                                            border: \"none\",\n                                            padding: \"10px 16px\",\n                                            borderRadius: \"4px\",\n                                            display: \"flex\",\n                                            alignItems: \"center\",\n                                            justifyContent: \"center\",\n                                            background: \"#0080FF\",\n                                            color: \"#ffffff\",\n                                            fontSize: \"14px\",\n                                            lineHeight: \"20px\",\n                                            fontWeight: 600,\n                                            gap: \"8px\",\n                                            cursor: \"pointer\",\n                                            transition: \"all 0.2s ease\",\n                                            transform: isModalButtonHover\n                                                ? \"scale(1.025)\"\n                                                : undefined,\n                                            filter: isModalButtonHover\n                                                ? \"brightness(1.1)\"\n                                                : undefined,\n                                        }}\n                                    >\n                                        <OpenIcon\n                                            style={{\n                                                flexShrink: 0,\n                                            }}\n                                        />\n                                        <span>\n                                            Show the auto-generated code\n                                        </span>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                    <CodeModal\n                        visible={isModalVisible}\n                        onClose={() => setIsModalVisible(false)}\n                        code={code}\n                    />\n                </>\n            );\n        }\n\n        return null;\n    };\n\nconst CodeModal = ({\n    visible,\n    onClose,\n    code = \"\",\n}: {\n    visible: boolean;\n    onClose: () => void;\n    code?: string;\n}) => {\n    const modalRef = React.useRef<HTMLDivElement>(null);\n\n    const [isCopied, setIsCopied] = React.useState(false);\n    const [isCopyHover, setIsCopyHover] = React.useState(false);\n    const [isCloseHover, setIsCloseHover] = React.useState(false);\n    const [isLearnMoreHover, setIsLearnMoreHover] = React.useState(false);\n\n    // On Outside Click\n    React.useEffect(() => {\n        if (typeof document !== \"undefined\") {\n            const onOutsideClick = (event: PointerEvent) => {\n                if (\n                    modalRef.current &&\n                    !modalRef.current.contains(event.target as Node)\n                ) {\n                    onClose();\n                }\n            };\n\n            document.addEventListener(\"pointerdown\", onOutsideClick);\n\n            return () => {\n                document.removeEventListener(\"pointerdown\", onOutsideClick);\n            };\n        }\n\n        return () => undefined;\n    }, [onClose]);\n\n    // onCopy Handler\n    const onCopy = () => {\n        if (typeof navigator !== \"undefined\") {\n            navigator.clipboard.writeText(code);\n            setIsCopied(true);\n            setTimeout(() => {\n                setIsCopied(false);\n            }, 1000);\n        }\n    };\n\n    const title = (\n        <div\n            style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n            }}\n        >\n            <div\n                style={{\n                    fontWeight: 700,\n                    fontSize: \"20px\",\n                    lineHeight: \"32px\",\n                    color: \"#0D0D0D\",\n                }}\n            >\n                Auto-generated code by Inferencer\n            </div>\n            <button\n                onClick={onClose}\n                onPointerEnter={() => setIsCloseHover(true)}\n                onPointerLeave={() => setIsCloseHover(false)}\n                style={{\n                    flexShrink: 0,\n                    appearance: \"none\",\n                    border: \"none\",\n                    background: \"none\",\n                    padding: 0,\n                    margin: 0,\n                    outline: \"none\",\n                    borderRadius: \"50px\",\n                    width: \"32px\",\n                    height: \"32px\",\n                    cursor: \"pointer\",\n                    transition: \"all 0.15s ease\",\n                    transform: isCloseHover ? \"scale(1.05)\" : undefined,\n                    filter: isCloseHover ? \"brightness(0.8)\" : undefined,\n                }}\n            >\n                <CloseIcon />\n            </button>\n        </div>\n    );\n\n    const highlight = (\n        <div\n            style={{\n                fontSize: \"13px\",\n                borderRadius: \"8px\",\n                flex: \"1\",\n                overflow: \"scroll\",\n                background: \"#1E1E1E\",\n            }}\n        >\n            <Highlight\n                {...defaultProps}\n                theme={theme}\n                code={code}\n                language=\"tsx\"\n            >\n                {({\n                    className,\n                    style,\n                    tokens,\n                    getLineProps,\n                    getTokenProps,\n                }) => (\n                    <pre\n                        className={className}\n                        style={{\n                            ...style,\n                            padding: \"14px 14px 14px 14px\",\n                            margin: \"0\",\n                            width: \"100%\",\n                            boxSizing: \"border-box\",\n                        }}\n                    >\n                        {tokens.map((line, i) => (\n                            <div\n                                key={i}\n                                {...getLineProps({\n                                    line,\n                                    key: i,\n                                })}\n                            >\n                                {line.map((token, key) => (\n                                    <span\n                                        key={key}\n                                        {...getTokenProps({\n                                            token,\n                                            key,\n                                        })}\n                                    />\n                                ))}\n                            </div>\n                        ))}\n                    </pre>\n                )}\n            </Highlight>\n        </div>\n    );\n\n    const buttons = (\n        <div\n            style={{\n                display: \"flex\",\n                justifyContent: \"flex-start\",\n                alignItems: \"flex-end\",\n                gap: \"16px\",\n            }}\n        >\n            <button\n                onPointerEnter={() => setIsCopyHover(true)}\n                onPointerLeave={() => setIsCopyHover(false)}\n                onClick={onCopy}\n                style={{\n                    appearance: \"none\",\n                    height: \"40px\",\n                    border: \"none\",\n                    padding: \"10px 16px\",\n                    borderRadius: \"4px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    background: \"#0080FF\",\n                    color: \"#ffffff\",\n                    fontSize: \"14px\",\n                    lineHeight: \"20px\",\n                    fontWeight: 600,\n                    gap: \"8px\",\n                    cursor: \"pointer\",\n                    position: \"relative\",\n                    overflow: \"hidden\",\n                    transition: \"filter 0.2s ease\",\n                    transform: isCopyHover ? \"scale(1.025)\" : \"scale(1)\",\n                    filter: isCopyHover ? \"brightness(1.1)\" : undefined,\n                }}\n            >\n                <ClipboardIcon\n                    style={{\n                        flexShrink: 0,\n                        marginTop: \"-2px\",\n                        marginBottom: \"-2px\",\n                    }}\n                />\n                <span>Copy Generated Code</span>\n                <div\n                    style={{\n                        position: \"absolute\",\n                        width: \"100%\",\n                        height: \"100%\",\n                        top: 0,\n                        left: 0,\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        background: \"#0080FF\",\n                        transition: \"all 0.2s ease\",\n                        transform: isCopied\n                            ? \"translateY(0)\"\n                            : \"translateY(40px)\",\n                    }}\n                >\n                    <ClipboardIcon\n                        style={{\n                            flexShrink: 0,\n                            marginTop: \"-2px\",\n                            marginBottom: \"-2px\",\n                        }}\n                    />\n                    <span>Copied!</span>\n                </div>\n            </button>\n            <a\n                onPointerEnter={() => setIsLearnMoreHover(true)}\n                onPointerLeave={() => setIsLearnMoreHover(false)}\n                href=\"https://refine.dev/docs/packages/documentation/inferencer\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                style={{\n                    appearance: \"none\",\n                    textDecoration: \"none\",\n                    border: \"none\",\n                    padding: \"10px 16px\",\n                    borderRadius: \"4px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    background: \"rgba(0, 128, 255, 0.1)\",\n                    color: \"#0080FF\",\n                    fontSize: \"14px\",\n                    lineHeight: \"20px\",\n                    fontWeight: 600,\n                    gap: \"8px\",\n                    cursor: \"pointer\",\n                    transition: \"all 0.2s ease\",\n                    transform: isLearnMoreHover ? \"scale(1.025)\" : undefined,\n                    filter: isLearnMoreHover ? \"brightness(1.1)\" : undefined,\n                }}\n            >\n                <OpenIcon\n                    style={{\n                        flexShrink: 0,\n                    }}\n                />\n                <span>Learn more about inferencer</span>\n            </a>\n        </div>\n    );\n\n    return (\n        <div\n            className=\"refine-inferencer--code-viewer-modal\"\n            style={{\n                position: \"fixed\",\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                zIndex: 9999,\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n                transition: \"all 0.2s ease\",\n                opacity: visible ? 1 : 0,\n                pointerEvents: visible ? \"all\" : \"none\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n            }}\n        >\n            <div\n                ref={modalRef}\n                style={{\n                    transform: visible\n                        ? \"scale(1) translateY(0px)\"\n                        : \"scale(0) translateY(-200px)\",\n                    transition: \"all 0.25s cubic-bezier(.35,1.29,.81,1.08)\",\n                    transitionDelay: \"0.25\",\n                    width: \"calc(100% - calc(32px * 2))\",\n                    height: \"calc(100% - calc(32px * 2))\",\n                    backgroundColor: \"#fff\",\n                    maxWidth: \"640px\",\n                    maxHeight: \"720px\",\n                    borderRadius: \"8px\",\n                    padding: \"16px\",\n                }}\n            >\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        height: \"100%\",\n                        width: \"100%\",\n                        gap: \"16px\",\n                    }}\n                >\n                    {title}\n                    {highlight}\n                    {buttons}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst InfoIcon = (props: SVGProps<SVGSVGElement>) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={20}\n        height={20}\n        fill=\"none\"\n        {...props}\n    >\n        <path\n            fill=\"#0080FF\"\n            fillRule=\"evenodd\"\n            d=\"M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10Zm0-15a1.25 1.25 0 1 0 0 2.5A1.25 1.25 0 0 0 10 5Zm0 10c.69 0 1.25-.56 1.25-1.25V10a1.25 1.25 0 1 0-2.5 0v3.75c0 .69.56 1.25 1.25 1.25Z\"\n            clipRule=\"evenodd\"\n        />\n    </svg>\n);\n\nconst OpenIcon = (props: SVGProps<SVGSVGElement>) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={16}\n        height={16}\n        fill=\"none\"\n        {...props}\n    >\n        <path\n            fill=\"currentColor\"\n            d=\"M5 2a1 1 0 0 1 0 2H4v8h8v-1a1 1 0 1 1 2 0v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h1Z\"\n        />\n        <path\n            fill=\"currentColor\"\n            d=\"M9 2a1 1 0 0 0 0 2h1.586L6.293 8.293a1 1 0 0 0 1.414 1.414L12 5.414V7a1 1 0 1 0 2 0V3a1 1 0 0 0-1-1H9Z\"\n        />\n    </svg>\n);\n\nconst CloseIcon = (props: SVGProps<SVGSVGElement>) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={32}\n        height={32}\n        fill=\"none\"\n        {...props}\n    >\n        <path\n            fill=\"#A6A6A6\"\n            fillRule=\"evenodd\"\n            d=\"M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16Zm-2.586-21.414a2 2 0 1 0-2.828 2.828L13.172 16l-2.586 2.586a2 2 0 1 0 2.828 2.828L16 18.828l2.586 2.586a2 2 0 1 0 2.828-2.828L18.828 16l2.586-2.586a2 2 0 1 0-2.828-2.828L16 13.172l-2.586-2.586Z\"\n            clipRule=\"evenodd\"\n        />\n    </svg>\n);\n\nconst ClipboardIcon = (props: SVGProps<SVGSVGElement>) => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={20}\n        height={20}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        {...props}\n    >\n        <path\n            fill=\"currentColor\"\n            fillRule=\"evenodd\"\n            d=\"M8 5a3 3 0 0 0 3 3h2a3 3 0 0 0 3-3h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h1Zm0 7a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2H9a1 1 0 0 1-1-1Zm1 3a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2H9Z\"\n            clipRule=\"evenodd\"\n        />\n        <path fill=\"currentColor\" d=\"M13 4a1 1 0 1 1 0 2h-2a1 1 0 1 1 0-2h2Z\" />\n    </svg>\n);\n","import React from \"react\";\nimport { useDataProvider, useResource, BaseKey } from \"@refinedev/core\";\n\nimport { pickDataProvider, dataProviderFromResource } from \"../utilities\";\nimport { InferencerComponentProps } from \"../types\";\nimport { pickMeta } from \"../utilities/get-meta-props\";\n\n/**\n * This hook will handle the data fetching for the inferencer with `loading` and `initial` states.\n * Data provider functions will be used respectively for the `list`, `show` and `edit` types.\n */\nexport const useInferFetch = (\n    type: \"list\" | \"show\" | \"edit\" | \"create\",\n    resourceNameOrRouteName?: string,\n    idFromProps?: string | number,\n    meta?: InferencerComponentProps[\"meta\"],\n) => {\n    const {\n        resource,\n        id: idFromURL,\n        resources,\n    } = useResource(resourceNameOrRouteName);\n\n    const id = idFromProps ?? idFromURL;\n\n    const dataProvider = useDataProvider();\n\n    const [error, setError] = React.useState<string | undefined>(undefined);\n\n    const [data, setData] = React.useState<Record<string, unknown> | undefined>(\n        undefined,\n    );\n    const [datas, setDatas] = React.useState<\n        Array<Record<string, unknown>> | undefined\n    >(undefined);\n    const [initial, setInitial] = React.useState<boolean>(true);\n    const [loading, setLoading] = React.useState<boolean>(false);\n\n    const resolver = React.useCallback(\n        async (recordItemId: BaseKey | undefined) => {\n            const dataProviderName =\n                dataProviderFromResource(resource) ??\n                pickDataProvider(resource?.name, undefined, resources);\n            const dp = dataProvider(dataProviderName);\n\n            setLoading(true);\n            setError(undefined);\n\n            try {\n                if (type === \"list\" || type === \"create\") {\n                    if (resource) {\n                        const response = await dp.getList({\n                            resource: resource?.name,\n                            meta: pickMeta(\n                                resource?.identifier ?? resource?.name,\n                                meta,\n                                [\"getList\"],\n                            ),\n                        });\n                        const r = response.data?.[0];\n\n                        if (!r) {\n                            setError(\n                                `<p>No records/data found for resource \"${resource?.name}\".</p>\n                            <p>Please check your data provider and resource.</p>\n                            <p>For more info, please check the <a href=\"https://refine.dev/docs/packages/documentation/inferencer/\" target=\"_blank\">documentation</a>.</p>`,\n                            );\n                        }\n                        setData(r);\n                        setDatas(response.data);\n                        setTimeout(() => {\n                            setLoading(false);\n                        }, 500);\n                    }\n                }\n                if ((type === \"edit\" || type === \"show\") && recordItemId) {\n                    if (resource) {\n                        const response = await dp.getOne({\n                            resource: resource?.name,\n                            id: recordItemId,\n                            meta: pickMeta(\n                                resource?.identifier ?? resource?.name,\n                                meta,\n                                [\"getOne\"],\n                            ),\n                        });\n                        const r = response.data;\n                        if (!r) {\n                            setError(\n                                `<p>No records/data found for resource \"${resource?.name}\".</p>\n                            <p>Please check your data provider and resource.</p>\n                            <p>For more info, please check the <a href=\"https://refine.dev/docs/packages/documentation/inferencer/\" target=\"_blank\">documentation</a>.</p>`,\n                            );\n                        }\n                        setData(r);\n                        setTimeout(() => {\n                            setLoading(false);\n                        }, 500);\n                    }\n                }\n            } catch (error) {\n                console.warn(\n                    \"An error occured while fetching the resource data. Please check the error message below:\",\n                    error,\n                );\n                setError(\n                    `<p>Something went wrong while fetching the resource data.</p>\n                    <p>Please check your data provider and API for resource \"${resource?.name}\".</p>\n                    <p>For more info, please check the <a href=\"https://refine.dev/docs/packages/documentation/inferencer/\" target=\"_blank\">documentation</a>.</p>`,\n                );\n                setTimeout(() => {\n                    setLoading(false);\n                }, 500);\n            }\n        },\n        [type, dataProvider, resource, resources],\n    );\n\n    React.useEffect(() => {\n        setInitial(false);\n        if (!loading && !data) {\n            resolver(id);\n        }\n    }, [resolver, id]);\n\n    return {\n        data,\n        datas,\n        loading,\n        initial,\n        error,\n    };\n};\n","import React from \"react\";\nimport { useDataProvider } from \"@refinedev/core\";\n\nimport {\n    dataProviderFromResource,\n    removeRelationSuffix,\n    toPlural,\n    toSingular,\n} from \"../utilities\";\nimport {\n    FieldInferencer,\n    InferField,\n    InferencerComponentProps,\n    ResourceInferenceAttempt,\n} from \"../types\";\nimport { get } from \"lodash-es\";\nimport { pickMeta } from \"../utilities/get-meta-props\";\n\ntype UseRelationFetchProps = {\n    record?: Record<string, unknown>;\n    fields?: (InferField | null | false)[];\n    infer: FieldInferencer;\n    meta?: InferencerComponentProps[\"meta\"];\n};\n\nexport const useRelationFetch = ({\n    record,\n    fields,\n    infer,\n    meta,\n}: UseRelationFetchProps) => {\n    const dataProvider = useDataProvider();\n\n    const [updatedFields, setUpdatedFields] = React.useState<InferField[]>([]);\n\n    const [initial, setInitial] = React.useState(true);\n    const [loading, setLoading] = React.useState<boolean>(false);\n\n    const resolver = React.useCallback(\n        async (allFields: (InferField | false | null)[]) => {\n            console.groupCollapsed(\n                \"@refinedev/inferencer is trying to detect relations\",\n            );\n            const attempts: Array<ResourceInferenceAttempt> = [];\n            setLoading(true);\n            try {\n                const promises = allFields.map(async (field) => {\n                    if (field && (field.relation || field.canRelation)) {\n                        if (record) {\n                            if (field.relationInfer) {\n                                return field;\n                            }\n                            const dataProviderName = dataProviderFromResource(\n                                field.resource,\n                            );\n                            const dp = dataProvider(dataProviderName);\n\n                            const isMultiple = field.multiple;\n\n                            const requestId = Array.isArray(field.accessor)\n                                ? undefined\n                                : field.multiple\n                                ? (record[field.key] as Array<unknown>).map(\n                                      (el) => {\n                                          return field.accessor\n                                              ? get(el, field.accessor)\n                                              : el;\n                                      },\n                                  )[0]\n                                : field.accessor\n                                ? get(record[field.key], field.accessor)\n                                : record[field.key];\n\n                            if (requestId && field.resource) {\n                                try {\n                                    let record:\n                                        | Record<string, unknown>\n                                        | undefined = {};\n\n                                    if (isMultiple && dp.getMany) {\n                                        const { data } = await dp.getMany({\n                                            resource: field.resource.name,\n                                            ids: [requestId],\n                                            meta: pickMeta(\n                                                field.resource?.identifier ??\n                                                    field.resource?.name,\n                                                meta,\n                                                [\"getMany\"],\n                                            ),\n                                        });\n                                        record = data?.[0];\n                                    } else {\n                                        const { data } = await dp.getOne({\n                                            resource: field.resource.name,\n                                            id: requestId,\n                                            meta: pickMeta(\n                                                field.resource?.identifier ??\n                                                    field.resource?.name,\n                                                meta,\n                                                isMultiple\n                                                    ? [\"getMany\", \"getOne\"]\n                                                    : [\"getOne\"],\n                                            ),\n                                        });\n                                        record = data;\n                                    }\n\n                                    attempts.push({\n                                        status: \"success\",\n                                        resource: field.resource.name,\n                                        field: field.key,\n                                    });\n\n                                    const relationInfer = infer(\n                                        \"__\",\n                                        record,\n                                        {},\n                                        infer,\n                                    );\n\n                                    return {\n                                        ...field,\n                                        relationInfer,\n                                    };\n                                } catch (error) {\n                                    attempts.push({\n                                        status: \"error\",\n                                        resource: field.resource.name,\n                                        field: field.key,\n                                    });\n                                    return {\n                                        ...field,\n                                        relationInfer: null,\n                                    };\n                                }\n                            }\n\n                            if (requestId) {\n                                let responseData;\n                                let isPlural;\n\n                                try {\n                                    let record:\n                                        | Record<string, unknown>\n                                        | undefined = {};\n\n                                    if (isMultiple && dp.getMany) {\n                                        const { data } = await dp.getMany?.({\n                                            resource: toPlural(\n                                                removeRelationSuffix(field.key),\n                                            ),\n                                            ids: [requestId],\n                                            meta: pickMeta(\n                                                toPlural(\n                                                    removeRelationSuffix(\n                                                        field.key,\n                                                    ),\n                                                ),\n                                                meta,\n                                                [\"getMany\"],\n                                            ),\n                                        });\n                                        record = data?.[0];\n                                    } else {\n                                        const { data } = await dp.getOne({\n                                            resource: toPlural(\n                                                removeRelationSuffix(field.key),\n                                            ),\n                                            id: requestId,\n                                            meta: pickMeta(\n                                                toPlural(\n                                                    removeRelationSuffix(\n                                                        field.key,\n                                                    ),\n                                                ),\n                                                meta,\n                                                isMultiple\n                                                    ? [\"getMany\", \"getOne\"]\n                                                    : [\"getOne\"],\n                                            ),\n                                        });\n                                        record = data;\n                                    }\n\n                                    attempts.push({\n                                        status: \"success\",\n                                        resource: toPlural(\n                                            removeRelationSuffix(field.key),\n                                        ),\n                                        field: field.key,\n                                    });\n\n                                    responseData = record;\n                                    isPlural = true;\n                                } catch (error) {\n                                    attempts.push({\n                                        status: \"error\",\n                                        resource: toPlural(\n                                            removeRelationSuffix(field.key),\n                                        ),\n                                        field: field.key,\n                                    });\n\n                                    let record:\n                                        | Record<string, unknown>\n                                        | undefined = {};\n\n                                    try {\n                                        if (isMultiple && dp.getMany) {\n                                            const { data } = await dp.getMany({\n                                                resource: toSingular(\n                                                    removeRelationSuffix(\n                                                        field.key,\n                                                    ),\n                                                ),\n                                                meta: pickMeta(\n                                                    toSingular(\n                                                        removeRelationSuffix(\n                                                            field.key,\n                                                        ),\n                                                    ),\n                                                    meta,\n                                                    [\"getMany\"],\n                                                ),\n                                                ids: [requestId],\n                                            });\n                                            record = data?.[0];\n                                        } else {\n                                            const { data } = await dp.getOne({\n                                                resource: toSingular(\n                                                    removeRelationSuffix(\n                                                        field.key,\n                                                    ),\n                                                ),\n                                                meta: pickMeta(\n                                                    toSingular(\n                                                        removeRelationSuffix(\n                                                            field.key,\n                                                        ),\n                                                    ),\n                                                    meta,\n                                                    isMultiple\n                                                        ? [\"getMany\", \"getOne\"]\n                                                        : [\"getOne\"],\n                                                ),\n                                                id: requestId,\n                                            });\n                                            record = data;\n                                        }\n\n                                        attempts.push({\n                                            status: \"success\",\n                                            resource: toSingular(\n                                                removeRelationSuffix(field.key),\n                                            ),\n                                            field: field.key,\n                                        });\n\n                                        responseData = record;\n                                        isPlural = false;\n                                    } catch (error) {\n                                        attempts.push({\n                                            status: \"error\",\n                                            resource: toSingular(\n                                                removeRelationSuffix(field.key),\n                                            ),\n                                            field: field.key,\n                                        });\n\n                                        return {\n                                            ...field,\n                                            relationInfer: null,\n                                        };\n                                    }\n                                }\n\n                                const relationInfer = infer(\n                                    \"__\",\n                                    responseData,\n                                    {},\n                                    infer,\n                                );\n\n                                const resourceNameWithoutRelationSuffix =\n                                    removeRelationSuffix(field.key);\n\n                                return {\n                                    ...field,\n                                    relation: true,\n                                    type: \"relation\",\n                                    resource: {\n                                        name: isPlural\n                                            ? toPlural(\n                                                  resourceNameWithoutRelationSuffix,\n                                              )\n                                            : toSingular(\n                                                  resourceNameWithoutRelationSuffix,\n                                              ),\n                                    },\n                                    fieldable: false,\n                                    canRelation: undefined,\n                                    relationInfer,\n                                };\n                            }\n\n                            return {\n                                ...field,\n                                relationInfer: null,\n                            };\n                        }\n                    }\n                    return field;\n                });\n\n                const results = await Promise.all(promises);\n\n                setUpdatedFields(results.filter((el) => el) as InferField[]);\n                setTimeout(() => {\n                    setLoading(false);\n                }, 500);\n            } catch (error) {\n                setTimeout(() => {\n                    setLoading(false);\n                }, 500);\n            }\n            setTimeout(() => {\n                console.log(\n                    `Tried to detect relations with ${\n                        attempts.length\n                    } attempts and succeeded with ${\n                        attempts.filter((el) => el.status === \"success\").length\n                    } attempts.`,\n                );\n                console.groupEnd();\n\n                console.info(\n                    `@refinedev/inferencer may send multiple requests to your API for nonexistent resources when trying to detect relations. To learn more about how the inferencer works, visit https://s.refine.dev/how-inferencer-works`,\n                );\n            }, 500);\n        },\n        [dataProvider, record],\n    );\n\n    React.useEffect(() => {\n        setInitial(false);\n        if (\n            !loading &&\n            fields &&\n            fields.length > 0 &&\n            updatedFields.length === 0\n        ) {\n            resolver(fields);\n        }\n    }, [resolver, loading, fields, resolver]);\n\n    return {\n        fields: updatedFields,\n        loading,\n        initial,\n    };\n};\n","import React from \"react\";\n\nimport Alert from \"@mui/material/Alert\";\nimport AlertTitle from \"@mui/material/AlertTitle\";\nimport Box from \"@mui/material/Box\";\n\nimport { CreateInferencerConfig } from \"../../types\";\n\nexport const ErrorComponent: CreateInferencerConfig[\"errorComponent\"] = ({\n    error,\n}) => {\n    if (error) {\n        return (\n            <Box\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    minHeight: \"200px\",\n                }}\n            >\n                <Alert severity=\"error\">\n                    <AlertTitle>Error</AlertTitle>\n                    <div dangerouslySetInnerHTML={{ __html: error ?? \"\" }} />\n                </Alert>\n            </Box>\n        );\n    }\n\n    return null;\n};\n","import React from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport { CreateInferencerConfig } from \"../../types\";\n\nexport const LoadingComponent: CreateInferencerConfig[\"loadingComponent\"] =\n    () => {\n        return (\n            <Box\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    minHeight: \"300px\",\n                }}\n            >\n                <CircularProgress size=\"large\" />\n            </Box>\n        );\n    };\n","import {\n    DateField,\n    DeleteButton,\n    EditButton,\n    EmailField,\n    List,\n    MarkdownField,\n    SaveButton,\n    ShowButton,\n    TagField,\n    UrlField,\n    useDataGrid,\n} from \"@refinedev/mui\";\n\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n\nimport { createInferencer } from \"../../create-inferencer\";\nimport {\n    accessor,\n    componentName,\n    getMetaProps,\n    getVariableName,\n    isIDKey,\n    jsx,\n    noOp,\n    printImports,\n    translatePrettyString,\n} from \"../../utilities\";\n\nimport { SharedCodeViewer } from \"../../components/shared-code-viewer\";\nimport { ErrorComponent } from \"./error\";\nimport { LoadingComponent } from \"./loading\";\n\nimport {\n    ImportElement,\n    InferencerResultComponent,\n    InferField,\n    RendererContext,\n} from \"../../types\";\n\n/**\n * a renderer function for list page in Material UI\n * @internal used internally from inferencer components\n */\nexport const renderer = ({\n    resource,\n    fields,\n    meta,\n    isCustomPage,\n    i18n,\n}: RendererContext) => {\n    const COMPONENT_NAME = componentName(\n        resource.label ?? resource.name,\n        \"list\",\n    );\n    const recordName = \"dataGridProps?.rows\";\n    const imports: Array<ImportElement> = [\n        [\"React\", \"react\", true],\n        [\"useDataGrid\", \"@refinedev/mui\"],\n        [\"DataGrid\", \"@mui/x-data-grid\"],\n        [\"GridColDef\", \"@mui/x-data-grid\"],\n        [\"EditButton\", \"@refinedev/mui\"],\n        [\"ShowButton\", \"@refinedev/mui\"],\n        [\"DeleteButton\", \"@refinedev/mui\"],\n        [\"List\", \"@refinedev/mui\"],\n        [\"IResourceComponentsProps\", \"@refinedev/core\"],\n    ];\n\n    if (i18n) {\n        imports.push([\"useTranslate\", \"@refinedev/core\"]);\n    }\n\n    const relationFields: (InferField | null)[] = fields.filter(\n        (field) => field?.relation && !field?.fieldable && field?.resource,\n    );\n\n    const relationHooksCode = relationFields\n        .filter(Boolean)\n        .map((field) => {\n            if (field?.relation && !field.fieldable && field.resource) {\n                imports.push([\"useMany\", \"@refinedev/core\"]);\n\n                let idsString = \"\";\n\n                if (field.multiple) {\n                    idsString = `[].concat(...(${recordName}?.map((item: any) => ${accessor(\n                        \"item\",\n                        field.key,\n                        field.accessor,\n                        false,\n                    )}) ?? []))`;\n                } else {\n                    idsString = `${recordName}?.map((item: any) => ${accessor(\n                        \"item\",\n                        field.key,\n                        field.accessor,\n                        false,\n                    )}) ?? []`;\n                }\n\n                return `\n                const { data: ${getVariableName(\n                    field.key,\n                    \"Data\",\n                )}, isLoading: ${getVariableName(field.key, \"IsLoading\")} } =\n                useMany({\n                    resource: \"${field.resource.name}\",\n                    ids: ${idsString},\n                    queryOptions: {\n                        enabled: !!${recordName},\n                    },\n                    ${getMetaProps(\n                        field?.resource?.identifier ?? field?.resource?.name,\n                        meta,\n                        \"getMany\",\n                    )}\n                });\n                `;\n            }\n            return undefined;\n        })\n        .filter(Boolean);\n\n    const relationVariableNames = relationFields\n        ?.map((field) => {\n            if (field && field.resource) {\n                return `${getVariableName(field.key, \"Data\")}?.data`;\n            }\n            return undefined;\n        })\n        .filter(Boolean);\n\n    const renderRelationFields = (field: InferField) => {\n        if (field.relation && field.resource) {\n            const variableName = `${getVariableName(field.key, \"Data\")}?.data`;\n            const variableIsLoading = getVariableName(field.key, \"IsLoading\");\n\n            if (Array.isArray(field.accessor)) {\n                // not handled - not possible case\n                return undefined;\n            }\n\n            const loadingCondition = `${variableIsLoading} ? <>Loading...</> : `;\n\n            const fieldProperty = `field: \"${field.key}\"`;\n\n            const valueGetterProperty =\n                field.accessor &&\n                !field.multiple &&\n                !Array.isArray(field.accessor)\n                    ? `valueGetter: ({ row }) => {\n            const value = ${accessor(\"row\", field.key, field.accessor, false)};\n\n            return value;\n        },`\n                    : \"\";\n\n            const headerProperty = `headerName: ${translatePrettyString({\n                resource,\n                field,\n                i18n,\n                noBraces: true,\n            })}`;\n\n            let renderCell = \"\";\n\n            // if multiple, then map it with tagfield\n            // if not, then just show the value\n\n            if (field.multiple) {\n                imports.push([\"TagField\", \"@refinedev/mui\"]);\n\n                let val = \"item\";\n\n                // for multiple\n                if (field?.relationInfer) {\n                    const valSingle = `${variableName}?.find((resourceItems) => resourceItems.id === ${accessor(\n                        \"item\",\n                        undefined,\n                        field.accessor,\n                    )})`;\n                    const valViewableSingle = accessor(\n                        valSingle,\n                        undefined,\n                        field?.relationInfer?.accessor,\n                    );\n                    val = valViewableSingle;\n                }\n\n                renderCell = `\n                renderCell: function render({ value }) {\n                    return ${loadingCondition} (\n                        <>\n                            {${accessor(\n                                \"value\",\n                                undefined,\n                            )}?.map((item: any, index: number) => (\n                                <TagField key={index} value={${val}} />\n                            ))}\n                        </>\n                    )\n                }\n                `;\n            } else {\n                if (field?.relationInfer) {\n                    // for single\n                    const valSingle = `${variableName}?.find((item) => item.id === value)`;\n                    const valViewableSingle = accessor(\n                        valSingle,\n                        undefined,\n                        field?.relationInfer?.accessor,\n                    );\n\n                    renderCell = `\n                    renderCell: function render({ value }) {\n                        return ${loadingCondition} ${valViewableSingle};\n                    }\n                    `;\n                } else {\n                    renderCell = \"\";\n                }\n            }\n\n            return `\n                {\n                    ${fieldProperty},\n                    flex: 1,\n                    ${headerProperty},${valueGetterProperty}\n                    minWidth: 300,${renderCell}\n                }\n            `;\n        }\n        return undefined;\n    };\n\n    const imageFields = (field: InferField) => {\n        if (field.type === \"image\") {\n            const fieldProperty = `field: \"${field.key}\"`;\n\n            const headerProperty = `headerName: ${translatePrettyString({\n                resource,\n                field,\n                i18n,\n                noBraces: true,\n            })}`;\n\n            const valueGetterProperty =\n                field.accessor &&\n                !field.multiple &&\n                !Array.isArray(field.accessor)\n                    ? `valueGetter: ({ row }) => {\n            const value = ${accessor(\"row\", field.key, field.accessor, false)};\n\n            return value;\n        },`\n                    : \"\";\n\n            let renderCell = `\n                renderCell: function render({ value }) {\n                    return (\n                        <img src={${accessor(\n                            \"value\",\n                            undefined,\n                            Array.isArray(field.accessor)\n                                ? field.accessor\n                                : undefined,\n                            \" + \",\n                        )}} style={{ height: \"50px\", maxWidth: \"100px\" }} />\n                    )\n                }\n            `;\n\n            if (field.multiple) {\n                const val = accessor(\"item\", undefined, field.accessor, \" + \");\n\n                renderCell = `\n                    renderCell: function render({ value }) {\n                        return (\n                            <>\n                            {value?.map((item: any, index: number) => (\n                                <img src={${val}} key={index} style={{ height: \"50px\", maxWidth: \"100px\" }} />\n                            ))}\n                            </>\n                        )\n                    }\n                `;\n            }\n\n            return `\n                {\n                    ${fieldProperty},\n                    flex: 1,\n                    ${headerProperty},${valueGetterProperty}\n                    minWidth: 100,${renderCell}\n                }\n            `;\n        }\n        return undefined;\n    };\n\n    const emailFields = (field: InferField) => {\n        if (field.type === \"email\") {\n            imports.push([\"EmailField\", \"@refinedev/mui\"]);\n\n            const fieldProperty = `field: \"${field.key}\"`;\n\n            const headerProperty = `headerName: ${translatePrettyString({\n                resource,\n                field,\n                i18n,\n                noBraces: true,\n            })}`;\n\n            const valueGetterProperty =\n                field.accessor &&\n                !field.multiple &&\n                !Array.isArray(field.accessor)\n                    ? `valueGetter: ({ row }) => {\n            const value = ${accessor(\"row\", field.key, field.accessor, false)};\n\n            return value;\n        },`\n                    : \"\";\n\n            let renderCell = `\n            renderCell: function render({ value }) {\n                return (\n                    <EmailField value={${accessor(\n                        \"value\",\n                        undefined,\n                        Array.isArray(field.accessor)\n                            ? field.accessor\n                            : undefined,\n                        \" + \",\n                    )}} />\n                )\n            }\n        `;\n\n            if (field.multiple) {\n                imports.push([\"TagField\", \"@refinedev/mui\"]);\n\n                const val = accessor(\"item\", undefined, field.accessor, \" + \");\n\n                renderCell = `\n                renderCell: function render({ value }) {\n                    return (\n                        <>\n                        {value?.map((item: any, index: number) => (\n                            <TagField value={${val}} key={index} />\n                        ))}\n                        </>\n                    )\n                }\n            `;\n            }\n\n            return `\n            {\n                ${fieldProperty},\n                flex: 1,\n                ${headerProperty},${valueGetterProperty}\n                minWidth: 250,${renderCell}\n            }\n        `;\n        }\n        return undefined;\n    };\n\n    const urlFields = (field: InferField) => {\n        if (field.type === \"url\") {\n            imports.push([\"UrlField\", \"@refinedev/mui\"]);\n\n            const fieldProperty = `field: \"${field.key}\"`;\n\n            const headerProperty = `headerName: ${translatePrettyString({\n                resource,\n                field,\n                i18n,\n                noBraces: true,\n            })}`;\n\n            const valueGetterProperty =\n                field.accessor &&\n                !field.multiple &&\n                !Array.isArray(field.accessor)\n                    ? `valueGetter: ({ row }) => {\n            const value = ${accessor(\"row\", field.key, field.accessor, false)};\n\n            return value;\n        },`\n                    : \"\";\n\n            let renderCell = `\n                renderCell: function render({ value }) {\n                    return (\n                        <UrlField value={${accessor(\n                            \"value\",\n                            undefined,\n                            Array.isArray(field.accessor)\n                                ? field.accessor\n                                : undefined,\n                            \" + \",\n                        )}} />\n                    )\n                }\n            `;\n\n            if (field.multiple) {\n                imports.push([\"TagField\", \"@refinedev/mui\"]);\n\n                const val = accessor(\"item\", undefined, field.accessor, \" + \");\n\n                renderCell = `\n                    renderCell: function render({ value }) {\n                        return (\n                            <>\n                            {value?.map((item: any, index: any) => (\n                                <TagField value={${val}} key={index} />\n                            ))}\n                            </>\n                        )\n                    }\n                `;\n            }\n\n            return `\n                {\n                    ${fieldProperty},\n                    flex: 1,\n                    ${headerProperty},${valueGetterProperty}\n                    minWidth: 250,${renderCell}\n                }\n            `;\n        }\n        return undefined;\n    };\n\n    const booleanFields = (field: InferField) => {\n        if (field?.type) {\n            imports.push([\"Checkbox\", \"@mui/material\"]);\n\n            const fieldProperty = `field: \"${field.key}\"`;\n\n            const headerProperty = `headerName: ${translatePrettyString({\n                resource,\n                field,\n                i18n,\n                noBraces: true,\n            })}`;\n\n            const valueGetterProperty =\n                field.accessor &&\n                !field.multiple &&\n                !Array.isArray(field.accessor)\n                    ? `valueGetter: ({ row }) => {\n            const value = ${accessor(\"row\", field.key, field.accessor, false)};\n\n            return value;\n        },`\n                    : \"\";\n\n            let renderCell = `\n                renderCell: function render({ value }) {\n                    return (\n                        <Checkbox checked={!!${accessor(\n                            \"value\",\n                            undefined,\n                            Array.isArray(field.accessor)\n                                ? field.accessor\n                                : undefined,\n                            \" && \",\n                        )}} />\n                    );\n                }\n            `;\n\n            if (field.multiple) {\n                const val = accessor(\"item\", undefined, field.accessor, \" && \");\n\n                renderCell = `\n                    renderCell: function render({ value }) {\n                        return (\n                            <>\n                            {value?.map((item: any, index: number) => (\n                                <Checkbox checked={!!${val}} key={index} />\n                            ))}\n                            </>\n                        )\n                    }\n                `;\n            }\n\n            return `\n                {\n                    ${fieldProperty},\n                    ${headerProperty},${valueGetterProperty}\n                    minWidth: 100,${renderCell}\n                }\n            `;\n        }\n\n        return undefined;\n    };\n\n    const dateFields = (field: InferField) => {\n        if (field.type === \"date\") {\n            imports.push([\"DateField\", \"@refinedev/mui\"]);\n\n            const fieldProperty = `field: \"${field.key}\"`;\n\n            const headerProperty = `headerName: ${translatePrettyString({\n                resource,\n                field,\n                i18n,\n                noBraces: true,\n            })}`;\n\n            const valueGetterProperty =\n                field.accessor &&\n                !field.multiple &&\n                !Array.isArray(field.accessor)\n                    ? `valueGetter: ({ row }) => {\n            const value = ${accessor(\"row\", field.key, field.accessor, false)};\n\n            return value;\n        },`\n                    : \"\";\n\n            let renderCell = `\n                renderCell: function render({ value }) {\n                    return <DateField value={value} />;\n                }\n            `;\n\n            if (field.multiple) {\n                const val = accessor(\n                    \"item\",\n                    undefined,\n                    field.accessor,\n                    ' + \" \" + ',\n                );\n                renderCell = `\n                    renderCell: function render({ value }) {\n                        return (\n                            <>\n                            {value?.map((item: any, index: number) => (\n                                <DateField value={${val}} key={index} />\n                            ))}\n                            </>\n                        )\n                    }\n                `;\n            }\n\n            return `\n                {\n                    ${fieldProperty},\n                    flex: 1,\n                    ${headerProperty},${valueGetterProperty}\n                    minWidth: 250,${renderCell}\n                }\n            `;\n        }\n        return undefined;\n    };\n\n    const richtextFields = (field: InferField) => {\n        if (field?.type === \"richtext\") {\n            imports.push([\"MarkdownField\", \"@refinedev/mui\"]);\n\n            const fieldProperty = `field: \"${field.key}\"`;\n\n            const headerProperty = `headerName: ${translatePrettyString({\n                resource,\n                field,\n                i18n,\n                noBraces: true,\n            })}`;\n\n            const valueGetterProperty =\n                field.accessor &&\n                !field.multiple &&\n                !Array.isArray(field.accessor)\n                    ? `valueGetter: ({ row }) => {\n            const value = ${accessor(\"row\", field.key, field.accessor, false)};\n\n            return value;\n        },`\n                    : \"\";\n\n            let renderCell = `\n                renderCell: function render({ value }) {\n                    return <MarkdownField value={(value ?? \"\").slice(0, 80) + \"...\"} />;\n                }\n            `;\n\n            if (field.multiple) {\n                const val = accessor(\n                    \"item\",\n                    undefined,\n                    field.accessor,\n                    ' + \" \" + ',\n                );\n                renderCell = `\n                    renderCell: function render({ value }) {\n                        return (\n                            <>\n                            {value?.map((item: any, index: number) => (\n                                <MarkdownField value={(${val}).slice(0, 80) + \"...\"} key={index} />\n                            ))}\n                            </>\n                        )\n                    }\n                `;\n            }\n\n            return `\n                {\n                    ${fieldProperty},\n                    flex: 1,\n                    ${headerProperty},${valueGetterProperty}\n                    minWidth: 250,${renderCell}\n                }\n            `;\n        }\n\n        return undefined;\n    };\n\n    const basicFields = (field: InferField) => {\n        if (field && (field.type === \"text\" || field.type === \"number\")) {\n            const fieldProperty = `field: \"${field.key}\"`;\n\n            const headerProperty = `headerName: ${translatePrettyString({\n                resource,\n                field,\n                i18n,\n                noBraces: true,\n            })}`;\n\n            const valueGetterProperty =\n                field.accessor &&\n                !field.multiple &&\n                !Array.isArray(field.accessor)\n                    ? `valueGetter: ({ row }) => {\n            const value = ${accessor(\"row\", field.key, field.accessor, false)};\n\n            return value;\n        },`\n                    : \"\";\n\n            let renderCell = \"\";\n\n            if (field.multiple) {\n                imports.push([\"TagField\", \"@refinedev/mui\"]);\n\n                const val = accessor(\n                    \"item\",\n                    undefined,\n                    field.accessor,\n                    ' + \" \" + ',\n                );\n                renderCell = `\n                renderCell: function render({ row }) {\n                    return (\n                        <>\n                            {(${accessor(\n                                \"row\",\n                                field.key,\n                            )})?.map((item: any) => (\n                                <TagField value={${val}} key={${val}} />\n                            ))}\n                        </>\n                    )\n                }\n                `;\n            }\n            if (!field.multiple && Array.isArray(field.accessor)) {\n                renderCell = `\n                renderCell: function render({ row }) {\n                    return (\n                        <>{${accessor(\"row\", field.key, field.accessor)}}</>\n                    );\n                }\n                `;\n            }\n\n            return `\n            {\n                ${fieldProperty}, ${\n                isIDKey(field.key)\n                    ? \"\"\n                    : `\n                flex: 1,`\n            }\n                ${headerProperty},${valueGetterProperty}${\n                field.type === \"number\" ? \"type: 'number',\" : \"\"\n            }\n                minWidth: ${isIDKey(field.key) ? 50 : 200},${renderCell}\n            }\n            `;\n        }\n        return undefined;\n    };\n\n    const {\n        canEdit,\n        canShow,\n        canDelete: canDeleteProp,\n        meta: resourceMeta,\n    } = resource ?? {};\n\n    const canDelete = canDeleteProp || resourceMeta?.canDelete;\n\n    if (canEdit) {\n        imports.push([\"EditButton\", \"@refinedev/mui\"]);\n    }\n    if (canShow) {\n        imports.push([\"ShowButton\", \"@refinedev/mui\"]);\n    }\n    if (canDelete) {\n        imports.push([\"DeleteButton\", \"@refinedev/mui\"]);\n    }\n\n    const actionColumnTitle = i18n ? `translate(\"table.actions\")` : `\"Actions\"`;\n    const actionButtons =\n        canEdit || canShow || canDelete\n            ? jsx`\n            {\n                field: \"actions\",\n                headerName: ${actionColumnTitle},\n                sortable: false,\n                renderCell: function render({ row }) {\n                    return (\n                        <>\n                            ${\n                                canEdit\n                                    ? jsx`<EditButton hideText recordItemId={row.id} />`\n                                    : \"\"\n                            }\n                            ${\n                                canShow\n                                    ? jsx`<ShowButton hideText recordItemId={row.id} />`\n                                    : \"\"\n                            }\n                            ${\n                                canDelete\n                                    ? jsx`<DeleteButton hideText recordItemId={row.id} />`\n                                    : \"\"\n                            }\n                        </>\n                    );\n                },\n                align: \"center\",\n                headerAlign: \"center\",\n                minWidth: 80,\n            },\n    `\n            : \"\";\n\n    const renderedFields: Array<string | undefined> = fields.map((field) => {\n        switch (field?.type) {\n            case \"text\":\n            case \"number\":\n                return basicFields(field);\n            case \"richtext\":\n                return richtextFields(field);\n            case \"email\":\n                return emailFields(field);\n            case \"image\":\n                return imageFields(field);\n            case \"date\":\n                return dateFields(field);\n            case \"boolean\":\n                return booleanFields(field);\n            case \"url\":\n                return urlFields(field);\n            case \"relation\":\n                return renderRelationFields(field);\n            default:\n                return undefined;\n        }\n    });\n\n    noOp(imports);\n    const useTranslateHook = i18n && `const translate = useTranslate();`;\n\n    return jsx`\n    ${printImports(imports)}\n    \n    export const ${COMPONENT_NAME}: React.FC<IResourceComponentsProps> = () => {\n        ${useTranslateHook}\n        const { dataGridProps } = useDataGrid(\n            ${\n                isCustomPage\n                    ? `{ resource: \"${resource.name}\",\n                        ${getMetaProps(\n                            resource?.identifier ?? resource?.name,\n                            meta,\n                            \"getList\",\n                        )}\n                        }`\n                    : getMetaProps(\n                          resource?.identifier ?? resource?.name,\n                          meta,\n                          \"getList\",\n                      )\n                    ? `{ ${getMetaProps(\n                          resource?.identifier ?? resource?.name,\n                          meta,\n                          \"getList\",\n                      )} },`\n                    : \"\"\n            } \n        );\n    \n        ${relationHooksCode}\n\n        const columns = React.useMemo<GridColDef[]>(() => [\n            ${[...renderedFields, actionButtons].filter(Boolean).join(\",\\r\\n\")}\n        ], [${i18n ? \"translate, \" : \"\"}${relationVariableNames.join(\",\")}]);\n\n        return (\n            <List>\n                <DataGrid {...dataGridProps} columns={columns} autoHeight />\n            </List>\n        );\n    };\n    `;\n};\n\n/**\n * @experimental This is an experimental component\n */\nexport const ListInferencer: InferencerResultComponent = createInferencer({\n    type: \"list\",\n    additionalScope: [\n        [\n            \"@refinedev/mui\",\n            \"RefineMui\",\n            {\n                useDataGrid,\n                EditButton,\n                SaveButton,\n                DeleteButton,\n                List,\n                TagField,\n                EmailField,\n                UrlField,\n                DateField,\n                MarkdownField,\n                ShowButton,\n            },\n        ],\n        [\"@mui/x-data-grid\", \"MuiXDataGrid\", { DataGrid }],\n        [\"@mui/material\", \"MuiMaterial\", { Checkbox }],\n    ],\n    codeViewerComponent: SharedCodeViewer,\n    loadingComponent: LoadingComponent,\n    errorComponent: ErrorComponent,\n    renderer,\n});\n","import { Create, useAutocomplete } from \"@refinedev/mui\";\n\nimport { useForm } from \"@refinedev/react-hook-form\";\n\nimport Box from \"@mui/material/Box\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\n\nimport { Controller } from \"react-hook-form\";\n\nimport { createInferencer } from \"../../create-inferencer\";\n\nimport {\n    jsx,\n    componentName,\n    accessor,\n    printImports,\n    isIDKey,\n    dotAccessor,\n    noOp,\n    getVariableName,\n    translatePrettyString,\n    getMetaProps,\n} from \"../../utilities\";\n\nimport { ErrorComponent } from \"./error\";\nimport { LoadingComponent } from \"./loading\";\nimport { SharedCodeViewer } from \"../../components/shared-code-viewer\";\n\nimport {\n    InferencerResultComponent,\n    InferField,\n    ImportElement,\n    RendererContext,\n} from \"../../types\";\n\n/**\n * a renderer function for create page in Material UI\n * @internal used internally from inferencer components\n */\nexport const renderer = ({\n    resource,\n    fields,\n    meta,\n    isCustomPage,\n    i18n,\n}: RendererContext) => {\n    const COMPONENT_NAME = componentName(\n        resource.label ?? resource.name,\n        \"create\",\n    );\n    const imports: Array<ImportElement> = [\n        [\"Create\", \"@refinedev/mui\"],\n        [\"Box\", \"@mui/material\"],\n        [\"useForm\", \"@refinedev/react-hook-form\"],\n        [\"IResourceComponentsProps\", \"@refinedev/core\"],\n    ];\n\n    if (i18n) {\n        imports.push([\"useTranslate\", \"@refinedev/core\"]);\n    }\n\n    const relationFields: (InferField | null)[] = fields.filter(\n        (field) => field?.relation && !field?.fieldable && field?.resource,\n    );\n\n    const relationHooksCode = relationFields\n        .filter(Boolean)\n        .map((field) => {\n            if (field?.relation && !field.fieldable && field.resource) {\n                imports.push([\"useAutocomplete\", \"@refinedev/mui\"]);\n\n                return `\n                const { autocompleteProps: ${getVariableName(\n                    field.key,\n                    \"AutocompleteProps\",\n                )} } =\n                useAutocomplete({\n                    resource: \"${field.resource.name}\",\n                    ${getMetaProps(\n                        field?.resource?.identifier ?? field?.resource?.name,\n                        meta,\n                        \"getList\",\n                    )}\n                });\n            `;\n            }\n            return undefined;\n        })\n        .filter(Boolean);\n\n    const renderRelationFields = (field: InferField) => {\n        if (field.relation && field.resource) {\n            imports.push(\n                [\"Autocomplete\", \"@mui/material\"],\n                [\"Controller\", \"react-hook-form\"],\n            );\n            const variableName = getVariableName(\n                field.key,\n                \"AutocompleteProps\",\n            );\n\n            const optionLabelProperty = field.relationInfer\n                ? field.relationInfer.accessor\n                    ? typeof field.relationInfer.accessor === \"string\"\n                        ? field.relationInfer.accessor\n                        : field.relationInfer.accessor[0]\n                    : \"title\"\n                : \"title\";\n\n            // check optionLabelProperty can be accessed via dot notation\n            const isBracketNotation =\n                optionLabelProperty.includes(\".\") ||\n                optionLabelProperty.includes(\"[\") ||\n                optionLabelProperty.includes(\"]\") ||\n                optionLabelProperty.includes(\"-\");\n\n            const optionLabelItemValue = field.accessor\n                ? accessor(\"item\", undefined, field.accessor, false)\n                : \"(item?.id ?? item)\";\n\n            const optionEqualValue = field.accessor\n                ? accessor(\"value\", undefined, field.accessor, false)\n                : \"(value?.id ?? value)\";\n\n            const optionChangeValue = field.accessor\n                ? \"value\"\n                : field.multiple\n                ? \"value?.map((item: any) => item?.id ?? item)\"\n                : \"value?.id ?? value\";\n\n            return jsx`\n                <Controller\n                    control={control}\n                    name=\"${dotAccessor(field.key, undefined)}\"\n                    rules={{ required: \"This field is required\" }}\n                    // eslint-disable-next-line\n                    ${\n                        field.multiple\n                            ? \"defaultValue={[] as any}\"\n                            : \"defaultValue={null as any}\"\n                    }\n                    render={({ field }) => (\n                        <Autocomplete\n                            {...${variableName}}\n                            {...field}\n                            ${field.multiple ? \"multiple\" : \"\"}\n                            onChange={(_, value) => {\n                                field.onChange(${optionChangeValue});\n                            }}\n                            getOptionLabel={(item) => {\n                                return (\n                                    ${variableName}?.options?.find(\n                                        (p) =>\n                                            p?.id?.toString() ===\n                                            ${optionLabelItemValue}?.toString(),\n                                    )?.${\n                                        isBracketNotation\n                                            ? `[\"${optionLabelProperty}\"]`\n                                            : optionLabelProperty\n                                    } ?? \"\"\n                                );\n                            }}\n                            isOptionEqualToValue={(option, value) =>\n                                value === undefined ||\n                                option?.id?.toString() === ${optionEqualValue}?.toString()\n                            }\n                            renderInput={(params) => (\n                                <TextField\n                                    {...params}\n                                    label=${translatePrettyString({\n                                        resource,\n                                        field,\n                                        i18n,\n                                    })}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    error={!!${accessor(\n                                        \"(errors as any)\",\n                                        field.key,\n                                        field.accessor,\n                                        false,\n                                    )}}\n                                    helperText={${accessor(\n                                        \"(errors as any)\",\n                                        field.key,\n                                        field.accessor,\n                                        false,\n                                    )}?.message}\n                                    required\n                                />\n                            )}\n                        />\n                    )}\n                />\n            `;\n        }\n        return undefined;\n    };\n\n    const basicInputFields = (field: InferField) => {\n        if (\n            field.type === \"text\" ||\n            field.type === \"url\" ||\n            field.type === \"email\" ||\n            field.type === \"number\" ||\n            field.type === \"date\" ||\n            field.type === \"richtext\"\n        ) {\n            if (isIDKey(field.key)) {\n                return undefined;\n            }\n\n            imports.push([\"TextField\", \"@mui/material\"]);\n\n            if (field.multiple) {\n                return undefined;\n            }\n\n            return jsx`\n                <TextField\n                    {...register(\"${dotAccessor(\n                        field.key,\n                        undefined,\n                        field.accessor,\n                    )}\", {\n                        required: \"This field is required\",\n                        ${field.type === \"number\" ? \"valueAsNumber: true,\" : \"\"}\n                    })}\n                    error={!!${accessor(\n                        \"(errors as any)\",\n                        field.key,\n                        field.accessor,\n                        false,\n                    )}}\n                    helperText={${accessor(\n                        \"(errors as any)\",\n                        field.key,\n                        field.accessor,\n                        false,\n                    )}?.message}\n                    margin=\"normal\"\n                    fullWidth\n                    InputLabelProps={{ shrink: true }}\n                    ${\n                        field.type !== \"date\" && field.type !== \"richtext\"\n                            ? `type=\"${field.type}\"`\n                            : \"\"\n                    }\n                    ${field.type === \"richtext\" ? \"multiline\" : \"\"}\n                    label=${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                    })}\n                    name=\"${dotAccessor(field.key, undefined, field.accessor)}\"\n                />\n            `;\n        }\n        return undefined;\n    };\n\n    const booleanFields = (field: InferField) => {\n        if (field.type === \"boolean\") {\n            imports.push(\n                [\"Checkbox\", \"@mui/material\"],\n                [\"FormControlLabel\", \"@mui/material\"],\n                [\"Controller\", \"react-hook-form\"],\n            );\n\n            if (field.multiple) {\n                return undefined;\n            }\n\n            return jsx`\n                <Controller\n                    control={control}\n                    name=\"${dotAccessor(field.key, undefined, field.accessor)}\"\n                    // eslint-disable-next-line\n                    defaultValue={null as any}\n                    render={({ field }) => (\n                        <FormControlLabel label=${translatePrettyString({\n                            resource,\n                            field,\n                            i18n,\n                        })} control={\n                            <Checkbox\n                                {...field}\n                                checked={field.value}\n                                onChange={(event) => {\n                                    field.onChange(event.target.checked);\n                                }}\n                            />\n                        } />\n                    )}\n                />\n            `;\n        }\n        return undefined;\n    };\n\n    const dateFields = (field: InferField) => {\n        if (field.type === \"date\") {\n            const basicRender = basicInputFields(field);\n\n            return `\n                {/*\n                    DatePicker component is not included in \"@refinedev/mui\" package.\n                    To use a <DatePicker> component, you can follow the official documentation for Material UI.\n\n                    Docs: https://mui.com/x/react-date-pickers/date-picker/#basic-usage\n                */}\n                ${basicRender ?? \"\"}\n                `;\n        }\n        return undefined;\n    };\n\n    const renderedFields: Array<string | undefined> = fields.map((field) => {\n        switch (field?.type) {\n            case \"text\":\n            case \"number\":\n            case \"email\":\n            case \"url\":\n            case \"richtext\":\n                return basicInputFields(field);\n            case \"date\":\n                return dateFields(field);\n            case \"boolean\":\n                return booleanFields(field);\n            case \"relation\":\n                return renderRelationFields(field);\n            default:\n                return undefined;\n        }\n    });\n\n    noOp(imports);\n    const useTranslateHook = i18n && `const translate = useTranslate();`;\n\n    return jsx`\n    ${printImports(imports)}\n\n    export const ${COMPONENT_NAME}: React.FC<IResourceComponentsProps> = () => {\n        ${useTranslateHook}\n        const {\n            saveButtonProps,\n            refineCore: { formLoading },\n            register,\n            control,\n            formState: { errors },\n        } = useForm(\n            ${\n                isCustomPage\n                    ? `{\n                refineCoreProps: {\n                    resource: \"${resource.name}\",\n                    action: \"create\",\n                    ${getMetaProps(\n                        resource.identifier ?? resource.name,\n                        meta,\n                        \"getOne\",\n                    )}\n                }\n            }`\n                    : getMetaProps(\n                          resource.identifier ?? resource.name,\n                          meta,\n                          \"getOne\",\n                      )\n                    ? `{\n                        refineCoreProps: { ${getMetaProps(\n                            resource.identifier ?? resource.name,\n                            meta,\n                            \"getOne\",\n                        )} }\n                        }`\n                    : \"\"\n            }\n        );\n\n        ${relationHooksCode}\n\n        return (\n            <Create isLoading={formLoading} saveButtonProps={saveButtonProps}>\n                <Box\n                    component=\"form\"\n                    sx={{ display: \"flex\", flexDirection: \"column\" }}\n                    autoComplete=\"off\"\n                >\n                    ${renderedFields.join(\"\")}\n                </Box>\n            </Create>\n        );\n    };\n    `;\n};\n\n/**\n * @experimental This is an experimental component\n */\nexport const CreateInferencer: InferencerResultComponent = createInferencer({\n    type: \"create\",\n    additionalScope: [\n        [\"@refinedev/mui\", \"RefineMui\", { Create, useAutocomplete }],\n        [\"@refinedev/react-hook-form\", \"RefineReactHookForm\", { useForm }],\n        [\n            \"@mui/material\",\n            \"MuiMaterial\",\n            { Box, Autocomplete, TextField, Checkbox, FormControlLabel },\n        ],\n        [\"react-hook-form\", \"ReactHookForm\", { Controller }],\n    ],\n    codeViewerComponent: SharedCodeViewer,\n    loadingComponent: LoadingComponent,\n    errorComponent: ErrorComponent,\n    renderer,\n});\n","import { Edit, useAutocomplete } from \"@refinedev/mui\";\nimport { useForm } from \"@refinedev/react-hook-form\";\n\nimport Box from \"@mui/material/Box\";\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\n\nimport { Controller } from \"react-hook-form\";\n\nimport { createInferencer } from \"../../create-inferencer\";\nimport {\n    jsx,\n    componentName,\n    accessor,\n    printImports,\n    isIDKey,\n    dotAccessor,\n    noOp,\n    getVariableName,\n    translatePrettyString,\n    getMetaProps,\n    idQuoteWrapper,\n} from \"../../utilities\";\n\nimport { ErrorComponent } from \"./error\";\nimport { LoadingComponent } from \"./loading\";\nimport { SharedCodeViewer } from \"../../components/shared-code-viewer\";\n\nimport {\n    InferencerResultComponent,\n    InferField,\n    ImportElement,\n    RendererContext,\n} from \"../../types\";\n\n/**\n * a renderer function for edit page in Material UI\n * @internal used internally from inferencer components\n */\nexport const renderer = ({\n    resource,\n    fields,\n    meta,\n    isCustomPage,\n    id,\n    i18n,\n}: RendererContext) => {\n    const COMPONENT_NAME = componentName(\n        resource.label ?? resource.name,\n        \"edit\",\n    );\n    const recordName = getVariableName(resource.label ?? resource.name, \"Data\");\n    const imports: Array<ImportElement> = [\n        [\"Edit\", \"@refinedev/mui\"],\n        [\"Box\", \"@mui/material\"],\n        [\"useForm\", \"@refinedev/react-hook-form\"],\n        [\"IResourceComponentsProps\", \"@refinedev/core\"],\n    ];\n\n    if (i18n) {\n        imports.push([\"useTranslate\", \"@refinedev/core\"]);\n    }\n\n    const relationFields: (InferField | null)[] = fields.filter(\n        (field) => field?.relation && !field?.fieldable && field?.resource,\n    );\n\n    const relationHooksCode = relationFields\n        .filter(Boolean)\n        .map((field) => {\n            if (field?.relation && !field.fieldable && field.resource) {\n                imports.push([\"useAutocomplete\", \"@refinedev/mui\"]);\n                let val = accessor(\n                    recordName,\n                    field.key,\n                    field.accessor,\n                    false,\n                );\n\n                if (field.multiple && field.accessor) {\n                    val = `${accessor(\n                        recordName,\n                        field.key,\n                    )}?.map((item: any) => ${accessor(\n                        \"item\",\n                        undefined,\n                        field.accessor,\n                    )})`;\n                }\n\n                return `\n                const { autocompleteProps: ${getVariableName(\n                    field.key,\n                    \"AutocompleteProps\",\n                )} } =\n                useAutocomplete({\n                    resource: \"${field.resource.name}\",\n                    defaultValue: ${val},\n                    ${getMetaProps(\n                        field?.resource?.identifier ?? field?.resource?.name,\n                        meta,\n                        \"getList\",\n                    )}\n                });\n            `;\n            }\n            return undefined;\n        })\n        .filter(Boolean);\n\n    const renderRelationFields = (field: InferField) => {\n        if (field.relation && field.resource) {\n            imports.push(\n                [\"Autocomplete\", \"@mui/material\"],\n                [\"Controller\", \"react-hook-form\"],\n            );\n            const variableName = getVariableName(\n                field.key,\n                \"AutocompleteProps\",\n            );\n\n            const optionLabelProperty = field.relationInfer\n                ? field.relationInfer.accessor\n                    ? typeof field.relationInfer.accessor === \"string\"\n                        ? field.relationInfer.accessor\n                        : field.relationInfer.accessor[0]\n                    : \"title\"\n                : \"title\";\n\n            // check optionLabelProperty can be accessed via dot notation\n            const isBracketNotation =\n                optionLabelProperty.includes(\".\") ||\n                optionLabelProperty.includes(\"[\") ||\n                optionLabelProperty.includes(\"]\") ||\n                optionLabelProperty.includes(\"-\");\n\n            const optionLabelItemValue = field.accessor\n                ? accessor(\"item\", undefined, field.accessor, false)\n                : \"(item?.id ?? item)\";\n\n            const optionEqualValue = field.accessor\n                ? accessor(\"value\", undefined, field.accessor, false)\n                : \"(value?.id ?? value)\";\n\n            const optionChangeValue = field.accessor\n                ? \"value\"\n                : field.multiple\n                ? \"value?.map((item: any) => item?.id ?? item)\"\n                : \"value?.id ?? value\";\n\n            return jsx`\n                <Controller\n                    control={control}\n                    name=\"${dotAccessor(field.key, undefined)}\"\n                    rules={{ required: \"This field is required\" }}\n                    // eslint-disable-next-line\n                    ${\n                        field.multiple\n                            ? \"defaultValue={[] as any}\"\n                            : \"defaultValue={null as any}\"\n                    }\n                    render={({ field }) => (\n                        <Autocomplete\n                            {...${variableName}}\n                            {...field}\n                            ${field.multiple ? \"multiple\" : \"\"}\n                            onChange={(_, value) => {\n                                field.onChange(${optionChangeValue});\n                            }}\n                            getOptionLabel={(item) => {\n                                return (\n                                    ${variableName}?.options?.find(\n                                        (p) =>\n                                            p?.id?.toString() ===\n                                            ${optionLabelItemValue}?.toString(),\n                                    )?.${\n                                        isBracketNotation\n                                            ? `[\"${optionLabelProperty}\"]`\n                                            : optionLabelProperty\n                                    } ?? \"\"\n                                );\n                            }}\n                            isOptionEqualToValue={(option, value) =>\n                                value === undefined ||\n                                option?.id?.toString() === ${optionEqualValue}?.toString()\n                            }\n                            renderInput={(params) => (\n                                <TextField\n                                    {...params}\n                                    label=${translatePrettyString({\n                                        resource,\n                                        field,\n                                        i18n,\n                                    })}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    error={!!${accessor(\n                                        \"(errors as any)\",\n                                        field.key,\n                                        field.accessor,\n                                        false,\n                                    )}}\n                                    helperText={${accessor(\n                                        \"(errors as any)\",\n                                        field.key,\n                                        field.accessor,\n                                        false,\n                                    )}?.message}\n                                    required\n                                />\n                            )}\n                        />\n                    )}\n                />\n            `;\n        }\n        return undefined;\n    };\n\n    const basicInputFields = (field: InferField) => {\n        if (\n            field.type === \"text\" ||\n            field.type === \"url\" ||\n            field.type === \"email\" ||\n            field.type === \"number\" ||\n            field.type === \"date\" ||\n            field.type === \"richtext\"\n        ) {\n            imports.push([\"TextField\", \"@mui/material\"]);\n\n            if (field.multiple) {\n                imports.push([\"Box\", \"@mui/material\"]);\n\n                const val = dotAccessor(field.key, \"${index}\", field.accessor);\n\n                const errorVal =\n                    accessor(\"(errors as any)\", field.key, undefined, false) +\n                    \"?.[index]\";\n\n                return `\n                    <Box sx={{display: \"flex\", gap: 1}}>\n                        {${accessor(\n                            recordName,\n                            field.key,\n                        )}?.map((item: any, index: number) => (\n                            <TextField\n                                key={index}\n                                {...register(\\`${val}\\`, {\n                                    required: \"This field is required\",\n                                    ${\n                                        field.type === \"number\"\n                                            ? \"valueAsNumber: true,\"\n                                            : \"\"\n                                    }\n                                })}\n                                error={!!${errorVal}}\n                                helperText={${errorVal}?.message as string}\n                                margin=\"normal\"\n                                fullWidth\n                                InputLabelProps={{ shrink: true }}\n                                ${\n                                    field.type !== \"date\" &&\n                                    field.type !== \"richtext\"\n                                        ? `type=\"${field.type}\"`\n                                        : \"\"\n                                }\n                                ${field.type === \"richtext\" ? \"multiline\" : \"\"}\n                                label=${translatePrettyString({\n                                    resource,\n                                    field,\n                                    i18n,\n                                })}\n                                name={\\`${dotAccessor(\n                                    field.key,\n                                    undefined,\n                                    field.accessor,\n                                )}.\\${index}\\`}\n                            />\n                        ))}\n                    </Box>\n                `;\n            }\n            return jsx`\n                <TextField\n                    {...register(\"${dotAccessor(\n                        field.key,\n                        undefined,\n                        field.accessor,\n                    )}\", {\n                        required: \"This field is required\",\n                        ${field.type === \"number\" ? \"valueAsNumber: true,\" : \"\"}\n                    })}\n                    error={!!${accessor(\n                        \"(errors as any)\",\n                        field.key,\n                        field.accessor,\n                        false,\n                    )}}\n                    helperText={${accessor(\n                        \"(errors as any)\",\n                        field.key,\n                        field.accessor,\n                        false,\n                    )}?.message}\n                    margin=\"normal\"\n                    fullWidth\n                    InputLabelProps={{ shrink: true }}\n                    ${\n                        field.type !== \"date\" && field.type !== \"richtext\"\n                            ? `type=\"${field.type}\"`\n                            : \"\"\n                    }\n                    ${field.type === \"richtext\" ? \"multiline\" : \"\"}\n                    label=${translatePrettyString({\n                        resource,\n                        field,\n                        i18n,\n                    })}\n                    name=\"${dotAccessor(field.key, undefined, field.accessor)}\"\n                    ${isIDKey(field.key) ? \"disabled\" : \"\"}\n                />\n            `;\n        }\n        return undefined;\n    };\n\n    const booleanFields = (field: InferField) => {\n        if (field.type === \"boolean\") {\n            imports.push(\n                [\"Checkbox\", \"@mui/material\"],\n                [\"FormControlLabel\", \"@mui/material\"],\n                [\"Controller\", \"react-hook-form\"],\n            );\n\n            if (field.multiple) {\n                imports.push([\"Box\", \"@mui/material\"]);\n\n                const val = dotAccessor(field.key, \"${index}\", field.accessor);\n\n                return `\n                    <Box sx={{display: \"flex\", gap: 1}}>\n                        {${accessor(\n                            recordName,\n                            field.key,\n                        )}?.map((item: any, index: number) => (\n                            <Controller\n                                key={index}\n                                control={control}\n                                name={\\`${val}\\`}\n                                // eslint-disable-next-line\n                                defaultValue={null as any}\n                                render={({ field }) => (\n                                    <FormControlLabel label=${translatePrettyString(\n                                        {\n                                            resource,\n                                            field,\n                                            i18n,\n                                        },\n                                    )} control={\n                                        <Checkbox\n                                            {...field}\n                                            checked={field.value}\n                                            onChange={(event) => {\n                                                field.onChange(event.target.checked);\n                                            }}\n                                        />\n                                    } />\n                                )}\n                            />\n                        ))}\n                    </Box>\n                `;\n            }\n\n            return jsx`\n                <Controller\n                    control={control}\n                    name=\"${dotAccessor(field.key, undefined, field.accessor)}\"\n                    // eslint-disable-next-line\n                    defaultValue={null as any}\n                    render={({ field }) => (\n                        <FormControlLabel label=${translatePrettyString({\n                            resource,\n                            field,\n                            i18n,\n                        })} control={\n                            <Checkbox\n                                {...field}\n                                checked={field.value}\n                                onChange={(event) => {\n                                    field.onChange(event.target.checked);\n                                }}\n                            />\n                        } />\n                    )}\n                />\n            `;\n        }\n        return undefined;\n    };\n\n    const dateFields = (field: InferField) => {\n        if (field.type === \"date\") {\n            const basicRender = basicInputFields(field);\n\n            return `\n                {/*\n                    DatePicker component is not included in \"@refinedev/mui\" package.\n                    To use a <DatePicker> component, you can follow the official documentation for Material UI.\n\n                    Docs: https://mui.com/x/react-date-pickers/date-picker/#basic-usage\n                */}\n                ${basicRender}\n                `;\n        }\n        return undefined;\n    };\n\n    const renderedFields: Array<string | undefined> = fields.map((field) => {\n        switch (field?.type) {\n            case \"text\":\n            case \"number\":\n            case \"email\":\n            case \"url\":\n            case \"richtext\":\n                return basicInputFields(field);\n            case \"date\":\n                return dateFields(field);\n            case \"boolean\":\n                return booleanFields(field);\n            case \"relation\":\n                return renderRelationFields(field);\n            default:\n                return undefined;\n        }\n    });\n\n    noOp(imports);\n    const useTranslateHook = i18n && `const translate = useTranslate();`;\n\n    return jsx`\n    ${printImports(imports)}\n\n    export const ${COMPONENT_NAME}: React.FC<IResourceComponentsProps> = () => {\n        ${useTranslateHook}\n        const {\n            saveButtonProps,\n            refineCore: { queryResult },\n            register,\n            control,\n            formState: { errors },\n        } = useForm(\n            ${\n                isCustomPage\n                    ? `{\n                refineCoreProps: {\n                    resource: \"${resource.name}\",\n                    id: ${idQuoteWrapper(id)},\n                    action: \"edit\",\n                    ${getMetaProps(\n                        resource?.identifier ?? resource?.name,\n                        meta,\n                        \"getOne\",\n                    )}\n                }\n            }`\n                    : getMetaProps(\n                          resource?.identifier ?? resource?.name,\n                          meta,\n                          \"getOne\",\n                      )\n                    ? `{ refineCoreProps: { ${getMetaProps(\n                          resource?.identifier ?? resource?.name,\n                          meta,\n                          \"getOne\",\n                      )} }\n              }`\n                    : \"\"\n            }\n        );\n\n        const ${recordName} = queryResult?.data?.data;\n\n        ${relationHooksCode}\n\n        return (\n            <Edit saveButtonProps={saveButtonProps}>\n                <Box\n                    component=\"form\"\n                    sx={{ display: \"flex\", flexDirection: \"column\" }}\n                    autoComplete=\"off\"\n                >\n                    ${renderedFields.join(\"\")}\n                </Box>\n            </Edit>\n        );\n    };\n    `;\n};\n\n/**\n * @experimental This is an experimental component\n */\nexport const EditInferencer: InferencerResultComponent = createInferencer({\n    type: \"edit\",\n    additionalScope: [\n        [\"@refinedev/mui\", \"RefineMui\", { Edit, useAutocomplete }],\n        [\"@refinedev/react-hook-form\", \"RefineReactHookForm\", { useForm }],\n        [\n            \"@mui/material\",\n            \"MuiMaterial\",\n            { Box, Autocomplete, TextField, Checkbox, FormControlLabel },\n        ],\n        [\"react-hook-form\", \"ReactHookForm\", { Controller }],\n    ],\n    codeViewerComponent: SharedCodeViewer,\n    loadingComponent: LoadingComponent,\n    errorComponent: ErrorComponent,\n    renderer,\n});\n"],"mappings":"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","names":["src_exports","__export","DevToolsContext","DevToolsContextProvider","DevtoolsEvent","hooksByScope","receive","scopes","send","module","__toCommonJS","acc","hook","scope","import_react","A","ws","event","payload","resolve","listener","__name","callback","e","receivedEvent","r","React","__devtools","port","children","values","setValues","setWs","wsInstance","unsubscribe","data","v","contextValues","src_exports","__export","getTrace","getXRay","useQuerySubscription","module","__toCommonJS","import_error_stack_parser","E","unrelatedFunctionName","cleanStack","stack","firstUnrelatedIndex","frame","REFINE_PACKAGE_FILEPATH_REGEXP","isRefineStack","filename","getPackageNameFromFilename","_a","match","name","error","g","ErrorStackParser","trace","import_devtools_shared","getResourcePath","__name","hookName","legacyKey","m","import_react","src_exports","__export","AccessControlContext","AuthPage","Authenticated","CanAccess","ErrorComponent","GitHubBanner","KeyBuilder","LayoutWrapper","LoginPage","ReadyPage","Refine","ResourceContext","RouteChangeHandler","TranslationContext","UndoableQueue","WelcomePage","createTreeView","file2Base64","generateDefaultDocumentTitle","getDefaultFilter","getDefaultSortOrder","getNextPageParam","getPreviousPageParam","handleUseParams","importCSVMapper","keys","legacyResourceTransform","matchResourceFromRoute","parseTableParams","parseTableParamsFromQuery","pickDataProvider","pickNotDeprecated","queryKeys","routeGenerator","setInitialFilters","setInitialSorters","stringifyTableParams","unionFilters","unionSorters","useActiveAuthProvider","useApiUrl","useAuthenticated","useBack","useBreadcrumb","useCan","useCanWithoutCache","useCancelNotification","useCheckError","useCreate","useCreateMany","useCustom","useCustomMutation","useDataProvider","useDelete","useDeleteMany","useExport","useForgotPassword","useForm","useGetIdentity","useGetLocale","useGetToPath","useGo","useHandleNotification","useImport","useInfiniteList","useInvalidate","useIsAuthenticated","useIsExistAuthentication","useLink","useList","useLiveMode","useLoadingOvertime","useLog","useLogList","useLogin","useLogout","useMany","useMenu","useMeta","useModal","useMutationMode","useNavigation","useNotification","useOnError","useOne","useParse","useParsed","usePermissions","usePublish","useRedirectionAfterSubmission","useRefineContext","useRegister","useResource","useResourceSubscription","useResourceWithRoute","useRouterContext","useRouterType","useSelect","useSetLocale","useShow","useSubscription","useSyncWithLocation","useTable","useTitle","useToPath","useTranslate","useUpdate","useUpdateMany","useUpdatePassword","useUserFriendlyName","useWarnAboutChange","userFriendlyResourceName","module","__toCommonJS","import_react","B","import_react_query","import_devtools_internal","import_qs","import_unionWith","import_differenceWith","import_warn_once","userFriendlySecond","__name","miliseconds","import_zip","import_fromPairs","data","mapData","item","headers","body","entry","Ks","fromPairs","Ns","zip","index","array","import_pluralize","resource","type","humanizeResource","humanizeString","Mo","pluralize","params","args","arg","arrayFindIndex","slice","sliceItem","sliceIndex","convertToLegacy","segments","newSegments","newParams","BaseKeyBuilder","legacy","ParamsKeyBuilder","paramsValue","DataIdRequiringKeyBuilder","idValue","DataIdsRequiringKeyBuilder","idsValue","el","DataResourceKeyBuilder","actionType","DataKeyBuilder","resourceName","mutationName","AuthKeyBuilder","AccessResourceKeyBuilder","AccessKeyBuilder","AuditActionKeyBuilder","AuditKeyBuilder","name","dataProviderName","meta","metaData","providerName","config","ids","id","queryKeysReplacement","preferLegacyKeys","hasPermission","permissions","action","i","isParameter","segment","splitToSegments","path","isSegmentCountsSame","route","resourceRoute","routeSegments","resourceRouteSegments","removeLeadingTrailingSlashes","checkBySegments","stdRoute","stdResourceRoute","getDefaultActionPath","parentPrefix","cleanParentPrefix","getParentResource","resources","_a","_b","parentName","getParentPrefixForResource","parents","parent","v","getActionRoutesFromResource","actions","actionList","pickMatchedRoute","routes","sanitizedRoutes","segmentsCount","eligibleRoutes","nonParametrizedRoutes","allFound","actionRoute","mostEligible","resourcesFromProps","tree","resourcesRouteObject","resourcesNameObject","child","text","DefaultLayout","children","zs","React","defaultRefineOptions","Fo","RefineContext","Vo","RefineContextProvider","hasDashboard","mutationMode","warnWhenUnsavedChanges","syncWithLocation","undoableTimeout","DashboardPage","Title","Layout","Header","Sider","Footer","OffLayoutArea","catchAll","liveMode","onLiveEvent","options","handleRefineOptions","disableTelemetry","reactQueryClientConfig","reactQueryDevtoolConfig","_c","_d","_e","_f","_g","_h","optionsWithDefaults","disableTelemetryWithDefault","reactQueryWithDefaults","redirectPage","redirectFromProps","redirectOptions","sequentialPromises","promises","onEachResolve","onEachReject","results","promise","result","error","pickResource","identifier","r","handleMultiple","res","lastPage","pagination","cursor","current","pageSize","totalPages","_resources","pickRouteParams","s","prepareRouteParams","routeParams","acc","key","value","composeRoute","designatedRoute","resourceMeta","parsed","preparedRouteParams","match","fromParams","LegacyAuthContext","xt","LegacyAuthContextProvider","isProvided","authOperations","replace","loginFunc","registerFunc","logoutFunc","checkAuthFunc","AuthBindingsContext","AuthBindingsContextProvider","authBindings","handleLogin","handleRegister","handleLogout","handleCheck","handleForgotPassword","handleUpdatePassword","useLegacyAuthContext","useAuthBindingsContext","legacyAuthProvider","authProvider","handlePaginationParams","hasPagination","configPagination","hasPaginationString","mode","useMediaQuery","query","matches","setMatches","Kr","media","listener","safeTranslate","translate","defaultMessage","translated","actionPrefixMatcher","resourceNameFallback","resourceNameWithFallback","defaultTitle","suffix","autoGeneratedTitle","qs","UnsavedWarnContext","nr","UnsavedWarnContextProvider","warnWhen","setWarnWhen","$o","tn","rn","sn","textTransformers","humanizeName","url","sorter","sorters","filters","Wr","rest","compareFilters","left","right","compareSorters","permanentFilter","newFilters","prevFilters","f","nn","warnOnce","Go","unionWith","crudFilter","permanentSorter","newSorters","crudSorter","defaultFilter","Wo","differenceWith","defaultSorter","columnName","sortItem","operatorType","filter","operator","field","file","resolve","reject","reader","resultHandler","useKeys","useNewQueryKeys","v3LegacyAuthProviderCompatible","legacyGetPermission","getPermissions","queryResponse","zo","jo","legacyQueryResponse","queryOptions","legacyGetUserIdentity","getIdentity","_o","Oo","useInvalidateAuthStore","queryClient","fn","mutationOptions","invalidateAuthStore","routerType","go","push","open","close","legacyLogoutFromContext","logoutFromContext","mutation","Zo","variables","success","redirectTo","redirectPath","redirect","buildNotification","Yo","v3LegacyAuthProviderCompatibleMutation","useLocation","search","legacyLoginFromContext","loginFromContext","to","yn","gn","qo","es","redirectPathFromAuth","legacyRegisterFromContext","registerFromContext","rs","os","v3LegacyAuthProviderCompatibleForgotPasswordFromContext","forgotPasswordFromContext","ns","as","legacyUpdatePasswordFromContext","updatePasswordFromContext","Tn","Rn","us","cs","checkAuth","check","ds","ps","legacyCheckErrorFromContext","onErrorFromContext","legacyLogout","logout","ls","shouldLogout","ms","legacyIsProvided","isLoading","intervalProp","onIntervalProp","elapsedTime","setElapsedTime","mr","overtime","interval","onInterval","intervalFn","prevElapsedTime","resourceFromProp","successNotification","errorNotification","liveParams","overtimeOptions","dataProvider","checkError","handleNotification","getMeta","pickedDataProvider","preferredMeta","prefferedFilters","prefferedSorters","prefferedHasPagination","prefferedPagination","isServerPagination","combinedMeta","notificationValues","isEnabled","getList","Cn","queryKey","pageParam","signal","rawData","notificationConfig","err","hn","getOne","bn","vn","getMany","Dn","Ln","import_isEqual","UndoableQueueContext","Ft","initialState","undoableQueueReducer","state","notificationItem","Yr","isEqual","UndoableQueueContextProvider","notifications","notificationDispatch","notificationData","notification","select","qr","mutationModeContext","undoableTimeoutContext","publish","log","invalidateStore","values","onCancel","mutationModePropOrContext","undoableTimeoutPropOrContext","doMutation","cancelMutation","optimisticUpdateMap","resourceKeys","previousQueries","previous","record","_data","_error","invalidates","context","resourceSingular","previousData","queryData","fields","operation","En","Un","successNotificationFromProp","errorNotificationFromProp","Mn","eo","In","Sn","selectedDataProvider","val","response","resourcePlural","An","ro","mutationFn","kn","oo","Fn","getApiUrl","method","custom","Nn","Kn","$n","Gn","defaultDataProvider","DataContext","gs","DataContextProvider","dataProviders","so","jn","paginationProperties","total","_n","LiveContext","Ts","LiveContextProvider","liveProvider","useMemoized","ref","Zn","Yn","useDeepMemo","dependencies","memoizedDependencies","qn","Rs","ResourceContextProvider","providedResources","RouterPickerContext","Ps","RouterPickerProvider","defaultBindings","RouterBindingsContext","ao","RouterBindingsProvider","router","bindings","io","parse","na","aa","oldProps","force","pickedResource","resourceWithRoute","useParams","legacyParams","resourceKeyToCheck","legacyResource","legacyId","legacyAction","legacyResourceName","legacyIdentifier","pickedFromProps","co","ua","ia","invalidationFilters","invalidationOptions","dp","channel","types","enabled","liveModeFromProp","liveDataContext","gr","liveModeFromContext","onLiveEventContextCallback","invalidate","subscription","callback","event","ca","po","liveContext","da","pa","NotificationContext","lo","NotificationContextProvider","ma","fa","fallbackNotification","hs","TranslationContextProvider","i18nProvider","mo","lang","fo","yo","import_export_to_csv_fix_source_map","resourceFromProps","maxItemCount","exportOptions","onError","setIsLoading","Ra","filename","preparingData","Pa","import_debounce","actionFromProps","idFromProps","onMutationSuccess","onMutationError","queryMeta","mutationMeta","mutationModeProp","createMutationOptions","updateMutationOptions","autoSave","idFromRoute","actionFromRoute","inferredIdentifier","defaultId","setId","isCreate","isEdit","isClone","xa","designatedRedirectAction","queryResult","isFetchingQuery","mutationResultCreate","mutateCreate","isLoadingCreate","mutationResultUpdate","mutateUpdate","isLoadingUpdate","autoSaveMutation","handleSubmitWithRedirect","onFinishCreate","onSuccess","_","responseId","onFinishAutoSaveMutation","onFinishAutoSave","Ca","debounce","allValues","idFromFunction","show","edit","list","create","ha","To","Ro","useHistory","history","back","handleUrl","createUrl","resourceItem","createActionRoute","editUrl","encodedId","editActionRoute","cloneUrl","cloneActionRoute","showUrl","showActionRoute","listUrl","listActionRoute","showId","setShowId","xo","ba","import_papaparse","import_chunk","paparseOptions","batchSize","onFinish","onProgress","processedAmount","setProcessedAmount","Bt","totalAmount","setTotalAmount","createMany","mutationResult","handleCleanup","handleFinish","createdValues","handleChange","va","valueFns","currentAmount","chunks","Da","chunk","chunkedFns","chunkedValues","currentBatchLength","defaultVisible","visible","setVisible","Rr","resourceFromRoute","La","selectedResource","Co","defaultProvider","LegacyRouterContext","vs","RouterContext","LegacyRouterContextProvider","Prompt","Link","routerContextValues","Ma","Ds","AccessControlContextProvider","can","sanitizeResource","icon","clone","restResource","_metaIcon","restMeta","_optionsIcon","restOptions","Sa","_resource","paramsRest","sanitizedResource","wa","Aa","canFromContext","Es","import_uniqBy","import_get","props","setSearch","at","setOptions","selectedOptions","setSelectedOptions","sort","optionLabel","optionValue","debounceValue","defaultValueQueryOptionsFromProps","fetchSize","defaultValue","onSearchFromProp","defaultValues","defaultValueQueryOnSuccess","xr","get","defaultValueQueryOptions","defaultValueQueryResult","defaultQueryOnSuccess","onSearch","ka","uniqBy","Qa","defaultPermanentFilter","defaultPermanentSorter","initialCurrent","initialPageSize","initialSorter","defaultSetFilterBehavior","initialFilter","filtersFromProp","sortersFromProp","syncWithLocationProp","syncWithLocationContext","pathname","parsedParams","isServerSideFilteringEnabled","isServerSideSortingEnabled","isPaginationEnabled","prefferedCurrent","prefferedPageSize","parsedCurrent","parsedPageSize","parsedSorter","parsedFilters","preferredInitialFilters","preferredPermanentFilters","preferredInitialSorters","preferredPermanentSorters","prefferedFilterBehavior","defaultCurrent","defaultPageSize","Oe","Ba","setSorters","setFilters","setCurrent","setPageSize","createLinkForSyncWithLocation","currentQueryParams","Us","stringifyParams","queryParams","Cr","hr","setFiltersAsMerge","setFiltersAsReplace","setFiltersWithSetter","setter","prev","setFiltersFn","setterOrFilters","behavior","setSortWithUnion","newSorter","AuditLogContext","Ms","AuditLogContextProvider","update","logMutationOptions","renameMutationOptions","br","auditLogContext","Is","identityData","refetch","logPermissions","authorData","ws","rename","author","Ka","Ha","$a","metaFromProps","Ga","breadcrumbs","addBreadcrumb","parentResource","grandParentName","listActionOfResource","hrefRaw","href","actionLabel","Wa","createResourceKey","currentParentResource","createTree","root","currentParent","currentTree","flatten","items","itemKey","getCleanPath","hideOnMissingParameter","getToPath","legacyPath","getFriendlyName","cleanRoute","selectedKey","defaultOpenKeys","ho","prepareItem","composed","treeItems","treeMenuItems","prepare","preparedNodes","newItem","metaFromProp","_filters","_sorters","_current","_pageSize","additionalParams","errorMessage","setErrorMessage","Xe","username","setUsername","password","setPassword","login","e","providers","registerLink","forgotPasswordLink","rememberMe","contentProps","wrapperProps","renderContent","formProps","title","LegacyLink","ActiveLink","email","setEmail","se","remember","setRemember","renderLink","link","renderProviders","provider","content","RegisterPage","loginLink","ge","register","ForgotPasswordPage","Me","forgotPassword","UpdatePasswordPage","updatePassword","newPassword","setNewPassword","Ie","confirmPassword","setConfirmPassword","vt","we","CARDS","te","isTablet","isMobile","getGridTemplateColumns","getHeaderFontSize","getSubHeaderFontSize","card","Card","description","isHover","setIsHover","REFINE_VERSION","useTelemetryData","auth","ft","routerContext","dataContext","notificationContext","accessControlContext","refineOptions","auditLog","live","i18n","accessControl","projectId","encode","payload","stringifiedPayload","throughImage","src","img","throughFetch","transport","Telemetry","sent","Ss","encoded","checkRouterPropMisuse","otherProps","useRouterMisuseWarning","warned","As","legacyRouterProvider","routerProvider","notificationProvider","accessControlProvider","auditLogProvider","vr","ni","notificationProviderContextValues","ce","RouterComponent","timeoutId","setTimeoutId","Do","cancelNotification","newTimeoutId","LayoutFromProps","SiderFromProps","HeaderFromProps","TitleFromProps","FooterFromProps","OffLayoutAreaFromProps","$t","UnsavedPrompt","warnWhenListener","useDeferredGo","setConfig","Se","redirectOnFail","appendCurrentPathToQuery","fallbackContent","loadingContent","activeAuthProvider","hasAuthProvider","isLegacyAuth","isLegacyRouter","deferredGo","legacyLocation","isFetching","isSuccess","isAuthenticatedStatus","authenticatedRedirect","isAuthenticated","appliedRedirect","toQuery","location","ci","actionFromProp","paramsFromProp","fallback","onUnauthorized","idFromPropsOrRoute","it","CSSRules","ut","styleTag","rule","src_exports","__export","useForm","useModalForm","useStepsForm","module","__toCommonJS","import_react","import_react_hook_form","import_core","__name","refineCoreProps","warnWhenUnsavedChangesProp","disableServerSideValidationProp","rest","options","S","disableServerSideValidation","translate","warnWhenUnsavedChangesRefine","setWarnWhen","warnWhenUnsavedChanges","useHookFormResult","L","useHookForm","watch","setValue","getValues","handleSubmitReactHookForm","setError","useFormCoreResult","useFormCore","error","_variables","_context","_a","_b","errors","key","fieldError","newError","queryResult","onFinish","formLoading","onFinishAutoSave","G","data","registeredFields","value","name","subscription","values","type","onValuesChange","changeValues","onFinishProps","handleSubmit","onValid","onInvalid","e","stepsProps","defaultStep","isBackValidate","current","setCurrent","$","trigger","dirtyFields","go","step","targetStep","pe","modalProps","syncWithLocation","invalidate","i","initiallySynced","setInitiallySynced","A","React","resourceProp","actionProp","resource","actionFromParams","identifier","parsed","getUserFriendlyName","action","syncingId","syncWithLocationKey","defaultVisible","autoSubmitClose","autoResetForm","reset","id","setId","autoSaveProps","saveButtonProps","visible","show","close","_c","_d","openStatus","idFromParams","submit","warnWhen","handleClose","Y","handleShow","showId","title","src_exports","__export","RefineButtonClassNames","RefineButtonTestIds","RefinePageHeaderClassNames","module","__toCommonJS","src_exports","__export","AuthPage","AutoSaveIndicator","BooleanField","Breadcrumb","CircularDeterminate","CloneButton","Create","CreateButton","DarkTheme","DateField","DeleteButton","Edit","EditButton","EmailField","ErrorComponent","ExportButton","FileField","HamburgerMenu","Header","ImportButton","Layout","LightTheme","List","ListButton","LoginPage","MarkdownField","Ke","NumberField","ReadyPage","RefineSnackbarProvider","RefineThemes","RefreshButton","SaveButton","Show","ShowButton","Sider","TagField","TextField","ThemedHeader","ThemedHeaderV2","ThemedLayout","ThemedLayoutContext","ThemedLayoutContextProvider","ThemedLayoutV2","ThemedSider","ThemedSiderV2","ThemedTitle","ThemedTitleV2","Title","UrlField","WelcomePage","notificationProvider","useAutocomplete","useDataGrid","useSiderVisible","useThemedLayoutContext","module","__toCommonJS","import_notistack","import_react","e","import_Box","import_Drawer","import_List","import_ListItemButton","import_ListItemIcon","import_ListItemText","import_Collapse","import_Tooltip","import_Button","import_IconButton","import_ListOutlined","import_Logout","import_ExpandLess","import_ExpandMore","import_ChevronLeft","import_ChevronRight","import_MenuRounded","import_Dashboard","import_core","__name","TitleFromProps","render","meta","collapsed","setCollapsed","T","opened","setOpened","drawerWidth","t","N","routerType","Link","LegacyLink","ActiveLink","hasDashboard","translate","warnWhen","setWarnWhen","menuItems","selectedKey","defaultOpenKeys","isExistAuthentication","TitleFromContext","authProvider","mutateLogout","open","setOpen","React","previous","previousOpenKeys","key","uniqueKeys","RenderToTitle","handleClick","renderTreeView","tree","item","icon","label","route","name","children","parentName","options","isOpen","isSelected","isNested","Ft","Tooltip","kt","ListItemButton","St","ListItemIcon","Oo","ListOutlined","wt","ListItemText","Or","ExpandLess","zr","ExpandMore","Ar","Collapse","Wo","dashboard","jr","Dashboard","handleLogout","logout","Wr","Logout","items","drawer","Qe","Box","Eo","Drawer","Mr","Button","prev","Ur","ChevronRight","Hr","ChevronLeft","Er","IconButton","Nr","MenuRounded","import_AppBar","import_Stack","import_Toolbar","import_Typography","import_Avatar","Vt","user","Ye","Gr","AppBar","Vr","Toolbar","zo","Stack","qr","Typography","Kr","Avatar","Footer","OffLayoutArea","Ne","Kt","theme","at","It","Qr","import_Paper","isSiderOpen","onToggleSiderClick","v","j","Et","Dt","At","jo","Mt","Xr","Jr","Yr","Uo","tn","_r","pt","Ho","Zr","Paper","No","Rr","palette","mode","getContrastText","primary","background","en","import_Menu","toggleSiderIconFromProps","Qt","We","on","rn","an","pn","Menu","Go","nn","sn","setIsSiderOpen","we","Zt","import_Link","import_SvgIcon","defaultText","defaultIcon","Ze","ke","n","r","s","ip","o","np","i","a","p","mn","MuiLink","dn","SvgIcon","ze","text","ro","mt","_t","siderCollapsed","setSiderCollapsed","initialSiderCollapsed","_e","S","ut","Ko","$o","Ot","zt","Ht","Ln","Ut","kn","Sn","Qo","wn","Fn","In","Dn","An","G","fn","cn","import_isEqual","yn","sp","props","queryResult","defaultValueQueryResult","unionWith","isEqual","c","m","event","onSearch","x","overtime","Vo","dt","qo","Jt","Xt","import_x_data_grid","xn","transformSortModelToCrudSorting","sortModel","field","hn","crudSorting","ap","operatorValue","Cn","transformFilterModelToCrudFilters","operator","logicOperator","gn","transformCrudOperatorToMuiOperator","columnType","bn","transformCrudFiltersToFilterModel","columnsType","crudFilters","filter","isExistOrFilter","C","value","gridFilterItems","Tn","permanentSorter","defaultSetFilterBehavior","initialFilter","L","B","P","u","w","k","errorNotification","h","queryOptions","liveModeFromProp","g","l","A","F","I","y","Oe","E","liveMode","K","se","b","H","current","oe","setCurrent","le","pageSize","ee","setPageSize","M","filters","z","D","q","U","$","useTableCore","f","initialSorter","syncWithLocationProp","re","ge","dataProviderName","muiCrudFilters","Z","me","xe","data","he","isFetched","isLoading","isServerSideFilteringEnabled","de","isServerSideSortingEnabled","Pt","$e","hasPagination","isPaginationEnabled","ja","pagination","preferredPermanentSorters","sortersFromProp","Ga","preferredPermanentFilters","filtersFromProp","Va","Ce","permanentFilter","page","Ka","Se","handleSortModelChange","$a","handleFilterModelChange","filterModel","setMuiCrudFilters","setFilters","Qa","search","onSearchProp","searchFilters","Nt","Ya","dataGridPaginationValues","qa","handlePageChange","model","differenceWith","newColumnsTypes","Za","state","_a","O","setSorter","vn","Bn","visible","Pn","Wt","Rt","activeItemDisabled","mobileSiderOpen","W","linkStyle","setMobileSiderOpen","d","je","ft","On","Yo","zn","Hn","Un","Xe","En","Wn","Mn","HamburgerIcon","oo","isSticky","prefferedSticky","sticky","to","Nn","ct","jn","Gn","Vn","pp","lp","Je","eo","wrapperStyles","Q","qn","Kn","$n","Zo","Qn","import_TextField","Yn","import_FormControlLabel","Re","no","Zn","_n","Xn","io","Jn","import_CardContent","register","login","Card","CardContent","handleSubmit","FormControlLabel","Checkbox","_o","_","Rn","so","yt","ao","po","ei","Grid","renderCode","ti","oi","ri","ve","gt","WelcomePageFromCore","ni","ii","si","Xo","Jo","ai","pi","import_Grid","lo","go","action","errorMessage","Info","et","li","mi","di","Ro","er","xt","tr","ui","fi","ci","yi","import_Container","gi","xi","import_Checkbox","hi","Fe","Ge","Ve","rr","providers","registerLink","forgotPasswordLink","rememberMe","contentProps","wrapperProps","formProps","methods","V","PageTitle","Divider","Content","errors","or","Container","Y","Ci","bi","nr","ir","mo","import_react_hook_form","sr","Ti","Bi","vi","Pi","Li","ki","Ie","ar","RegisterPage","useFormProps","provider","onSubmit","Si","wi","uo","pr","Fi","Ii","Di","Ai","Mi","te","De","lr","ForgotPasswordPage","loginLink","renderContent","title","mutate","ae","Ei","Oi","mr","dr","zi","Hi","Ui","Ni","fo","ur","Wi","titleStyles","update","watch","_b","ji","type","Pe","be","Gi","Vi","qi","Ki","import_Card","import_CardHeader","$i","import_CardActions","Qi","Zi","_i","Xi","breadcrumbFromProps","headerButtonProps","footerButtonProps","back","goBack","getUserFriendlyName","resource","He","breadcrumb","saveButtonProps","saveButtonPropsFromProps","breadcrumbComponent","identifier","goBackFromProps","headerButtons","CardActions","X","J","footerButtons","Ri","es","ts","rs","fr","ns","is","ss","headerProps","_c","legacyGoList","recordItemId","hasList","defaultHeaderButtons","bt","refreshButtonProps","deleteButtonProps","isDeleteButtonVisible","Ct","ht","defaultFooterButtons","CardHeader","os","listButtonProps","Ae","Me","as","ps","ls","ms","us","fs","isCreateButtonVisible","createButtonPropsFromProps","ds","ne","ie","gs","xs","hs","bs","Ts","Bs","vs","import_ArrowBack","import_ui_types","canEdit","goListPath","canDelete","id","editButtonProps","yo","isEditButtonVisible","cs","ys","tt","Ps","co","ue","hideText","accessControlEnabled","hideIfUnauthorized","accessControl","resourceNameFromProps","resourceNameOrRouteName","restProps","rest","onClick","yr","AddBoxOutlined","ot","fe","xo","gr","import_EditOutlined","svgIconProps","disabledTitle","EditOutlined","Le","pe","ho","xr","ks","Ss","ws","Fs","hr","import_Dialog","import_DialogActions","import_DialogTitle","import_DeleteOutline","mutationModeProp","mutationMode","handleClose","handleCloseOnConfirm","onSuccess","sx","LoadingButton","DeleteOutline","Dialog","DialogTitle","DialogActions","bo","Is","Cr","Ds","Ee","import_RefreshOutlined","import_react_query","_metaData","queryClient","invalidates","Co","handleInvalidate","RefreshOutlined","rt","ce","To","As","br","Ms","import_VisibilityOutlined","accessControlContext","generateShowUrl","R","Bo","Es","Tt","VisibilityOutlined","nt","Tr","generateListUrl","listUrl","vo","Ws","Po","Os","Br","zs","import_LoadingButton","Lo","loading","ko","vr","ImportExportOutlined","Hs","Us","it","import_SaveOutlined","ye","So","Ns","js","SaveOutlined","generateCloneUrl","Pr","Gs","wo","Bt","Vs","Lr","Fo","Ks","kr","Sr","Te","undoableTimeout","prevProgress","timer","$s","Qs","Ys","CircularProgress","_s","Xs","wr","Js","Rs","ea","oa","ra","na","vt","Chip","ta","ia","Io","sa","import_CheckOutlined","mp","pa","import_CloseOutlined","valueLabelFalse","la","ma","valueLabelTrue","Do","trueIcon","Fr","CheckOutlined","da","ua","falseIcon","CloseOutlined","fa","dayjs","LocalizedFormat","dp","locales","dateFormat","ya","ca","ga","xa","ha","qe","ba","Ta","Ba","va","toLocaleStringSupportsOptions","number","Be","import_remark_gfm","ReactMarkdown","import_HomeOutlined","NewLink","Pa","rootRouteResource","breadcrumbs","Breadcrumbs","breadcrumbProps","showHome","st","La","ka","Sa","wa","Fa","cr","hideIcons","href","Ia","import_MoreHorizOutlined","import_ErrorOutlineOutlined","MoreHorizOutlinedIcon","message","Mo","TaskAltOutlinedIcon","Da","ErrorOutlineOutlinedIcon","SyncOutlinedIcon","Aa","import_styles","Ma","Ao","Ea","up","fp","commonThemeProperties","typography","cp","lightPalette","Ue","Wa","Oa","za","Ir","Ha","yp","ownerState","enqueueSnackbar","Ua","Na","gp","cancelMutation","closeSnackbar","import_react","import_core","import_mui","import_Typography","import_Stack","import_react","import_core","urlLikeKeyRegexp","getFieldableKeys","__name","key","data","fieldableProperties","firstAvailable","fkey","import_core","pickDataProvider","resourceName","dataProviderName","resources","resource","item","meta","__name","dataProviderFromResource","_a","pickInferredField","__name","inferredFields","field","a","b","import_standalone","import_parser_typescript","prettierFormat","__name","code","prettier","tsParser","error","prettySpaces","__name","content","relationRegexp","relationInfer","__name","key","value","isRelation","isBasicValue","isBasicArray","v","removeRelationSuffix","__name","key","relationRegexp","prettyString","__name","str","removeRelationSuffix","word","translatePrettyString","__name","payload","resource","field","i18n","translate","prettedString","prettyString","import_pluralize","toSingular","__name","str","pluralize","import_pluralize","toPlural","__name","str","pluralize","replaceExports","__name","code","line","packageRegex","sideEffectRegex","nameChangeRegex","replaceImports","__name","content","modules","matches","imports","match","defaultImport","namedImports","namespaceImport","packageName","importName","prettySpaces","import_pluralize","resourceFromInferred","__name","field","resources","el","stripped","removeRelationSuffix","pluralize","import_pluralize","componentName","__name","resourceName","type","fallbackResourceName","sanitized","singular","pluralize","resourceComponentName","prettyString","prettyType","handleExpression","__name","expression","jsx","strings","expressions","result","currentString","i","prepareLiveCode","__name","code","componentName","removeHiddenCode","__name","code","dotAccessableRegex","shouldDotAccess","__name","property","accessorSingle","variableName","key","accessor","base","accessorMultiple","variable","a","joiner","dotAccessor","str","printImports","__name","imports","byModule","acc","element","module","isDefault","elements","defaultImport","e","named","defaultStr","namedStr","identifierRegexp","isIDKey","__name","key","noOp","__name","arg1","getVariableName","__name","fieldKey","suffixOrPrefix","fieldKeyWithoutInvalidCharacters","prettyPluralVariableName","prettyString","getMetaProps","__name","identifier","meta","action","metaValues","metaValue","pickMeta","actions","acc","idQuoteWrapper","__name","id","composeInferencers","__name","inferencers","fieldInferencer","key","value","record","infer","type","inferences","inferencer","pickInferredField","composeTransformers","__name","transformers","fields","resources","resource","record","infer","type","acc","transformer","arrayInfer","__name","key","value","record","infer","type","isArray","isBasicArray","v","inferredInnerType","basicType","booleanInfer","__name","key","value","import_dayjs","dateSuffixRegexp","dateSeparators","dateInfer","__name","key","value","isDateField","dayjs","isValidDateString","s","emailRegexp","emailInfer","__name","key","value","imageRegexp","imageInfer","__name","key","value","nullishInfer","__name","key","value","numberInfer","__name","key","value","isNonEmptyString","isNotNaN","idPropertyRegexp","objectInfer","__name","key","value","record","infer","type","isNotNull","isNotArray","onlyHasId","hasId","fieldableKeys","getFieldableKeys","innerFieldKey","innerFieldType","accessor","el","richtextInfer","__name","key","value","textInfer","__name","key","value","urlRegexp","urlInfer","__name","key","value","defaultElements","arrayInfer","booleanInfer","dateInfer","emailInfer","imageInfer","nullishInfer","numberInfer","objectInfer","relationInfer","richtextInfer","textInfer","urlInfer","basicToRelation","__name","fields","resources","resource","record","field","validUUIdRegex","isValidUUID","value","isNotSelf","imageFieldLikeRegexp","imageByKey","__name","fields","field","relationByResource","__name","fields","resources","field","inferResource","resourceFromInferred","relationToFieldable","__name","fields","resources","resource","record","infer","type","field","value","inferredType","defaultTransformers","imageByKey","relationByResource","relationToFieldable","basicToRelation","import_react","RefineCore","import_react_live","defaultScope","React","RefineCore","InferencerLiveContext","LiveComponent","__name","fetchError","code","additionalScope","ErrorComponent","sanitized","replaceExports","replaceImports","acc","packageName","variableName","_module","ignoreReplacement","scope","_packageName","packageContent","ErrorComponentWithError","error","import_react","import_prism_react_renderer","import_vsDark","SharedCodeViewer","__name","rawCode","loading","code","React","prettierFormat","settled","setSettled","isModalVisible","setIsModalVisible","isVisible","setIsVisible","isColumn","setIsColumn","isModalButtonHover","setIsModalButtonHover","timeout","mediaQuery","handleResize","InfoIcon","OpenIcon","CodeModal","visible","onClose","modalRef","isCopied","setIsCopied","isCopyHover","setIsCopyHover","isCloseHover","setIsCloseHover","isLearnMoreHover","setIsLearnMoreHover","onOutsideClick","event","onCopy","title","CloseIcon","highlight","Highlight","theme","className","style","tokens","getLineProps","getTokenProps","line","i","token","key","ClipboardIcon","props","import_react","import_core","useInferFetch","__name","type","resourceNameOrRouteName","idFromProps","meta","resource","idFromURL","resources","id","dataProvider","error","setError","React","data","setData","datas","setDatas","initial","setInitial","loading","setLoading","resolver","recordItemId","_a","dataProviderName","dataProviderFromResource","pickDataProvider","dp","response","pickMeta","r","import_react","import_core","import_lodash_es","useRelationFetch","__name","record","fields","infer","meta","dataProvider","updatedFields","setUpdatedFields","React","initial","setInitial","loading","setLoading","resolver","allFields","attempts","promises","field","_a","_b","_c","_d","_e","dataProviderName","dataProviderFromResource","dp","isMultiple","requestId","el","data","pickMeta","relationInfer","responseData","isPlural","toPlural","removeRelationSuffix","toSingular","resourceNameWithoutRelationSuffix","results","createInferencer","__name","type","additionalScope","customElements","fieldTransformers","renderer","LoadingComponent","ErrorComponent","CodeViewerComponent","infer","composeInferencers","defaultElements","transform","composeTransformers","defaultTransformers","Inferencer","resourceName","fieldTransformer","hideCodeViewerInProduction","meta","id","_a","_b","resource","resources","i18nProvider","resourceFromURL","record","records","recordLoading","isInitialLoad","inferError","useInferFetch","inferSingleField","key","value","inferResult","transformed","customTransformedFields","field","result","inferSingleRecord","inferMultipleRecords","inferred","allUniqueKeys","index","self","mostCommonRecord","mostCommonFields","fields","acc","count","f","rawResults","recordInUse","React","results","relationLoading","useRelationFetch","clearedFields","cleanFields","idx","arr","el","duplicates","_c","_d","_e","_f","currentFieldHasResource","fieldHasResource","isSameResource","toPush","code","hiddenCodeViewer","LiveComponent","prepareLiveCode","componentName","removeHiddenCode","name","resourceItem","import_react","import_Alert","import_AlertTitle","import_Box","ErrorComponent","__name","error","React","Box","Alert","AlertTitle","import_react","import_Box","import_CircularProgress","LoadingComponent","__name","React","Box","CircularProgress","renderer","__name","resource","fields","meta","isCustomPage","id","i18n","COMPONENT_NAME","componentName","recordName","imports","relationHooksCode","field","_a","_b","_c","_d","ids","accessor","getVariableName","getMetaProps","renderRelationFields","variableName","variableIsLoading","variableDataLength","jsx","translatePrettyString","mapItemName","val","textFields","imageFields","emailFields","urlFields","booleanFields","dateFields","richtextFields","numberFields","renderedFields","noOp","useTranslateHook","printImports","idQuoteWrapper","ShowInferencer","createInferencer","Typography","Stack","SharedCodeViewer","LoadingComponent","ErrorComponent","import_mui","import_Checkbox","import_x_data_grid","renderer","__name","resource","fields","meta","isCustomPage","i18n","COMPONENT_NAME","componentName","recordName","imports","relationFields","field","relationHooksCode","_a","_b","idsString","accessor","getVariableName","getMetaProps","relationVariableNames","renderRelationFields","variableName","variableIsLoading","loadingCondition","fieldProperty","valueGetterProperty","headerProperty","translatePrettyString","renderCell","val","valSingle","valViewableSingle","imageFields","emailFields","urlFields","booleanFields","dateFields","richtextFields","basicFields","isIDKey","canEdit","canShow","canDeleteProp","resourceMeta","canDelete","actionButtons","jsx","renderedFields","noOp","useTranslateHook","printImports","ListInferencer","createInferencer","Checkbox","SharedCodeViewer","LoadingComponent","ErrorComponent","import_mui","import_react_hook_form","import_Box","import_Autocomplete","import_TextField","import_Checkbox","import_FormControlLabel","renderer","__name","resource","fields","meta","isCustomPage","i18n","COMPONENT_NAME","componentName","imports","relationHooksCode","field","_a","_b","getVariableName","getMetaProps","renderRelationFields","variableName","optionLabelProperty","isBracketNotation","optionLabelItemValue","accessor","optionEqualValue","optionChangeValue","jsx","dotAccessor","translatePrettyString","basicInputFields","isIDKey","booleanFields","dateFields","renderedFields","noOp","useTranslateHook","printImports","CreateInferencer","createInferencer","Box","Autocomplete","TextField","Checkbox","FormControlLabel","SharedCodeViewer","LoadingComponent","ErrorComponent","import_mui","import_react_hook_form","import_Box","import_Autocomplete","import_TextField","import_Checkbox","import_FormControlLabel","renderer","__name","resource","fields","meta","isCustomPage","id","i18n","COMPONENT_NAME","componentName","recordName","getVariableName","imports","relationHooksCode","field","_a","_b","val","accessor","getMetaProps","renderRelationFields","variableName","optionLabelProperty","isBracketNotation","optionLabelItemValue","optionEqualValue","optionChangeValue","jsx","dotAccessor","translatePrettyString","basicInputFields","errorVal","isIDKey","booleanFields","dateFields","renderedFields","noOp","useTranslateHook","printImports","idQuoteWrapper","EditInferencer","createInferencer","Box","Autocomplete","TextField","Checkbox","FormControlLabel","SharedCodeViewer","LoadingComponent","ErrorComponent","MuiInferencer","__name","actionFromProps","idFromProps","props","action","id","React","ShowInferencer","CreateInferencer","EditInferencer","ListInferencer"]}