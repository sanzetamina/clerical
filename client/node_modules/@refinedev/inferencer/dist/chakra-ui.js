var ct=Object.create;var Ae=Object.defineProperty;var ut=Object.getOwnPropertyDescriptor;var pt=Object.getOwnPropertyNames;var mt=Object.getPrototypeOf,lt=Object.prototype.hasOwnProperty;var o=(e,t)=>Ae(e,"name",{value:t,configurable:!0});var dt=(e,t)=>{for(var c in t)Ae(e,c,{get:t[c],enumerable:!0})},hr=(e,t,c,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of pt(t))!lt.call(e,a)&&a!==c&&Ae(e,a,{get:()=>t[a],enumerable:!(i=ut(t,a))||i.enumerable});return e};var _=(e,t,c)=>(c=e!=null?ct(mt(e)):{},hr(t||!e||!e.__esModule?Ae(c,"default",{value:e,enumerable:!0}):c,e)),ft=e=>hr(Ae({},"__esModule",{value:!0}),e);var Lt={};dt(Lt,{ChakraUICreateInferencer:()=>Ke,ChakraUICreateRenderer:()=>dr,ChakraUIEditInferencer:()=>Qe,ChakraUIEditRenderer:()=>fr,ChakraUIInferencer:()=>Pt,ChakraUIListInferencer:()=>Ue,ChakraUIListRenderer:()=>lr,ChakraUIShowInferencer:()=>ze,ChakraUIShowRenderer:()=>mr});module.exports=ft(Lt);var Me=_(require("react")),ot=require("@refinedev/core");var q=require("@refinedev/chakra-ui"),Ce=require("@chakra-ui/react");var Z=_(require("react")),be=require("@refinedev/core");var gt=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,_e=o((e,t)=>{let c=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"];gt.test(e)&&c.unshift("url");let i=c.find(a=>a in t&&!!t[a]);if(i)return i==="firstName"&&"lastName"in t?["firstName","lastName"]:i},"getFieldableKeys");var kr=require("@refinedev/core");function qe(e,t,c){if(t)return t;let i=c==null?void 0:c.find(u=>u.name===e),a=(0,kr.pickNotDeprecated)(i==null?void 0:i.meta,i==null?void 0:i.options);return a!=null&&a.dataProviderName?a.dataProviderName:"default"}o(qe,"pickDataProvider");var He=o(e=>{var t;return(t=e==null?void 0:e.options)==null?void 0:t.dataProviderName},"dataProviderFromResource");var We=o(e=>{let t=[...e].filter(Boolean).sort((c,i)=>(i.priority||0)-(c.priority||0))[0];return t||null},"pickInferredField");var Ir=_(require("prettier/standalone")),xr=_(require("prettier/parser-typescript"));var Ge=o(e=>{try{return Ir.default.format(e,{parser:"typescript",plugins:[xr.default],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(t){return console.warn("Formatting error in inferencer",t),e}},"prettierFormat");var $r=o(e=>e.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`),"prettySpaces");var Ze=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,Fr=o((e,t)=>{let c=Ze.test(e),i=typeof t=="string"||typeof t=="number",a=Array.isArray(t)&&t.every(u=>typeof u=="string"||typeof u=="number");return c&&i||c&&a?{key:e,relation:!0,multiple:!!a,type:"relation",priority:1}:!1},"relationInfer");var Q=o(e=>e.replace(Ze,""),"removeRelationSuffix");var $e=o(e=>Q(e).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(y=>y.charAt(0).toUpperCase()+y.slice(1)).join(" "),"prettyString");var F=o(e=>{let{resource:t,field:c,i18n:i}=e;if(i){let u=`translate("${t.name}.fields.${c.key}")`;return e.noBraces?`${u}`:`{${u}}`}let a=$e(c.key);return e.noQuotes?a:`"${a}"`},"translatePrettyString");var Ye=_(require("pluralize"));var J=o((e="")=>Ye.default.isSingular(e)?e:Ye.default.singular(e),"toSingular");var Je=_(require("pluralize"));var ce=o((e="")=>Je.default.isPlural(e)?e:Je.default.plural(e),"toPlural");var Xe=o(e=>e.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(a=>!a.trim().startsWith("export default")).join(`
`),"replaceExports");var br=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,yt=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,ht=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,er=o((e,t={})=>{let c=e.matchAll(br),i=new Set;for(let a of c){let[,u,y,p,l]=a;if(l in t){let $=t[l];if(l==="react")continue;u&&i.add(`const { default: ${u} } = ${$};`),y&&i.add(`const${y.replace(ht,"$1: $3$4")} = ${$};`),p&&i.add(`const ${p} = ${$};`)}}return $r(`
    ${Array.from(i).join(`
`)}
    ${e.replace(br,"").replace(yt,"")}
    `)},"replaceImports");var Re=_(require("pluralize"));var rr=o((e,t)=>e?t.find(i=>{let a=Q(e.key);return i.name===a||i.name===(Re.default.isPlural(a)?a:Re.default.plural(a))||i.name===(Re.default.isSingular(a)?a:Re.default.singular(a))}):void 0,"resourceFromInferred");var vr=_(require("pluralize"));var ae=o((e,t,c="Inferred")=>{let i=e.replace(/[^a-zA-Z0-9]/g," "),a=vr.default.singular(i),y=$e(a).replace(/ /g,"")||c,p=t.charAt(0).toUpperCase()+t.slice(1);return/^[a-zA-Z]/.test(y)?`${y}${p}`:`${p}${y}`},"componentName");var kt=o(e=>e?Array.isArray(e)?e.join(""):typeof e=="string"?e:typeof e=="object"||typeof e=="function"?e.toString():typeof e=="number"?String(e):typeof e=="boolean"&&e?"true":e:"","handleExpression"),x=o((e,...t)=>e.reduce((i,a,u)=>`${i}${a}${kt(t[u])}`,"").trim(),"jsx");var tr=o((e,t)=>`
    ${e??""}
    
    render(typeof ${t} !== "undefined" ? <${t} /> : <></>);
    `,"prepareLiveCode");var nr=o(e=>e==null?void 0:e.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,""),"removeHiddenCode");var It=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,or=o(e=>It.test(e),"shouldDotAccess");function ar(e,t,c){let i=`${e}`;return t&&(i+="?.",or(t)?i+=t:i+=`['${t}']`),c&&(i+="?.",or(c)?i+=c:i+=`['${c}']`),i}o(ar,"accessorSingle");function xt(e,t,c){return(c??[]).map(a=>ar(e,t,a))}o(xt,"accessorMultiple");var f=o((e,t,c,i=' + " " + ')=>Array.isArray(c)?i?xt(e,t,c).join(i):ar(e,t,c[0]):ar(e,t,c),"accessor"),G=o((e,t,c)=>{let i=e;return t&&(i+=`.${t}`),c&&(Array.isArray(c)?i+=`.${c[0]}`:i+=`.${c}`),i},"dotAccessor");var ue=o(e=>{let t=e.reduce((i,[a,u,y])=>(i[u]||(i[u]=[]),i[u].includes(a)||(y?i[u].push([a,!0]):i[u].push(a)),i),{});return Object.entries(t).map(([i,a])=>{let u=a.find($=>Array.isArray($)&&$[1]),y=a.filter($=>typeof $=="string"),p=u?`${u[0]}`:"",l=y.length?`{ ${y.join(", ")} }`:"";return`import ${p}${p&&l?", ":""}${l} from "${i}";`})},"printImports");var $t=/^id$/i,Pe=o(e=>$t.test(e),"isIDKey");var Le=o(e=>e.relationInfer&&e.relationInfer.accessor?Array.isArray(e.relationInfer.accessor)?`optionLabel: "${e.relationInfer.accessor[0]}",`:e.relationInfer.accessor!=="title"?`optionLabel: "${e.relationInfer.accessor}",`:"":"","getOptionLabel");var pe=o(e=>{},"noOp");var A=o((e,t="")=>{if(Number.isInteger(Number(e)))return t.charAt(0).toLowerCase()+t.slice(1)+e;let i=e.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),a=$e(i).replace(/ /g,"");return`${a.charAt(0).toLowerCase()+a.slice(1)}${t.charAt(0).toUpperCase()+t.slice(1)}`},"getVariableName");var z=o((e,t,c)=>{if(t&&c&&e){let i=e?t[e]:{},a=(i==null?void 0:i[c])??(i==null?void 0:i.default);return a?`meta: ${JSON.stringify(a)},`:""}return""},"getMetaProps"),se=o((e,t,c)=>{if(t&&c&&e){let i=e?t[e]:{},u=[...c,"default"].reduce((y,p)=>y??(i==null?void 0:i[p]),void 0);if(u)return u}},"pickMeta");var Ee=o(e=>e===void 0?e:typeof e=="string"?`"${e}"`:e,"idQuoteWrapper");var Cr=o(e=>{let t=o((c,i,a,u=t,y)=>{let p=e.map($=>$(c,i,a,u,y));return We(p)},"fieldInferencer");return t},"composeInferencers");var Sr=o(e=>o((c,i,a,u,y,p)=>e.reduce((l,$)=>$(l,i,a,u,y,p),c),"fieldTransformer"),"composeTransformers");var wr=o((e,t,c,i,a)=>{let u=Array.isArray(t),y=Array.isArray(t)&&t.every(p=>typeof p=="string"||typeof p=="number");if(u){if(!y){let l=i(e,t[0],c,i,a);return l?{...l,key:e,multiple:!0,priority:1}:!1}let p=i(e,t[0],c,i,a)||{type:"string"};return{key:e,multiple:!0,priority:1,type:p==null?void 0:p.type}}return!1},"arrayInfer");var Tr=o((e,t)=>typeof t=="boolean"?{key:e,type:"boolean"}:!1,"booleanInfer");var sr=_(require("dayjs"));var Ft=/(_at|_on|At|On|AT|ON)(\[\])?$/,bt=["/",":","-","."],Ar=o((e,t)=>{let c=Ft.test(e)&&(0,sr.default)(t).isValid(),i=typeof t=="string"&&(0,sr.default)(t).isValid();return typeof t=="string"&&bt.some(u=>t.includes(u))&&(c||i)?{key:e,type:"date",priority:1}:!1},"dateInfer");var vt=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,Hr=o((e,t)=>typeof t=="string"&&vt.test(t)?{key:e,type:"email",priority:1}:!1,"emailInfer");var Ct=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,Rr=o((e,t)=>typeof t=="string"&&Ct.test(t)?{key:e,type:"image",priority:2}:!1,"imageInfer");var Pr=o((e,t)=>typeof t>"u"||t===null?null:!1,"nullishInfer");var Lr=o((e,t)=>{let c=typeof t=="string"&&t.length>0,i=!isNaN(t);return c&&i||typeof t=="number"?{key:e,type:"number"}:!1},"numberInfer");var Er=/id$/i,Mr=o((e,t,c,i,a)=>{let u=t!==null,y=!Array.isArray(t);if(u&&y&&typeof t=="object"){let l=Object.keys(t).length===1&&Er.test(Object.keys(t)[0]),$=Object.keys(t).some(S=>Er.test(S));if(l)return{key:e,type:"relation",relation:!0,accessor:"id",priority:1};let I=_e(e,t);if((I?I.length>0:!1)&&I){let S=I&&Array.isArray(I)?I[0]:I,h=i(S,t[S],t,i,a);if(h){let w=Array.isArray(I)?I.map(m=>h.accessor?`${m}.${Array.isArray(h.accessor)?h.accessor[0]:h.accessor}`:m):h.accessor?Array.isArray(h.accessor)?`${I}.${h.accessor[0]}`:`${I}.${h.accessor}`:I;return(h==null?void 0:h.type)==="text"&&(a==="create"||a==="edit")&&$?{key:e,type:"relation",relation:!0,accessor:"id",priority:1}:{...h,fieldable:!0,key:e,accessor:w,priority:1}}}return{key:e,fieldable:!1,type:"object",priority:1}}return!1},"objectInfer");var Nr=o((e,t)=>typeof t=="string"&&t.length>100?{key:e,type:"richtext",priority:1}:!1,"richtextInfer");var Vr=o((e,t)=>typeof t=="string"?{key:e,type:"text"}:!1,"textInfer");var St=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,Br=o((e,t)=>typeof t=="string"&&St.test(t)?{key:e,type:"url",priority:1}:!1,"urlInfer");var Dr=[wr,Tr,Ar,Hr,Rr,Pr,Lr,Mr,Fr,Nr,Vr,Br];var Or=o((e,t,c,i)=>e.map(u=>{if(!u.relation&&(u.type==="text"||u.type==="richtext"||u.type==="number")&&!u.canRelation){let y=/^[a-z0-9-]+$/,p=o(S=>y.test(`${S}`),"isValidUUID"),l=u.key.toLowerCase()!=="id";return!(!u.accessor||typeof u.accessor=="string")||!l?u:(u.multiple?i[u.key]:[i[u.key]]).every(S=>p(u.accessor?S[u.accessor]:S))?{...u,canRelation:!0}:u}return u}),"basicToRelation");var wt=/(image|photo|avatar|cover|thumbnail|icon)/i,zr=o(e=>e.map(c=>c.type==="url"&&wt.test(c.key)?{...c,type:"image"}:c),"imageByKey");var jr=o((e,t)=>e.map(i=>{let a=rr(i,t);return a?{...i,relation:!0,type:"relation",resource:a}:i}),"relationByResource");var Ur=o((e,t,c,i,a,u)=>e.map(p=>{if(p.relation&&p.type==="relation"&&!p.resource){let l=p.accessor?i[p.key][p.accessor]:i[p.key],$=a(p.key,l,i,a,u);if($&&$.type!=="relation")return{...p,fieldable:!0,relation:!1,type:$.type,canRelation:!0}}return p}),"relationToFieldable");var Kr=[zr,jr,Ur,Or];var te=_(require("react")),Tt=_(require("@refinedev/core")),Ve=require("@aliemir/react-live");var Qr=[["react","React",te.default],["@refinedev/core","RefineCore",Tt]],ir=te.default.createContext({}),cr=o(({fetchError:e,code:t,additionalScope:c,errorComponent:i})=>{let a=(t&&Xe(er(t,[...Qr,...c??[]].reduce((p,[l,$,I,L])=>L?p:{...p,[l]:$},{}))))??"",u=te.default.useMemo(()=>({React:te.default,...te.default,...[...Qr,...c??[]].reduce((p,[l,$,I])=>({...p,[$]:I}),{})}),[c]),y=te.default.useMemo(()=>o(()=>{let{error:l}=te.default.useContext(ir);return i?te.default.createElement(i,{error:l?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${l}</code>`:typeof e=="string"?e:e?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},"LiveErrorComponent"),[i,e]);return te.default.createElement(Ve.LiveProvider,{Context:ir,code:a,scope:u,noInline:!0},!e&&te.default.createElement(Ve.LivePreview,{Context:ir}),te.default.createElement(y,null))},"LiveComponent");var g=_(require("react")),Be=_(require("prism-react-renderer")),qr=_(require("prism-react-renderer/themes/vsDark"));var de=o(({code:e,loading:t})=>{let c=g.default.useMemo(()=>Ge(e??""),[e]),[i,a]=g.default.useState(!1),[u,y]=g.default.useState(!1),[p,l]=g.default.useState(!1),[$,I]=g.default.useState(!1),[L,S]=g.default.useState(!1);return g.default.useEffect(()=>{if(!t){let h=setTimeout(()=>{a(!0)},300);return()=>{clearTimeout(h)}}return()=>{}},[t]),g.default.useEffect(()=>{if(typeof window<"u"){let h=window.matchMedia("(max-width: 449px)");h.matches?l(!1):l(!0);let w=o(()=>{h.matches?l(!1):l(!0)},"handleResize");return window.addEventListener("resize",w),()=>{window.removeEventListener("resize",w)}}return()=>{}},[]),g.default.useEffect(()=>{if(typeof window<"u"){let h=window.matchMedia("(max-width: 1280px)");h.matches?I(!0):I(!1);let w=o(()=>{h.matches?I(!0):I(!1)},"handleResize");return window.addEventListener("resize",w),()=>{window.removeEventListener("resize",w)}}return()=>{}},[]),c&&!t?g.default.createElement(g.default.Fragment,null,p&&g.default.createElement("div",{className:"refine-inferencer--code-viewer",style:{position:"sticky",bottom:"24px",paddingTop:"24px",left:0,right:0,width:"100%",zIndex:10,display:"flex",justifyContent:"center",transition:"all 0.2s ease",opacity:i&&!u?1:0,transform:i&&!u?"translateY(0)":"translateY(100px)"}},g.default.createElement("div",{style:{width:"calc(100% - calc(64px * 2))",maxWidth:"1080px",padding:"20px",backgroundColor:"#1A1A1A",boxShadow:"0px 4px 16px -4px rgba(0, 0, 0, 0.5), 0px 8px 32px -8px rgba(0, 0, 0, 0.35)",borderRadius:"16px",display:"flex",alignItems:"center",justifyContent:"space-between",flexDirection:$?"column":"row",gap:"12px"}},g.default.createElement("div",{style:{display:"flex",alignItems:"flex-start",gap:"8px"}},g.default.createElement("div",null,g.default.createElement(Ht,null)),g.default.createElement("div",{style:{fontSize:"14px",lineHeight:"20px",color:"#ffffff"}},g.default.createElement("p",{style:{padding:0,margin:0}},"Most of the page code is auto-generated by the"," ",g.default.createElement("span",{style:{textDecoration:"underline"}},"Inferencer")," ","feature, based on your backend data structure."),g.default.createElement("p",{style:{padding:0,margin:0}},"While this is an excellent way to experiment with refine,"," ",g.default.createElement("span",{style:{fontWeight:600}},"it's not intended to be used on production.")))),g.default.createElement("div",null,g.default.createElement("button",{onPointerEnter:()=>S(!0),onPointerLeave:()=>S(!1),onClick:()=>y(!0),style:{appearance:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:L?"scale(1.025)":void 0,filter:L?"brightness(1.1)":void 0}},g.default.createElement(Wr,{style:{flexShrink:0}}),g.default.createElement("span",null,"Show the auto-generated code"))))),g.default.createElement(At,{visible:u,onClose:()=>y(!1),code:c})):null},"SharedCodeViewer"),At=o(({visible:e,onClose:t,code:c=""})=>{let i=g.default.useRef(null),[a,u]=g.default.useState(!1),[y,p]=g.default.useState(!1),[l,$]=g.default.useState(!1),[I,L]=g.default.useState(!1);g.default.useEffect(()=>{if(typeof document<"u"){let d=o(s=>{i.current&&!i.current.contains(s.target)&&t()},"onOutsideClick");return document.addEventListener("pointerdown",d),()=>{document.removeEventListener("pointerdown",d)}}return()=>{}},[t]);let S=o(()=>{typeof navigator<"u"&&(navigator.clipboard.writeText(c),u(!0),setTimeout(()=>{u(!1)},1e3))},"onCopy"),h=g.default.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center"}},g.default.createElement("div",{style:{fontWeight:700,fontSize:"20px",lineHeight:"32px",color:"#0D0D0D"}},"Auto-generated code by Inferencer"),g.default.createElement("button",{onClick:t,onPointerEnter:()=>$(!0),onPointerLeave:()=>$(!1),style:{flexShrink:0,appearance:"none",border:"none",background:"none",padding:0,margin:0,outline:"none",borderRadius:"50px",width:"32px",height:"32px",cursor:"pointer",transition:"all 0.15s ease",transform:l?"scale(1.05)":void 0,filter:l?"brightness(0.8)":void 0}},g.default.createElement(Rt,null))),w=g.default.createElement("div",{style:{fontSize:"13px",borderRadius:"8px",flex:"1",overflow:"scroll",background:"#1E1E1E"}},g.default.createElement(Be.default,{...Be.defaultProps,theme:qr.default,code:c,language:"tsx"},({className:d,style:s,tokens:b,getLineProps:H,getTokenProps:T})=>g.default.createElement("pre",{className:d,style:{...s,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},b.map((U,W)=>g.default.createElement("div",{key:W,...H({line:U,key:W})},U.map((r,k)=>g.default.createElement("span",{key:k,...T({token:r,key:k})})))))));return g.default.createElement("div",{className:"refine-inferencer--code-viewer-modal",style:{position:"fixed",top:0,left:0,right:0,bottom:0,zIndex:9999,backgroundColor:"rgba(0, 0, 0, 0.5)",transition:"all 0.2s ease",opacity:e?1:0,pointerEvents:e?"all":"none",display:"flex",justifyContent:"center",alignItems:"center"}},g.default.createElement("div",{ref:i,style:{transform:e?"scale(1) translateY(0px)":"scale(0) translateY(-200px)",transition:"all 0.25s cubic-bezier(.35,1.29,.81,1.08)",transitionDelay:"0.25",width:"calc(100% - calc(32px * 2))",height:"calc(100% - calc(32px * 2))",backgroundColor:"#fff",maxWidth:"640px",maxHeight:"720px",borderRadius:"8px",padding:"16px"}},g.default.createElement("div",{style:{display:"flex",flexDirection:"column",height:"100%",width:"100%",gap:"16px"}},h,w,g.default.createElement("div",{style:{display:"flex",justifyContent:"flex-start",alignItems:"flex-end",gap:"16px"}},g.default.createElement("button",{onPointerEnter:()=>p(!0),onPointerLeave:()=>p(!1),onClick:S,style:{appearance:"none",height:"40px",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",position:"relative",overflow:"hidden",transition:"filter 0.2s ease",transform:y?"scale(1.025)":"scale(1)",filter:y?"brightness(1.1)":void 0}},g.default.createElement(_r,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),g.default.createElement("span",null,"Copy Generated Code"),g.default.createElement("div",{style:{position:"absolute",width:"100%",height:"100%",top:0,left:0,display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",transition:"all 0.2s ease",transform:a?"translateY(0)":"translateY(40px)"}},g.default.createElement(_r,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),g.default.createElement("span",null,"Copied!"))),g.default.createElement("a",{onPointerEnter:()=>L(!0),onPointerLeave:()=>L(!1),href:"https://refine.dev/docs/packages/documentation/inferencer",target:"_blank",rel:"noreferrer",style:{appearance:"none",textDecoration:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"rgba(0, 128, 255, 0.1)",color:"#0080FF",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:I?"scale(1.025)":void 0,filter:I?"brightness(1.1)":void 0}},g.default.createElement(Wr,{style:{flexShrink:0}}),g.default.createElement("span",null,"Learn more about inferencer"))))))},"CodeModal"),Ht=o(e=>g.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,fill:"none",...e},g.default.createElement("path",{fill:"#0080FF",fillRule:"evenodd",d:"M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10Zm0-15a1.25 1.25 0 1 0 0 2.5A1.25 1.25 0 0 0 10 5Zm0 10c.69 0 1.25-.56 1.25-1.25V10a1.25 1.25 0 1 0-2.5 0v3.75c0 .69.56 1.25 1.25 1.25Z",clipRule:"evenodd"})),"InfoIcon"),Wr=o(e=>g.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:16,height:16,fill:"none",...e},g.default.createElement("path",{fill:"currentColor",d:"M5 2a1 1 0 0 1 0 2H4v8h8v-1a1 1 0 1 1 2 0v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h1Z"}),g.default.createElement("path",{fill:"currentColor",d:"M9 2a1 1 0 0 0 0 2h1.586L6.293 8.293a1 1 0 0 0 1.414 1.414L12 5.414V7a1 1 0 1 0 2 0V3a1 1 0 0 0-1-1H9Z"})),"OpenIcon"),Rt=o(e=>g.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:32,height:32,fill:"none",...e},g.default.createElement("path",{fill:"#A6A6A6",fillRule:"evenodd",d:"M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16Zm-2.586-21.414a2 2 0 1 0-2.828 2.828L13.172 16l-2.586 2.586a2 2 0 1 0 2.828 2.828L16 18.828l2.586 2.586a2 2 0 1 0 2.828-2.828L18.828 16l2.586-2.586a2 2 0 1 0-2.828-2.828L16 13.172l-2.586-2.586Z",clipRule:"evenodd"})),"CloseIcon"),_r=o(e=>g.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,viewBox:"0 0 24 24",fill:"none",...e},g.default.createElement("path",{fill:"currentColor",fillRule:"evenodd",d:"M8 5a3 3 0 0 0 3 3h2a3 3 0 0 0 3-3h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h1Zm0 7a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2H9a1 1 0 0 1-1-1Zm1 3a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2H9Z",clipRule:"evenodd"}),g.default.createElement("path",{fill:"currentColor",d:"M13 4a1 1 0 1 1 0 2h-2a1 1 0 1 1 0-2h2Z"})),"ClipboardIcon");var fe=_(require("react")),De=require("@refinedev/core");var Gr=o((e,t,c,i)=>{let{resource:a,id:u,resources:y}=(0,De.useResource)(t),p=c??u,l=(0,De.useDataProvider)(),[$,I]=fe.default.useState(void 0),[L,S]=fe.default.useState(void 0),[h,w]=fe.default.useState(void 0),[m,d]=fe.default.useState(!0),[s,b]=fe.default.useState(!1),H=fe.default.useCallback(async T=>{var r;let U=He(a)??qe(a==null?void 0:a.name,void 0,y),W=l(U);b(!0),I(void 0);try{if((e==="list"||e==="create")&&a){let k=await W.getList({resource:a==null?void 0:a.name,meta:se((a==null?void 0:a.identifier)??(a==null?void 0:a.name),i,["getList"])}),E=(r=k.data)==null?void 0:r[0];E||I(`<p>No records/data found for resource "${a==null?void 0:a.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),S(E),w(k.data),setTimeout(()=>{b(!1)},500)}if((e==="edit"||e==="show")&&T&&a){let E=(await W.getOne({resource:a==null?void 0:a.name,id:T,meta:se((a==null?void 0:a.identifier)??(a==null?void 0:a.name),i,["getOne"])})).data;E||I(`<p>No records/data found for resource "${a==null?void 0:a.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),S(E),setTimeout(()=>{b(!1)},500)}}catch(k){console.warn("An error occured while fetching the resource data. Please check the error message below:",k),I(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${a==null?void 0:a.name}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{b(!1)},500)}},[e,l,a,y]);return fe.default.useEffect(()=>{d(!1),!s&&!L&&H(p)},[H,p]),{data:L,datas:h,loading:s,initial:m,error:$}},"useInferFetch");var Fe=_(require("react")),Zr=require("@refinedev/core");var ur=require("lodash");var Yr=o(({record:e,fields:t,infer:c,meta:i})=>{let a=(0,Zr.useDataProvider)(),[u,y]=Fe.default.useState([]),[p,l]=Fe.default.useState(!0),[$,I]=Fe.default.useState(!1),L=Fe.default.useCallback(async S=>{console.groupCollapsed("@refinedev/inferencer is trying to detect relations");let h=[];I(!0);try{let w=S.map(async d=>{var s,b,H,T,U;if(d&&(d.relation||d.canRelation)&&e){if(d.relationInfer)return d;let W=He(d.resource),r=a(W),k=d.multiple,E=Array.isArray(d.accessor)?void 0:d.multiple?e[d.key].map(N=>d.accessor?(0,ur.get)(N,d.accessor):N)[0]:d.accessor?(0,ur.get)(e[d.key],d.accessor):e[d.key];if(E&&d.resource)try{let N={};if(k&&r.getMany){let{data:v}=await r.getMany({resource:d.resource.name,ids:[E],meta:se(((s=d.resource)==null?void 0:s.identifier)??((b=d.resource)==null?void 0:b.name),i,["getMany"])});N=v==null?void 0:v[0]}else{let{data:v}=await r.getOne({resource:d.resource.name,id:E,meta:se(((H=d.resource)==null?void 0:H.identifier)??((T=d.resource)==null?void 0:T.name),i,k?["getMany","getOne"]:["getOne"])});N=v}h.push({status:"success",resource:d.resource.name,field:d.key});let n=c("__",N,{},c);return{...d,relationInfer:n}}catch{return h.push({status:"error",resource:d.resource.name,field:d.key}),{...d,relationInfer:null}}if(E){let N,n;try{let P={};if(k&&r.getMany){let{data:C}=await((U=r.getMany)==null?void 0:U.call(r,{resource:ce(Q(d.key)),ids:[E],meta:se(ce(Q(d.key)),i,["getMany"])}));P=C==null?void 0:C[0]}else{let{data:C}=await r.getOne({resource:ce(Q(d.key)),id:E,meta:se(ce(Q(d.key)),i,k?["getMany","getOne"]:["getOne"])});P=C}h.push({status:"success",resource:ce(Q(d.key)),field:d.key}),N=P,n=!0}catch{h.push({status:"error",resource:ce(Q(d.key)),field:d.key});let C={};try{if(k&&r.getMany){let{data:D}=await r.getMany({resource:J(Q(d.key)),meta:se(J(Q(d.key)),i,["getMany"]),ids:[E]});C=D==null?void 0:D[0]}else{let{data:D}=await r.getOne({resource:J(Q(d.key)),meta:se(J(Q(d.key)),i,k?["getMany","getOne"]:["getOne"]),id:E});C=D}h.push({status:"success",resource:J(Q(d.key)),field:d.key}),N=C,n=!1}catch{return h.push({status:"error",resource:J(Q(d.key)),field:d.key}),{...d,relationInfer:null}}}let v=c("__",N,{},c),R=Q(d.key);return{...d,relation:!0,type:"relation",resource:{name:n?ce(R):J(R)},fieldable:!1,canRelation:void 0,relationInfer:v}}return{...d,relationInfer:null}}return d}),m=await Promise.all(w);y(m.filter(d=>d)),setTimeout(()=>{I(!1)},500)}catch{setTimeout(()=>{I(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${h.length} attempts and succeeded with ${h.filter(w=>w.status==="success").length} attempts.`),console.groupEnd(),console.info("@refinedev/inferencer may send multiple requests to your API for nonexistent resources when trying to detect relations. To learn more about how the inferencer works, visit https://s.refine.dev/how-inferencer-works")},500)},[a,e]);return Fe.default.useEffect(()=>{l(!1),!$&&t&&t.length>0&&u.length===0&&L(t)},[L,$,t,L]),{fields:u,loading:$,initial:p}},"useRelationFetch");var ge=o(({type:e,additionalScope:t=[],customElements:c=[],fieldTransformers:i=[],renderer:a,loadingComponent:u,errorComponent:y,codeViewerComponent:p})=>{let l=Cr([...Dr,...c]),$=Sr([...Kr,...i]),I=o(({resourceName:S,fieldTransformer:h,hideCodeViewerInProduction:w,meta:m,id:d})=>{var gr,yr;let{resource:s,resources:b}=(0,be.useResource)(S),{i18nProvider:H}=(0,Z.useContext)(be.TranslationContext),{resource:T}=(0,be.useResource)(),{data:U,datas:W,loading:r,initial:k,error:E}=Gr(e,S??(s==null?void 0:s.name),d,m),N=o((V,B,X)=>{let ee=l(V,B,X,l,e);if(ee&&s){let re=$([ee],b,s,X,l,e),K=h?re.flatMap(O=>{let Y=h(O);return Y?[Y]:[]}):re;return K==null?void 0:K[0]}},"inferSingleField"),n=o(V=>Object.keys(V).map(X=>{let ee=V[X];return N(X,ee,V)}).filter(Boolean),"inferSingleRecord"),v=o(V=>{let B=V.map(O=>n(O)),X=V.flatMap(O=>Object.keys(O)).filter((O,Y,we)=>we.indexOf(O)===Y),ee={},re=X.map(O=>{let Y=B.map(me=>me.find(ie=>ie.key===O));return Y.reduce((me,ie,Ne)=>{if(!ie)return me;let Te=Y.filter(le=>(le==null?void 0:le.key)===ie.key&&(le==null?void 0:le.type)===ie.type).length;return Te>me.count?(ee[O]=V[Ne][O],{count:Te,field:ie}):me},{count:0,field:void 0}).field});return{commonRecord:ee,inferredFields:re}},"inferMultipleRecords"),[R,P]=Z.default.useMemo(()=>{if(W&&(e==="list"||e==="create")){let V=v(W);return[V.inferredFields,V.commonRecord]}if(U){let V=Object.keys(U).map(B=>{let X=U[B];return l(B,X,U,l,e)}).filter(Boolean);if(s){let B=$(V,b,s,U,l,e);return[h?B.flatMap(ee=>{let re=h(ee);return re?[re]:[]}):B,U]}return[[],U]}return[[],void 0]},[U,W,b,s,h]),{fields:C,loading:D}=Yr({record:P,fields:R,infer:l,meta:m}),xe=Z.default.useMemo(()=>{let V=[];return C.forEach((B,X,ee)=>{if(B.resource){if(V.findIndex(K=>{var O,Y;return((O=K.resource)==null?void 0:O.name)===((Y=B.resource)==null?void 0:Y.name)})>-1)return;let re=ee.filter((K,O)=>{var Y,we,me,ie,Ne,Te;if(O!==X){let le=B.resource,st=K.resource,it=((Y=K.resource)==null?void 0:Y.identifier)||((we=B.resource)==null?void 0:we.identifier)?((me=K.resource)==null?void 0:me.identifier)===((ie=B.resource)==null?void 0:ie.identifier):((Ne=K.resource)==null?void 0:Ne.name)===((Te=B.resource)==null?void 0:Te.name);return le&&st&&it}else return!1});if(re.length>0)if(e==="create"||e==="edit"){let K;[B,...re].find(O=>{O.fieldable!==!0&&K===void 0&&(K=O)}),K?V.push(K):V.push(B)}else{let K;[B,...re].find(O=>{O.fieldable!==!1&&K===void 0&&(K=O)}),K?V.push(K):V.push(B)}else V.push(B)}else V.push(B)}),V},[C,e]),Se=Z.default.useMemo(()=>!r&&!D&&!k&&s?a({resource:s,resources:b,fields:xe,infer:l,meta:m,isCustomPage:s.name!==(T==null?void 0:T.name),id:d,i18n:!!H}):"",[s,b,xe,r,D]),at=w;return Z.default.createElement(Z.default.Fragment,null,u&&(r||D)&&Z.default.createElement(u,null),!r&&!D&&Z.default.createElement(Z.default.Fragment,null,Z.default.createElement(cr,{fetchError:!r&&E?E:!r&&!k&&!U,code:tr(Se,ae(((gr=s==null?void 0:s.meta)==null?void 0:gr.label)??((yr=s==null?void 0:s.options)==null?void 0:yr.label)??(s==null?void 0:s.label)??(s==null?void 0:s.name)??"Resource",e)),errorComponent:y,additionalScope:t}),typeof p<"u"&&!at?Z.default.createElement(p,{code:nr(Se),loading:r||D}):null))},"Inferencer");return o(({name:S,resource:h,fieldTransformer:w,meta:m,hideCodeViewerInProduction:d,id:s})=>{let{resource:b}=(0,be.useResource)(h??S),H=`${(b==null?void 0:b.identifier)??(b==null?void 0:b.name)}-${e}-${s}`;return Z.default.createElement(I,{hideCodeViewerInProduction:d,fieldTransformer:w,resourceName:h??S,meta:m??{},key:H,id:s})},"InferencerComponent")},"createInferencer");var ve=_(require("react")),ye=require("@chakra-ui/react");var he=o(({error:e})=>e?ve.default.createElement(ye.Center,{style:{minHeight:300}},ve.default.createElement(ye.Alert,{status:"error",variant:"subtle",flexDirection:"column",alignItems:"center",justifyContent:"center",textAlign:"center",height:"200px",maxWidth:"700px"},ve.default.createElement(ye.AlertIcon,{boxSize:"40px",mr:0}),ve.default.createElement(ye.AlertDescription,{mt:4,maxWidth:"sm"},ve.default.createElement("div",{dangerouslySetInnerHTML:{__html:e??""}})))):null,"ErrorComponent");var pr=_(require("react")),Oe=require("@chakra-ui/react");var ke=o(()=>pr.default.createElement(Oe.Box,{position:"relative",bg:"chakra-body-bg",minH:120},pr.default.createElement(Oe.Spinner,{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)"})),"LoadingComponent");var mr=o(({resource:e,fields:t,meta:c,isCustomPage:i,id:a,i18n:u})=>{let y=ae(e.label??e.name,"show"),p="record",l=[["useShow","@refinedev/core"],["IResourceComponentsProps","@refinedev/core"],["Show","@refinedev/chakra-ui"],["Heading","@chakra-ui/react"]];u&&l.push(["useTranslate","@refinedev/core"]);let I=t.filter(r=>(r==null?void 0:r.relation)&&!(r!=null&&r.fieldable)&&(r==null?void 0:r.resource)).filter(Boolean).map(r=>{var k,E,N,n;if(r!=null&&r.relation&&!r.fieldable&&r.resource){if(r.multiple){l.push(["useMany","@refinedev/core"]);let v=f(p,r.key);return r.accessor&&(v=`${f(p,r.key)}?.map((item: any) => ${f("item",void 0,r.accessor)})`),`
                const { data: ${A(r.key,"Data")}, isLoading: ${A(r.key,"IsLoading")} } =
                useMany({
                    resource: "${r.resource.name}",
                    ids: ${v} || [],
                    queryOptions: {
                        enabled: !!${p} && !!${v}?.length,
                    },
                    ${z(((k=r==null?void 0:r.resource)==null?void 0:k.identifier)??((E=r==null?void 0:r.resource)==null?void 0:E.name),c,"getMany")}
                });
                `}return l.push(["useOne","@refinedev/core"]),`
                const { data: ${A(r.key,"Data")}, isLoading: ${A(r.key,"IsLoading")} } =
                useOne({
                    resource: "${r.resource.name}",
                    id: ${f(p,r.key,r.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${p},
                    },
                    ${z(((N=r==null?void 0:r.resource)==null?void 0:N.identifier)??((n=r==null?void 0:r.resource)==null?void 0:n.name),c,"getOne")}
                });
            `}}).filter(Boolean),L=o(r=>{if(r.relation&&r.resource){let k=A(r.key,"Data"),E=A(r.key,"IsLoading");if(r.multiple){let N=f(p,r.key)+"?.length";return l.push(["TagField","@refinedev/chakra-ui"],["HStack","@chakra-ui/react"]),x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                {${E} && ${N} ? <>Loading...</> : (
                    <>
                    ${(()=>{var n;if(r.relationInfer)if((n=r.relationInfer)!=null&&n.accessor){if(Array.isArray(r.relationInfer.accessor))return"Not Handled.";{let v=A(r.key),R=f(v,void 0,r.relationInfer.accessor);return`{record?.${r.key}?.length ? <HStack spacing="12px">{${k}?.data?.map((${v}: any) => <TagField key={${R}} value={${R}} />)}</HStack> : <></>}`}}else return"Not Handled.";else return"not-handled - relation with multiple but no resource"})()}
                    </>
                )}
                `}return r.fieldable?x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <TextField value={${f(p,r.key,r.accessor)}} />
                `:x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                {${E} ? <>Loading...</> : (
                    <>
                    ${(()=>{var N;return r.relationInfer?(N=r.relationInfer)!=null&&N.accessor?Array.isArray(r.relationInfer.accessor)?`{${f(`${k}?.data`,void 0,r.relationInfer.accessor,' + " " + ')}}`:`{${k}?.data?.${r.relationInfer.accessor}}`:`{${k}?.data}`:`{${k}?.data?.id}`})()}
                    </>
                )}
                
                `}},"renderRelationFields"),S=o(r=>{if(r.type==="text"){if(l.push(["TagField","@refinedev/chakra-ui"],["TextField","@refinedev/chakra-ui"],["HStack","@chakra-ui/react"]),r.multiple){let k=f("item",void 0,r.accessor);return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <HStack spacing="12px">
                {${f(p,r.key)}?.map((item: any) => (
                    <TagField value={${k}} key={${k}} />
                ))}
                </HStack>
            `}return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <TextField value={${f(p,r.key,r.accessor)}} />
            `}},"textFields"),h=o(r=>{if(r.type==="image"){if(l.push(["Image","@chakra-ui/react"]),r.multiple){let k=f("item",void 0,r.accessor);return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                {${f(p,r.key)}?.map((item: any) => (
                    <Image sx={{ maxWidth: 200 }} src={${k}} key={${k}} />
                ))}
            `}return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <Image sx={{ maxWidth: 200 }} src={${f(p,r.key,r.accessor," + ")}} />
                `}},"imageFields"),w=o(r=>{if(r.type==="email"){if(l.push(["TagField","@refinedev/chakra-ui"],["EmailField","@refinedev/chakra-ui"],["HStack","@chakra-ui/react"]),r.multiple){let k=f("item",void 0,r.accessor);return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <HStack spacing="12px">
                {${f(p,r.key)}?.map((item: any) => (
                    <TagField value={${k}} key={${k}} />
                ))}
                </HStack>
            `}return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <EmailField value={${f(p,r.key,r.accessor," + ")}} />
            `}},"emailFields"),m=o(r=>{if(r.type==="url"){if(l.push(["TagField","@refinedev/chakra-ui"],["UrlField","@refinedev/chakra-ui"],["HStack","@chakra-ui/react"]),r.multiple){let k=f("item",void 0,r.accessor);return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <HStack spacing="12px">
                {${f(p,r.key)}?.map((item: any) => (
                    <TagField value={${k}} key={${k}} />
                ))}
                </HStack>
            `}return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <UrlField value={${f(p,r.key,r.accessor," + ")}} />
            `}},"urlFields"),d=o(r=>{if(r.type==="boolean"){if(l.push(["TagField","@refinedev/chakra-ui"],["BooleanField","@refinedev/chakra-ui"],["HStack","@chakra-ui/react"]),r.multiple){let k=f("item",void 0,r.accessor);return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <HStack spacing="12px">
                {${f(p,r.key)}?.map((item: any) => (
                    <TagField value={${k}} key={${k}} />
                ))}
                </HStack>
            `}return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <BooleanField value={${f(p,r.key,r.accessor," && ")}} />
            `}},"booleanFields"),s=o(r=>{if(r.type==="date"){if(l.push(["DateField","@refinedev/chakra-ui"]),r.multiple){let k=f("item",void 0,r.accessor);return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                {${f(p,r.key)}?.map((item: any) => (
                    <DateField value={${k}} key={${k}} />
                ))}
            `}return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <DateField value={${f(p,r.key,r.accessor," + ' ' + ")}} />
            `}},"dateFields"),b=o(r=>{if(r.type==="richtext")return l.push(["MarkdownField","@refinedev/chakra-ui"]),x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <MarkdownField value={${f(p,r.key,r.accessor,' + " " + ')}} />
            `},"richtextFields"),H=o(r=>{if(r.type==="number"){if(l.push(["NumberField","@refinedev/chakra-ui"],["TagField","@refinedev/chakra-ui"],["HStack","@chakra-ui/react"]),r.multiple){let k=f("item",void 0,r.accessor);return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <HStack spacing="12px">
                {${f(p,r.key)}?.map((item: any) => (
                    <TagField value={${k}} key={${k}} />
                ))}
                </HStack>
            `}return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <NumberField value={${f(p,r.key,r.accessor,' + " " + ')} ?? ""} />
            `}},"numberFields"),T=o(r=>{if(r)return x`
                ${r}
            `},"wrapper"),U=t.map(r=>{switch(r==null?void 0:r.type){case"text":return T(S(r));case"number":return T(H(r));case"richtext":return T(b(r));case"email":return T(w(r));case"image":return T(h(r));case"date":return T(s(r));case"boolean":return T(d(r));case"url":return T(m(r));case"relation":return T(L(r));default:return}});pe(l);let W=u&&"const translate = useTranslate();";return x`
    ${ue(l)}
    
    export const ${y}: React.FC<IResourceComponentsProps> = () => {
        ${W}
        const { queryResult } = useShow(${i?`{ 
                    resource: "${e.name}", 
                    id: ${Ee(a)},
                    ${z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")}
                }`:z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")?`{ ${z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")} }`:""});
        const { data, isLoading } = queryResult;

        const ${p} = data?.data;
    
        ${I}

        return (
            <Show isLoading={isLoading}>
                ${U.join("")}
            </Show>
        );
    };
    `},"renderer"),ze=ge({type:"show",additionalScope:[["@refinedev/chakra-ui","RefineChakraUI",{Show:q.Show,TagField:q.TagField,TextField:q.TextField,EmailField:q.EmailField,UrlField:q.UrlField,BooleanField:q.BooleanField,DateField:q.DateField,MarkdownField:q.MarkdownField,NumberField:q.NumberField}],["@chakra-ui/react","ChakraUI",{Heading:Ce.Heading,HStack:Ce.HStack,Image:Ce.Image}]],codeViewerComponent:de,loadingComponent:ke,errorComponent:he,renderer:mr});var j=require("@refinedev/chakra-ui"),M=require("@chakra-ui/react"),Jr=require("@refinedev/react-table"),Xr=require("@tanstack/react-table"),je=require("@tabler/icons");var Ie=o(e=>Array.isArray(e.accessor)||e.multiple?`accessorKey: "${e.key}"`:e.accessor?`accessorKey: "${G(e.key,void 0,e.accessor)}"`:`accessorKey: "${e.key}"`,"getAccessorKey"),lr=o(({resource:e,fields:t,meta:c,isCustomPage:i,i18n:a})=>{let u=ae(e.label??e.name,"list"),y="tableData?.data",p=[["IResourceComponentsProps","@refinedev/core"],["useTable","@refinedev/react-table"],["ColumnDef","@tanstack/react-table"],["flexRender","@tanstack/react-table"],["List","@refinedev/chakra-ui"],["TableContainer","@chakra-ui/react"],["Table","@chakra-ui/react"],["Thead","@chakra-ui/react"],["Tr","@chakra-ui/react"],["Th","@chakra-ui/react"],["Tbody","@chakra-ui/react"],["Td","@chakra-ui/react"],["HStack","@chakra-ui/react"],["Button","@chakra-ui/react"],["IconButton","@chakra-ui/react"],["usePagination","@refinedev/chakra-ui"],["Box","@chakra-ui/react"],["IconChevronRight","@tabler/icons"],["IconChevronLeft","@tabler/icons"]];a&&p.push(["useTranslate","@refinedev/core"]);let l=t.filter(n=>(n==null?void 0:n.relation)&&!(n!=null&&n.fieldable)&&(n==null?void 0:n.resource)),$=l.filter(Boolean).map(n=>{var v,R;if(n!=null&&n.relation&&!n.fieldable&&n.resource){p.push(["GetManyResponse","@refinedev/core"]),p.push(["useMany","@refinedev/core"]);let P="";return n.multiple?P=`[].concat(...(${y}?.map((item) => ${f("item",n.key,n.accessor,!1)}) ?? []))`:P=`${y}?.map((item) => ${f("item",n.key,n.accessor,!1)}) ?? []`,`
                const { data: ${A(n.key,"Data")} } =
                useMany({
                    resource: "${n.resource.name}",
                    ids: ${P},
                    queryOptions: {
                        enabled: !!${y},
                    },
                    ${z(((v=n==null?void 0:n.resource)==null?void 0:v.identifier)??((R=n==null?void 0:n.resource)==null?void 0:R.name),c,"getMany")}
                });
                `}}).filter(Boolean),I=l==null?void 0:l.map(n=>{if(n&&n.resource)return A(n.key,"Data")}).filter(Boolean),L=o(n=>{var v;if(n.relation&&n.resource){let R=`${A(n.key,"Data")}?.data`;if(Array.isArray(n.accessor))return;let P=`id: "${n.key}"`,C=`header: ${F({resource:e,field:n,i18n:a,noBraces:!0})}`,D=Ie(n),xe="";if(n.multiple){p.push(["TagField","@refinedev/chakra-ui"]);let Se="item";n!=null&&n.relationInfer&&(Se=f("item",void 0,n.relationInfer.accessor)),xe=`cell: function render({ getValue, table }) {
                    const meta = table.options.meta as {
                        ${A(n.key,"Data")}: GetManyResponse;
                    };

                    const ${A(n.key,"")} = getValue<any[]>()?.map((item) => {
                        return meta.${A(n.key,"Data")}?.data?.find(
                            (resourceItems) => resourceItems.id === ${f("item",void 0,n.accessor)}
                        );
                    })


                    return (
                        <HStack>
                            {${A(n.key,"")}?.map((item, index) => (
                                <TagField key={index} value={${Se}} />
                            ))}
                        </HStack>
                    )
                }
            `}else n!=null&&n.relationInfer?xe=`cell: function render({ getValue, table }) {
                        const meta = table.options.meta as {
                            ${A(n.key,"Data")}: GetManyResponse;
                        };

                        const ${A(n.key,"")} = meta.${R}?.find(
                            (item) => item.id == getValue<any>(),
                        );

                        return ${f(A(n.key),void 0,(v=n==null?void 0:n.relationInfer)==null?void 0:v.accessor)} ?? "Loading...";
                    },`:xe="";return`
                {
                    ${P},
                    ${C},
                    ${D},
                    ${xe}
                }
            `}},"renderRelationFields"),S=o(n=>{if(n.type==="image"){p.push(["Image","@chakra-ui/react"]);let v=`id: "${n.key}"`,R=Ie(n),P=`header: ${F({resource:e,field:n,i18n:a,noBraces:!0})}`,C=x`
                cell: function render({ getValue }) {
                    ${n!=null&&n.accessor?"try {":""}
                        return <Image sx={{ maxWidth: "100px" }} src={${f("getValue<any>()",void 0,Array.isArray(n.accessor)?n.accessor:void 0," + ")}} />
                    ${n!=null&&n.accessor?" } catch (error) { return null; }":""}
                }
            `;if(n.multiple){let D=f("item",void 0,n.accessor," + ");C=`
                    cell: function render({ getValue }) {
                        ${n!=null&&n.accessor?"try {":""}
                            return (
                                <HStack>
                                    {getValue<any[]>()?.map((item, index) => (
                                        <Image src={${D}} key={index} sx={{ height: "50px", maxWidth: "100px" }} />
                                    ))}
                                </HStack>
                            )
                        ${n!=null&&n.accessor?" } catch (error) { return null; }":""}
                    }
                `}return`
                {
                    ${v},
                    ${R},
                    ${P},
                    ${C}
                }
            `}},"imageFields"),h=o(n=>{if(n.type==="email"){p.push(["EmailField","@refinedev/chakra-ui"]);let v=`id: "${n.key}"`,R=Ie(n),P=`header: ${F({resource:e,field:n,i18n:a,noBraces:!0})}`,C=x`
                cell: function render({ getValue }) {
                    return <EmailField value={${f("getValue<any>()",void 0,Array.isArray(n.accessor)?n.accessor:void 0,' + " " + ')}} />
                }
            `;return n.multiple&&(p.push(["TagField","@refinedev/chakra-ui"]),C=`
                    cell: function render({ getValue }) {
                        return (
                            <HStack>
                                {getValue<any[]>()?.map((item, index) => (
                                    <TagField value={${f("item",void 0,n.accessor," + ")}} key={index} />
                                ))}
                            </HStack>
                        )
                    }
                `),`
                {
                    ${v},
                    ${R},
                    ${P},
                    ${C}
                }
            `}},"emailFields"),w=o(n=>{if(n.type==="url"){p.push(["UrlField","@refinedev/chakra-ui"]);let v=`id: "${n.key}"`,R=Ie(n),P=`header: ${F({resource:e,field:n,i18n:a,noBraces:!0})}`,C=x`
                cell: function render({ getValue }) {
                    return <UrlField value={${f("getValue<any>()",void 0,Array.isArray(n.accessor)?n.accessor:void 0," + ")}} />
                }
            `;return n.multiple&&(p.push(["TagField","@refinedev/chakra-ui"]),C=`
                    cell: function render({ getValue }) {
                        return (
                            <HStack>
                                {getValue<any[]>()?.map((item, index) => (
                                    <TagField value={${f("item",void 0,n.accessor," + ")}} key={index} />
                                ))}
                            </HStack>
                        )
                    }
                `),`
                {
                    ${v},
                    ${R},
                    ${P},
                    ${C}
                }
            `}},"urlFields"),m=o(n=>{if((n==null?void 0:n.type)==="boolean"){p.push(["BooleanField","@refinedev/chakra-ui"]);let v=`id: "${n.key}"`,R=Ie(n),P=`header: ${F({resource:e,field:n,i18n:a,noBraces:!0})}`,C=x`
                cell: function render({ getValue }) {
                    return <BooleanField value={${f("getValue<any>()",void 0,Array.isArray(n.accessor)?n.accessor:void 0," + ")}} />
                }
            `;return n.multiple&&(C=`
                    cell: function render({ getValue }) {
                        return (
                            <HStack>
                                {getValue<any[]>()?.map((item, index) => (
                                    <BooleanField value={${f("item",void 0,n.accessor," + ")}} key={index} />
                                ))}
                            </HStack>
                        )
                    }
                `),`
                {
                    ${v},
                    ${R},
                    ${P},
                    ${C}
                }
            `}},"booleanFields"),d=o(n=>{if(n.type==="date"){p.push(["DateField","@refinedev/chakra-ui"]);let v=`id: "${n.key}"`,R=Ie(n),P=`header: ${F({resource:e,field:n,i18n:a,noBraces:!0})}`,C=x`
                cell: function render({ getValue }) {
                    return <DateField value={${f("getValue<any>()",void 0,Array.isArray(n.accessor)?n.accessor:void 0,' + " " + ')}} />
                }
            `;return n.multiple&&(C=`
                    cell: function render({ getValue }) {
                        return (
                            <HStack>
                                {getValue<any[]>()?.map((item, index) => (
                                    <DateField value={${f("item",void 0,n.accessor," + ")}} key={index} />
                                ))}
                            </HStack>
                        )
                    }
                `),`
                {
                    ${v},
                    ${R},
                    ${P},
                    ${C}
                }
            `}},"dateFields"),s=o(n=>{if((n==null?void 0:n.type)==="richtext"){p.push(["MarkdownField","@refinedev/chakra-ui"]);let v=`id: "${n.key}"`,R=Ie(n),P=`header: ${F({resource:e,field:n,i18n:a,noBraces:!0})}`,C=x`
                cell: function render({ getValue }) {
                    return <MarkdownField value={(${f("getValue<string>()",void 0,Array.isArray(n.accessor)?n.accessor:void 0)})?.slice(0, 80) + "..." } />
                }
            `;return n.multiple&&(C=`
                    cell: function render({ getValue }) {
                        return (
                            <HStack>
                                {getValue<string[]>()?.map((item, index) => (
                                    <MarkdownField value={${f("item",void 0,n.accessor," + ")}} key={index} />
                                ))}
                            </HStack>
                        )
                    }
                `),`
                {
                    ${v},
                    ${R},
                    ${P},
                    ${C}
                }
            `}},"richtextFields"),b=o(n=>{if(n&&(n.type==="text"||n.type==="number")){let v=`id: "${n.key}"`,R=Ie(n),P=`header: ${F({resource:e,field:n,i18n:a,noBraces:!0})}`,C="";return n.multiple&&(p.push(["TagField","@refinedev/chakra-ui"]),C=`
                    cell: function render({ getValue }) {
                        return (
                            <HStack>
                                {getValue<any[]>()?.map((item, index) => (
                                    <TagField value={${f("item",void 0,n.accessor,' + " " + ')}} key={index} />
                                ))}
                            </HStack>
                        )
                    }
                `),!n.multiple&&Array.isArray(n.accessor)&&(C=`
                    cell: function render({ getValue }) {
                        return (
                            <>{${f("getValue<any>()",n.key,n.accessor)}}</>
                        );
                    }
                `),`
                {
                    ${v},
                    ${R},
                    ${P},
                    ${C}
                }
            `}},"basicFields"),{canEdit:H,canShow:T,canDelete:U,meta:W}=e??{},r=U||(W==null?void 0:W.canDelete);H&&p.push(["EditButton","@refinedev/chakra-ui"]),T&&p.push(["ShowButton","@refinedev/chakra-ui"]),r&&p.push(["DeleteButton","@refinedev/chakra-ui"]);let k=H||T||r?x`
    {
        id: "actions",
        accessorKey: "id",
        header: "Actions",
        cell: function render({ getValue }) {
            return (
                <HStack>
                ${T?x`
                    <ShowButton
                        hideText
                        recordItemId={getValue() as string}
                    />
                    `:""}
                    ${H?x`
                    <EditButton
                        hideText
                        recordItemId={getValue() as string}
                    />
                    `:""}
                    ${r?x`
                    <DeleteButton
                        hideText
                        recordItemId={getValue() as string}
                    />
                    `:""}
                </HStack>
            );
        },
    },
        `:"",E=t.map(n=>{switch(n==null?void 0:n.type){case"text":case"number":return b(n);case"richtext":return s(n);case"email":return h(n);case"image":return S(n);case"date":return d(n);case"boolean":return m(n);case"url":return w(n);case"relation":return L(n);default:return}});pe(p);let N=a&&"const translate = useTranslate();";return x`
    import React from "react";
    ${ue(p)}
    
    export const ${u}: React.FC<IResourceComponentsProps> = () => {
        ${N}
        const columns = React.useMemo<ColumnDef<any>[]>(() => [
            ${[...E,k].filter(Boolean).join(",")}
        ], [${a?"translate":""}]);

        const {
            getHeaderGroups,
            getRowModel,
            setOptions,
            refineCore: {
                setCurrent,
                pageCount,
                current,
                tableQueryResult: { data: tableData },
            },
        } = useTable({
            columns,
            ${i?`
            refineCoreProps: {
                resource: "${e.name}",
                ${z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getList")}
            }
            `:z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getList")?`refineCoreProps: { ${z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getList")} },`:""}
            
        });

        ${$}

        setOptions((prev) => ({
            ...prev,
            meta: {
                ...prev.meta,
                ${I.join(", ")}
            },
        }));

        return (
            <List>
                <TableContainer whiteSpace="pre-line">
                    <Table variant="simple">
                        <Thead>
                            {getHeaderGroups().map((headerGroup) => (
                                <Tr key={headerGroup.id}>
                                    {headerGroup.headers.map((header) => (
                                        <Th key={header.id}>
                                            {!header.isPlaceholder && (
                                                flexRender(
                                                    header.column.columnDef
                                                        .header,
                                                    header.getContext(),
                                                )
                                            )}
                                        </Th>
                                    ))}
                                </Tr>
                            ))}
                        </Thead>
                        <Tbody>
                            {getRowModel().rows.map((row) => (
                                <Tr key={row.id}>
                                    {row.getVisibleCells().map((cell) => (
                                        <Td key={cell.id}>
                                            {flexRender(
                                                cell.column.columnDef.cell,
                                                cell.getContext(),
                                            )}
                                        </Td>
                                    ))}
                                </Tr>
                            ))}
                        </Tbody>
                    </Table>
                </TableContainer>
                <Pagination
                    current={current}
                    pageCount={pageCount}
                    setCurrent={setCurrent}
                />
            </List>   
        );
    };

    type PaginationProps = {
        current: number;
        pageCount: number;
        setCurrent: (page: number) => void;
    };

    const Pagination: React.FC<PaginationProps> = ({
        current,
        pageCount,
        setCurrent,
    }) => {
        const pagination = usePagination({
            current,
            pageCount,
        });
    
        return (
            <Box display="flex" justifyContent="flex-end">
                <HStack my="3" spacing="1">
                    {pagination?.prev && (
                        <IconButton
                            aria-label="previous page"
                            onClick={() => setCurrent(current - 1)}
                            disabled={!pagination?.prev}
                            variant="outline"
                        >
                            <IconChevronLeft size="18" />
                        </IconButton>
                    )}
    
                    {pagination?.items.map((page) => {
                        if (typeof page === "string")
                            return <span key={page}>...</span>;
    
                        return (
                            <Button
                                key={page}
                                onClick={() => setCurrent(page)}
                                variant={page === current ? "solid" : "outline"}
                            >
                                {page}
                            </Button>
                        );
                    })}
                    {pagination?.next && (
                        <IconButton
                            aria-label="next page"
                            onClick={() => setCurrent(current + 1)}
                            variant="outline"
                        >
                            <IconChevronRight size="18" />
                        </IconButton>
                    )}
                </HStack>
            </Box>
        );
    };
    `},"renderer"),Ue=ge({type:"list",additionalScope:[["@refinedev/chakra-ui","RefineChakraUI",{List:j.List,usePagination:j.usePagination,TagField:j.TagField,EmailField:j.EmailField,UrlField:j.UrlField,BooleanField:j.BooleanField,DateField:j.DateField,MarkdownField:j.MarkdownField,EditButton:j.EditButton,ShowButton:j.ShowButton,DeleteButton:j.DeleteButton}],["@refinedev/react-table","RefineReactTable",{useTable:Jr.useTable}],["@tabler/icons","TablerIcons",{IconChevronRight:je.IconChevronRight,IconChevronLeft:je.IconChevronLeft}],["@chakra-ui/react","ChakraUI",{TableContainer:M.TableContainer,Table:M.Table,Thead:M.Thead,Tr:M.Tr,Th:M.Th,Tbody:M.Tbody,Td:M.Td,HStack:M.HStack,Button:M.Button,IconButton:M.IconButton,Box:M.Box,Image:M.Image}],["@tanstack/react-table","TanstackReactTable",{flexRender:Xr.flexRender}]],codeViewerComponent:de,loadingComponent:ke,errorComponent:he,renderer:lr});var et=require("@refinedev/chakra-ui"),ne=require("@chakra-ui/react"),rt=require("@refinedev/react-hook-form");var dr=o(({resource:e,fields:t,meta:c,isCustomPage:i,i18n:a})=>{let u=ae(e.label??e.name,"create"),y=[["IResourceComponentsProps","@refinedev/core"],["Create","@refinedev/chakra-ui"],["FormControl","@chakra-ui/react"],["FormLabel","@chakra-ui/react"],["FormErrorMessage","@chakra-ui/react"],["useForm","@refinedev/react-hook-form"]];a&&y.push(["useTranslate","@refinedev/core"]);let l=t.filter(m=>(m==null?void 0:m.relation)&&!(m!=null&&m.fieldable)&&(m==null?void 0:m.resource)).filter(Boolean).map(m=>{var d,s;if(m!=null&&m.relation&&!m.fieldable&&m.resource)return y.push(["useSelect","@refinedev/core"]),`
                const { options: ${A(m.key,"Options")} } =
                useSelect({
                    resource: "${m.resource.name}",
                    ${Le(m)}
                    ${z(((d=m==null?void 0:m.resource)==null?void 0:d.identifier)??((s=m==null?void 0:m.resource)==null?void 0:s.name),c,"getList")}
                });
            `}).filter(Boolean),$=o(m=>{if(m.relation&&m.resource){y.push(["useSelect","@refinedev/core"]),y.push(["Select","@chakra-ui/react"]);let d=A(m.key,"Options");return x`
            <FormControl mb="3" isInvalid={!!errors?.${G(m.key,void 0)}}>
                <FormLabel>${F({resource:e,field:m,i18n:a,noQuotes:!0})}</FormLabel>
                <Select
                    placeholder="Select ${J(m.resource.name)}"
                    {...register("${G(m.key,void 0,m.accessor)}", {
                        required: "This field is required",
                    })}
                >
                    {${d}?.map((option) => (
                        <option value={option.value} key={option.value}>
                            {option.label}
                        </option>
                    ))}
                </Select>
                <FormErrorMessage>
                    {${f("(errors as any)",m.key,m.accessor,!1)}?.message as string}
                </FormErrorMessage>
            </FormControl>
            `}},"renderRelationFields"),I=o(m=>{if(m.type==="text"||m.type==="url"||m.type==="email"||m.type==="number"||m.type==="date"||m.type==="richtext")return Pe(m.key)||(y.push(["Input","@chakra-ui/react"]),m.multiple)?void 0:x`
                <FormControl mb="3" isInvalid={!!${f("(errors as any)",m.key,m.accessor,!1)}}>
                    <FormLabel>${F({resource:e,field:m,i18n:a,noQuotes:!0})}</FormLabel>
                    <Input
                        ${m.type!=="date"&&m.type!=="richtext"?`type="${m.type}"`:""}
                        {...register("${G(m.key,void 0,m.accessor)}", {
                            required: "This field is required",
                            ${m.type==="number"?"valueAsNumber: true,":""}
                        })}
                    />
                    <FormErrorMessage>
                        {${f("(errors as any)",m.key,m.accessor,!1)}?.message as string}
                    </FormErrorMessage>
                </FormControl>
            `},"basicInputFields"),L=o(m=>{if(m.type==="boolean")return y.push(["Checkbox","@chakra-ui/react"]),m.multiple?void 0:x`
                <FormControl mb="3" isInvalid={!!${f("errors",m.key,m.accessor,!1)}}>
                    <FormLabel>${F({resource:e,field:m,i18n:a,noQuotes:!0})}</FormLabel>
                    <Checkbox
                        {...register("${G(m.key,void 0,m.accessor)}", {
                            required: "This field is required",
                        })}
                    />
                    <FormErrorMessage>
                        {${f("errors",m.key,m.accessor,!1)}?.message as string}
                    </FormErrorMessage>
                </FormControl>
               
            `},"booleanFields"),S=o(m=>{if(m.type==="date")return`
                {/* 
                    DatePicker component is not included in "@refinedev/chakra-ui" package.
                    To use a <DatePicker> component, you can examine the following links:
                    
                    - https://github.com/aboveyunhai/chakra-dayzed-datepicker
                    - https://github.com/wojtekmaj/react-date-picker
                */}
                ${I(m)??""}
                `},"dateFields"),h=t.map(m=>{switch(m==null?void 0:m.type){case"text":case"number":case"email":case"url":case"richtext":return I(m);case"date":return S(m);case"boolean":return L(m);case"relation":return $(m);default:return}});pe(y);let w=a&&"const translate = useTranslate();";return x`
    ${ue(y)}
    
    export const ${u}: React.FC<IResourceComponentsProps> = () => {
        ${w}
        const {
            refineCore: { formLoading },
            saveButtonProps,
            register,
            formState: { errors },
        } = useForm(
            ${i?`
            { 
                refineCoreProps: {
                    resource: "${e.name}",
                    action: "create",
                    ${z(e.identifier??e.name,c,"getOne")}
                }
            }`:z(e.identifier??e.name,c,"getOne")?`{
                        refineCoreProps: { ${z(e.identifier??e.name,c,"getOne")} }
                        }`:""}
        );
    
        ${l}

        return (
            <Create isLoading={formLoading} saveButtonProps={saveButtonProps}>
                ${h.join("")}
            </Create>
        );
    };
    `},"renderer"),Ke=ge({type:"create",additionalScope:[["@refinedev/chakra-ui","RefineChakraUI",{Create:et.Create}],["@refinedev/react-hook-form","RefineReactHookForm",{useForm:rt.useForm}],["@chakra-ui/react","ChakraUI",{FormControl:ne.FormControl,FormLabel:ne.FormLabel,FormErrorMessage:ne.FormErrorMessage,Select:ne.Select,Input:ne.Input,Checkbox:ne.Checkbox}]],codeViewerComponent:de,loadingComponent:ke,errorComponent:he,renderer:dr});var tt=require("@refinedev/chakra-ui"),oe=require("@chakra-ui/react"),nt=require("@refinedev/react-hook-form");var fr=o(({resource:e,fields:t,meta:c,isCustomPage:i,id:a,i18n:u})=>{let y=ae(e.label??e.name,"edit"),p=A(e.label??e.name,"Data"),l=[["React","react",!0],["IResourceComponentsProps","@refinedev/core"],["Edit","@refinedev/chakra-ui"],["FormControl","@chakra-ui/react"],["FormLabel","@chakra-ui/react"],["FormErrorMessage","@chakra-ui/react"],["useForm","@refinedev/react-hook-form"]];u&&l.push(["useTranslate","@refinedev/core"]);let I=t.filter(s=>(s==null?void 0:s.relation)&&!(s!=null&&s.fieldable)&&(s==null?void 0:s.resource)).filter(Boolean).map(s=>{var b,H;if(s!=null&&s.relation&&!s.fieldable&&s.resource){l.push(["useSelect","@refinedev/core"]);let T=f(p,s.key,s.accessor,!1);return s.multiple&&s.accessor&&(T=`${f(p,s.key)}?.map((item: any) => ${f("item",void 0,s.accessor)})`),`
                const { options: ${A(s.key,"Options")} } =
                useSelect({
                    resource: "${s.resource.name}",
                    defaultValue: ${T},
                    ${Le(s)}
                    ${z(((b=s==null?void 0:s.resource)==null?void 0:b.identifier)??((H=s==null?void 0:s.resource)==null?void 0:H.name),c,"getList")}
                });

                React.useEffect(() => {
                    setValue("${G(s.key,void 0,s.accessor)}", ${p}?.${s.key}?.id);
                }, [${A(s.key,"Options")}]);
            `}}).filter(Boolean),L=o(s=>{if(s.relation&&s.resource){l.push(["useSelect","@refinedev/core"]),l.push(["Select","@chakra-ui/react"]);let b=A(s.key,"Options");return x`
            <FormControl mb="3" isInvalid={!!errors?.${G(s.key,void 0)}}>
                <FormLabel>${F({resource:e,field:s,i18n:u,noQuotes:!0})}</FormLabel>
                <Select
                    placeholder="Select ${J(s.resource.name)}"
                    {...register("${G(s.key,void 0,s.accessor)}", {
                        required: "This field is required",
                    })}
                >
                    {${b}?.map((option) => (
                        <option value={option.value} key={option.value}>
                            {option.label}
                        </option>
                    ))}
                </Select>
                <FormErrorMessage>
                    {${f("(errors as any)",s.key,s.accessor,!1)}?.message as string}
                </FormErrorMessage>
            </FormControl>
            `}},"renderRelationFields"),S=o(s=>{if(s.type==="text"||s.type==="url"||s.type==="email"||s.type==="number"||s.type==="date"||s.type==="richtext"){if(l.push(["Input","@chakra-ui/react"]),s.multiple){let b=G(s.key,"${index}",s.accessor),H=f(f("(errors as any)",s.key,void 0,!1)+"?.[index]",void 0,s.accessor);return`
                    <>
                        {${f(p,s.key)}?.map((item: any, index: number) => (
                            <FormControl key={index} mb="3" isInvalid={!!${H}}>
                                <FormLabel>${F({resource:e,field:s,i18n:u,noQuotes:!0})}</FormLabel>
                                <Input
                                    {...register(\`${b}\`, {
                                        required: "This field is required",
                                        ${s.type==="number"?"valueAsNumber: true,":""}
                                    })}
                                />
                                <FormErrorMessage>
                                    {${f(H,"message")} as string}
                                </FormErrorMessage>
                            </FormControl>
                        ))}
                    </>
                `}return x`
                <FormControl mb="3" isInvalid={!!${f("(errors as any)",s.key,s.accessor,!1)}}>
                    <FormLabel>${F({resource:e,field:s,i18n:u,noQuotes:!0})}</FormLabel>
                    <Input
                        ${Pe(s.key)?"disabled":""}
                        ${s.type!=="date"&&s.type!=="richtext"?`type="${s.type}"`:""}
                        {...register("${G(s.key,void 0,s.accessor)}", {
                            required: "This field is required",
                            ${s.type==="number"?"valueAsNumber: true,":""}
                        })}
                    />
                    <FormErrorMessage>
                        {${f("(errors as any)",s.key,s.accessor,!1)}?.message as string}
                    </FormErrorMessage>
                </FormControl>
            `}},"basicInputFields"),h=o(s=>{if(s.type==="boolean"){if(l.push(["Checkbox","@chakra-ui/react"]),s.multiple){let b=G(s.key,void 0,s.accessor),H=f("(errors as any)",s.key,void 0,!1)+"?.[index]";return`
                    <>
                        {${f(p,s.key)}?.map((item: any, index: number) => (
                            <FormControl key={index} mb="3" isInvalid={!!${H}}>
                                <FormLabel>${F({resource:e,field:s,i18n:u,noQuotes:!0})}</FormLabel>
                                <Checkbox
                                    {...register(\`${b}.\${index}\`, {
                                        required: "This field is required",
                                    })}
                                />
                                <FormErrorMessage>
                                    {${H}?.message as string}
                                </FormErrorMessage>
                            </FormControl>
                        ))}
                    </>
                `}return x`
                <FormControl mb="3" isInvalid={!!${f("errors",s.key,s.accessor,!1)}}>
                    <FormLabel>${F({resource:e,field:s,i18n:u,noQuotes:!0})}</FormLabel>
                    <Checkbox
                        {...register("${G(s.key,void 0,s.accessor)}", {
                            required: "This field is required",
                        })}
                    />
                    <FormErrorMessage>
                        {${f("errors",s.key,s.accessor,!1)}?.message as string}
                    </FormErrorMessage>
                </FormControl>
               
            `}},"booleanFields"),w=o(s=>{if(s.type==="date")return`
                {/* 
                    DatePicker component is not included in "@refinedev/chakra-ui" package.
                    To use a <DatePicker> component, you can examine the following links:
                    
                    - https://github.com/aboveyunhai/chakra-dayzed-datepicker
                    - https://github.com/wojtekmaj/react-date-picker
                */}
                ${S(s)}
                `},"dateFields"),m=t.map(s=>{switch(s==null?void 0:s.type){case"text":case"number":case"email":case"url":case"richtext":return S(s);case"date":return w(s);case"boolean":return h(s);case"relation":return L(s);default:return}});pe(l);let d=u&&"const translate = useTranslate();";return x`
    ${ue(l)}
    
    export const ${y}: React.FC<IResourceComponentsProps> = () => {
        ${d}
        const {
            refineCore: { formLoading, queryResult },
            saveButtonProps,
            register,
            setValue,
            formState: { errors },
        } = useForm(
            ${i?`
            { 
                refineCoreProps: {
                    resource: "${e.name}",
                    id: ${Ee(a)},
                    action: "edit",
                    ${z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")}
                }
            }`:z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")?`{ refineCoreProps: { ${z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")} }
                        }`:""}
        );
    
        const ${p} = queryResult?.data?.data;
    
        ${I}

        return (
            <Edit isLoading={formLoading} saveButtonProps={saveButtonProps}>
                ${m.join("")}
            </Edit>
        );
    };
    `},"renderer"),Qe=ge({type:"edit",additionalScope:[["@refinedev/chakra-ui","RefineChakraUI",{Edit:tt.Edit}],["@refinedev/react-hook-form","RefineReactHookForm",{useForm:nt.useForm}],["@chakra-ui/react","ChakraUI",{FormControl:oe.FormControl,FormLabel:oe.FormLabel,FormErrorMessage:oe.FormErrorMessage,Select:oe.Select,Input:oe.Input,Checkbox:oe.Checkbox}]],codeViewerComponent:de,loadingComponent:ke,errorComponent:he,renderer:fr});var Pt=o(({action:e,id:t,...c})=>{let{action:i,id:a}=(0,ot.useResource)();switch(e??i){case"show":return Me.default.createElement(ze,{...c,id:t??a});case"create":return Me.default.createElement(Ke,{...c,id:t??a});case"edit":return Me.default.createElement(Qe,{...c,id:t??a});default:return Me.default.createElement(Ue,{...c,id:t??a})}},"ChakraUIInferencer");
//# sourceMappingURL=chakra-ui.js.map