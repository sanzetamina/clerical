var xt=Object.create;var ke=Object.defineProperty;var vt=Object.getOwnPropertyDescriptor;var $t=Object.getOwnPropertyNames;var It=Object.getPrototypeOf,bt=Object.prototype.hasOwnProperty;var a=(e,t)=>ke(e,"name",{value:t,configurable:!0});var kt=(e,t)=>{for(var c in t)ke(e,c,{get:t[c],enumerable:!0})},lr=(e,t,c,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of $t(t))!bt.call(e,s)&&s!==c&&ke(e,s,{get:()=>t[s],enumerable:!(i=vt(t,s))||i.enumerable});return e};var F=(e,t,c)=>(c=e!=null?xt(It(e)):{},lr(t||!e||!e.__esModule?ke(c,"default",{value:e,enumerable:!0}):c,e)),Ct=e=>lr(ke({},"__esModule",{value:!0}),e);var Gt={};kt(Gt,{MuiCreateInferencer:()=>Ve,MuiCreateRenderer:()=>ur,MuiEditInferencer:()=>We,MuiEditRenderer:()=>pr,MuiInferencer:()=>jt,MuiListInferencer:()=>Be,MuiListRenderer:()=>cr,MuiShowInferencer:()=>Ee,MuiShowRenderer:()=>ir});module.exports=Ct(Gt);var Te=F(require("react")),yt=require("@refinedev/core");var q=require("@refinedev/mui"),Yr=F(require("@mui/material/Typography")),Jr=F(require("@mui/material/Stack"));var Z=F(require("react")),$e=require("@refinedev/core");var Ft=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,je=a((e,t)=>{let c=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"];Ft.test(e)&&c.unshift("url");let i=c.find(s=>s in t&&!!t[s]);if(i)return i==="firstName"&&"lastName"in t?["firstName","lastName"]:i},"getFieldableKeys");var mr=require("@refinedev/core");function Ge(e,t,c){if(t)return t;let i=c==null?void 0:c.find(u=>u.name===e),s=(0,mr.pickNotDeprecated)(i==null?void 0:i.meta,i==null?void 0:i.options);return s!=null&&s.dataProviderName?s.dataProviderName:"default"}a(Ge,"pickDataProvider");var Ce=a(e=>{var t;return(t=e==null?void 0:e.options)==null?void 0:t.dataProviderName},"dataProviderFromResource");var ze=a(e=>{let t=[...e].filter(Boolean).sort((c,i)=>(i.priority||0)-(c.priority||0))[0];return t||null},"pickInferredField");var dr=F(require("prettier/standalone")),fr=F(require("prettier/parser-typescript"));var _e=a(e=>{try{return dr.default.format(e,{parser:"typescript",plugins:[fr.default],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(t){return console.warn("Formatting error in inferencer",t),e}},"prettierFormat");var yr=a(e=>e.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`),"prettySpaces");var qe=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,gr=a((e,t)=>{let c=qe.test(e),i=typeof t=="string"||typeof t=="number",s=Array.isArray(t)&&t.every(u=>typeof u=="string"||typeof u=="number");return c&&i||c&&s?{key:e,relation:!0,multiple:!!s,type:"relation",priority:1}:!1},"relationInfer");var _=a(e=>e.replace(qe,""),"removeRelationSuffix");var xe=a(e=>_(e).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(g=>g.charAt(0).toUpperCase()+g.slice(1)).join(" "),"prettyString");var b=a(e=>{let{resource:t,field:c,i18n:i}=e;if(i){let u=`translate("${t.name}.fields.${c.key}")`;return e.noBraces?`${u}`:`{${u}}`}let s=xe(c.key);return e.noQuotes?s:`"${s}"`},"translatePrettyString");var Qe=F(require("pluralize"));var ae=a((e="")=>Qe.default.isSingular(e)?e:Qe.default.singular(e),"toSingular");var Ue=F(require("pluralize"));var se=a((e="")=>Ue.default.isPlural(e)?e:Ue.default.plural(e),"toPlural");var Ke=a(e=>e.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(s=>!s.trim().startsWith("export default")).join(`
`),"replaceExports");var hr=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,wt=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,At=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,Ze=a((e,t={})=>{let c=e.matchAll(hr),i=new Set;for(let s of c){let[,u,g,l,m]=s;if(m in t){let $=t[m];if(m==="react")continue;u&&i.add(`const { default: ${u} } = ${$};`),g&&i.add(`const${g.replace(At,"$1: $3$4")} = ${$};`),l&&i.add(`const ${l} = ${$};`)}}return yr(`
    ${Array.from(i).join(`
`)}
    ${e.replace(hr,"").replace(wt,"")}
    `)},"replaceImports");var Fe=F(require("pluralize"));var Ye=a((e,t)=>e?t.find(i=>{let s=_(e.key);return i.name===s||i.name===(Fe.default.isPlural(s)?s:Fe.default.plural(s))||i.name===(Fe.default.isSingular(s)?s:Fe.default.singular(s))}):void 0,"resourceFromInferred");var xr=F(require("pluralize"));var te=a((e,t,c="Inferred")=>{let i=e.replace(/[^a-zA-Z0-9]/g," "),s=xr.default.singular(i),g=xe(s).replace(/ /g,"")||c,l=t.charAt(0).toUpperCase()+t.slice(1);return/^[a-zA-Z]/.test(g)?`${g}${l}`:`${l}${g}`},"componentName");var Tt=a(e=>e?Array.isArray(e)?e.join(""):typeof e=="string"?e:typeof e=="object"||typeof e=="function"?e.toString():typeof e=="number"?String(e):typeof e=="boolean"&&e?"true":e:"","handleExpression"),k=a((e,...t)=>e.reduce((i,s,u)=>`${i}${s}${Tt(t[u])}`,"").trim(),"jsx");var Je=a((e,t)=>`
    ${e??""}
    
    render(typeof ${t} !== "undefined" ? <${t} /> : <></>);
    `,"prepareLiveCode");var Xe=a(e=>e==null?void 0:e.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,""),"removeHiddenCode");var St=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,er=a(e=>St.test(e),"shouldDotAccess");function rr(e,t,c){let i=`${e}`;return t&&(i+="?.",er(t)?i+=t:i+=`['${t}']`),c&&(i+="?.",er(c)?i+=c:i+=`['${c}']`),i}a(rr,"accessorSingle");function Pt(e,t,c){return(c??[]).map(s=>rr(e,t,s))}a(Pt,"accessorMultiple");var d=a((e,t,c,i=' + " " + ')=>Array.isArray(c)?i?Pt(e,t,c).join(i):rr(e,t,c[0]):rr(e,t,c),"accessor"),K=a((e,t,c)=>{let i=e;return t&&(i+=`.${t}`),c&&(Array.isArray(c)?i+=`.${c[0]}`:i+=`.${c}`),i},"dotAccessor");var ie=a(e=>{let t=e.reduce((i,[s,u,g])=>(i[u]||(i[u]=[]),i[u].includes(s)||(g?i[u].push([s,!0]):i[u].push(s)),i),{});return Object.entries(t).map(([i,s])=>{let u=s.find($=>Array.isArray($)&&$[1]),g=s.filter($=>typeof $=="string"),l=u?`${u[0]}`:"",m=g.length?`{ ${g.join(", ")} }`:"";return`import ${l}${l&&m?", ":""}${m} from "${i}";`})},"printImports");var Lt=/^id$/i,le=a(e=>Lt.test(e),"isIDKey");var ce=a(e=>{},"noOp");var W=a((e,t="")=>{if(Number.isInteger(Number(e)))return t.charAt(0).toLowerCase()+t.slice(1)+e;let i=e.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),s=xe(i).replace(/ /g,"");return`${s.charAt(0).toLowerCase()+s.slice(1)}${t.charAt(0).toUpperCase()+t.slice(1)}`},"getVariableName");var H=a((e,t,c)=>{if(t&&c&&e){let i=e?t[e]:{},s=(i==null?void 0:i[c])??(i==null?void 0:i.default);return s?`meta: ${JSON.stringify(s)},`:""}return""},"getMetaProps"),ne=a((e,t,c)=>{if(t&&c&&e){let i=e?t[e]:{},u=[...c,"default"].reduce((g,l)=>g??(i==null?void 0:i[l]),void 0);if(u)return u}},"pickMeta");var we=a(e=>e===void 0?e:typeof e=="string"?`"${e}"`:e,"idQuoteWrapper");var vr=a(e=>{let t=a((c,i,s,u=t,g)=>{let l=e.map($=>$(c,i,s,u,g));return ze(l)},"fieldInferencer");return t},"composeInferencers");var $r=a(e=>a((c,i,s,u,g,l)=>e.reduce((m,$)=>$(m,i,s,u,g,l),c),"fieldTransformer"),"composeTransformers");var Ir=a((e,t,c,i,s)=>{let u=Array.isArray(t),g=Array.isArray(t)&&t.every(l=>typeof l=="string"||typeof l=="number");if(u){if(!g){let m=i(e,t[0],c,i,s);return m?{...m,key:e,multiple:!0,priority:1}:!1}let l=i(e,t[0],c,i,s)||{type:"string"};return{key:e,multiple:!0,priority:1,type:l==null?void 0:l.type}}return!1},"arrayInfer");var br=a((e,t)=>typeof t=="boolean"?{key:e,type:"boolean"}:!1,"booleanInfer");var tr=F(require("dayjs"));var Nt=/(_at|_on|At|On|AT|ON)(\[\])?$/,Rt=["/",":","-","."],kr=a((e,t)=>{let c=Nt.test(e)&&(0,tr.default)(t).isValid(),i=typeof t=="string"&&(0,tr.default)(t).isValid();return typeof t=="string"&&Rt.some(u=>t.includes(u))&&(c||i)?{key:e,type:"date",priority:1}:!1},"dateInfer");var Mt=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,Cr=a((e,t)=>typeof t=="string"&&Mt.test(t)?{key:e,type:"email",priority:1}:!1,"emailInfer");var Et=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,Fr=a((e,t)=>typeof t=="string"&&Et.test(t)?{key:e,type:"image",priority:2}:!1,"imageInfer");var wr=a((e,t)=>typeof t>"u"||t===null?null:!1,"nullishInfer");var Ar=a((e,t)=>{let c=typeof t=="string"&&t.length>0,i=!isNaN(t);return c&&i||typeof t=="number"?{key:e,type:"number"}:!1},"numberInfer");var Tr=/id$/i,Sr=a((e,t,c,i,s)=>{let u=t!==null,g=!Array.isArray(t);if(u&&g&&typeof t=="object"){let m=Object.keys(t).length===1&&Tr.test(Object.keys(t)[0]),$=Object.keys(t).some(w=>Tr.test(w));if(m)return{key:e,type:"relation",relation:!0,accessor:"id",priority:1};let v=je(e,t);if((v?v.length>0:!1)&&v){let w=v&&Array.isArray(v)?v[0]:v,x=i(w,t[w],t,i,s);if(x){let S=Array.isArray(v)?v.map(p=>x.accessor?`${p}.${Array.isArray(x.accessor)?x.accessor[0]:x.accessor}`:p):x.accessor?Array.isArray(x.accessor)?`${v}.${x.accessor[0]}`:`${v}.${x.accessor}`:v;return(x==null?void 0:x.type)==="text"&&(s==="create"||s==="edit")&&$?{key:e,type:"relation",relation:!0,accessor:"id",priority:1}:{...x,fieldable:!0,key:e,accessor:S,priority:1}}}return{key:e,fieldable:!1,type:"object",priority:1}}return!1},"objectInfer");var Pr=a((e,t)=>typeof t=="string"&&t.length>100?{key:e,type:"richtext",priority:1}:!1,"richtextInfer");var Lr=a((e,t)=>typeof t=="string"?{key:e,type:"text"}:!1,"textInfer");var Bt=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,Nr=a((e,t)=>typeof t=="string"&&Bt.test(t)?{key:e,type:"url",priority:1}:!1,"urlInfer");var Rr=[Ir,br,kr,Cr,Fr,wr,Ar,Sr,gr,Pr,Lr,Nr];var Mr=a((e,t,c,i)=>e.map(u=>{if(!u.relation&&(u.type==="text"||u.type==="richtext"||u.type==="number")&&!u.canRelation){let g=/^[a-z0-9-]+$/,l=a(w=>g.test(`${w}`),"isValidUUID"),m=u.key.toLowerCase()!=="id";return!(!u.accessor||typeof u.accessor=="string")||!m?u:(u.multiple?i[u.key]:[i[u.key]]).every(w=>l(u.accessor?w[u.accessor]:w))?{...u,canRelation:!0}:u}return u}),"basicToRelation");var Dt=/(image|photo|avatar|cover|thumbnail|icon)/i,Er=a(e=>e.map(c=>c.type==="url"&&Dt.test(c.key)?{...c,type:"image"}:c),"imageByKey");var Br=a((e,t)=>e.map(i=>{let s=Ye(i,t);return s?{...i,relation:!0,type:"relation",resource:s}:i}),"relationByResource");var Dr=a((e,t,c,i,s,u)=>e.map(l=>{if(l.relation&&l.type==="relation"&&!l.resource){let m=l.accessor?i[l.key][l.accessor]:i[l.key],$=s(l.key,m,i,s,u);if($&&$.type!=="relation")return{...l,fieldable:!0,relation:!1,type:$.type,canRelation:!0}}return l}),"relationToFieldable");var Vr=[Er,Br,Dr,Mr];var re=F(require("react")),Vt=F(require("@refinedev/core")),Ne=require("@aliemir/react-live");var Or=[["react","React",re.default],["@refinedev/core","RefineCore",Vt]],nr=re.default.createContext({}),or=a(({fetchError:e,code:t,additionalScope:c,errorComponent:i})=>{let s=(t&&Ke(Ze(t,[...Or,...c??[]].reduce((l,[m,$,v,M])=>M?l:{...l,[m]:$},{}))))??"",u=re.default.useMemo(()=>({React:re.default,...re.default,...[...Or,...c??[]].reduce((l,[m,$,v])=>({...l,[$]:v}),{})}),[c]),g=re.default.useMemo(()=>a(()=>{let{error:m}=re.default.useContext(nr);return i?re.default.createElement(i,{error:m?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${m}</code>`:typeof e=="string"?e:e?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},"LiveErrorComponent"),[i,e]);return re.default.createElement(Ne.LiveProvider,{Context:nr,code:s,scope:u,noInline:!0},!e&&re.default.createElement(Ne.LivePreview,{Context:nr}),re.default.createElement(g,null))},"LiveComponent");var y=F(require("react")),Re=F(require("prism-react-renderer")),Hr=F(require("prism-react-renderer/themes/vsDark"));var me=a(({code:e,loading:t})=>{let c=y.default.useMemo(()=>_e(e??""),[e]),[i,s]=y.default.useState(!1),[u,g]=y.default.useState(!1),[l,m]=y.default.useState(!1),[$,v]=y.default.useState(!1),[M,w]=y.default.useState(!1);return y.default.useEffect(()=>{if(!t){let x=setTimeout(()=>{s(!0)},300);return()=>{clearTimeout(x)}}return()=>{}},[t]),y.default.useEffect(()=>{if(typeof window<"u"){let x=window.matchMedia("(max-width: 449px)");x.matches?m(!1):m(!0);let S=a(()=>{x.matches?m(!1):m(!0)},"handleResize");return window.addEventListener("resize",S),()=>{window.removeEventListener("resize",S)}}return()=>{}},[]),y.default.useEffect(()=>{if(typeof window<"u"){let x=window.matchMedia("(max-width: 1280px)");x.matches?v(!0):v(!1);let S=a(()=>{x.matches?v(!0):v(!1)},"handleResize");return window.addEventListener("resize",S),()=>{window.removeEventListener("resize",S)}}return()=>{}},[]),c&&!t?y.default.createElement(y.default.Fragment,null,l&&y.default.createElement("div",{className:"refine-inferencer--code-viewer",style:{position:"sticky",bottom:"24px",paddingTop:"24px",left:0,right:0,width:"100%",zIndex:10,display:"flex",justifyContent:"center",transition:"all 0.2s ease",opacity:i&&!u?1:0,transform:i&&!u?"translateY(0)":"translateY(100px)"}},y.default.createElement("div",{style:{width:"calc(100% - calc(64px * 2))",maxWidth:"1080px",padding:"20px",backgroundColor:"#1A1A1A",boxShadow:"0px 4px 16px -4px rgba(0, 0, 0, 0.5), 0px 8px 32px -8px rgba(0, 0, 0, 0.35)",borderRadius:"16px",display:"flex",alignItems:"center",justifyContent:"space-between",flexDirection:$?"column":"row",gap:"12px"}},y.default.createElement("div",{style:{display:"flex",alignItems:"flex-start",gap:"8px"}},y.default.createElement("div",null,y.default.createElement(Wt,null)),y.default.createElement("div",{style:{fontSize:"14px",lineHeight:"20px",color:"#ffffff"}},y.default.createElement("p",{style:{padding:0,margin:0}},"Most of the page code is auto-generated by the"," ",y.default.createElement("span",{style:{textDecoration:"underline"}},"Inferencer")," ","feature, based on your backend data structure."),y.default.createElement("p",{style:{padding:0,margin:0}},"While this is an excellent way to experiment with refine,"," ",y.default.createElement("span",{style:{fontWeight:600}},"it's not intended to be used on production.")))),y.default.createElement("div",null,y.default.createElement("button",{onPointerEnter:()=>w(!0),onPointerLeave:()=>w(!1),onClick:()=>g(!0),style:{appearance:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:M?"scale(1.025)":void 0,filter:M?"brightness(1.1)":void 0}},y.default.createElement(jr,{style:{flexShrink:0}}),y.default.createElement("span",null,"Show the auto-generated code"))))),y.default.createElement(Ot,{visible:u,onClose:()=>g(!1),code:c})):null},"SharedCodeViewer"),Ot=a(({visible:e,onClose:t,code:c=""})=>{let i=y.default.useRef(null),[s,u]=y.default.useState(!1),[g,l]=y.default.useState(!1),[m,$]=y.default.useState(!1),[v,M]=y.default.useState(!1);y.default.useEffect(()=>{if(typeof document<"u"){let f=a(o=>{i.current&&!i.current.contains(o.target)&&t()},"onOutsideClick");return document.addEventListener("pointerdown",f),()=>{document.removeEventListener("pointerdown",f)}}return()=>{}},[t]);let w=a(()=>{typeof navigator<"u"&&(navigator.clipboard.writeText(c),u(!0),setTimeout(()=>{u(!1)},1e3))},"onCopy"),x=y.default.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center"}},y.default.createElement("div",{style:{fontWeight:700,fontSize:"20px",lineHeight:"32px",color:"#0D0D0D"}},"Auto-generated code by Inferencer"),y.default.createElement("button",{onClick:t,onPointerEnter:()=>$(!0),onPointerLeave:()=>$(!1),style:{flexShrink:0,appearance:"none",border:"none",background:"none",padding:0,margin:0,outline:"none",borderRadius:"50px",width:"32px",height:"32px",cursor:"pointer",transition:"all 0.15s ease",transform:m?"scale(1.05)":void 0,filter:m?"brightness(0.8)":void 0}},y.default.createElement(Ht,null))),S=y.default.createElement("div",{style:{fontSize:"13px",borderRadius:"8px",flex:"1",overflow:"scroll",background:"#1E1E1E"}},y.default.createElement(Re.default,{...Re.defaultProps,theme:Hr.default,code:c,language:"tsx"},({className:f,style:o,tokens:I,getLineProps:T,getTokenProps:D})=>y.default.createElement("pre",{className:f,style:{...o,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},I.map((E,n)=>y.default.createElement("div",{key:n,...T({line:E,key:n})},E.map((h,B)=>y.default.createElement("span",{key:B,...D({token:h,key:B})})))))));return y.default.createElement("div",{className:"refine-inferencer--code-viewer-modal",style:{position:"fixed",top:0,left:0,right:0,bottom:0,zIndex:9999,backgroundColor:"rgba(0, 0, 0, 0.5)",transition:"all 0.2s ease",opacity:e?1:0,pointerEvents:e?"all":"none",display:"flex",justifyContent:"center",alignItems:"center"}},y.default.createElement("div",{ref:i,style:{transform:e?"scale(1) translateY(0px)":"scale(0) translateY(-200px)",transition:"all 0.25s cubic-bezier(.35,1.29,.81,1.08)",transitionDelay:"0.25",width:"calc(100% - calc(32px * 2))",height:"calc(100% - calc(32px * 2))",backgroundColor:"#fff",maxWidth:"640px",maxHeight:"720px",borderRadius:"8px",padding:"16px"}},y.default.createElement("div",{style:{display:"flex",flexDirection:"column",height:"100%",width:"100%",gap:"16px"}},x,S,y.default.createElement("div",{style:{display:"flex",justifyContent:"flex-start",alignItems:"flex-end",gap:"16px"}},y.default.createElement("button",{onPointerEnter:()=>l(!0),onPointerLeave:()=>l(!1),onClick:w,style:{appearance:"none",height:"40px",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",position:"relative",overflow:"hidden",transition:"filter 0.2s ease",transform:g?"scale(1.025)":"scale(1)",filter:g?"brightness(1.1)":void 0}},y.default.createElement(Wr,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),y.default.createElement("span",null,"Copy Generated Code"),y.default.createElement("div",{style:{position:"absolute",width:"100%",height:"100%",top:0,left:0,display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",transition:"all 0.2s ease",transform:s?"translateY(0)":"translateY(40px)"}},y.default.createElement(Wr,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),y.default.createElement("span",null,"Copied!"))),y.default.createElement("a",{onPointerEnter:()=>M(!0),onPointerLeave:()=>M(!1),href:"https://refine.dev/docs/packages/documentation/inferencer",target:"_blank",rel:"noreferrer",style:{appearance:"none",textDecoration:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"rgba(0, 128, 255, 0.1)",color:"#0080FF",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:v?"scale(1.025)":void 0,filter:v?"brightness(1.1)":void 0}},y.default.createElement(jr,{style:{flexShrink:0}}),y.default.createElement("span",null,"Learn more about inferencer"))))))},"CodeModal"),Wt=a(e=>y.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,fill:"none",...e},y.default.createElement("path",{fill:"#0080FF",fillRule:"evenodd",d:"M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10Zm0-15a1.25 1.25 0 1 0 0 2.5A1.25 1.25 0 0 0 10 5Zm0 10c.69 0 1.25-.56 1.25-1.25V10a1.25 1.25 0 1 0-2.5 0v3.75c0 .69.56 1.25 1.25 1.25Z",clipRule:"evenodd"})),"InfoIcon"),jr=a(e=>y.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:16,height:16,fill:"none",...e},y.default.createElement("path",{fill:"currentColor",d:"M5 2a1 1 0 0 1 0 2H4v8h8v-1a1 1 0 1 1 2 0v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h1Z"}),y.default.createElement("path",{fill:"currentColor",d:"M9 2a1 1 0 0 0 0 2h1.586L6.293 8.293a1 1 0 0 0 1.414 1.414L12 5.414V7a1 1 0 1 0 2 0V3a1 1 0 0 0-1-1H9Z"})),"OpenIcon"),Ht=a(e=>y.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:32,height:32,fill:"none",...e},y.default.createElement("path",{fill:"#A6A6A6",fillRule:"evenodd",d:"M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16Zm-2.586-21.414a2 2 0 1 0-2.828 2.828L13.172 16l-2.586 2.586a2 2 0 1 0 2.828 2.828L16 18.828l2.586 2.586a2 2 0 1 0 2.828-2.828L18.828 16l2.586-2.586a2 2 0 1 0-2.828-2.828L16 13.172l-2.586-2.586Z",clipRule:"evenodd"})),"CloseIcon"),Wr=a(e=>y.default.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,viewBox:"0 0 24 24",fill:"none",...e},y.default.createElement("path",{fill:"currentColor",fillRule:"evenodd",d:"M8 5a3 3 0 0 0 3 3h2a3 3 0 0 0 3-3h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h1Zm0 7a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2H9a1 1 0 0 1-1-1Zm1 3a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2H9Z",clipRule:"evenodd"}),y.default.createElement("path",{fill:"currentColor",d:"M13 4a1 1 0 1 1 0 2h-2a1 1 0 1 1 0-2h2Z"})),"ClipboardIcon");var de=F(require("react")),Me=require("@refinedev/core");var Gr=a((e,t,c,i)=>{let{resource:s,id:u,resources:g}=(0,Me.useResource)(t),l=c??u,m=(0,Me.useDataProvider)(),[$,v]=de.default.useState(void 0),[M,w]=de.default.useState(void 0),[x,S]=de.default.useState(void 0),[p,f]=de.default.useState(!0),[o,I]=de.default.useState(!1),T=de.default.useCallback(async D=>{var h;let E=Ce(s)??Ge(s==null?void 0:s.name,void 0,g),n=m(E);I(!0),v(void 0);try{if((e==="list"||e==="create")&&s){let B=await n.getList({resource:s==null?void 0:s.name,meta:ne((s==null?void 0:s.identifier)??(s==null?void 0:s.name),i,["getList"])}),L=(h=B.data)==null?void 0:h[0];L||v(`<p>No records/data found for resource "${s==null?void 0:s.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),w(L),S(B.data),setTimeout(()=>{I(!1)},500)}if((e==="edit"||e==="show")&&D&&s){let L=(await n.getOne({resource:s==null?void 0:s.name,id:D,meta:ne((s==null?void 0:s.identifier)??(s==null?void 0:s.name),i,["getOne"])})).data;L||v(`<p>No records/data found for resource "${s==null?void 0:s.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),w(L),setTimeout(()=>{I(!1)},500)}}catch(B){console.warn("An error occured while fetching the resource data. Please check the error message below:",B),v(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${s==null?void 0:s.name}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{I(!1)},500)}},[e,m,s,g]);return de.default.useEffect(()=>{f(!1),!o&&!M&&T(l)},[T,l]),{data:M,datas:x,loading:o,initial:p,error:$}},"useInferFetch");var ve=F(require("react")),zr=require("@refinedev/core");var ar=require("lodash");var _r=a(({record:e,fields:t,infer:c,meta:i})=>{let s=(0,zr.useDataProvider)(),[u,g]=ve.default.useState([]),[l,m]=ve.default.useState(!0),[$,v]=ve.default.useState(!1),M=ve.default.useCallback(async w=>{console.groupCollapsed("@refinedev/inferencer is trying to detect relations");let x=[];v(!0);try{let S=w.map(async f=>{var o,I,T,D,E;if(f&&(f.relation||f.canRelation)&&e){if(f.relationInfer)return f;let n=Ce(f.resource),h=s(n),B=f.multiple,L=Array.isArray(f.accessor)?void 0:f.multiple?e[f.key].map(G=>f.accessor?(0,ar.get)(G,f.accessor):G)[0]:f.accessor?(0,ar.get)(e[f.key],f.accessor):e[f.key];if(L&&f.resource)try{let G={};if(B&&h.getMany){let{data:r}=await h.getMany({resource:f.resource.name,ids:[L],meta:ne(((o=f.resource)==null?void 0:o.identifier)??((I=f.resource)==null?void 0:I.name),i,["getMany"])});G=r==null?void 0:r[0]}else{let{data:r}=await h.getOne({resource:f.resource.name,id:L,meta:ne(((T=f.resource)==null?void 0:T.identifier)??((D=f.resource)==null?void 0:D.name),i,B?["getMany","getOne"]:["getOne"])});G=r}x.push({status:"success",resource:f.resource.name,field:f.key});let Q=c("__",G,{},c);return{...f,relationInfer:Q}}catch{return x.push({status:"error",resource:f.resource.name,field:f.key}),{...f,relationInfer:null}}if(L){let G,Q;try{let R={};if(B&&h.getMany){let{data:A}=await((E=h.getMany)==null?void 0:E.call(h,{resource:se(_(f.key)),ids:[L],meta:ne(se(_(f.key)),i,["getMany"])}));R=A==null?void 0:A[0]}else{let{data:A}=await h.getOne({resource:se(_(f.key)),id:L,meta:ne(se(_(f.key)),i,B?["getMany","getOne"]:["getOne"])});R=A}x.push({status:"success",resource:se(_(f.key)),field:f.key}),G=R,Q=!0}catch{x.push({status:"error",resource:se(_(f.key)),field:f.key});let A={};try{if(B&&h.getMany){let{data:C}=await h.getMany({resource:ae(_(f.key)),meta:ne(ae(_(f.key)),i,["getMany"]),ids:[L]});A=C==null?void 0:C[0]}else{let{data:C}=await h.getOne({resource:ae(_(f.key)),meta:ne(ae(_(f.key)),i,B?["getMany","getOne"]:["getOne"]),id:L});A=C}x.push({status:"success",resource:ae(_(f.key)),field:f.key}),G=A,Q=!1}catch{return x.push({status:"error",resource:ae(_(f.key)),field:f.key}),{...f,relationInfer:null}}}let r=c("__",G,{},c),V=_(f.key);return{...f,relation:!0,type:"relation",resource:{name:Q?se(V):ae(V)},fieldable:!1,canRelation:void 0,relationInfer:r}}return{...f,relationInfer:null}}return f}),p=await Promise.all(S);g(p.filter(f=>f)),setTimeout(()=>{v(!1)},500)}catch{setTimeout(()=>{v(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${x.length} attempts and succeeded with ${x.filter(S=>S.status==="success").length} attempts.`),console.groupEnd(),console.info("@refinedev/inferencer may send multiple requests to your API for nonexistent resources when trying to detect relations. To learn more about how the inferencer works, visit https://s.refine.dev/how-inferencer-works")},500)},[s,e]);return ve.default.useEffect(()=>{m(!1),!$&&t&&t.length>0&&u.length===0&&M(t)},[M,$,t,M]),{fields:u,loading:$,initial:l}},"useRelationFetch");var fe=a(({type:e,additionalScope:t=[],customElements:c=[],fieldTransformers:i=[],renderer:s,loadingComponent:u,errorComponent:g,codeViewerComponent:l})=>{let m=vr([...Rr,...c]),$=$r([...Vr,...i]),v=a(({resourceName:w,fieldTransformer:x,hideCodeViewerInProduction:S,meta:p,id:f})=>{var Pe,he;let{resource:o,resources:I}=(0,$e.useResource)(w),{i18nProvider:T}=(0,Z.useContext)($e.TranslationContext),{resource:D}=(0,$e.useResource)(),{data:E,datas:n,loading:h,initial:B,error:L}=Gr(e,w??(o==null?void 0:o.name),f,p),G=a((P,N,Y)=>{let X=m(P,N,Y,m,e);if(X&&o){let ee=$([X],I,o,Y,m,e),z=x?ee.flatMap(O=>{let J=x(O);return J?[J]:[]}):ee;return z==null?void 0:z[0]}},"inferSingleField"),Q=a(P=>Object.keys(P).map(Y=>{let X=P[Y];return G(Y,X,P)}).filter(Boolean),"inferSingleRecord"),r=a(P=>{let N=P.map(O=>Q(O)),Y=P.flatMap(O=>Object.keys(O)).filter((O,J,Ie)=>Ie.indexOf(O)===J),X={},ee=Y.map(O=>{let J=N.map(ue=>ue.find(oe=>oe.key===O));return J.reduce((ue,oe,Le)=>{if(!oe)return ue;let be=J.filter(pe=>(pe==null?void 0:pe.key)===oe.key&&(pe==null?void 0:pe.type)===oe.type).length;return be>ue.count?(X[O]=P[Le][O],{count:be,field:oe}):ue},{count:0,field:void 0}).field});return{commonRecord:X,inferredFields:ee}},"inferMultipleRecords"),[V,R]=Z.default.useMemo(()=>{if(n&&(e==="list"||e==="create")){let P=r(n);return[P.inferredFields,P.commonRecord]}if(E){let P=Object.keys(E).map(N=>{let Y=E[N];return m(N,Y,E,m,e)}).filter(Boolean);if(o){let N=$(P,I,o,E,m,e);return[x?N.flatMap(X=>{let ee=x(X);return ee?[ee]:[]}):N,E]}return[[],E]}return[[],void 0]},[E,n,I,o,x]),{fields:A,loading:C}=_r({record:R,fields:V,infer:m,meta:p}),U=Z.default.useMemo(()=>{let P=[];return A.forEach((N,Y,X)=>{if(N.resource){if(P.findIndex(z=>{var O,J;return((O=z.resource)==null?void 0:O.name)===((J=N.resource)==null?void 0:J.name)})>-1)return;let ee=X.filter((z,O)=>{var J,Ie,ue,oe,Le,be;if(O!==Y){let pe=N.resource,gt=z.resource,ht=((J=z.resource)==null?void 0:J.identifier)||((Ie=N.resource)==null?void 0:Ie.identifier)?((ue=z.resource)==null?void 0:ue.identifier)===((oe=N.resource)==null?void 0:oe.identifier):((Le=z.resource)==null?void 0:Le.name)===((be=N.resource)==null?void 0:be.name);return pe&&gt&&ht}else return!1});if(ee.length>0)if(e==="create"||e==="edit"){let z;[N,...ee].find(O=>{O.fieldable!==!0&&z===void 0&&(z=O)}),z?P.push(z):P.push(N)}else{let z;[N,...ee].find(O=>{O.fieldable!==!1&&z===void 0&&(z=O)}),z?P.push(z):P.push(N)}else P.push(N)}else P.push(N)}),P},[A,e]),Se=Z.default.useMemo(()=>!h&&!C&&!B&&o?s({resource:o,resources:I,fields:U,infer:m,meta:p,isCustomPage:o.name!==(D==null?void 0:D.name),id:f,i18n:!!T}):"",[o,I,U,h,C]),He=S;return Z.default.createElement(Z.default.Fragment,null,u&&(h||C)&&Z.default.createElement(u,null),!h&&!C&&Z.default.createElement(Z.default.Fragment,null,Z.default.createElement(or,{fetchError:!h&&L?L:!h&&!B&&!E,code:Je(Se,te(((Pe=o==null?void 0:o.meta)==null?void 0:Pe.label)??((he=o==null?void 0:o.options)==null?void 0:he.label)??(o==null?void 0:o.label)??(o==null?void 0:o.name)??"Resource",e)),errorComponent:g,additionalScope:t}),typeof l<"u"&&!He?Z.default.createElement(l,{code:Xe(Se),loading:h||C}):null))},"Inferencer");return a(({name:w,resource:x,fieldTransformer:S,meta:p,hideCodeViewerInProduction:f,id:o})=>{let{resource:I}=(0,$e.useResource)(x??w),T=`${(I==null?void 0:I.identifier)??(I==null?void 0:I.name)}-${e}-${o}`;return Z.default.createElement(v,{hideCodeViewerInProduction:f,fieldTransformer:S,resourceName:x??w,meta:p??{},key:T,id:o})},"InferencerComponent")},"createInferencer");var Ae=F(require("react")),qr=F(require("@mui/material/Alert")),Qr=F(require("@mui/material/AlertTitle")),Ur=F(require("@mui/material/Box"));var ye=a(({error:e})=>e?Ae.default.createElement(Ur.default,{style:{display:"flex",justifyContent:"center",alignItems:"center",minHeight:"200px"}},Ae.default.createElement(qr.default,{severity:"error"},Ae.default.createElement(Qr.default,null,"Error"),Ae.default.createElement("div",{dangerouslySetInnerHTML:{__html:e??""}}))):null,"ErrorComponent");var sr=F(require("react")),Kr=F(require("@mui/material/Box")),Zr=F(require("@mui/material/CircularProgress"));var ge=a(()=>sr.default.createElement(Kr.default,{style:{display:"flex",justifyContent:"center",alignItems:"center",minHeight:"300px"}},sr.default.createElement(Zr.default,{size:"large"})),"LoadingComponent");var ir=a(({resource:e,fields:t,meta:c,isCustomPage:i,id:s,i18n:u})=>{let g=te(e.label??e.name,"show"),l="record",m=[["useShow","@refinedev/core"],["Show","@refinedev/mui"],["Typography","@mui/material"],["Stack","@mui/material"],["IResourceComponentsProps","@refinedev/core"]];u&&m.push(["useTranslate","@refinedev/core"]);let v=t.filter(n=>(n==null?void 0:n.relation)&&!(n!=null&&n.fieldable)&&(n==null?void 0:n.resource)).filter(Boolean).map(n=>{var h,B,L,G;if(n!=null&&n.relation&&!n.fieldable&&n.resource){if(n.multiple){m.push(["useMany","@refinedev/core"]);let Q=d(l,n.key);return n.accessor&&(Q=`${d(l,n.key)}?.map((item: any) => ${d("item",void 0,n.accessor)})`),`
                const { data: ${W(n.key,"Data")}, isLoading: ${W(n.key,"IsLoading")} } =
                useMany({
                    resource: "${n.resource.name}",
                    ids: ${Q} || [],
                    queryOptions: {
                        enabled: !!${l} && !!${Q}?.length,
                    },
                    ${H(((h=n==null?void 0:n.resource)==null?void 0:h.identifier)??((B=n==null?void 0:n.resource)==null?void 0:B.name),c,"getMany")}
                });
                `}return m.push(["useOne","@refinedev/core"]),`
                const { data: ${W(n.key,"Data")}, isLoading: ${W(n.key,"IsLoading")} } =
                useOne({
                    resource: "${n.resource.name}",
                    id: ${d(l,n.key,n.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${l},
                    },
                    ${H(((L=n==null?void 0:n.resource)==null?void 0:L.identifier)??((G=n==null?void 0:n.resource)==null?void 0:G.name),c,"getOne")}
                });
            `}}).filter(Boolean),M=a(n=>{if(n.relation&&n.resource){let h=W(n.key,"Data"),B=W(n.key,"IsLoading");if(n.multiple){let L=d(l,n.key)+"?.length";return m.push(["TagField","@refinedev/mui"]),k`
                <Typography variant="body1" fontWeight="bold">
                    ${b({resource:e,field:n,i18n:u,noQuotes:!0})}
                </Typography>
                {${B} && ${L} ? (
                    <>
                        Loading...
                    </>
                    ) : (
                    <>
                    ${(()=>{var G;if(n.relationInfer)if((G=n.relationInfer)!=null&&G.accessor){if(Array.isArray(n.relationInfer.accessor))return"Not Handled.";{let Q=W(n.key),r=d(Q,void 0,n.relationInfer.accessor);return`
                                        {record?.${n.key}?.length ? <Stack direction="row" spacing={1}>
                                            {${h}?.data?.map((${Q}: any) => (
                                                <TagField key={${r}} value={${r}} />
                                            ))}
                                        </Stack> : <></>}
                                    `}}else return"Not Handled.";else return"not-handled - relation with multiple but no resource"})()}
                    </>
                )}
                `}return n.fieldable?k`
                <Typography variant="body1" fontWeight="bold">
                    ${b({resource:e,field:n,i18n:u,noQuotes:!0})}
                </Typography>
                <TextField value={${d(l,n.key,n.accessor)}} />
                `:k`
                <Typography variant="body1" fontWeight="bold">
                    ${b({resource:e,field:n,i18n:u,noQuotes:!0})}
                </Typography>

                {${B} ? (
                    <>Loading...</>
                ) : (
                    <>
                    ${(()=>{var L;return n.relationInfer?(L=n.relationInfer)!=null&&L.accessor?Array.isArray(n.relationInfer.accessor)?`{${d(`${h}?.data`,void 0,n.relationInfer.accessor,' + " " + ')}}`:`{${h}?.data?.${n.relationInfer.accessor}}`:`{${h}?.data}`:`{${h}?.data?.id}`})()}
                    </>
                )}
                `}},"renderRelationFields"),w=a(n=>{if(n.type==="text"){if(m.push(["TextFieldComponent as TextField","@refinedev/mui"]),n.multiple){m.push(["TagField","@refinedev/mui"]);let h=d("item",void 0,n.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${b({resource:e,field:n,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,n.key)}?.map((item: any) => (
                    <TagField value={${h}} key={${h}} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${b({resource:e,field:n,i18n:u,noQuotes:!0})}
                </Typography>
                <TextField value={${d(l,n.key,n.accessor)}} />
            `}},"textFields"),x=a(n=>{if(n.type==="image"){if(n.multiple){let h=d("item",void 0,n.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${b({resource:e,field:n,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,n.key)}?.map((item: any) => (
                    <img style={{ maxWidth: 200, width: "100%", height: 200 }} src={${h}} key={${h}} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${b({resource:e,field:n,i18n:u,noQuotes:!0})}
                </Typography>
                <img style={{ maxWidth: 200, width: "100%", height: 200 }} src={${d(l,n.key,n.accessor," + ")}} />
                `}},"imageFields"),S=a(n=>{if(n.type==="email"){if(m.push(["EmailField","@refinedev/mui"]),n.multiple){m.push(["TagField","@refinedev/mui"]);let h=d("item",void 0,n.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${b({resource:e,field:n,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,n.key)}?.map((item: any) => (
                    <TagField value={${h}} key={${h}} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${b({resource:e,field:n,i18n:u,noQuotes:!0})}
                </Typography>
                <EmailField value={${d(l,n.key,n.accessor," + ")}} />
            `}},"emailFields"),p=a(n=>{if(n.type==="url"){if(m.push(["UrlField","@refinedev/mui"]),n.multiple){m.push(["TagField","@refinedev/mui"]);let h=d("item",void 0,n.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${b({resource:e,field:n,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,n.key)}?.map((item: any) => (
                    <TagField value={${h}} key={${h}} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${b({resource:e,field:n,i18n:u,noQuotes:!0})}
                </Typography>
                <UrlField value={${d(l,n.key,n.accessor," + ")}} />
            `}},"urlFields"),f=a(n=>{if(n.type==="boolean"){if(m.push(["BooleanField","@refinedev/mui"]),n.multiple){m.push(["TagField","@refinedev/mui"]);let h=d("item",void 0,n.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${b({resource:e,field:n,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,n.key)}?.map((item: any, index: number) => (
                    <TagField value={${h}} key={index} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${b({resource:e,field:n,i18n:u,noQuotes:!0})}
                </Typography>
                <BooleanField value={${d(l,n.key,n.accessor," && ")}} />
            `}},"booleanFields"),o=a(n=>{if(n.type==="date"){if(m.push(["DateField","@refinedev/mui"]),n.multiple){let h=d("item",void 0,n.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${b({resource:e,field:n,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,n.key)}?.map((item: any) => (
                    <DateField value={${h}} key={${h}} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${b({resource:e,field:n,i18n:u,noQuotes:!0})}
                </Typography>
                <DateField value={${d(l,n.key,n.accessor," + ' ' + ")}} />
            `}},"dateFields"),I=a(n=>{if(n.type==="richtext")return m.push(["MarkdownField","@refinedev/mui"]),k`
                <Typography variant="body1" fontWeight="bold">
                    ${b({resource:e,field:n,i18n:u,noQuotes:!0})}
                </Typography>
                <MarkdownField value={${d(l,n.key,n.accessor,' + " " + ')}} />
            `},"richtextFields"),T=a(n=>{if(n.type==="number"){if(m.push(["NumberField","@refinedev/mui"]),n.multiple){m.push(["TagField","@refinedev/mui"]);let h=d("item",void 0,n.accessor);return k`
                <Typography variant="body1" fontWeight="bold">
                    ${b({resource:e,field:n,i18n:u,noQuotes:!0})}
                </Typography>
                <Stack direction="row" spacing={1}>
                {${d(l,n.key)}?.map((item: any) => (
                    <TagField value={${h}} key={${h}} />
                ))}
                </Stack>
            `}return k`
                <Typography variant="body1" fontWeight="bold">
                    ${b({resource:e,field:n,i18n:u,noQuotes:!0})}
                </Typography>
                <NumberField value={${d(l,n.key,n.accessor,' + " " + ')} ?? ""} />
            `}},"numberFields"),D=t.map(n=>{switch(n==null?void 0:n.type){case"text":return w(n);case"number":return T(n);case"richtext":return I(n);case"email":return S(n);case"image":return x(n);case"date":return o(n);case"boolean":return f(n);case"url":return p(n);case"relation":return M(n);default:return}});ce(m);let E=u&&"const translate = useTranslate();";return k`
    ${ie(m)}

    export const ${g}: React.FC<IResourceComponentsProps> = () => {
        ${E}
        const { queryResult } = useShow(${i?`{ 
                    resource: "${e.name}", 
                    id: ${we(s)},
                    ${H((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")}
                }`:H((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")?`{ ${H((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")} }`:""});
        const { data, isLoading } = queryResult;
    
        const ${l} = data?.data;
    
        ${v}

        return (
            <Show isLoading={isLoading}>
                <Stack gap={1}>
                    ${D.join("")}
                </Stack>
            </Show>
        );
    };
    `},"renderer"),Ee=fe({type:"show",additionalScope:[["@refinedev/mui","RefineMui",{Show:q.Show,TagField:q.TagField,TextFieldComponent:q.TextFieldComponent,EmailField:q.EmailField,UrlField:q.UrlField,BooleanField:q.BooleanField,DateField:q.DateField,MarkdownField:q.MarkdownField,NumberField:q.NumberField}],["@mui/material","MuiMaterial",{Typography:Yr.default,Stack:Jr.default}]],codeViewerComponent:me,loadingComponent:ge,errorComponent:ye,renderer:ir});var j=require("@refinedev/mui"),Xr=F(require("@mui/material/Checkbox")),et=require("@mui/x-data-grid");var cr=a(({resource:e,fields:t,meta:c,isCustomPage:i,i18n:s})=>{let u=te(e.label??e.name,"list"),g="dataGridProps?.rows",l=[["React","react",!0],["useDataGrid","@refinedev/mui"],["DataGrid","@mui/x-data-grid"],["GridColDef","@mui/x-data-grid"],["EditButton","@refinedev/mui"],["ShowButton","@refinedev/mui"],["DeleteButton","@refinedev/mui"],["List","@refinedev/mui"],["IResourceComponentsProps","@refinedev/core"]];s&&l.push(["useTranslate","@refinedev/core"]);let m=t.filter(r=>(r==null?void 0:r.relation)&&!(r!=null&&r.fieldable)&&(r==null?void 0:r.resource)),$=m.filter(Boolean).map(r=>{var V,R;if(r!=null&&r.relation&&!r.fieldable&&r.resource){l.push(["useMany","@refinedev/core"]);let A="";return r.multiple?A=`[].concat(...(${g}?.map((item: any) => ${d("item",r.key,r.accessor,!1)}) ?? []))`:A=`${g}?.map((item: any) => ${d("item",r.key,r.accessor,!1)}) ?? []`,`
                const { data: ${W(r.key,"Data")}, isLoading: ${W(r.key,"IsLoading")} } =
                useMany({
                    resource: "${r.resource.name}",
                    ids: ${A},
                    queryOptions: {
                        enabled: !!${g},
                    },
                    ${H(((V=r==null?void 0:r.resource)==null?void 0:V.identifier)??((R=r==null?void 0:r.resource)==null?void 0:R.name),c,"getMany")}
                });
                `}}).filter(Boolean),v=m==null?void 0:m.map(r=>{if(r&&r.resource)return`${W(r.key,"Data")}?.data`}).filter(Boolean),M=a(r=>{var V,R;if(r.relation&&r.resource){let A=`${W(r.key,"Data")}?.data`,C=W(r.key,"IsLoading");if(Array.isArray(r.accessor))return;let U=`${C} ? <>Loading...</> : `,Se=`field: "${r.key}"`,He=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: ({ row }) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",Pe=`headerName: ${b({resource:e,field:r,i18n:s,noBraces:!0})}`,he="";if(r.multiple){l.push(["TagField","@refinedev/mui"]);let P="item";if(r!=null&&r.relationInfer){let N=`${A}?.find((resourceItems) => resourceItems.id === ${d("item",void 0,r.accessor)})`;P=d(N,void 0,(V=r==null?void 0:r.relationInfer)==null?void 0:V.accessor)}he=`
                renderCell: function render({ value }) {
                    return ${U} (
                        <>
                            {${d("value",void 0)}?.map((item: any, index: number) => (
                                <TagField key={index} value={${P}} />
                            ))}
                        </>
                    )
                }
                `}else if(r!=null&&r.relationInfer){let P=`${A}?.find((item) => item.id === value)`,N=d(P,void 0,(R=r==null?void 0:r.relationInfer)==null?void 0:R.accessor);he=`
                    renderCell: function render({ value }) {
                        return ${U} ${N};
                    }
                    `}else he="";return`
                {
                    ${Se},
                    flex: 1,
                    ${Pe},${He}
                    minWidth: 300,${he}
                }
            `}},"renderRelationFields"),w=a(r=>{if(r.type==="image"){let V=`field: "${r.key}"`,R=`headerName: ${b({resource:e,field:r,i18n:s,noBraces:!0})}`,A=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: ({ row }) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",C=`
                renderCell: function render({ value }) {
                    return (
                        <img src={${d("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} style={{ height: "50px", maxWidth: "100px" }} />
                    )
                }
            `;return r.multiple&&(C=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: number) => (
                                <img src={${d("item",void 0,r.accessor," + ")}} key={index} style={{ height: "50px", maxWidth: "100px" }} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${V},
                    flex: 1,
                    ${R},${A}
                    minWidth: 100,${C}
                }
            `}},"imageFields"),x=a(r=>{if(r.type==="email"){l.push(["EmailField","@refinedev/mui"]);let V=`field: "${r.key}"`,R=`headerName: ${b({resource:e,field:r,i18n:s,noBraces:!0})}`,A=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: ({ row }) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",C=`
            renderCell: function render({ value }) {
                return (
                    <EmailField value={${d("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />
                )
            }
        `;return r.multiple&&(l.push(["TagField","@refinedev/mui"]),C=`
                renderCell: function render({ value }) {
                    return (
                        <>
                        {value?.map((item: any, index: number) => (
                            <TagField value={${d("item",void 0,r.accessor," + ")}} key={index} />
                        ))}
                        </>
                    )
                }
            `),`
            {
                ${V},
                flex: 1,
                ${R},${A}
                minWidth: 250,${C}
            }
        `}},"emailFields"),S=a(r=>{if(r.type==="url"){l.push(["UrlField","@refinedev/mui"]);let V=`field: "${r.key}"`,R=`headerName: ${b({resource:e,field:r,i18n:s,noBraces:!0})}`,A=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: ({ row }) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",C=`
                renderCell: function render({ value }) {
                    return (
                        <UrlField value={${d("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />
                    )
                }
            `;return r.multiple&&(l.push(["TagField","@refinedev/mui"]),C=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: any) => (
                                <TagField value={${d("item",void 0,r.accessor," + ")}} key={index} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${V},
                    flex: 1,
                    ${R},${A}
                    minWidth: 250,${C}
                }
            `}},"urlFields"),p=a(r=>{if(r!=null&&r.type){l.push(["Checkbox","@mui/material"]);let V=`field: "${r.key}"`,R=`headerName: ${b({resource:e,field:r,i18n:s,noBraces:!0})}`,A=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: ({ row }) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",C=`
                renderCell: function render({ value }) {
                    return (
                        <Checkbox checked={!!${d("value",void 0,Array.isArray(r.accessor)?r.accessor:void 0," && ")}} />
                    );
                }
            `;return r.multiple&&(C=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: number) => (
                                <Checkbox checked={!!${d("item",void 0,r.accessor," && ")}} key={index} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${V},
                    ${R},${A}
                    minWidth: 100,${C}
                }
            `}},"booleanFields"),f=a(r=>{if(r.type==="date"){l.push(["DateField","@refinedev/mui"]);let V=`field: "${r.key}"`,R=`headerName: ${b({resource:e,field:r,i18n:s,noBraces:!0})}`,A=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: ({ row }) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",C=`
                renderCell: function render({ value }) {
                    return <DateField value={value} />;
                }
            `;return r.multiple&&(C=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: number) => (
                                <DateField value={${d("item",void 0,r.accessor,' + " " + ')}} key={index} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${V},
                    flex: 1,
                    ${R},${A}
                    minWidth: 250,${C}
                }
            `}},"dateFields"),o=a(r=>{if((r==null?void 0:r.type)==="richtext"){l.push(["MarkdownField","@refinedev/mui"]);let V=`field: "${r.key}"`,R=`headerName: ${b({resource:e,field:r,i18n:s,noBraces:!0})}`,A=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: ({ row }) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",C=`
                renderCell: function render({ value }) {
                    return <MarkdownField value={(value ?? "").slice(0, 80) + "..."} />;
                }
            `;return r.multiple&&(C=`
                    renderCell: function render({ value }) {
                        return (
                            <>
                            {value?.map((item: any, index: number) => (
                                <MarkdownField value={(${d("item",void 0,r.accessor,' + " " + ')}).slice(0, 80) + "..."} key={index} />
                            ))}
                            </>
                        )
                    }
                `),`
                {
                    ${V},
                    flex: 1,
                    ${R},${A}
                    minWidth: 250,${C}
                }
            `}},"richtextFields"),I=a(r=>{if(r&&(r.type==="text"||r.type==="number")){let V=`field: "${r.key}"`,R=`headerName: ${b({resource:e,field:r,i18n:s,noBraces:!0})}`,A=r.accessor&&!r.multiple&&!Array.isArray(r.accessor)?`valueGetter: ({ row }) => {
            const value = ${d("row",r.key,r.accessor,!1)};

            return value;
        },`:"",C="";if(r.multiple){l.push(["TagField","@refinedev/mui"]);let U=d("item",void 0,r.accessor,' + " " + ');C=`
                renderCell: function render({ row }) {
                    return (
                        <>
                            {(${d("row",r.key)})?.map((item: any) => (
                                <TagField value={${U}} key={${U}} />
                            ))}
                        </>
                    )
                }
                `}return!r.multiple&&Array.isArray(r.accessor)&&(C=`
                renderCell: function render({ row }) {
                    return (
                        <>{${d("row",r.key,r.accessor)}}</>
                    );
                }
                `),`
            {
                ${V}, ${le(r.key)?"":`
                flex: 1,`}
                ${R},${A}${r.type==="number"?"type: 'number',":""}
                minWidth: ${le(r.key)?50:200},${C}
            }
            `}},"basicFields"),{canEdit:T,canShow:D,canDelete:E,meta:n}=e??{},h=E||(n==null?void 0:n.canDelete);T&&l.push(["EditButton","@refinedev/mui"]),D&&l.push(["ShowButton","@refinedev/mui"]),h&&l.push(["DeleteButton","@refinedev/mui"]);let L=T||D||h?k`
            {
                field: "actions",
                headerName: ${s?'translate("table.actions")':'"Actions"'},
                sortable: false,
                renderCell: function render({ row }) {
                    return (
                        <>
                            ${T?k`<EditButton hideText recordItemId={row.id} />`:""}
                            ${D?k`<ShowButton hideText recordItemId={row.id} />`:""}
                            ${h?k`<DeleteButton hideText recordItemId={row.id} />`:""}
                        </>
                    );
                },
                align: "center",
                headerAlign: "center",
                minWidth: 80,
            },
    `:"",G=t.map(r=>{switch(r==null?void 0:r.type){case"text":case"number":return I(r);case"richtext":return o(r);case"email":return x(r);case"image":return w(r);case"date":return f(r);case"boolean":return p(r);case"url":return S(r);case"relation":return M(r);default:return}});ce(l);let Q=s&&"const translate = useTranslate();";return k`
    ${ie(l)}
    
    export const ${u}: React.FC<IResourceComponentsProps> = () => {
        ${Q}
        const { dataGridProps } = useDataGrid(
            ${i?`{ resource: "${e.name}",
                        ${H((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getList")}
                        }`:H((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getList")?`{ ${H((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getList")} },`:""} 
        );
    
        ${$}

        const columns = React.useMemo<GridColDef[]>(() => [
            ${[...G,L].filter(Boolean).join(`,\r
`)}
        ], [${s?"translate, ":""}${v.join(",")}]);

        return (
            <List>
                <DataGrid {...dataGridProps} columns={columns} autoHeight />
            </List>
        );
    };
    `},"renderer"),Be=fe({type:"list",additionalScope:[["@refinedev/mui","RefineMui",{useDataGrid:j.useDataGrid,EditButton:j.EditButton,SaveButton:j.SaveButton,DeleteButton:j.DeleteButton,List:j.List,TagField:j.TagField,EmailField:j.EmailField,UrlField:j.UrlField,DateField:j.DateField,MarkdownField:j.MarkdownField,ShowButton:j.ShowButton}],["@mui/x-data-grid","MuiXDataGrid",{DataGrid:et.DataGrid}],["@mui/material","MuiMaterial",{Checkbox:Xr.default}]],codeViewerComponent:me,loadingComponent:ge,errorComponent:ye,renderer:cr});var De=require("@refinedev/mui"),rt=require("@refinedev/react-hook-form"),tt=F(require("@mui/material/Box")),nt=F(require("@mui/material/Autocomplete")),ot=F(require("@mui/material/TextField")),at=F(require("@mui/material/Checkbox")),st=F(require("@mui/material/FormControlLabel")),it=require("react-hook-form");var ur=a(({resource:e,fields:t,meta:c,isCustomPage:i,i18n:s})=>{let u=te(e.label??e.name,"create"),g=[["Create","@refinedev/mui"],["Box","@mui/material"],["useForm","@refinedev/react-hook-form"],["IResourceComponentsProps","@refinedev/core"]];s&&g.push(["useTranslate","@refinedev/core"]);let m=t.filter(p=>(p==null?void 0:p.relation)&&!(p!=null&&p.fieldable)&&(p==null?void 0:p.resource)).filter(Boolean).map(p=>{var f,o;if(p!=null&&p.relation&&!p.fieldable&&p.resource)return g.push(["useAutocomplete","@refinedev/mui"]),`
                const { autocompleteProps: ${W(p.key,"AutocompleteProps")} } =
                useAutocomplete({
                    resource: "${p.resource.name}",
                    ${H(((f=p==null?void 0:p.resource)==null?void 0:f.identifier)??((o=p==null?void 0:p.resource)==null?void 0:o.name),c,"getList")}
                });
            `}).filter(Boolean),$=a(p=>{if(p.relation&&p.resource){g.push(["Autocomplete","@mui/material"],["Controller","react-hook-form"]);let f=W(p.key,"AutocompleteProps"),o=p.relationInfer&&p.relationInfer.accessor?typeof p.relationInfer.accessor=="string"?p.relationInfer.accessor:p.relationInfer.accessor[0]:"title",I=o.includes(".")||o.includes("[")||o.includes("]")||o.includes("-"),T=p.accessor?d("item",void 0,p.accessor,!1):"(item?.id ?? item)",D=p.accessor?d("value",void 0,p.accessor,!1):"(value?.id ?? value)",E=p.accessor?"value":p.multiple?"value?.map((item: any) => item?.id ?? item)":"value?.id ?? value";return k`
                <Controller
                    control={control}
                    name="${K(p.key,void 0)}"
                    rules={{ required: "This field is required" }}
                    // eslint-disable-next-line
                    ${p.multiple?"defaultValue={[] as any}":"defaultValue={null as any}"}
                    render={({ field }) => (
                        <Autocomplete
                            {...${f}}
                            {...field}
                            ${p.multiple?"multiple":""}
                            onChange={(_, value) => {
                                field.onChange(${E});
                            }}
                            getOptionLabel={(item) => {
                                return (
                                    ${f}?.options?.find(
                                        (p) =>
                                            p?.id?.toString() ===
                                            ${T}?.toString(),
                                    )?.${I?`["${o}"]`:o} ?? ""
                                );
                            }}
                            isOptionEqualToValue={(option, value) =>
                                value === undefined ||
                                option?.id?.toString() === ${D}?.toString()
                            }
                            renderInput={(params) => (
                                <TextField
                                    {...params}
                                    label=${b({resource:e,field:p,i18n:s})}
                                    margin="normal"
                                    variant="outlined"
                                    error={!!${d("(errors as any)",p.key,p.accessor,!1)}}
                                    helperText={${d("(errors as any)",p.key,p.accessor,!1)}?.message}
                                    required
                                />
                            )}
                        />
                    )}
                />
            `}},"renderRelationFields"),v=a(p=>{if(p.type==="text"||p.type==="url"||p.type==="email"||p.type==="number"||p.type==="date"||p.type==="richtext")return le(p.key)||(g.push(["TextField","@mui/material"]),p.multiple)?void 0:k`
                <TextField
                    {...register("${K(p.key,void 0,p.accessor)}", {
                        required: "This field is required",
                        ${p.type==="number"?"valueAsNumber: true,":""}
                    })}
                    error={!!${d("(errors as any)",p.key,p.accessor,!1)}}
                    helperText={${d("(errors as any)",p.key,p.accessor,!1)}?.message}
                    margin="normal"
                    fullWidth
                    InputLabelProps={{ shrink: true }}
                    ${p.type!=="date"&&p.type!=="richtext"?`type="${p.type}"`:""}
                    ${p.type==="richtext"?"multiline":""}
                    label=${b({resource:e,field:p,i18n:s})}
                    name="${K(p.key,void 0,p.accessor)}"
                />
            `},"basicInputFields"),M=a(p=>{if(p.type==="boolean")return g.push(["Checkbox","@mui/material"],["FormControlLabel","@mui/material"],["Controller","react-hook-form"]),p.multiple?void 0:k`
                <Controller
                    control={control}
                    name="${K(p.key,void 0,p.accessor)}"
                    // eslint-disable-next-line
                    defaultValue={null as any}
                    render={({ field }) => (
                        <FormControlLabel label=${b({resource:e,field:p,i18n:s})} control={
                            <Checkbox
                                {...field}
                                checked={field.value}
                                onChange={(event) => {
                                    field.onChange(event.target.checked);
                                }}
                            />
                        } />
                    )}
                />
            `},"booleanFields"),w=a(p=>{if(p.type==="date")return`
                {/*
                    DatePicker component is not included in "@refinedev/mui" package.
                    To use a <DatePicker> component, you can follow the official documentation for Material UI.

                    Docs: https://mui.com/x/react-date-pickers/date-picker/#basic-usage
                */}
                ${v(p)??""}
                `},"dateFields"),x=t.map(p=>{switch(p==null?void 0:p.type){case"text":case"number":case"email":case"url":case"richtext":return v(p);case"date":return w(p);case"boolean":return M(p);case"relation":return $(p);default:return}});ce(g);let S=s&&"const translate = useTranslate();";return k`
    ${ie(g)}

    export const ${u}: React.FC<IResourceComponentsProps> = () => {
        ${S}
        const {
            saveButtonProps,
            refineCore: { formLoading },
            register,
            control,
            formState: { errors },
        } = useForm(
            ${i?`{
                refineCoreProps: {
                    resource: "${e.name}",
                    action: "create",
                    ${H(e.identifier??e.name,c,"getOne")}
                }
            }`:H(e.identifier??e.name,c,"getOne")?`{
                        refineCoreProps: { ${H(e.identifier??e.name,c,"getOne")} }
                        }`:""}
        );

        ${m}

        return (
            <Create isLoading={formLoading} saveButtonProps={saveButtonProps}>
                <Box
                    component="form"
                    sx={{ display: "flex", flexDirection: "column" }}
                    autoComplete="off"
                >
                    ${x.join("")}
                </Box>
            </Create>
        );
    };
    `},"renderer"),Ve=fe({type:"create",additionalScope:[["@refinedev/mui","RefineMui",{Create:De.Create,useAutocomplete:De.useAutocomplete}],["@refinedev/react-hook-form","RefineReactHookForm",{useForm:rt.useForm}],["@mui/material","MuiMaterial",{Box:tt.default,Autocomplete:nt.default,TextField:ot.default,Checkbox:at.default,FormControlLabel:st.default}],["react-hook-form","ReactHookForm",{Controller:it.Controller}]],codeViewerComponent:me,loadingComponent:ge,errorComponent:ye,renderer:ur});var Oe=require("@refinedev/mui"),ct=require("@refinedev/react-hook-form"),ut=F(require("@mui/material/Box")),pt=F(require("@mui/material/Autocomplete")),lt=F(require("@mui/material/TextField")),mt=F(require("@mui/material/Checkbox")),dt=F(require("@mui/material/FormControlLabel")),ft=require("react-hook-form");var pr=a(({resource:e,fields:t,meta:c,isCustomPage:i,id:s,i18n:u})=>{let g=te(e.label??e.name,"edit"),l=W(e.label??e.name,"Data"),m=[["Edit","@refinedev/mui"],["Box","@mui/material"],["useForm","@refinedev/react-hook-form"],["IResourceComponentsProps","@refinedev/core"]];u&&m.push(["useTranslate","@refinedev/core"]);let v=t.filter(o=>(o==null?void 0:o.relation)&&!(o!=null&&o.fieldable)&&(o==null?void 0:o.resource)).filter(Boolean).map(o=>{var I,T;if(o!=null&&o.relation&&!o.fieldable&&o.resource){m.push(["useAutocomplete","@refinedev/mui"]);let D=d(l,o.key,o.accessor,!1);return o.multiple&&o.accessor&&(D=`${d(l,o.key)}?.map((item: any) => ${d("item",void 0,o.accessor)})`),`
                const { autocompleteProps: ${W(o.key,"AutocompleteProps")} } =
                useAutocomplete({
                    resource: "${o.resource.name}",
                    defaultValue: ${D},
                    ${H(((I=o==null?void 0:o.resource)==null?void 0:I.identifier)??((T=o==null?void 0:o.resource)==null?void 0:T.name),c,"getList")}
                });
            `}}).filter(Boolean),M=a(o=>{if(o.relation&&o.resource){m.push(["Autocomplete","@mui/material"],["Controller","react-hook-form"]);let I=W(o.key,"AutocompleteProps"),T=o.relationInfer&&o.relationInfer.accessor?typeof o.relationInfer.accessor=="string"?o.relationInfer.accessor:o.relationInfer.accessor[0]:"title",D=T.includes(".")||T.includes("[")||T.includes("]")||T.includes("-"),E=o.accessor?d("item",void 0,o.accessor,!1):"(item?.id ?? item)",n=o.accessor?d("value",void 0,o.accessor,!1):"(value?.id ?? value)",h=o.accessor?"value":o.multiple?"value?.map((item: any) => item?.id ?? item)":"value?.id ?? value";return k`
                <Controller
                    control={control}
                    name="${K(o.key,void 0)}"
                    rules={{ required: "This field is required" }}
                    // eslint-disable-next-line
                    ${o.multiple?"defaultValue={[] as any}":"defaultValue={null as any}"}
                    render={({ field }) => (
                        <Autocomplete
                            {...${I}}
                            {...field}
                            ${o.multiple?"multiple":""}
                            onChange={(_, value) => {
                                field.onChange(${h});
                            }}
                            getOptionLabel={(item) => {
                                return (
                                    ${I}?.options?.find(
                                        (p) =>
                                            p?.id?.toString() ===
                                            ${E}?.toString(),
                                    )?.${D?`["${T}"]`:T} ?? ""
                                );
                            }}
                            isOptionEqualToValue={(option, value) =>
                                value === undefined ||
                                option?.id?.toString() === ${n}?.toString()
                            }
                            renderInput={(params) => (
                                <TextField
                                    {...params}
                                    label=${b({resource:e,field:o,i18n:u})}
                                    margin="normal"
                                    variant="outlined"
                                    error={!!${d("(errors as any)",o.key,o.accessor,!1)}}
                                    helperText={${d("(errors as any)",o.key,o.accessor,!1)}?.message}
                                    required
                                />
                            )}
                        />
                    )}
                />
            `}},"renderRelationFields"),w=a(o=>{if(o.type==="text"||o.type==="url"||o.type==="email"||o.type==="number"||o.type==="date"||o.type==="richtext"){if(m.push(["TextField","@mui/material"]),o.multiple){m.push(["Box","@mui/material"]);let I=K(o.key,"${index}",o.accessor),T=d("(errors as any)",o.key,void 0,!1)+"?.[index]";return`
                    <Box sx={{display: "flex", gap: 1}}>
                        {${d(l,o.key)}?.map((item: any, index: number) => (
                            <TextField
                                key={index}
                                {...register(\`${I}\`, {
                                    required: "This field is required",
                                    ${o.type==="number"?"valueAsNumber: true,":""}
                                })}
                                error={!!${T}}
                                helperText={${T}?.message as string}
                                margin="normal"
                                fullWidth
                                InputLabelProps={{ shrink: true }}
                                ${o.type!=="date"&&o.type!=="richtext"?`type="${o.type}"`:""}
                                ${o.type==="richtext"?"multiline":""}
                                label=${b({resource:e,field:o,i18n:u})}
                                name={\`${K(o.key,void 0,o.accessor)}.\${index}\`}
                            />
                        ))}
                    </Box>
                `}return k`
                <TextField
                    {...register("${K(o.key,void 0,o.accessor)}", {
                        required: "This field is required",
                        ${o.type==="number"?"valueAsNumber: true,":""}
                    })}
                    error={!!${d("(errors as any)",o.key,o.accessor,!1)}}
                    helperText={${d("(errors as any)",o.key,o.accessor,!1)}?.message}
                    margin="normal"
                    fullWidth
                    InputLabelProps={{ shrink: true }}
                    ${o.type!=="date"&&o.type!=="richtext"?`type="${o.type}"`:""}
                    ${o.type==="richtext"?"multiline":""}
                    label=${b({resource:e,field:o,i18n:u})}
                    name="${K(o.key,void 0,o.accessor)}"
                    ${le(o.key)?"disabled":""}
                />
            `}},"basicInputFields"),x=a(o=>{if(o.type==="boolean"){if(m.push(["Checkbox","@mui/material"],["FormControlLabel","@mui/material"],["Controller","react-hook-form"]),o.multiple){m.push(["Box","@mui/material"]);let I=K(o.key,"${index}",o.accessor);return`
                    <Box sx={{display: "flex", gap: 1}}>
                        {${d(l,o.key)}?.map((item: any, index: number) => (
                            <Controller
                                key={index}
                                control={control}
                                name={\`${I}\`}
                                // eslint-disable-next-line
                                defaultValue={null as any}
                                render={({ field }) => (
                                    <FormControlLabel label=${b({resource:e,field:o,i18n:u})} control={
                                        <Checkbox
                                            {...field}
                                            checked={field.value}
                                            onChange={(event) => {
                                                field.onChange(event.target.checked);
                                            }}
                                        />
                                    } />
                                )}
                            />
                        ))}
                    </Box>
                `}return k`
                <Controller
                    control={control}
                    name="${K(o.key,void 0,o.accessor)}"
                    // eslint-disable-next-line
                    defaultValue={null as any}
                    render={({ field }) => (
                        <FormControlLabel label=${b({resource:e,field:o,i18n:u})} control={
                            <Checkbox
                                {...field}
                                checked={field.value}
                                onChange={(event) => {
                                    field.onChange(event.target.checked);
                                }}
                            />
                        } />
                    )}
                />
            `}},"booleanFields"),S=a(o=>{if(o.type==="date")return`
                {/*
                    DatePicker component is not included in "@refinedev/mui" package.
                    To use a <DatePicker> component, you can follow the official documentation for Material UI.

                    Docs: https://mui.com/x/react-date-pickers/date-picker/#basic-usage
                */}
                ${w(o)}
                `},"dateFields"),p=t.map(o=>{switch(o==null?void 0:o.type){case"text":case"number":case"email":case"url":case"richtext":return w(o);case"date":return S(o);case"boolean":return x(o);case"relation":return M(o);default:return}});ce(m);let f=u&&"const translate = useTranslate();";return k`
    ${ie(m)}

    export const ${g}: React.FC<IResourceComponentsProps> = () => {
        ${f}
        const {
            saveButtonProps,
            refineCore: { queryResult },
            register,
            control,
            formState: { errors },
        } = useForm(
            ${i?`{
                refineCoreProps: {
                    resource: "${e.name}",
                    id: ${we(s)},
                    action: "edit",
                    ${H((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")}
                }
            }`:H((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")?`{ refineCoreProps: { ${H((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")} }
              }`:""}
        );

        const ${l} = queryResult?.data?.data;

        ${v}

        return (
            <Edit saveButtonProps={saveButtonProps}>
                <Box
                    component="form"
                    sx={{ display: "flex", flexDirection: "column" }}
                    autoComplete="off"
                >
                    ${p.join("")}
                </Box>
            </Edit>
        );
    };
    `},"renderer"),We=fe({type:"edit",additionalScope:[["@refinedev/mui","RefineMui",{Edit:Oe.Edit,useAutocomplete:Oe.useAutocomplete}],["@refinedev/react-hook-form","RefineReactHookForm",{useForm:ct.useForm}],["@mui/material","MuiMaterial",{Box:ut.default,Autocomplete:pt.default,TextField:lt.default,Checkbox:mt.default,FormControlLabel:dt.default}],["react-hook-form","ReactHookForm",{Controller:ft.Controller}]],codeViewerComponent:me,loadingComponent:ge,errorComponent:ye,renderer:pr});var jt=a(({action:e,id:t,...c})=>{let{action:i,id:s}=(0,yt.useResource)();switch(e??i){case"show":return Te.default.createElement(Ee,{...c,id:t??s});case"create":return Te.default.createElement(Ve,{...c,id:t??s});case"edit":return Te.default.createElement(We,{...c,id:t??s});default:return Te.default.createElement(Be,{...c,id:t??s})}},"MuiInferencer");
//# sourceMappingURL=mui.js.map