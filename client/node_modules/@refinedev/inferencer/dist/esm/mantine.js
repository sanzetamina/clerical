var Nt=Object.defineProperty;var n=(e,o)=>Nt(e,"name",{value:o,configurable:!0});import Te from"react";import{useResource as mn}from"@refinedev/core";import{Show as yr,TagField as hr,TextField as xr,EmailField as Ir,UrlField as $r,BooleanField as br,DateField as Fr,MarkdownField as kr,NumberField as vr}from"@refinedev/mantine";import{Title as Cr,Group as wr,Image as Tr}from"@mantine/core";import ee,{useContext as ur}from"react";import{useResource as je,TranslationContext as pr}from"@refinedev/core";var Vt=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,Se=n((e,o)=>{let u=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"];Vt.test(e)&&u.unshift("url");let i=u.find(a=>a in o&&!!o[a]);if(i)return i==="firstName"&&"lastName"in o?["firstName","lastName"]:i},"getFieldableKeys");import{pickNotDeprecated as Lt}from"@refinedev/core";function Ae(e,o,u){if(o)return o;let i=u==null?void 0:u.find(m=>m.name===e),a=Lt(i==null?void 0:i.meta,i==null?void 0:i.options);return a!=null&&a.dataProviderName?a.dataProviderName:"default"}n(Ae,"pickDataProvider");var Ie=n(e=>{var o;return(o=e==null?void 0:e.options)==null?void 0:o.dataProviderName},"dataProviderFromResource");var Pe=n(e=>{let o=[...e].filter(Boolean).sort((u,i)=>(i.priority||0)-(u.priority||0))[0];return o||null},"pickInferredField");import Dt from"prettier/standalone";import Et from"prettier/parser-typescript";var Re=n(e=>{try{return Dt.format(e,{parser:"typescript",plugins:[Et],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(o){return console.warn("Formatting error in inferencer",o),e}},"prettierFormat");var Ze=n(e=>e.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`),"prettySpaces");var Me=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,qe=n((e,o)=>{let u=Me.test(e),i=typeof o=="string"||typeof o=="number",a=Array.isArray(o)&&o.every(m=>typeof m=="string"||typeof m=="number");return u&&i||u&&a?{key:e,relation:!0,multiple:!!a,type:"relation",priority:1}:!1},"relationInfer");var K=n(e=>e.replace(Me,""),"removeRelationSuffix");var ye=n(e=>K(e).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(g=>g.charAt(0).toUpperCase()+g.slice(1)).join(" "),"prettyString");var F=n(e=>{let{resource:o,field:u,i18n:i}=e;if(i){let m=`translate("${o.name}.fields.${u.key}")`;return e.noBraces?`${m}`:`{${m}}`}let a=ye(u.key);return e.noQuotes?a:`"${a}"`},"translatePrettyString");import Ye from"pluralize";var Y=n((e="")=>Ye.isSingular(e)?e:Ye.singular(e),"toSingular");import Je from"pluralize";var ne=n((e="")=>Je.isPlural(e)?e:Je.plural(e),"toPlural");var Ne=n(e=>e.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(a=>!a.trim().startsWith("export default")).join(`
`),"replaceExports");var Xe=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Gt=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Ot=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,Ve=n((e,o={})=>{let u=e.matchAll(Xe),i=new Set;for(let a of u){let[,m,g,p,l]=a;if(l in o){let h=o[l];if(l==="react")continue;m&&i.add(`const { default: ${m} } = ${h};`),g&&i.add(`const${g.replace(Ot,"$1: $3$4")} = ${h};`),p&&i.add(`const ${p} = ${h};`)}}return Ze(`
    ${Array.from(i).join(`
`)}
    ${e.replace(Xe,"").replace(Gt,"")}
    `)},"replaceImports");import Ce from"pluralize";var Le=n((e,o)=>e?o.find(i=>{let a=K(e.key);return i.name===a||i.name===(Ce.isPlural(a)?a:Ce.plural(a))||i.name===(Ce.isSingular(a)?a:Ce.singular(a))}):void 0,"resourceFromInferred");import Bt from"pluralize";var J=n((e,o,u="Inferred")=>{let i=e.replace(/[^a-zA-Z0-9]/g," "),a=Bt.singular(i),g=ye(a).replace(/ /g,"")||u,p=o.charAt(0).toUpperCase()+o.slice(1);return/^[a-zA-Z]/.test(g)?`${g}${p}`:`${p}${g}`},"componentName");var Ht=n(e=>e?Array.isArray(e)?e.join(""):typeof e=="string"?e:typeof e=="object"||typeof e=="function"?e.toString():typeof e=="number"?String(e):typeof e=="boolean"&&e?"true":e:"","handleExpression"),x=n((e,...o)=>e.reduce((i,a,m)=>`${i}${a}${Ht(o[m])}`,"").trim(),"jsx");var De=n((e,o)=>`
    ${e??""}
    
    render(typeof ${o} !== "undefined" ? <${o} /> : <></>);
    `,"prepareLiveCode");var Ee=n(e=>e==null?void 0:e.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,""),"removeHiddenCode");var jt=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,Ge=n(e=>jt.test(e),"shouldDotAccess");function Oe(e,o,u){let i=`${e}`;return o&&(i+="?.",Ge(o)?i+=o:i+=`['${o}']`),u&&(i+="?.",Ge(u)?i+=u:i+=`['${u}']`),i}n(Oe,"accessorSingle");function zt(e,o,u){return(u??[]).map(a=>Oe(e,o,a))}n(zt,"accessorMultiple");var y=n((e,o,u,i=' + " " + ')=>Array.isArray(u)?i?zt(e,o,u).join(i):Oe(e,o,u[0]):Oe(e,o,u),"accessor"),z=n((e,o,u)=>{let i=e;return o&&(i+=`.${o}`),u&&(Array.isArray(u)?i+=`.${u[0]}`:i+=`.${u}`),i},"dotAccessor");var oe=n(e=>{let o=e.reduce((i,[a,m,g])=>(i[m]||(i[m]=[]),i[m].includes(a)||(g?i[m].push([a,!0]):i[m].push(a)),i),{});return Object.entries(o).map(([i,a])=>{let m=a.find(h=>Array.isArray(h)&&h[1]),g=a.filter(h=>typeof h=="string"),p=m?`${m[0]}`:"",l=g.length?`{ ${g.join(", ")} }`:"";return`import ${p}${p&&l?", ":""}${l} from "${i}";`})},"printImports");var Kt=/^id$/i,fe=n(e=>Kt.test(e),"isIDKey");var $e=n(e=>e.relationInfer&&e.relationInfer.accessor?Array.isArray(e.relationInfer.accessor)?`optionLabel: "${e.relationInfer.accessor[0]}",`:e.relationInfer.accessor!=="title"?`optionLabel: "${e.relationInfer.accessor}",`:"":"","getOptionLabel");var ae=n(e=>{},"noOp");var D=n((e,o="")=>{if(Number.isInteger(Number(e)))return o.charAt(0).toLowerCase()+o.slice(1)+e;let i=e.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),a=ye(i).replace(/ /g,"");return`${a.charAt(0).toLowerCase()+a.slice(1)}${o.charAt(0).toUpperCase()+o.slice(1)}`},"getVariableName");var B=n((e,o,u)=>{if(o&&u&&e){let i=e?o[e]:{},a=(i==null?void 0:i[u])??(i==null?void 0:i.default);return a?`meta: ${JSON.stringify(a)},`:""}return""},"getMetaProps"),te=n((e,o,u)=>{if(o&&u&&e){let i=e?o[e]:{},m=[...u,"default"].reduce((g,p)=>g??(i==null?void 0:i[p]),void 0);if(m)return m}},"pickMeta");var be=n(e=>e===void 0?e:typeof e=="string"?`"${e}"`:e,"idQuoteWrapper");var et=n(e=>{let o=n((u,i,a,m=o,g)=>{let p=e.map(h=>h(u,i,a,m,g));return Pe(p)},"fieldInferencer");return o},"composeInferencers");var tt=n(e=>n((u,i,a,m,g,p)=>e.reduce((l,h)=>h(l,i,a,m,g,p),u),"fieldTransformer"),"composeTransformers");var rt=n((e,o,u,i,a)=>{let m=Array.isArray(o),g=Array.isArray(o)&&o.every(p=>typeof p=="string"||typeof p=="number");if(m){if(!g){let l=i(e,o[0],u,i,a);return l?{...l,key:e,multiple:!0,priority:1}:!1}let p=i(e,o[0],u,i,a)||{type:"string"};return{key:e,multiple:!0,priority:1,type:p==null?void 0:p.type}}return!1},"arrayInfer");var nt=n((e,o)=>typeof o=="boolean"?{key:e,type:"boolean"}:!1,"booleanInfer");import ot from"dayjs";var _t=/(_at|_on|At|On|AT|ON)(\[\])?$/,Qt=["/",":","-","."],at=n((e,o)=>{let u=_t.test(e)&&ot(o).isValid(),i=typeof o=="string"&&ot(o).isValid();return typeof o=="string"&&Qt.some(m=>o.includes(m))&&(u||i)?{key:e,type:"date",priority:1}:!1},"dateInfer");var Wt=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,st=n((e,o)=>typeof o=="string"&&Wt.test(o)?{key:e,type:"email",priority:1}:!1,"emailInfer");var Ut=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,it=n((e,o)=>typeof o=="string"&&Ut.test(o)?{key:e,type:"image",priority:2}:!1,"imageInfer");var ct=n((e,o)=>typeof o>"u"||o===null?null:!1,"nullishInfer");var ut=n((e,o)=>{let u=typeof o=="string"&&o.length>0,i=!isNaN(o);return u&&i||typeof o=="number"?{key:e,type:"number"}:!1},"numberInfer");var pt=/id$/i,mt=n((e,o,u,i,a)=>{let m=o!==null,g=!Array.isArray(o);if(m&&g&&typeof o=="object"){let l=Object.keys(o).length===1&&pt.test(Object.keys(o)[0]),h=Object.keys(o).some(C=>pt.test(C));if(l)return{key:e,type:"relation",relation:!0,accessor:"id",priority:1};let k=Se(e,o);if((k?k.length>0:!1)&&k){let C=k&&Array.isArray(k)?k[0]:k,I=i(C,o[C],o,i,a);if(I){let P=Array.isArray(k)?k.map(H=>I.accessor?`${H}.${Array.isArray(I.accessor)?I.accessor[0]:I.accessor}`:H):I.accessor?Array.isArray(I.accessor)?`${k}.${I.accessor[0]}`:`${k}.${I.accessor}`:k;return(I==null?void 0:I.type)==="text"&&(a==="create"||a==="edit")&&h?{key:e,type:"relation",relation:!0,accessor:"id",priority:1}:{...I,fieldable:!0,key:e,accessor:P,priority:1}}}return{key:e,fieldable:!1,type:"object",priority:1}}return!1},"objectInfer");var lt=n((e,o)=>typeof o=="string"&&o.length>100?{key:e,type:"richtext",priority:1}:!1,"richtextInfer");var dt=n((e,o)=>typeof o=="string"?{key:e,type:"text"}:!1,"textInfer");var Zt=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,ft=n((e,o)=>typeof o=="string"&&Zt.test(o)?{key:e,type:"url",priority:1}:!1,"urlInfer");var gt=[rt,nt,at,st,it,ct,ut,mt,qe,lt,dt,ft];var yt=n((e,o,u,i)=>e.map(m=>{if(!m.relation&&(m.type==="text"||m.type==="richtext"||m.type==="number")&&!m.canRelation){let g=/^[a-z0-9-]+$/,p=n(C=>g.test(`${C}`),"isValidUUID"),l=m.key.toLowerCase()!=="id";return!(!m.accessor||typeof m.accessor=="string")||!l?m:(m.multiple?i[m.key]:[i[m.key]]).every(C=>p(m.accessor?C[m.accessor]:C))?{...m,canRelation:!0}:m}return m}),"basicToRelation");var qt=/(image|photo|avatar|cover|thumbnail|icon)/i,ht=n(e=>e.map(u=>u.type==="url"&&qt.test(u.key)?{...u,type:"image"}:u),"imageByKey");var xt=n((e,o)=>e.map(i=>{let a=Le(i,o);return a?{...i,relation:!0,type:"relation",resource:a}:i}),"relationByResource");var It=n((e,o,u,i,a,m)=>e.map(p=>{if(p.relation&&p.type==="relation"&&!p.resource){let l=p.accessor?i[p.key][p.accessor]:i[p.key],h=a(p.key,l,i,a,m);if(h&&h.type!=="relation")return{...p,fieldable:!0,relation:!1,type:h.type,canRelation:!0}}return p}),"relationToFieldable");var $t=[ht,xt,It,yt];import X from"react";import*as Yt from"@refinedev/core";import{LivePreview as Jt,LiveProvider as Xt}from"@aliemir/react-live";var bt=[["react","React",X],["@refinedev/core","RefineCore",Yt]],Be=X.createContext({}),He=n(({fetchError:e,code:o,additionalScope:u,errorComponent:i})=>{let a=(o&&Ne(Ve(o,[...bt,...u??[]].reduce((p,[l,h,k,V])=>V?p:{...p,[l]:h},{}))))??"",m=X.useMemo(()=>({React:X,...X,...[...bt,...u??[]].reduce((p,[l,h,k])=>({...p,[h]:k}),{})}),[u]),g=X.useMemo(()=>n(()=>{let{error:l}=X.useContext(Be);return i?X.createElement(i,{error:l?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${l}</code>`:typeof e=="string"?e:e?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},"LiveErrorComponent"),[i,e]);return X.createElement(Xt,{Context:Be,code:a,scope:m,noInline:!0},!e&&X.createElement(Jt,{Context:Be}),X.createElement(g,null))},"LiveComponent");import f from"react";import er,{defaultProps as tr}from"prism-react-renderer";import rr from"prism-react-renderer/themes/vsDark";var ce=n(({code:e,loading:o})=>{let u=f.useMemo(()=>Re(e??""),[e]),[i,a]=f.useState(!1),[m,g]=f.useState(!1),[p,l]=f.useState(!1),[h,k]=f.useState(!1),[V,C]=f.useState(!1);return f.useEffect(()=>{if(!o){let I=setTimeout(()=>{a(!0)},300);return()=>{clearTimeout(I)}}return()=>{}},[o]),f.useEffect(()=>{if(typeof window<"u"){let I=window.matchMedia("(max-width: 449px)");I.matches?l(!1):l(!0);let P=n(()=>{I.matches?l(!1):l(!0)},"handleResize");return window.addEventListener("resize",P),()=>{window.removeEventListener("resize",P)}}return()=>{}},[]),f.useEffect(()=>{if(typeof window<"u"){let I=window.matchMedia("(max-width: 1280px)");I.matches?k(!0):k(!1);let P=n(()=>{I.matches?k(!0):k(!1)},"handleResize");return window.addEventListener("resize",P),()=>{window.removeEventListener("resize",P)}}return()=>{}},[]),u&&!o?f.createElement(f.Fragment,null,p&&f.createElement("div",{className:"refine-inferencer--code-viewer",style:{position:"sticky",bottom:"24px",paddingTop:"24px",left:0,right:0,width:"100%",zIndex:10,display:"flex",justifyContent:"center",transition:"all 0.2s ease",opacity:i&&!m?1:0,transform:i&&!m?"translateY(0)":"translateY(100px)"}},f.createElement("div",{style:{width:"calc(100% - calc(64px * 2))",maxWidth:"1080px",padding:"20px",backgroundColor:"#1A1A1A",boxShadow:"0px 4px 16px -4px rgba(0, 0, 0, 0.5), 0px 8px 32px -8px rgba(0, 0, 0, 0.35)",borderRadius:"16px",display:"flex",alignItems:"center",justifyContent:"space-between",flexDirection:h?"column":"row",gap:"12px"}},f.createElement("div",{style:{display:"flex",alignItems:"flex-start",gap:"8px"}},f.createElement("div",null,f.createElement(or,null)),f.createElement("div",{style:{fontSize:"14px",lineHeight:"20px",color:"#ffffff"}},f.createElement("p",{style:{padding:0,margin:0}},"Most of the page code is auto-generated by the"," ",f.createElement("span",{style:{textDecoration:"underline"}},"Inferencer")," ","feature, based on your backend data structure."),f.createElement("p",{style:{padding:0,margin:0}},"While this is an excellent way to experiment with refine,"," ",f.createElement("span",{style:{fontWeight:600}},"it's not intended to be used on production.")))),f.createElement("div",null,f.createElement("button",{onPointerEnter:()=>C(!0),onPointerLeave:()=>C(!1),onClick:()=>g(!0),style:{appearance:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:V?"scale(1.025)":void 0,filter:V?"brightness(1.1)":void 0}},f.createElement(kt,{style:{flexShrink:0}}),f.createElement("span",null,"Show the auto-generated code"))))),f.createElement(nr,{visible:m,onClose:()=>g(!1),code:u})):null},"SharedCodeViewer"),nr=n(({visible:e,onClose:o,code:u=""})=>{let i=f.useRef(null),[a,m]=f.useState(!1),[g,p]=f.useState(!1),[l,h]=f.useState(!1),[k,V]=f.useState(!1);f.useEffect(()=>{if(typeof document<"u"){let d=n($=>{i.current&&!i.current.contains($.target)&&o()},"onOutsideClick");return document.addEventListener("pointerdown",d),()=>{document.removeEventListener("pointerdown",d)}}return()=>{}},[o]);let C=n(()=>{typeof navigator<"u"&&(navigator.clipboard.writeText(u),m(!0),setTimeout(()=>{m(!1)},1e3))},"onCopy"),I=f.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center"}},f.createElement("div",{style:{fontWeight:700,fontSize:"20px",lineHeight:"32px",color:"#0D0D0D"}},"Auto-generated code by Inferencer"),f.createElement("button",{onClick:o,onPointerEnter:()=>h(!0),onPointerLeave:()=>h(!1),style:{flexShrink:0,appearance:"none",border:"none",background:"none",padding:0,margin:0,outline:"none",borderRadius:"50px",width:"32px",height:"32px",cursor:"pointer",transition:"all 0.15s ease",transform:l?"scale(1.05)":void 0,filter:l?"brightness(0.8)":void 0}},f.createElement(ar,null))),P=f.createElement("div",{style:{fontSize:"13px",borderRadius:"8px",flex:"1",overflow:"scroll",background:"#1E1E1E"}},f.createElement(er,{...tr,theme:rr,code:u,language:"tsx"},({className:d,style:$,tokens:T,getLineProps:M,getTokenProps:c})=>f.createElement("pre",{className:d,style:{...$,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},T.map((S,s)=>f.createElement("div",{key:s,...M({line:S,key:s})},S.map((t,b)=>f.createElement("span",{key:b,...c({token:t,key:b})})))))));return f.createElement("div",{className:"refine-inferencer--code-viewer-modal",style:{position:"fixed",top:0,left:0,right:0,bottom:0,zIndex:9999,backgroundColor:"rgba(0, 0, 0, 0.5)",transition:"all 0.2s ease",opacity:e?1:0,pointerEvents:e?"all":"none",display:"flex",justifyContent:"center",alignItems:"center"}},f.createElement("div",{ref:i,style:{transform:e?"scale(1) translateY(0px)":"scale(0) translateY(-200px)",transition:"all 0.25s cubic-bezier(.35,1.29,.81,1.08)",transitionDelay:"0.25",width:"calc(100% - calc(32px * 2))",height:"calc(100% - calc(32px * 2))",backgroundColor:"#fff",maxWidth:"640px",maxHeight:"720px",borderRadius:"8px",padding:"16px"}},f.createElement("div",{style:{display:"flex",flexDirection:"column",height:"100%",width:"100%",gap:"16px"}},I,P,f.createElement("div",{style:{display:"flex",justifyContent:"flex-start",alignItems:"flex-end",gap:"16px"}},f.createElement("button",{onPointerEnter:()=>p(!0),onPointerLeave:()=>p(!1),onClick:C,style:{appearance:"none",height:"40px",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",position:"relative",overflow:"hidden",transition:"filter 0.2s ease",transform:g?"scale(1.025)":"scale(1)",filter:g?"brightness(1.1)":void 0}},f.createElement(Ft,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),f.createElement("span",null,"Copy Generated Code"),f.createElement("div",{style:{position:"absolute",width:"100%",height:"100%",top:0,left:0,display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",transition:"all 0.2s ease",transform:a?"translateY(0)":"translateY(40px)"}},f.createElement(Ft,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),f.createElement("span",null,"Copied!"))),f.createElement("a",{onPointerEnter:()=>V(!0),onPointerLeave:()=>V(!1),href:"https://refine.dev/docs/packages/documentation/inferencer",target:"_blank",rel:"noreferrer",style:{appearance:"none",textDecoration:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"rgba(0, 128, 255, 0.1)",color:"#0080FF",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:k?"scale(1.025)":void 0,filter:k?"brightness(1.1)":void 0}},f.createElement(kt,{style:{flexShrink:0}}),f.createElement("span",null,"Learn more about inferencer"))))))},"CodeModal"),or=n(e=>f.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,fill:"none",...e},f.createElement("path",{fill:"#0080FF",fillRule:"evenodd",d:"M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10Zm0-15a1.25 1.25 0 1 0 0 2.5A1.25 1.25 0 0 0 10 5Zm0 10c.69 0 1.25-.56 1.25-1.25V10a1.25 1.25 0 1 0-2.5 0v3.75c0 .69.56 1.25 1.25 1.25Z",clipRule:"evenodd"})),"InfoIcon"),kt=n(e=>f.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:16,height:16,fill:"none",...e},f.createElement("path",{fill:"currentColor",d:"M5 2a1 1 0 0 1 0 2H4v8h8v-1a1 1 0 1 1 2 0v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h1Z"}),f.createElement("path",{fill:"currentColor",d:"M9 2a1 1 0 0 0 0 2h1.586L6.293 8.293a1 1 0 0 0 1.414 1.414L12 5.414V7a1 1 0 1 0 2 0V3a1 1 0 0 0-1-1H9Z"})),"OpenIcon"),ar=n(e=>f.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:32,height:32,fill:"none",...e},f.createElement("path",{fill:"#A6A6A6",fillRule:"evenodd",d:"M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16Zm-2.586-21.414a2 2 0 1 0-2.828 2.828L13.172 16l-2.586 2.586a2 2 0 1 0 2.828 2.828L16 18.828l2.586 2.586a2 2 0 1 0 2.828-2.828L18.828 16l2.586-2.586a2 2 0 1 0-2.828-2.828L16 13.172l-2.586-2.586Z",clipRule:"evenodd"})),"CloseIcon"),Ft=n(e=>f.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,viewBox:"0 0 24 24",fill:"none",...e},f.createElement("path",{fill:"currentColor",fillRule:"evenodd",d:"M8 5a3 3 0 0 0 3 3h2a3 3 0 0 0 3-3h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h1Zm0 7a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2H9a1 1 0 0 1-1-1Zm1 3a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2H9Z",clipRule:"evenodd"}),f.createElement("path",{fill:"currentColor",d:"M13 4a1 1 0 1 1 0 2h-2a1 1 0 1 1 0-2h2Z"})),"ClipboardIcon");import ge from"react";import{useDataProvider as sr,useResource as ir}from"@refinedev/core";var vt=n((e,o,u,i)=>{let{resource:a,id:m,resources:g}=ir(o),p=u??m,l=sr(),[h,k]=ge.useState(void 0),[V,C]=ge.useState(void 0),[I,P]=ge.useState(void 0),[H,d]=ge.useState(!0),[$,T]=ge.useState(!1),M=ge.useCallback(async c=>{var t;let S=Ie(a)??Ae(a==null?void 0:a.name,void 0,g),s=l(S);T(!0),k(void 0);try{if((e==="list"||e==="create")&&a){let b=await s.getList({resource:a==null?void 0:a.name,meta:te((a==null?void 0:a.identifier)??(a==null?void 0:a.name),i,["getList"])}),A=(t=b.data)==null?void 0:t[0];A||k(`<p>No records/data found for resource "${a==null?void 0:a.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),C(A),P(b.data),setTimeout(()=>{T(!1)},500)}if((e==="edit"||e==="show")&&c&&a){let A=(await s.getOne({resource:a==null?void 0:a.name,id:c,meta:te((a==null?void 0:a.identifier)??(a==null?void 0:a.name),i,["getOne"])})).data;A||k(`<p>No records/data found for resource "${a==null?void 0:a.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),C(A),setTimeout(()=>{T(!1)},500)}}catch(b){console.warn("An error occured while fetching the resource data. Please check the error message below:",b),k(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${a==null?void 0:a.name}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{T(!1)},500)}},[e,l,a,g]);return ge.useEffect(()=>{d(!1),!$&&!V&&M(p)},[M,p]),{data:V,datas:I,loading:$,initial:H,error:h}},"useInferFetch");import Fe from"react";import{useDataProvider as cr}from"@refinedev/core";import{get as Ct}from"lodash-es";var wt=n(({record:e,fields:o,infer:u,meta:i})=>{let a=cr(),[m,g]=Fe.useState([]),[p,l]=Fe.useState(!0),[h,k]=Fe.useState(!1),V=Fe.useCallback(async C=>{console.groupCollapsed("@refinedev/inferencer is trying to detect relations");let I=[];k(!0);try{let P=C.map(async d=>{var $,T,M,c,S;if(d&&(d.relation||d.canRelation)&&e){if(d.relationInfer)return d;let s=Ie(d.resource),t=a(s),b=d.multiple,A=Array.isArray(d.accessor)?void 0:d.multiple?e[d.key].map(L=>d.accessor?Ct(L,d.accessor):L)[0]:d.accessor?Ct(e[d.key],d.accessor):e[d.key];if(A&&d.resource)try{let L={};if(b&&t.getMany){let{data:r}=await t.getMany({resource:d.resource.name,ids:[A],meta:te((($=d.resource)==null?void 0:$.identifier)??((T=d.resource)==null?void 0:T.name),i,["getMany"])});L=r==null?void 0:r[0]}else{let{data:r}=await t.getOne({resource:d.resource.name,id:A,meta:te(((M=d.resource)==null?void 0:M.identifier)??((c=d.resource)==null?void 0:c.name),i,b?["getMany","getOne"]:["getOne"])});L=r}I.push({status:"success",resource:d.resource.name,field:d.key});let _=u("__",L,{},u);return{...d,relationInfer:_}}catch{return I.push({status:"error",resource:d.resource.name,field:d.key}),{...d,relationInfer:null}}if(A){let L,_;try{let R={};if(b&&t.getMany){let{data:w}=await((S=t.getMany)==null?void 0:S.call(t,{resource:ne(K(d.key)),ids:[A],meta:te(ne(K(d.key)),i,["getMany"])}));R=w==null?void 0:w[0]}else{let{data:w}=await t.getOne({resource:ne(K(d.key)),id:A,meta:te(ne(K(d.key)),i,b?["getMany","getOne"]:["getOne"])});R=w}I.push({status:"success",resource:ne(K(d.key)),field:d.key}),L=R,_=!0}catch{I.push({status:"error",resource:ne(K(d.key)),field:d.key});let w={};try{if(b&&t.getMany){let{data:v}=await t.getMany({resource:Y(K(d.key)),meta:te(Y(K(d.key)),i,["getMany"]),ids:[A]});w=v==null?void 0:v[0]}else{let{data:v}=await t.getOne({resource:Y(K(d.key)),meta:te(Y(K(d.key)),i,b?["getMany","getOne"]:["getOne"]),id:A});w=v}I.push({status:"success",resource:Y(K(d.key)),field:d.key}),L=w,_=!1}catch{return I.push({status:"error",resource:Y(K(d.key)),field:d.key}),{...d,relationInfer:null}}}let r=u("__",L,{},u),N=K(d.key);return{...d,relation:!0,type:"relation",resource:{name:_?ne(N):Y(N)},fieldable:!1,canRelation:void 0,relationInfer:r}}return{...d,relationInfer:null}}return d}),H=await Promise.all(P);g(H.filter(d=>d)),setTimeout(()=>{k(!1)},500)}catch{setTimeout(()=>{k(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${I.length} attempts and succeeded with ${I.filter(P=>P.status==="success").length} attempts.`),console.groupEnd(),console.info("@refinedev/inferencer may send multiple requests to your API for nonexistent resources when trying to detect relations. To learn more about how the inferencer works, visit https://s.refine.dev/how-inferencer-works")},500)},[a,e]);return Fe.useEffect(()=>{l(!1),!h&&o&&o.length>0&&m.length===0&&V(o)},[V,h,o,V]),{fields:m,loading:h,initial:p}},"useRelationFetch");var ue=n(({type:e,additionalScope:o=[],customElements:u=[],fieldTransformers:i=[],renderer:a,loadingComponent:m,errorComponent:g,codeViewerComponent:p})=>{let l=et([...gt,...u]),h=tt([...$t,...i]),k=n(({resourceName:C,fieldTransformer:I,hideCodeViewerInProduction:P,meta:H,id:d})=>{var We,Ue;let{resource:$,resources:T}=je(C),{i18nProvider:M}=ur(pr),{resource:c}=je(),{data:S,datas:s,loading:t,initial:b,error:A}=vt(e,C??($==null?void 0:$.name),d,H),L=n((E,G,U)=>{let Z=l(E,G,U,l,e);if(Z&&$){let q=h([Z],T,$,U,l,e),j=I?q.flatMap(O=>{let Q=I(O);return Q?[Q]:[]}):q;return j==null?void 0:j[0]}},"inferSingleField"),_=n(E=>Object.keys(E).map(U=>{let Z=E[U];return L(U,Z,E)}).filter(Boolean),"inferSingleRecord"),r=n(E=>{let G=E.map(O=>_(O)),U=E.flatMap(O=>Object.keys(O)).filter((O,Q,he)=>he.indexOf(O)===Q),Z={},q=U.map(O=>{let Q=G.map(se=>se.find(re=>re.key===O));return Q.reduce((se,re,ve)=>{if(!re)return se;let xe=Q.filter(ie=>(ie==null?void 0:ie.key)===re.key&&(ie==null?void 0:ie.type)===re.type).length;return xe>se.count?(Z[O]=E[ve][O],{count:xe,field:re}):se},{count:0,field:void 0}).field});return{commonRecord:Z,inferredFields:q}},"inferMultipleRecords"),[N,R]=ee.useMemo(()=>{if(s&&(e==="list"||e==="create")){let E=r(s);return[E.inferredFields,E.commonRecord]}if(S){let E=Object.keys(S).map(G=>{let U=S[G];return l(G,U,S,l,e)}).filter(Boolean);if($){let G=h(E,T,$,S,l,e);return[I?G.flatMap(Z=>{let q=I(Z);return q?[q]:[]}):G,S]}return[[],S]}return[[],void 0]},[S,s,T,$,I]),{fields:w,loading:v}=wt({record:R,fields:N,infer:l,meta:H}),W=ee.useMemo(()=>{let E=[];return w.forEach((G,U,Z)=>{if(G.resource){if(E.findIndex(j=>{var O,Q;return((O=j.resource)==null?void 0:O.name)===((Q=G.resource)==null?void 0:Q.name)})>-1)return;let q=Z.filter((j,O)=>{var Q,he,se,re,ve,xe;if(O!==U){let ie=G.resource,Rt=j.resource,Mt=((Q=j.resource)==null?void 0:Q.identifier)||((he=G.resource)==null?void 0:he.identifier)?((se=j.resource)==null?void 0:se.identifier)===((re=G.resource)==null?void 0:re.identifier):((ve=j.resource)==null?void 0:ve.name)===((xe=G.resource)==null?void 0:xe.name);return ie&&Rt&&Mt}else return!1});if(q.length>0)if(e==="create"||e==="edit"){let j;[G,...q].find(O=>{O.fieldable!==!0&&j===void 0&&(j=O)}),j?E.push(j):E.push(G)}else{let j;[G,...q].find(O=>{O.fieldable!==!1&&j===void 0&&(j=O)}),j?E.push(j):E.push(G)}else E.push(G)}else E.push(G)}),E},[w,e]),de=ee.useMemo(()=>!t&&!v&&!b&&$?a({resource:$,resources:T,fields:W,infer:l,meta:H,isCustomPage:$.name!==(c==null?void 0:c.name),id:d,i18n:!!M}):"",[$,T,W,t,v]),ke=P;return ee.createElement(ee.Fragment,null,m&&(t||v)&&ee.createElement(m,null),!t&&!v&&ee.createElement(ee.Fragment,null,ee.createElement(He,{fetchError:!t&&A?A:!t&&!b&&!S,code:De(de,J(((We=$==null?void 0:$.meta)==null?void 0:We.label)??((Ue=$==null?void 0:$.options)==null?void 0:Ue.label)??($==null?void 0:$.label)??($==null?void 0:$.name)??"Resource",e)),errorComponent:g,additionalScope:o}),typeof p<"u"&&!ke?ee.createElement(p,{code:Ee(de),loading:t||v}):null))},"Inferencer");return n(({name:C,resource:I,fieldTransformer:P,meta:H,hideCodeViewerInProduction:d,id:$})=>{let{resource:T}=je(I??C),M=`${(T==null?void 0:T.identifier)??(T==null?void 0:T.name)}-${e}-${$}`;return ee.createElement(k,{hideCodeViewerInProduction:d,fieldTransformer:P,resourceName:I??C,meta:H??{},key:M,id:$})},"InferencerComponent")},"createInferencer");import we from"react";import{Alert as mr,Center as lr}from"@mantine/core";import{IconAlertCircle as dr}from"@tabler/icons";var pe=n(({error:e})=>e?we.createElement(lr,{style:{minHeight:300}},we.createElement(mr,{title:"Error",color:"red",icon:we.createElement(dr,null)},we.createElement("div",{dangerouslySetInnerHTML:{__html:e??""}}))):null,"ErrorComponent");import fr from"react";import{LoadingOverlay as gr}from"@mantine/core";var me=n(()=>fr.createElement(gr,{visible:!0}),"LoadingComponent");var Tt=n(({resource:e,fields:o,meta:u,isCustomPage:i,id:a,i18n:m})=>{let g=J(e.label??e.name,"show"),p="record",l=[["IResourceComponentsProps","@refinedev/core"],["useShow","@refinedev/core"],["Show","@refinedev/mantine"],["Title","@mantine/core"]];m&&l.push(["useTranslate","@refinedev/core"]);let k=o.filter(t=>(t==null?void 0:t.relation)&&!(t!=null&&t.fieldable)&&(t==null?void 0:t.resource)).filter(Boolean).map(t=>{var b,A,L,_;if(t!=null&&t.relation&&!t.fieldable&&t.resource){if(t.multiple){l.push(["useMany","@refinedev/core"]);let r=y(p,t.key);return t.accessor&&(r=`${y(p,t.key)}?.map((item: any) => ${y("item",void 0,t.accessor)})`),`
                const { data: ${D(t.key,"Data")}, isLoading: ${D(t.key,"IsLoading")} } =
                useMany({
                    resource: "${t.resource.name}",
                    ids: ${r} || [],
                    queryOptions: {
                        enabled: !!${p} && !!${r}?.length,
                    },
                    ${B(((b=t==null?void 0:t.resource)==null?void 0:b.identifier)??((A=t==null?void 0:t.resource)==null?void 0:A.name),u,"getMany")}
                });
                `}return l.push(["useOne","@refinedev/core"]),`
                const { data: ${D(t.key,"Data")}, isLoading: ${D(t.key,"IsLoading")} } =
                useOne({
                    resource: "${t.resource.name}",
                    id: ${y(p,t.key,t.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${p},
                    },
                    ${B(((L=t==null?void 0:t.resource)==null?void 0:L.identifier)??((_=t==null?void 0:t.resource)==null?void 0:_.name),u,"getOne")}
                });
            `}}).filter(Boolean),V=n(t=>{if(t.relation&&t.resource){let b=D(t.key,"Data"),A=D(t.key,"IsLoading");if(t.multiple){let L=y(p,t.key)+"?.length";return l.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]),x`
                <Title my="xs" order={5}>${F({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                {${A} && ${L} ? <>Loading...</> : (
                    <>
                    ${(()=>{var _,r;if(t.relationInfer)if((_=t.relationInfer)!=null&&_.accessor){if(Array.isArray(t.relationInfer.accessor))return"Not Handled.";{let N=Y((r=t.resource)==null?void 0:r.name),R=y(N,void 0,t.relationInfer.accessor);return`
                                    {record?.${t.key}?.length ? <Group spacing="xs">
                                        {${b}?.data?.map((${N}: any) => <TagField key={${R}} value={${R}} />)}
                                    </Group> : <></>}
                                    `}}else return"Not Handled.";else return"not-handled - relation with multiple but no resource"})()}
                    </>
                )}
                `}return t.fieldable?x`
                <Title my="xs" order={5}>${F({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <TextField value={${y(p,t.key,t.accessor)}} />
                `:x`
                <Title my="xs" order={5}>${F({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                {${A} ? <>Loading...</> : (
                    <>
                    ${(()=>{var L;return t.relationInfer?(L=t.relationInfer)!=null&&L.accessor?Array.isArray(t.relationInfer.accessor)?`{${y(`${b}?.data`,void 0,t.relationInfer.accessor,' + " " + ')}}`:`{${b}?.data?.${t.relationInfer.accessor}}`:`{${b}?.data}`:`{${b}?.data?.id}`})()}
                    </>
                )}
                
                `}},"renderRelationFields"),C=n(t=>{if(t.type==="text"){if(l.push(["TextField","@refinedev/mantine"]),t.multiple){l.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let b=y("item",void 0,t.accessor);return x`
                <Title my="xs" order={5}>${F({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <Group spacing="xs">
                    {${y(p,t.key)}?.map((item: any) => (
                        <TagField value={${b}} key={${b}} />
                    ))}
                </Group>
            `}return x`
                <Title my="xs" order={5}>${F({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <TextField value={${y(p,t.key,t.accessor)}} />
            `}},"textFields"),I=n(t=>{if(t.type==="image"){if(l.push(["Image","@mantine/core"]),t.multiple){l.push(["Group","@mantine/core"]);let b=y("item",void 0,t.accessor);return x`
                <Title my="xs" order={5}>${F({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <Group spacing="xs">
                    {${y(p,t.key)}?.map((item: any) => (
                        <Image sx={{ maxWidth: 200 }} src={${b}} key={${b}} />
                    ))}
                </Group>
            `}return x`
                <Title my="xs" order={5}>${F({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <Image sx={{ maxWidth: 200 }} src={${y(p,t.key,t.accessor," + ")}} />
                `}},"imageFields"),P=n(t=>{if(t.type==="email"){if(l.push(["EmailField","@refinedev/mantine"]),t.multiple){l.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let b=y("item",void 0,t.accessor);return x`
                <Title my="xs" order={5}>${F({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <Group spacing="xs">
                    {${y(p,t.key)}?.map((item: any) => (
                        <TagField value={${b}} key={${b}} />
                    ))}
                </Group>
            `}return x`
                <Title my="xs" order={5}>${F({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <EmailField value={${y(p,t.key,t.accessor," + ")}} />
            `}},"emailFields"),H=n(t=>{if(t.type==="url"){if(l.push(["UrlField","@refinedev/mantine"]),t.multiple){l.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let b=y("item",void 0,t.accessor);return x`
                <Title my="xs" order={5}>${F({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <Group spacing="xs">
                    {${y(p,t.key)}?.map((item: any) => (
                        <TagField value={${b}} key={${b}} />
                    ))}
                </Group>
            `}return x`
                <Title my="xs" order={5}>${F({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <UrlField value={${y(p,t.key,t.accessor," + ")}} />
            `}},"urlFields"),d=n(t=>{if(t.type==="boolean"){if(l.push(["BooleanField","@refinedev/mantine"]),t.multiple){l.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let b=y("item",void 0,t.accessor);return x`
                <Title my="xs" order={5}>${F({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <Group spacing="xs">
                    {${y(p,t.key)}?.map((item: any, index: number) => (
                        <TagField value={${b}} key={index} />
                    ))}
                </Group>
            `}return x`
                <Title my="xs" order={5}>${F({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <BooleanField value={${y(p,t.key,t.accessor," && ")}} />
            `}},"booleanFields"),$=n(t=>{if(t.type==="date"){if(l.push(["DateField","@refinedev/mantine"]),t.multiple){l.push(["Group","@mantine/core"]);let b=y("item",void 0,t.accessor);return x`
                <Title my="xs" order={5}>${F({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <Group spacing="xs">
                    {${y(p,t.key)}?.map((item: any) => (
                        <DateField value={${b}} key={${b}} />
                    ))}
                </Group>
            `}return x`
                <Title my="xs" order={5}>${F({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <DateField value={${y(p,t.key,t.accessor," + ' ' + ")}} />
            `}},"dateFields"),T=n(t=>{if(t.type==="richtext")return l.push(["MarkdownField","@refinedev/mantine"]),x`
                <Title mt="xs" order={5}>${F({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <MarkdownField value={${y(p,t.key,t.accessor,' + " " + ')}} />
            `},"richtextFields"),M=n(t=>{if(t.type==="number"){if(l.push(["NumberField","@refinedev/mantine"]),t.multiple){l.push(["TagField","@refinedev/mantine"],["Group","@mantine/core"]);let b=y("item",void 0,t.accessor);return x`
                <Title my="xs" order={5}>${F({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <Group spacing="xs">
                    {${y(p,t.key)}?.map((item: any) => (
                        <TagField value={${b}} key={${b}} />
                    ))}
                </Group>
            `}return x`
                <Title my="xs" order={5}>${F({resource:e,field:t,i18n:m,noQuotes:!0})}</Title>
                <NumberField value={${y(p,t.key,t.accessor,' + " " + ')} ?? ""} />
            `}},"numberFields"),c=n(t=>{if(t)return x`
                ${t}
            `},"wrapper"),S=o.map(t=>{switch(t==null?void 0:t.type){case"text":return c(C(t));case"number":return c(M(t));case"richtext":return c(T(t));case"email":return c(P(t));case"image":return c(I(t));case"date":return c($(t));case"boolean":return c(d(t));case"url":return c(H(t));case"relation":return c(V(t));default:return}});ae(l);let s=m&&"const translate = useTranslate();";return x`
    ${oe(l)}
    
    export const ${g}: React.FC<IResourceComponentsProps> = () => {
        ${s}
        const { queryResult } = useShow(${i?`{ 
                    resource: "${e.name}", 
                    id: ${be(a)},
                    ${B((e==null?void 0:e.identifier)??(e==null?void 0:e.name),u,"getOne")}
                }`:B((e==null?void 0:e.identifier)??(e==null?void 0:e.name),u,"getOne")?`{ ${B((e==null?void 0:e.identifier)??(e==null?void 0:e.name),u,"getOne")} }`:""});
        const { data, isLoading } = queryResult;
    
        const ${p} = data?.data;
    
        ${k}

        return (
            <Show isLoading={isLoading}>
                ${S.join("")}
            </Show>
        );
    };
    `},"renderer"),ze=ue({type:"show",additionalScope:[["@refinedev/mantine","RefineMantine",{Show:yr,TagField:hr,TextField:xr,EmailField:Ir,UrlField:$r,BooleanField:br,DateField:Fr,MarkdownField:kr,NumberField:vr}],["@mantine/core","MantineCore",{Title:Cr,Group:wr,Image:Tr}]],codeViewerComponent:ce,loadingComponent:me,errorComponent:pe,renderer:Tt});import{List as Sr,EditButton as Ar,ShowButton as Pr,DeleteButton as Rr,TagField as Mr,EmailField as Nr,UrlField as Vr,BooleanField as Lr,DateField as Dr,MarkdownField as Er}from"@refinedev/mantine";import{useTable as Gr}from"@refinedev/react-table";import{ScrollArea as Or,Table as Br,Pagination as Hr,Group as jr,Image as zr}from"@mantine/core";import{flexRender as Kr}from"@tanstack/react-table";var le=n(e=>Array.isArray(e.accessor)||e.multiple?`accessorKey: "${e.key}"`:e.accessor?`accessorKey: "${z(e.key,void 0,e.accessor)}"`:`accessorKey: "${e.key}"`,"getAccessorKey"),St=n(({resource:e,fields:o,meta:u,isCustomPage:i,i18n:a})=>{let m=J(e.label??e.name,"list"),g="tableData?.data",p=[["IResourceComponentsProps","@refinedev/core"],["useTable","@refinedev/react-table"],["ColumnDef","@tanstack/react-table"],["flexRender","@tanstack/react-table"],["ScrollArea","@mantine/core"],["List","@refinedev/mantine"],["Table","@mantine/core"],["Pagination","@mantine/core"],["Group","@mantine/core"],["EditButton","@refinedev/mantine"],["ShowButton","@refinedev/mantine"],["DeleteButton","@refinedev/mantine"]];a&&p.push(["useTranslate","@refinedev/core"]);let l=o.filter(r=>(r==null?void 0:r.relation)&&!(r!=null&&r.fieldable)&&(r==null?void 0:r.resource)),h=l.filter(Boolean).map(r=>{var N,R;if(r!=null&&r.relation&&!r.fieldable&&r.resource){p.push(["GetManyResponse","@refinedev/core"]),p.push(["useMany","@refinedev/core"]);let w="";return r.multiple?w=`[].concat(...(${g}?.map((item) => ${y("item",r.key,r.accessor,!1)}) ?? []))`:w=`${g}?.map((item) => ${y("item",r.key,r.accessor,!1)}) ?? []`,`
                const { data: ${D(r.key,"Data")} } =
                useMany({
                    resource: "${r.resource.name}",
                    ids: ${w},
                    queryOptions: {
                        enabled: !!${g},
                    },
                    ${B(((N=r==null?void 0:r.resource)==null?void 0:N.identifier)??((R=r==null?void 0:r.resource)==null?void 0:R.name),u,"getMany")}
                });
                `}}).filter(Boolean),k=l==null?void 0:l.map(r=>{if(r&&r.resource)return D(r.key,"Data")}).filter(Boolean),V=n(r=>{var N;if(r.relation&&r.resource){let R=`${D(r.key,"Data")}?.data`;if(Array.isArray(r.accessor))return;let w=`id: "${r.key}"`,v=`header: ${F({resource:e,field:r,i18n:a,noBraces:!0})}`,W=le(r),de="";if(r.multiple){p.push(["TagField","@refinedev/mantine"]);let ke="item";r!=null&&r.relationInfer&&(ke=y("item",void 0,r.relationInfer.accessor)),de=`cell: function render({ getValue, table }) {
                    const meta = table.options.meta as {
                        ${D(r.key,"Data")}: GetManyResponse;
                    };

                    const ${D(r.key)} = getValue<any[]>()?.map((item) => {
                        return meta.${D(r.key,"Data")}?.data?.find(
                            (resourceItems) => resourceItems.id === ${y("item",void 0,r.accessor)}
                        );
                    })

                    return (
                        <Group spacing="xs">
                            {${D(r.key)}?.map((item, index) => (
                                <TagField key={index} value={${ke}} />
                            ))}
                        </Group>
                    )
                }
            `}else r!=null&&r.relationInfer?de=`cell: function render({ getValue, table }) {
                        const meta = table.options.meta as {
                            ${D(r.key,"Data")}: GetManyResponse;
                        };

                        const ${D(r.key)} = meta.${R}?.find(
                            (item) => item.id == getValue<any>(),
                        );

                        return ${y(D(r.key),void 0,(N=r==null?void 0:r.relationInfer)==null?void 0:N.accessor)} ?? "Loading...";
                    },`:de="";return`
                {
                    ${w},
                    ${v},
                    ${W},
                    ${de}
                }
            `}},"renderRelationFields"),C=n(r=>{if(r.type==="image"){p.push(["Image","@mantine/core"]);let N=`id: "${r.key}"`,R=le(r),w=`header: ${F({resource:e,field:r,i18n:a,noBraces:!0})}`,v=x`
                cell: function render({ getValue }) {
                    ${r!=null&&r.accessor?"try {":""}
                        return <Image sx={{ maxWidth: "100px" }} src={${y("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />
                    ${r!=null&&r.accessor?" } catch (error) { return null; }":""}
                   
                }
            `;if(r.multiple){let W=y("item",void 0,r.accessor," + ");v=`
                    cell: function render({ getValue }) {
                        ${r!=null&&r.accessor?"try {":""}
                            return (
                                <Group spacing="xs">
                                    {getValue<any[]>()?.map((item, index) => (
                                        <Image src={${W}} key={index} sx={{ maxWidth: "100px" }} />
                                    ))}
                                </Group>
                            )
                        ${r!=null&&r.accessor?" } catch (error) { return null; }":""}
                    }
                `}return`
                {
                    ${N},
                    ${R},
                    ${w},
                    ${v}
                }
            `}},"imageFields"),I=n(r=>{if(r.type==="email"){p.push(["EmailField","@refinedev/mantine"]);let N=`id: "${r.key}"`,R=le(r),w=`header: ${F({resource:e,field:r,i18n:a,noBraces:!0})}`,v=x`
                cell: function render({ getValue }) {
                    return <EmailField value={${y("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0,' + " " + ')}} />
                }
            `;return r.multiple&&(p.push(["TagField","@refinedev/mantine"]),v=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any>()?.map((item, index) => (
                                    <TagField value={${y("item",void 0,r.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${N},
                    ${R},
                    ${w},
                    ${v}
                }
            `}},"emailFields"),P=n(r=>{if(r.type==="url"){p.push(["UrlField","@refinedev/mantine"]);let N=`id: "${r.key}"`,R=le(r),w=`header: ${F({resource:e,field:r,i18n:a,noBraces:!0})}`,v=x`
                cell: function render({ getValue }) {
                    return <UrlField value={${y("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />
                }
            `;return r.multiple&&(p.push(["TagField","@refinedev/mantine"]),v=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any[]>()?.map((item, index) => (
                                    <TagField value={${y("item",void 0,r.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${N},
                    ${R},
                    ${w},
                    ${v}
                }
            `}},"urlFields"),H=n(r=>{if((r==null?void 0:r.type)==="boolean"){p.push(["BooleanField","@refinedev/mantine"]);let N=`id: "${r.key}"`,R=le(r),w=`header: ${F({resource:e,field:r,i18n:a,noBraces:!0})}`,v=x`
                cell: function render({ getValue }) {
                    return <BooleanField value={${y("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />
                }
            `;return r.multiple&&(v=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any[]>()?.map((item, index) => (
                                    <BooleanField value={${y("item",void 0,r.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${N},
                    ${R},
                    ${w},
                    ${v}
                }
            `}},"booleanFields"),d=n(r=>{if(r.type==="date"){p.push(["DateField","@refinedev/mantine"]);let N=`id: "${r.key}"`,R=le(r),w=`header: ${F({resource:e,field:r,i18n:a,noBraces:!0})}`,v=x`
                cell: function render({ getValue }) {
                    return <DateField value={${y("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0,' + " " + ')}} />
                }
            `;return r.multiple&&(v=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any[]>()?.map((item, index) => (
                                    <DateField value={${y("item",void 0,r.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${N},
                    ${R},
                    ${w},
                    ${v}
                }
            `}},"dateFields"),$=n(r=>{if((r==null?void 0:r.type)==="richtext"){p.push(["MarkdownField","@refinedev/mantine"]);let N=`id: "${r.key}"`,R=le(r),w=`header: ${F({resource:e,field:r,i18n:a,noBraces:!0})}`,v=x`
                cell: function render({ getValue }) {
                    return <MarkdownField value={(${y("getValue<string>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0)})?.slice(0, 80) + "..." } />
                }
            `;return r.multiple&&(v=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<string[]>()?.map((item, index) => (
                                    <MarkdownField value={${y("item",void 0,r.accessor," + ")}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),`
                {
                    ${N},
                    ${R},
                    ${w},
                    ${v}
                }
            `}},"richtextFields"),T=n(r=>{if(r&&(r.type==="text"||r.type==="number")){let N=`id: "${r.key}"`,R=le(r),w=`header: ${F({resource:e,field:r,i18n:a,noBraces:!0})}`,v="";return r.multiple&&(p.push(["TagField","@refinedev/mantine"]),v=`
                    cell: function render({ getValue }) {
                        return (
                            <Group spacing="xs">
                                {getValue<any[]>()?.map((item, index) => (
                                    <TagField value={${y("item",void 0,r.accessor,' + " " + ')}} key={index} />
                                ))}
                            </Group>
                        )
                    }
                `),!r.multiple&&Array.isArray(r.accessor)&&(v=`
                    cell: function render({ getValue }) {
                        return (
                            <>{${y("getValue()",r.key,r.accessor)}}</>
                        );
                    }
                `),`
                {
                    ${N},
                    ${R},
                    ${w},
                    ${v}
                }
            `}},"basicFields"),{canEdit:M,canShow:c,canDelete:S,meta:s}=e??{},t=S||(s==null?void 0:s.canDelete);M&&p.push(["EditButton","@refinedev/mantine"]),c&&p.push(["ShowButton","@refinedev/mantine"]),t&&p.push(["DeleteButton","@refinedev/mantine"]);let A=M||c||t?x`
    {
        id: "actions",
        accessorKey: "id",
        header: ${a?'translate("table.actions")':'"Actions"'},
        cell: function render({ getValue }) {
            return (
                <Group spacing="xs" noWrap>
                    ${c?x`
                    <ShowButton
                        hideText
                        recordItemId={getValue() as string}
                    />
                    `:""}
                    ${M?x`<EditButton
                        hideText
                        recordItemId={getValue() as string}
                    />`:""}
                    ${t?x`
                    <DeleteButton
                        hideText
                        recordItemId={getValue() as string}
                    />
                    `:""}
                </Group>
            );
        },
    },
        `:"",L=o.map(r=>{switch(r==null?void 0:r.type){case"text":case"number":return T(r);case"richtext":return $(r);case"email":return I(r);case"image":return C(r);case"date":return d(r);case"boolean":return H(r);case"url":return P(r);case"relation":return V(r);default:return}});ae(p);let _=a&&"const translate = useTranslate();";return x`
    import React from "react";
    ${oe(p)}
    
    export const ${m}: React.FC<IResourceComponentsProps> = () => {
        ${_}
        const columns = React.useMemo<ColumnDef<any>[]>(() => [
            ${[...L,A].filter(Boolean).join(",")}
        ], [${a?"translate":""}]);

        const {
            getHeaderGroups,
            getRowModel,
            setOptions,
            refineCore: {
                setCurrent,
                pageCount,
                current,
                tableQueryResult: { data: tableData },
            },
        } = useTable({
            columns,
            ${i?`
            refineCoreProps: {
                resource: "${e.name}",
                ${B((e==null?void 0:e.identifier)??(e==null?void 0:e.name),u,"getList")}
            }
            `:B((e==null?void 0:e.identifier)??(e==null?void 0:e.name),u,"getList")?`refineCoreProps: { ${B((e==null?void 0:e.identifier)??(e==null?void 0:e.name),u,"getList")} },`:""}
        });

        ${h}

        setOptions((prev) => ({
            ...prev,
            meta: {
                ...prev.meta,
                ${k.join(", ")}
            },
        }));

        return (
            <List>
                <ScrollArea>
                    <Table highlightOnHover>
                        <thead>
                            {getHeaderGroups().map((headerGroup) => (
                                <tr key={headerGroup.id}>
                                    {headerGroup.headers.map((header) => {
                                        return (
                                            <th key={header.id}>
                                                {!header.isPlaceholder && (
                                                    flexRender(
                                                        header.column
                                                            .columnDef
                                                            .header,
                                                        header.getContext(),
                                                    )
                                                )}
                                            </th>
                                        );
                                    })}
                                </tr>
                            ))}
                        </thead>
                        <tbody>
                            {getRowModel().rows.map((row) => {
                                return (
                                    <tr key={row.id}>
                                        {row.getVisibleCells().map((cell) => {
                                            return (
                                                <td key={cell.id}>
                                                    {flexRender(
                                                        cell.column.columnDef.cell,
                                                        cell.getContext(),
                                                    )}
                                                </td>
                                            );
                                        })}
                                    </tr>
                                );
                            })}
                        </tbody>
                    </Table>
                </ScrollArea>    
                <br />
                <Pagination
                    position="right"
                    total={pageCount}
                    page={current}
                    onChange={setCurrent}
                />
            </List>
        );
    };
    `},"renderer"),Ke=ue({type:"list",additionalScope:[["@refinedev/mantine","RefineMantine",{List:Sr,EditButton:Ar,ShowButton:Pr,DeleteButton:Rr,TagField:Mr,EmailField:Nr,UrlField:Vr,BooleanField:Lr,DateField:Dr,MarkdownField:Er}],["@refinedev/react-table","RefineReactTable",{useTable:Gr}],["@mantine/core","MantineCore",{ScrollArea:Or,Table:Br,Pagination:Hr,Group:jr,Image:zr}],["@tanstack/react-table","TanstackReactTable",{flexRender:Kr}]],codeViewerComponent:ce,loadingComponent:me,errorComponent:pe,renderer:St});import{Create as _r,useForm as Qr,useSelect as Wr}from"@refinedev/mantine";import{MultiSelect as Ur,Select as Zr,TextInput as qr,Checkbox as Yr,Textarea as Jr,NumberInput as Xr}from"@mantine/core";var At=n(({resource:e,fields:o,meta:u,isCustomPage:i,i18n:a})=>{let m=J(e.label??e.name,"create"),g=[["IResourceComponentsProps","@refinedev/core"],["Create","@refinedev/mantine"],["useForm","@refinedev/mantine"]],p={};a&&g.push(["useTranslate","@refinedev/core"]);let h=o.filter(c=>(c==null?void 0:c.relation)&&!(c!=null&&c.fieldable)&&(c==null?void 0:c.resource)).filter(Boolean).map(c=>{var S,s;if(c!=null&&c.relation&&!c.fieldable&&c.resource)return g.push(["useSelect","@refinedev/mantine"]),`
                const { selectProps: ${D(c.key,"SelectProps")} } =
                useSelect({
                    resource: "${c.resource.name}",
                    ${$e(c)}
                    ${B(((S=c==null?void 0:c.resource)==null?void 0:S.identifier)??((s=c==null?void 0:c.resource)==null?void 0:s.name),u,"getList")}
                });
            `}).filter(Boolean),k=n(c=>{if(c.relation&&c.resource){p={...p,[c.key]:c.multiple?[]:c.accessor?{[typeof c.accessor=="string"?c.accessor:c.accessor[0]]:""}:""};let S=D(c.key,"SelectProps");return c.multiple?(g.push(["MultiSelect","@mantine/core"]),x`
                    <MultiSelect mt="sm" label=${F({resource:e,field:c,i18n:a})} {...getInputProps("${z(c.key,void 0)}")} {...${S}} filterDataOnExactSearchMatch={undefined} />
                `):(g.push(["Select","@mantine/core"]),x`
                <Select mt="sm" label=${F({resource:e,field:c,i18n:a})} {...getInputProps("${z(c.key,void 0,c.accessor)}")} {...${S}} />
            `)}},"renderRelationFields"),V=n(c=>{if(c.type==="text"||c.type==="email"||c.type==="date"||c.type==="url")return fe(c.key)||(g.push(["TextInput","@mantine/core"]),p={...p,[c.key]:c.multiple?[]:""},c.multiple)?void 0:x`
                <TextInput mt="sm" label=${F({resource:e,field:c,i18n:a})} {...getInputProps("${z(c.key,void 0,c.accessor)}")} />
            `},"textFields"),C=n(c=>{if(c.type==="image")return x`
            {/* 
                Dropzone component is not included in "@refinedev/mantine" package.
                To use a <Dropzone> component, you can follow the official documentation for Mantine.
                
                Docs: https://mantine.dev/others/dropzone/
            */}
            `},"imageFields"),I=n(c=>{if(c.type==="boolean")return g.push(["Checkbox","@mantine/core"]),p={...p,[c.key]:c.multiple?[]:""},c.multiple?void 0:x`
                <Checkbox mt="sm" label=${F({resource:e,field:c,i18n:a})} {...getInputProps("${z(c.key,void 0,c.accessor)}", { type: 'checkbox' })} />
            `},"booleanFields"),P=n(c=>{if(c.type==="date")return`
                {/* 
                    DatePicker component is not included in "@refinedev/mantine" package.
                    To use a <DatePicker> component, you can follow the official documentation for Mantine.
                    
                    Docs: https://mantine.dev/dates/date-picker/
                */}
                ${V(c)??""}
            `},"dateFields"),H=n(c=>{if(c.type==="richtext")return g.push(["Textarea","@mantine/core"]),p={...p,[c.key]:c.multiple?[]:""},c.multiple?void 0:x`
                <Textarea mt="sm" label=${F({resource:e,field:c,i18n:a})} autosize {...getInputProps("${z(c.key,void 0,c.accessor)}")} />
            `},"richtextFields"),d=n(c=>{if(c.type==="number")return fe(c.key)||(g.push(["NumberInput","@mantine/core"]),p={...p,[c.key]:c.multiple?[]:""},c.multiple)?void 0:x`
                <NumberInput mt="sm" label=${F({resource:e,field:c,i18n:a})} {...getInputProps("${z(c.key,void 0,c.accessor)}")}/>
            `},"numberFields"),$=n(c=>{if(c)return x`
                ${c}
        `},"wrapper"),T=o.map(c=>{switch(c==null?void 0:c.type){case"url":case"text":case"email":return $(V(c));case"number":return $(d(c));case"richtext":return $(H(c));case"image":return $(C(c));case"date":return $(P(c));case"boolean":return $(I(c));case"relation":return $(k(c));default:return}});ae(g);let M=a&&"const translate = useTranslate();";return x`
    ${oe(g)}
    
    export const ${m}: React.FC<IResourceComponentsProps> = () => {
        ${M}
        const { getInputProps, saveButtonProps, setFieldValue, refineCore: { formLoading } } = useForm({
            initialValues: ${JSON.stringify(p)},
            ${i?`refineCoreProps: {
                        resource: "${e.name}",
                        action: "create",
                        ${B(e.identifier??e.name,u,"getOne")}
                    }`:B(e.identifier??e.name,u,"getOne")?`refineCoreProps: { ${B(e.identifier??e.name,u,"getOne")} }`:""}
        });
    
        ${h}

        return (
            <Create isLoading={formLoading} saveButtonProps={saveButtonProps}>
                ${T.join("")}
            </Create>
        );
    };
    `},"renderer"),_e=ue({type:"create",additionalScope:[["@refinedev/mantine","RefineMantine",{Create:_r,useForm:Qr,useSelect:Wr}],["@mantine/core","MantineCore",{MultiSelect:Ur,Select:Zr,TextInput:qr,Checkbox:Yr,Textarea:Jr,NumberInput:Xr}]],codeViewerComponent:ce,loadingComponent:me,errorComponent:pe,renderer:At});import{Edit as en,useForm as tn,useSelect as rn}from"@refinedev/mantine";import{MultiSelect as nn,Select as on,TextInput as an,Group as sn,Checkbox as cn,Textarea as un,NumberInput as pn}from"@mantine/core";var Pt=n(({resource:e,fields:o,meta:u,isCustomPage:i,id:a,i18n:m})=>{let g=J(e.label??e.name,"edit"),p=D(e.label??e.name,"Data"),l=[["IResourceComponentsProps","@refinedev/core"],["Edit","@refinedev/mantine"],["useForm","@refinedev/mantine"]],h={};m&&l.push(["useTranslate","@refinedev/core"]);let V=o.filter(s=>(s==null?void 0:s.relation)&&!(s!=null&&s.fieldable)&&(s==null?void 0:s.resource)).filter(Boolean).map(s=>{var t,b;if(s!=null&&s.relation&&!s.fieldable&&s.resource){l.push(["useSelect","@refinedev/mantine"]);let A=y(p,s.key,s.accessor,!1);s.multiple&&s.accessor&&(A=`${y(p,s.key)}?.map((item: any) => ${y("item",void 0,s.accessor)})`);let L="";return s.multiple&&s.accessor&&(L=`React.useEffect(() => {
                        setFieldValue("${s.key}", ${A});
                    }, [${p}]);`),`
                const { selectProps: ${D(s.key,"SelectProps")} } =
                useSelect({
                    resource: "${s.resource.name}",
                    defaultValue: ${A},
                    ${$e(s)}
                    ${B(((t=s==null?void 0:s.resource)==null?void 0:t.identifier)??((b=s==null?void 0:s.resource)==null?void 0:b.name),u,"getList")}
                });

                ${L}
            `}}).filter(Boolean),C=n(s=>{if(s.relation&&s.resource){h={...h,[s.key]:s.multiple?[]:s.accessor?{[typeof s.accessor=="string"?s.accessor:s.accessor[0]]:""}:""};let t=D(s.key,"SelectProps");return s.multiple?(l.push(["MultiSelect","@mantine/core"]),x`
                    <MultiSelect mt="sm" label=${F({resource:e,field:s,i18n:m})} {...getInputProps("${z(s.key,void 0)}")} {...${t}} filterDataOnExactSearchMatch={undefined} />
                `):(l.push(["Select","@mantine/core"]),x`
                <Select mt="sm" label=${F({resource:e,field:s,i18n:m})} {...getInputProps("${z(s.key,void 0,s.accessor)}")} {...${t}} />
            `)}},"renderRelationFields"),I=n(s=>{if(s.type==="text"||s.type==="email"||s.type==="date"||s.type==="url"){if(l.push(["TextInput","@mantine/core"]),h={...h,[s.key]:s.multiple?[]:""},s.multiple){l.push(["Group","@mantine/core"]);let t=z(s.key,"${index}",s.accessor);return`
                <Group spacing="xs">
                    {${y(p,s.key)}?.map((item: any, index: number) => (
                        <TextInput mt="sm" key={index} label=${F({resource:e,field:s,i18n:m})} {...getInputProps(\`${t}\`)} />
                    ))}
                </Group>
                `}return x`
                <TextInput mt="sm" ${fe(s.key)?"disabled":""} label=${F({resource:e,field:s,i18n:m})} {...getInputProps("${z(s.key,void 0,s.accessor)}")} />
            `}},"textFields"),P=n(s=>{if(s.type==="image")return x`
            {/* 
                Dropzone component is not included in "@refinedev/mantine" package.
                To use a <Dropzone> component, you can follow the official documentation for Mantine.
                
                Docs: https://mantine.dev/others/dropzone/
            */}
            `},"imageFields"),H=n(s=>{if(s.type==="boolean"){if(l.push(["Checkbox","@mantine/core"]),h={...h,[s.key]:s.multiple?[]:""},s.multiple){l.push(["Group","@mantine/core"]);let t=z(s.key,"${index}",s.accessor);return`
                <Group spacing="xs">
                    {${y(p,s.key)}?.map((item: any, index: number) => (
                        <Checkbox mt="sm" key={index} label=${F({resource:e,field:s,i18n:m})} {...getInputProps(\`${t}\`, { type: 'checkbox' })} />
                    ))}
                </Group>
                `}return x`
                <Checkbox mt="sm" label=${F({resource:e,field:s,i18n:m})} {...getInputProps("${z(s.key,void 0,s.accessor)}", { type: 'checkbox' })} />
            `}},"booleanFields"),d=n(s=>{if(s.type==="date")return`
                {/* 
                    DatePicker component is not included in "@refinedev/mantine" package.
                    To use a <DatePicker> component, you can follow the official documentation for Mantine.
                    
                    Docs: https://mantine.dev/dates/date-picker/
                */}
                ${I(s)}
            `},"dateFields"),$=n(s=>{if(s.type==="richtext"){if(l.push(["Textarea","@mantine/core"]),h={...h,[s.key]:s.multiple?[]:""},s.multiple){l.push(["Group","@mantine/core"]);let t=z(s.key,"${index}",s.accessor);return`
                <Group spacing="xs">
                    {${y(p,s.key)}?.map((item: any, index: number) => (
                        <Textarea mt="sm" key={index} label=${F({resource:e,field:s,i18n:m})} {...getInputProps(\`${t}\`)} />
                    ))}
                </Group>
                `}return x`
                <Textarea mt="sm" label=${F({resource:e,field:s,i18n:m})} autosize {...getInputProps("${z(s.key,void 0,s.accessor)}")} />
            `}},"richtextFields"),T=n(s=>{if(s.type==="number"){if(l.push(["NumberInput","@mantine/core"]),h={...h,[s.key]:s.multiple?[]:""},s.multiple){l.push(["Group","@mantine/core"]);let t=z(s.key,"${index}",s.accessor);return`
                <Group spacing="xs">
                    {${y(p,s.key)}?.map((item: any, index: number) => (
                        <NumberInput mt="sm" key={index} label=${F({resource:e,field:s,i18n:m})} {...getInputProps(\`${t}\`)} />
                    ))}
                </Group>
                `}return x`
                <NumberInput mt="sm" ${fe(s.key)?"disabled":""} label=${F({resource:e,field:s,i18n:m})} {...getInputProps("${z(s.key,void 0,s.accessor)}")}/>
            `}},"numberFields"),M=n(s=>{if(s)return x`
                ${s}
        `},"wrapper"),c=o.map(s=>{switch(s==null?void 0:s.type){case"url":case"text":case"email":return M(I(s));case"number":return M(T(s));case"richtext":return M($(s));case"image":return M(P(s));case"date":return M(d(s));case"boolean":return M(H(s));case"relation":return M(C(s));default:return}});ae(l);let S=m&&"const translate = useTranslate();";return x`
    ${oe(l)}
    
    export const ${g}: React.FC<IResourceComponentsProps> = () => {
        ${S}
        const { getInputProps, saveButtonProps, setFieldValue, refineCore: { queryResult } } = useForm({
            initialValues: ${JSON.stringify(h)},
            ${i?`refineCoreProps: {
                        resource: "${e.name}",
                        id: ${be(a)},
                        action: "edit",
                        ${B((e==null?void 0:e.identifier)??(e==null?void 0:e.name),u,"getOne")}  
                    }`:B((e==null?void 0:e.identifier)??(e==null?void 0:e.name),u,"getOne")?`refineCoreProps: { ${B((e==null?void 0:e.identifier)??(e==null?void 0:e.name),u,"getOne")} }
                      `:""}
        });
    
        const ${p} = queryResult?.data?.data;
    
        ${V}

        return (
            <Edit saveButtonProps={saveButtonProps}>
                ${c.join("")}
            </Edit>
        );
    };
    `},"renderer"),Qe=ue({type:"edit",additionalScope:[["@refinedev/mantine","RefineMantine",{Edit:en,useForm:tn,useSelect:rn}],["@mantine/core","MantineCore",{MultiSelect:nn,Select:on,TextInput:an,Group:sn,Checkbox:cn,Textarea:un,NumberInput:pn}]],codeViewerComponent:ce,loadingComponent:me,errorComponent:pe,renderer:Pt});var Bi=n(({action:e,id:o,...u})=>{let{action:i,id:a}=mn();switch(e??i){case"show":return Te.createElement(ze,{...u,id:o??a});case"create":return Te.createElement(_e,{...u,id:o??a});case"edit":return Te.createElement(Qe,{...u,id:o??a});default:return Te.createElement(Ke,{...u,id:o??a})}},"MantineInferencer");export{_e as MantineCreateInferencer,At as MantineCreateRenderer,Qe as MantineEditInferencer,Pt as MantineEditRenderer,Bi as MantineInferencer,Ke as MantineListInferencer,St as MantineListRenderer,ze as MantineShowInferencer,Tt as MantineShowRenderer};
//# sourceMappingURL=mantine.js.map