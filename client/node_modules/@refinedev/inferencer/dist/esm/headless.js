var Mt=Object.defineProperty;var o=(e,n)=>Mt(e,"name",{value:n,configurable:!0});import we from"react";import{useResource as $r}from"@refinedev/core";import ne,{useContext as mr}from"react";import{useResource as Be,TranslationContext as dr}from"@refinedev/core";var Ot=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,Se=o((e,n)=>{let c=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"];Ot.test(e)&&c.unshift("url");let a=c.find(s=>s in n&&!!n[s]);if(a)return a==="firstName"&&"lastName"in n?["firstName","lastName"]:a},"getFieldableKeys");import{pickNotDeprecated as Dt}from"@refinedev/core";function Ae(e,n,c){if(n)return n;let a=c==null?void 0:c.find(p=>p.name===e),s=Dt(a==null?void 0:a.meta,a==null?void 0:a.options);return s!=null&&s.dataProviderName?s.dataProviderName:"default"}o(Ae,"pickDataProvider");var $e=o(e=>{var n;return(n=e==null?void 0:e.options)==null?void 0:n.dataProviderName},"dataProviderFromResource");var Re=o(e=>{let n=[...e].filter(Boolean).sort((c,a)=>(a.priority||0)-(c.priority||0))[0];return n||null},"pickInferredField");import Ht from"prettier/standalone";import jt from"prettier/parser-typescript";var Pe=o(e=>{try{return Ht.format(e,{parser:"typescript",plugins:[jt],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(n){return console.warn("Formatting error in inferencer",n),e}},"prettierFormat");var Ye=o(e=>e.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`),"prettySpaces");var Te=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,Je=o((e,n)=>{let c=Te.test(e),a=typeof n=="string"||typeof n=="number",s=Array.isArray(n)&&n.every(p=>typeof p=="string"||typeof p=="number");return c&&a||c&&s?{key:e,relation:!0,multiple:!!s,type:"relation",priority:1}:!1},"relationInfer");var z=o(e=>e.replace(Te,""),"removeRelationSuffix");var G=o(e=>z(e).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(y=>y.charAt(0).toUpperCase()+y.slice(1)).join(" "),"prettyString");var k=o(e=>{let{resource:n,field:c,i18n:a}=e;if(a){let p=`translate("${n.name}.fields.${c.key}")`;return e.noBraces?`${p}`:`{${p}}`}let s=G(c.key);return e.noQuotes?s:`"${s}"`},"translatePrettyString");import Xe from"pluralize";var _=o((e="")=>Xe.isSingular(e)?e:Xe.singular(e),"toSingular");import et from"pluralize";var X=o((e="")=>et.isPlural(e)?e:et.plural(e),"toPlural");var J=o(e=>{var p;let{resource:n,action:c,i18n:a,noBraces:s}=e;if(a){let y=`translate("${n.name}.titles.${c}")`;return s?y:`{${y}}`}return c==="list"?G(X(n.label??((p=n==null?void 0:n.meta)==null?void 0:p.label)??n.name)):`${G(_(n.name))} ${G(c)}`},"translateActionTitle");var ee=o(e=>{let{action:n,i18n:c,noQuotes:a}=e;return c?`{translate("buttons.${n}")}`:a?G(n):`"${G(n)}"`},"translateButtonTitle");var Ne=o(e=>e.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(s=>!s.trim().startsWith("export default")).join(`
`),"replaceExports");var tt=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Bt=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,zt=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,Le=o((e,n={})=>{let c=e.matchAll(tt),a=new Set;for(let s of c){let[,p,y,u,f]=s;if(f in n){let I=n[f];if(f==="react")continue;p&&a.add(`const { default: ${p} } = ${I};`),y&&a.add(`const${y.replace(zt,"$1: $3$4")} = ${I};`),u&&a.add(`const ${u} = ${I};`)}}return Ye(`
    ${Array.from(a).join(`
`)}
    ${e.replace(tt,"").replace(Bt,"")}
    `)},"replaceImports");import Fe from"pluralize";var Ve=o((e,n)=>e?n.find(a=>{let s=z(e.key);return a.name===s||a.name===(Fe.isPlural(s)?s:Fe.plural(s))||a.name===(Fe.isSingular(s)?s:Fe.singular(s))}):void 0,"resourceFromInferred");import Qt from"pluralize";var te=o((e,n,c="Inferred")=>{let a=e.replace(/[^a-zA-Z0-9]/g," "),s=Qt.singular(a),y=G(s).replace(/ /g,"")||c,u=n.charAt(0).toUpperCase()+n.slice(1);return/^[a-zA-Z]/.test(y)?`${y}${u}`:`${u}${y}`},"componentName");var Kt=o(e=>e?Array.isArray(e)?e.join(""):typeof e=="string"?e:typeof e=="object"||typeof e=="function"?e.toString():typeof e=="number"?String(e):typeof e=="boolean"&&e?"true":e:"","handleExpression"),x=o((e,...n)=>e.reduce((a,s,p)=>`${a}${s}${Kt(n[p])}`,"").trim(),"jsx");var Ee=o((e,n)=>`
    ${e??""}
    
    render(typeof ${n} !== "undefined" ? <${n} /> : <></>);
    `,"prepareLiveCode");var Me=o(e=>e==null?void 0:e.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,""),"removeHiddenCode");var _t=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,Oe=o(e=>_t.test(e),"shouldDotAccess");function De(e,n,c){let a=`${e}`;return n&&(a+="?.",Oe(n)?a+=n:a+=`['${n}']`),c&&(a+="?.",Oe(c)?a+=c:a+=`['${c}']`),a}o(De,"accessorSingle");function Wt(e,n,c){return(c??[]).map(s=>De(e,n,s))}o(Wt,"accessorMultiple");var d=o((e,n,c,a=' + " " + ')=>Array.isArray(c)?a?Wt(e,n,c).join(a):De(e,n,c[0]):De(e,n,c),"accessor"),W=o((e,n,c)=>{let a=e;return n&&(a+=`.${n}`),c&&(Array.isArray(c)?a+=`.${c[0]}`:a+=`.${c}`),a},"dotAccessor");var ae=o(e=>{let n=e.reduce((a,[s,p,y])=>(a[p]||(a[p]=[]),a[p].includes(s)||(y?a[p].push([s,!0]):a[p].push(s)),a),{});return Object.entries(n).map(([a,s])=>{let p=s.find(I=>Array.isArray(I)&&I[1]),y=s.filter(I=>typeof I=="string"),u=p?`${p[0]}`:"",f=y.length?`{ ${y.join(", ")} }`:"";return`import ${u}${u&&f?", ":""}${f} from "${a}";`})},"printImports");var qt=/^id$/i,xe=o(e=>qt.test(e),"isIDKey");var Ie=o(e=>e.relationInfer&&e.relationInfer.accessor?Array.isArray(e.relationInfer.accessor)?`optionLabel: "${e.relationInfer.accessor[0]}",`:e.relationInfer.accessor!=="title"?`optionLabel: "${e.relationInfer.accessor}",`:"":"","getOptionLabel");var ie=o(e=>{},"noOp");var P=o((e,n="")=>{if(Number.isInteger(Number(e)))return n.charAt(0).toLowerCase()+n.slice(1)+e;let a=e.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),s=G(a).replace(/ /g,"");return`${s.charAt(0).toLowerCase()+s.slice(1)}${n.charAt(0).toUpperCase()+n.slice(1)}`},"getVariableName");var D=o((e,n,c)=>{if(n&&c&&e){let a=e?n[e]:{},s=(a==null?void 0:a[c])??(a==null?void 0:a.default);return s?`meta: ${JSON.stringify(s)},`:""}return""},"getMetaProps"),oe=o((e,n,c)=>{if(n&&c&&e){let a=e?n[e]:{},p=[...c,"default"].reduce((y,u)=>y??(a==null?void 0:a[u]),void 0);if(p)return p}},"pickMeta");var ve=o(e=>e===void 0?e:typeof e=="string"?`"${e}"`:e,"idQuoteWrapper");var rt=o(e=>{let n=o((c,a,s,p=n,y)=>{let u=e.map(I=>I(c,a,s,p,y));return Re(u)},"fieldInferencer");return n},"composeInferencers");var nt=o(e=>o((c,a,s,p,y,u)=>e.reduce((f,I)=>I(f,a,s,p,y,u),c),"fieldTransformer"),"composeTransformers");var ot=o((e,n,c,a,s)=>{let p=Array.isArray(n),y=Array.isArray(n)&&n.every(u=>typeof u=="string"||typeof u=="number");if(p){if(!y){let f=a(e,n[0],c,a,s);return f?{...f,key:e,multiple:!0,priority:1}:!1}let u=a(e,n[0],c,a,s)||{type:"string"};return{key:e,multiple:!0,priority:1,type:u==null?void 0:u.type}}return!1},"arrayInfer");var st=o((e,n)=>typeof n=="boolean"?{key:e,type:"boolean"}:!1,"booleanInfer");import at from"dayjs";var Gt=/(_at|_on|At|On|AT|ON)(\[\])?$/,Zt=["/",":","-","."],it=o((e,n)=>{let c=Gt.test(e)&&at(n).isValid(),a=typeof n=="string"&&at(n).isValid();return typeof n=="string"&&Zt.some(p=>n.includes(p))&&(c||a)?{key:e,type:"date",priority:1}:!1},"dateInfer");var Ut=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,ct=o((e,n)=>typeof n=="string"&&Ut.test(n)?{key:e,type:"email",priority:1}:!1,"emailInfer");var Yt=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,pt=o((e,n)=>typeof n=="string"&&Yt.test(n)?{key:e,type:"image",priority:2}:!1,"imageInfer");var ut=o((e,n)=>typeof n>"u"||n===null?null:!1,"nullishInfer");var lt=o((e,n)=>{let c=typeof n=="string"&&n.length>0,a=!isNaN(n);return c&&a||typeof n=="number"?{key:e,type:"number"}:!1},"numberInfer");var mt=/id$/i,dt=o((e,n,c,a,s)=>{let p=n!==null,y=!Array.isArray(n);if(p&&y&&typeof n=="object"){let f=Object.keys(n).length===1&&mt.test(Object.keys(n)[0]),I=Object.keys(n).some(C=>mt.test(C));if(f)return{key:e,type:"relation",relation:!0,accessor:"id",priority:1};let v=Se(e,n);if((v?v.length>0:!1)&&v){let C=v&&Array.isArray(v)?v[0]:v,$=a(C,n[C],n,a,s);if($){let A=Array.isArray(v)?v.map(l=>$.accessor?`${l}.${Array.isArray($.accessor)?$.accessor[0]:$.accessor}`:l):$.accessor?Array.isArray($.accessor)?`${v}.${$.accessor[0]}`:`${v}.${$.accessor}`:v;return($==null?void 0:$.type)==="text"&&(s==="create"||s==="edit")&&I?{key:e,type:"relation",relation:!0,accessor:"id",priority:1}:{...$,fieldable:!0,key:e,accessor:A,priority:1}}}return{key:e,fieldable:!1,type:"object",priority:1}}return!1},"objectInfer");var ft=o((e,n)=>typeof n=="string"&&n.length>100?{key:e,type:"richtext",priority:1}:!1,"richtextInfer");var gt=o((e,n)=>typeof n=="string"?{key:e,type:"text"}:!1,"textInfer");var Jt=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,yt=o((e,n)=>typeof n=="string"&&Jt.test(n)?{key:e,type:"url",priority:1}:!1,"urlInfer");var ht=[ot,st,it,ct,pt,ut,lt,dt,Je,ft,gt,yt];var $t=o((e,n,c,a)=>e.map(p=>{if(!p.relation&&(p.type==="text"||p.type==="richtext"||p.type==="number")&&!p.canRelation){let y=/^[a-z0-9-]+$/,u=o(C=>y.test(`${C}`),"isValidUUID"),f=p.key.toLowerCase()!=="id";return!(!p.accessor||typeof p.accessor=="string")||!f?p:(p.multiple?a[p.key]:[a[p.key]]).every(C=>u(p.accessor?C[p.accessor]:C))?{...p,canRelation:!0}:p}return p}),"basicToRelation");var Xt=/(image|photo|avatar|cover|thumbnail|icon)/i,xt=o(e=>e.map(c=>c.type==="url"&&Xt.test(c.key)?{...c,type:"image"}:c),"imageByKey");var It=o((e,n)=>e.map(a=>{let s=Ve(a,n);return s?{...a,relation:!0,type:"relation",resource:s}:a}),"relationByResource");var vt=o((e,n,c,a,s,p)=>e.map(u=>{if(u.relation&&u.type==="relation"&&!u.resource){let f=u.accessor?a[u.key][u.accessor]:a[u.key],I=s(u.key,f,a,s,p);if(I&&I.type!=="relation")return{...u,fieldable:!0,relation:!1,type:I.type,canRelation:!0}}return u}),"relationToFieldable");var bt=[xt,It,vt,$t];import re from"react";import*as er from"@refinedev/core";import{LivePreview as tr,LiveProvider as rr}from"@aliemir/react-live";var kt=[["react","React",re],["@refinedev/core","RefineCore",er]],He=re.createContext({}),je=o(({fetchError:e,code:n,additionalScope:c,errorComponent:a})=>{let s=(n&&Ne(Le(n,[...kt,...c??[]].reduce((u,[f,I,v,T])=>T?u:{...u,[f]:I},{}))))??"",p=re.useMemo(()=>({React:re,...re,...[...kt,...c??[]].reduce((u,[f,I,v])=>({...u,[I]:v}),{})}),[c]),y=re.useMemo(()=>o(()=>{let{error:f}=re.useContext(He);return a?re.createElement(a,{error:f?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${f}</code>`:typeof e=="string"?e:e?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},"LiveErrorComponent"),[a,e]);return re.createElement(rr,{Context:He,code:s,scope:p,noInline:!0},!e&&re.createElement(tr,{Context:He}),re.createElement(y,null))},"LiveComponent");import g from"react";import nr,{defaultProps as or}from"prism-react-renderer";import sr from"prism-react-renderer/themes/vsDark";var ue=o(({code:e,loading:n})=>{let c=g.useMemo(()=>Pe(e??""),[e]),[a,s]=g.useState(!1),[p,y]=g.useState(!1),[u,f]=g.useState(!1),[I,v]=g.useState(!1),[T,C]=g.useState(!1);return g.useEffect(()=>{if(!n){let $=setTimeout(()=>{s(!0)},300);return()=>{clearTimeout($)}}return()=>{}},[n]),g.useEffect(()=>{if(typeof window<"u"){let $=window.matchMedia("(max-width: 449px)");$.matches?f(!1):f(!0);let A=o(()=>{$.matches?f(!1):f(!0)},"handleResize");return window.addEventListener("resize",A),()=>{window.removeEventListener("resize",A)}}return()=>{}},[]),g.useEffect(()=>{if(typeof window<"u"){let $=window.matchMedia("(max-width: 1280px)");$.matches?v(!0):v(!1);let A=o(()=>{$.matches?v(!0):v(!1)},"handleResize");return window.addEventListener("resize",A),()=>{window.removeEventListener("resize",A)}}return()=>{}},[]),c&&!n?g.createElement(g.Fragment,null,u&&g.createElement("div",{className:"refine-inferencer--code-viewer",style:{position:"sticky",bottom:"24px",paddingTop:"24px",left:0,right:0,width:"100%",zIndex:10,display:"flex",justifyContent:"center",transition:"all 0.2s ease",opacity:a&&!p?1:0,transform:a&&!p?"translateY(0)":"translateY(100px)"}},g.createElement("div",{style:{width:"calc(100% - calc(64px * 2))",maxWidth:"1080px",padding:"20px",backgroundColor:"#1A1A1A",boxShadow:"0px 4px 16px -4px rgba(0, 0, 0, 0.5), 0px 8px 32px -8px rgba(0, 0, 0, 0.35)",borderRadius:"16px",display:"flex",alignItems:"center",justifyContent:"space-between",flexDirection:I?"column":"row",gap:"12px"}},g.createElement("div",{style:{display:"flex",alignItems:"flex-start",gap:"8px"}},g.createElement("div",null,g.createElement(ir,null)),g.createElement("div",{style:{fontSize:"14px",lineHeight:"20px",color:"#ffffff"}},g.createElement("p",{style:{padding:0,margin:0}},"Most of the page code is auto-generated by the"," ",g.createElement("span",{style:{textDecoration:"underline"}},"Inferencer")," ","feature, based on your backend data structure."),g.createElement("p",{style:{padding:0,margin:0}},"While this is an excellent way to experiment with refine,"," ",g.createElement("span",{style:{fontWeight:600}},"it's not intended to be used on production.")))),g.createElement("div",null,g.createElement("button",{onPointerEnter:()=>C(!0),onPointerLeave:()=>C(!1),onClick:()=>y(!0),style:{appearance:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:T?"scale(1.025)":void 0,filter:T?"brightness(1.1)":void 0}},g.createElement(Ft,{style:{flexShrink:0}}),g.createElement("span",null,"Show the auto-generated code"))))),g.createElement(ar,{visible:p,onClose:()=>y(!1),code:c})):null},"SharedCodeViewer"),ar=o(({visible:e,onClose:n,code:c=""})=>{let a=g.useRef(null),[s,p]=g.useState(!1),[y,u]=g.useState(!1),[f,I]=g.useState(!1),[v,T]=g.useState(!1);g.useEffect(()=>{if(typeof document<"u"){let m=o(i=>{a.current&&!a.current.contains(i.target)&&n()},"onOutsideClick");return document.addEventListener("pointerdown",m),()=>{document.removeEventListener("pointerdown",m)}}return()=>{}},[n]);let C=o(()=>{typeof navigator<"u"&&(navigator.clipboard.writeText(c),p(!0),setTimeout(()=>{p(!1)},1e3))},"onCopy"),$=g.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center"}},g.createElement("div",{style:{fontWeight:700,fontSize:"20px",lineHeight:"32px",color:"#0D0D0D"}},"Auto-generated code by Inferencer"),g.createElement("button",{onClick:n,onPointerEnter:()=>I(!0),onPointerLeave:()=>I(!1),style:{flexShrink:0,appearance:"none",border:"none",background:"none",padding:0,margin:0,outline:"none",borderRadius:"50px",width:"32px",height:"32px",cursor:"pointer",transition:"all 0.15s ease",transform:f?"scale(1.05)":void 0,filter:f?"brightness(0.8)":void 0}},g.createElement(cr,null))),A=g.createElement("div",{style:{fontSize:"13px",borderRadius:"8px",flex:"1",overflow:"scroll",background:"#1E1E1E"}},g.createElement(nr,{...or,theme:sr,code:c,language:"tsx"},({className:m,style:i,tokens:b,getLineProps:N,getTokenProps:S})=>g.createElement("pre",{className:m,style:{...i,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},b.map((B,K)=>g.createElement("div",{key:K,...N({line:B,key:K})},B.map((R,M)=>g.createElement("span",{key:M,...S({token:R,key:M})})))))));return g.createElement("div",{className:"refine-inferencer--code-viewer-modal",style:{position:"fixed",top:0,left:0,right:0,bottom:0,zIndex:9999,backgroundColor:"rgba(0, 0, 0, 0.5)",transition:"all 0.2s ease",opacity:e?1:0,pointerEvents:e?"all":"none",display:"flex",justifyContent:"center",alignItems:"center"}},g.createElement("div",{ref:a,style:{transform:e?"scale(1) translateY(0px)":"scale(0) translateY(-200px)",transition:"all 0.25s cubic-bezier(.35,1.29,.81,1.08)",transitionDelay:"0.25",width:"calc(100% - calc(32px * 2))",height:"calc(100% - calc(32px * 2))",backgroundColor:"#fff",maxWidth:"640px",maxHeight:"720px",borderRadius:"8px",padding:"16px"}},g.createElement("div",{style:{display:"flex",flexDirection:"column",height:"100%",width:"100%",gap:"16px"}},$,A,g.createElement("div",{style:{display:"flex",justifyContent:"flex-start",alignItems:"flex-end",gap:"16px"}},g.createElement("button",{onPointerEnter:()=>u(!0),onPointerLeave:()=>u(!1),onClick:C,style:{appearance:"none",height:"40px",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",position:"relative",overflow:"hidden",transition:"filter 0.2s ease",transform:y?"scale(1.025)":"scale(1)",filter:y?"brightness(1.1)":void 0}},g.createElement(Ct,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),g.createElement("span",null,"Copy Generated Code"),g.createElement("div",{style:{position:"absolute",width:"100%",height:"100%",top:0,left:0,display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",transition:"all 0.2s ease",transform:s?"translateY(0)":"translateY(40px)"}},g.createElement(Ct,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),g.createElement("span",null,"Copied!"))),g.createElement("a",{onPointerEnter:()=>T(!0),onPointerLeave:()=>T(!1),href:"https://refine.dev/docs/packages/documentation/inferencer",target:"_blank",rel:"noreferrer",style:{appearance:"none",textDecoration:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"rgba(0, 128, 255, 0.1)",color:"#0080FF",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:v?"scale(1.025)":void 0,filter:v?"brightness(1.1)":void 0}},g.createElement(Ft,{style:{flexShrink:0}}),g.createElement("span",null,"Learn more about inferencer"))))))},"CodeModal"),ir=o(e=>g.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,fill:"none",...e},g.createElement("path",{fill:"#0080FF",fillRule:"evenodd",d:"M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10Zm0-15a1.25 1.25 0 1 0 0 2.5A1.25 1.25 0 0 0 10 5Zm0 10c.69 0 1.25-.56 1.25-1.25V10a1.25 1.25 0 1 0-2.5 0v3.75c0 .69.56 1.25 1.25 1.25Z",clipRule:"evenodd"})),"InfoIcon"),Ft=o(e=>g.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:16,height:16,fill:"none",...e},g.createElement("path",{fill:"currentColor",d:"M5 2a1 1 0 0 1 0 2H4v8h8v-1a1 1 0 1 1 2 0v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h1Z"}),g.createElement("path",{fill:"currentColor",d:"M9 2a1 1 0 0 0 0 2h1.586L6.293 8.293a1 1 0 0 0 1.414 1.414L12 5.414V7a1 1 0 1 0 2 0V3a1 1 0 0 0-1-1H9Z"})),"OpenIcon"),cr=o(e=>g.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:32,height:32,fill:"none",...e},g.createElement("path",{fill:"#A6A6A6",fillRule:"evenodd",d:"M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16Zm-2.586-21.414a2 2 0 1 0-2.828 2.828L13.172 16l-2.586 2.586a2 2 0 1 0 2.828 2.828L16 18.828l2.586 2.586a2 2 0 1 0 2.828-2.828L18.828 16l2.586-2.586a2 2 0 1 0-2.828-2.828L16 13.172l-2.586-2.586Z",clipRule:"evenodd"})),"CloseIcon"),Ct=o(e=>g.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,viewBox:"0 0 24 24",fill:"none",...e},g.createElement("path",{fill:"currentColor",fillRule:"evenodd",d:"M8 5a3 3 0 0 0 3 3h2a3 3 0 0 0 3-3h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h1Zm0 7a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2H9a1 1 0 0 1-1-1Zm1 3a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2H9Z",clipRule:"evenodd"}),g.createElement("path",{fill:"currentColor",d:"M13 4a1 1 0 1 1 0 2h-2a1 1 0 1 1 0-2h2Z"})),"ClipboardIcon");import fe from"react";import{useDataProvider as pr,useResource as ur}from"@refinedev/core";var wt=o((e,n,c,a)=>{let{resource:s,id:p,resources:y}=ur(n),u=c??p,f=pr(),[I,v]=fe.useState(void 0),[T,C]=fe.useState(void 0),[$,A]=fe.useState(void 0),[l,m]=fe.useState(!0),[i,b]=fe.useState(!1),N=fe.useCallback(async S=>{var R;let B=$e(s)??Ae(s==null?void 0:s.name,void 0,y),K=f(B);b(!0),v(void 0);try{if((e==="list"||e==="create")&&s){let M=await K.getList({resource:s==null?void 0:s.name,meta:oe((s==null?void 0:s.identifier)??(s==null?void 0:s.name),a,["getList"])}),r=(R=M.data)==null?void 0:R[0];r||v(`<p>No records/data found for resource "${s==null?void 0:s.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),C(r),A(M.data),setTimeout(()=>{b(!1)},500)}if((e==="edit"||e==="show")&&S&&s){let r=(await K.getOne({resource:s==null?void 0:s.name,id:S,meta:oe((s==null?void 0:s.identifier)??(s==null?void 0:s.name),a,["getOne"])})).data;r||v(`<p>No records/data found for resource "${s==null?void 0:s.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),C(r),setTimeout(()=>{b(!1)},500)}}catch(M){console.warn("An error occured while fetching the resource data. Please check the error message below:",M),v(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${s==null?void 0:s.name}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{b(!1)},500)}},[e,f,s,y]);return fe.useEffect(()=>{m(!1),!i&&!T&&N(u)},[N,u]),{data:T,datas:$,loading:i,initial:l,error:I}},"useInferFetch");import be from"react";import{useDataProvider as lr}from"@refinedev/core";import{get as St}from"lodash-es";var At=o(({record:e,fields:n,infer:c,meta:a})=>{let s=lr(),[p,y]=be.useState([]),[u,f]=be.useState(!0),[I,v]=be.useState(!1),T=be.useCallback(async C=>{console.groupCollapsed("@refinedev/inferencer is trying to detect relations");let $=[];v(!0);try{let A=C.map(async m=>{var i,b,N,S,B;if(m&&(m.relation||m.canRelation)&&e){if(m.relationInfer)return m;let K=$e(m.resource),R=s(K),M=m.multiple,r=Array.isArray(m.accessor)?void 0:m.multiple?e[m.key].map(t=>m.accessor?St(t,m.accessor):t)[0]:m.accessor?St(e[m.key],m.accessor):e[m.key];if(r&&m.resource)try{let t={};if(M&&R.getMany){let{data:F}=await R.getMany({resource:m.resource.name,ids:[r],meta:oe(((i=m.resource)==null?void 0:i.identifier)??((b=m.resource)==null?void 0:b.name),a,["getMany"])});t=F==null?void 0:F[0]}else{let{data:F}=await R.getOne({resource:m.resource.name,id:r,meta:oe(((N=m.resource)==null?void 0:N.identifier)??((S=m.resource)==null?void 0:S.name),a,M?["getMany","getOne"]:["getOne"])});t=F}$.push({status:"success",resource:m.resource.name,field:m.key});let h=c("__",t,{},c);return{...m,relationInfer:h}}catch{return $.push({status:"error",resource:m.resource.name,field:m.key}),{...m,relationInfer:null}}if(r){let t,h;try{let H={};if(M&&R.getMany){let{data:L}=await((B=R.getMany)==null?void 0:B.call(R,{resource:X(z(m.key)),ids:[r],meta:oe(X(z(m.key)),a,["getMany"])}));H=L==null?void 0:L[0]}else{let{data:L}=await R.getOne({resource:X(z(m.key)),id:r,meta:oe(X(z(m.key)),a,M?["getMany","getOne"]:["getOne"])});H=L}$.push({status:"success",resource:X(z(m.key)),field:m.key}),t=H,h=!0}catch{$.push({status:"error",resource:X(z(m.key)),field:m.key});let L={};try{if(M&&R.getMany){let{data:Q}=await R.getMany({resource:_(z(m.key)),meta:oe(_(z(m.key)),a,["getMany"]),ids:[r]});L=Q==null?void 0:Q[0]}else{let{data:Q}=await R.getOne({resource:_(z(m.key)),meta:oe(_(z(m.key)),a,M?["getMany","getOne"]:["getOne"]),id:r});L=Q}$.push({status:"success",resource:_(z(m.key)),field:m.key}),t=L,h=!1}catch{return $.push({status:"error",resource:_(z(m.key)),field:m.key}),{...m,relationInfer:null}}}let F=c("__",t,{},c),w=z(m.key);return{...m,relation:!0,type:"relation",resource:{name:h?X(w):_(w)},fieldable:!1,canRelation:void 0,relationInfer:F}}return{...m,relationInfer:null}}return m}),l=await Promise.all(A);y(l.filter(m=>m)),setTimeout(()=>{v(!1)},500)}catch{setTimeout(()=>{v(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${$.length} attempts and succeeded with ${$.filter(A=>A.status==="success").length} attempts.`),console.groupEnd(),console.info("@refinedev/inferencer may send multiple requests to your API for nonexistent resources when trying to detect relations. To learn more about how the inferencer works, visit https://s.refine.dev/how-inferencer-works")},500)},[s,e]);return be.useEffect(()=>{f(!1),!I&&n&&n.length>0&&p.length===0&&T(n)},[T,I,n,T]),{fields:p,loading:I,initial:u}},"useRelationFetch");var le=o(({type:e,additionalScope:n=[],customElements:c=[],fieldTransformers:a=[],renderer:s,loadingComponent:p,errorComponent:y,codeViewerComponent:u})=>{let f=rt([...ht,...c]),I=nt([...bt,...a]),v=o(({resourceName:C,fieldTransformer:$,hideCodeViewerInProduction:A,meta:l,id:m})=>{var Ze,Ue;let{resource:i,resources:b}=Be(C),{i18nProvider:N}=mr(dr),{resource:S}=Be(),{data:B,datas:K,loading:R,initial:M,error:r}=wt(e,C??(i==null?void 0:i.name),m,l),t=o((V,E,Z)=>{let U=f(V,E,Z,f,e);if(U&&i){let Y=I([U],b,i,Z,f,e),j=$?Y.flatMap(O=>{let q=$(O);return q?[q]:[]}):Y;return j==null?void 0:j[0]}},"inferSingleField"),h=o(V=>Object.keys(V).map(Z=>{let U=V[Z];return t(Z,U,V)}).filter(Boolean),"inferSingleRecord"),F=o(V=>{let E=V.map(O=>h(O)),Z=V.flatMap(O=>Object.keys(O)).filter((O,q,ye)=>ye.indexOf(O)===q),U={},Y=Z.map(O=>{let q=E.map(ce=>ce.find(se=>se.key===O));return q.reduce((ce,se,Ce)=>{if(!se)return ce;let he=q.filter(pe=>(pe==null?void 0:pe.key)===se.key&&(pe==null?void 0:pe.type)===se.type).length;return he>ce.count?(U[O]=V[Ce][O],{count:he,field:se}):ce},{count:0,field:void 0}).field});return{commonRecord:U,inferredFields:Y}},"inferMultipleRecords"),[w,H]=ne.useMemo(()=>{if(K&&(e==="list"||e==="create")){let V=F(K);return[V.inferredFields,V.commonRecord]}if(B){let V=Object.keys(B).map(E=>{let Z=B[E];return f(E,Z,B,f,e)}).filter(Boolean);if(i){let E=I(V,b,i,B,f,e);return[$?E.flatMap(U=>{let Y=$(U);return Y?[Y]:[]}):E,B]}return[[],B]}return[[],void 0]},[B,K,b,i,$]),{fields:L,loading:Q}=At({record:H,fields:w,infer:f,meta:l}),qe=ne.useMemo(()=>{let V=[];return L.forEach((E,Z,U)=>{if(E.resource){if(V.findIndex(j=>{var O,q;return((O=j.resource)==null?void 0:O.name)===((q=E.resource)==null?void 0:q.name)})>-1)return;let Y=U.filter((j,O)=>{var q,ye,ce,se,Ce,he;if(O!==Z){let pe=E.resource,Vt=j.resource,Et=((q=j.resource)==null?void 0:q.identifier)||((ye=E.resource)==null?void 0:ye.identifier)?((ce=j.resource)==null?void 0:ce.identifier)===((se=E.resource)==null?void 0:se.identifier):((Ce=j.resource)==null?void 0:Ce.name)===((he=E.resource)==null?void 0:he.name);return pe&&Vt&&Et}else return!1});if(Y.length>0)if(e==="create"||e==="edit"){let j;[E,...Y].find(O=>{O.fieldable!==!0&&j===void 0&&(j=O)}),j?V.push(j):V.push(E)}else{let j;[E,...Y].find(O=>{O.fieldable!==!1&&j===void 0&&(j=O)}),j?V.push(j):V.push(E)}else V.push(E)}else V.push(E)}),V},[L,e]),Ge=ne.useMemo(()=>!R&&!Q&&!M&&i?s({resource:i,resources:b,fields:qe,infer:f,meta:l,isCustomPage:i.name!==(S==null?void 0:S.name),id:m,i18n:!!N}):"",[i,b,qe,R,Q]),Lt=A;return ne.createElement(ne.Fragment,null,p&&(R||Q)&&ne.createElement(p,null),!R&&!Q&&ne.createElement(ne.Fragment,null,ne.createElement(je,{fetchError:!R&&r?r:!R&&!M&&!B,code:Ee(Ge,te(((Ze=i==null?void 0:i.meta)==null?void 0:Ze.label)??((Ue=i==null?void 0:i.options)==null?void 0:Ue.label)??(i==null?void 0:i.label)??(i==null?void 0:i.name)??"Resource",e)),errorComponent:y,additionalScope:n}),typeof u<"u"&&!Lt?ne.createElement(u,{code:Me(Ge),loading:R||Q}):null))},"Inferencer");return o(({name:C,resource:$,fieldTransformer:A,meta:l,hideCodeViewerInProduction:m,id:i})=>{let{resource:b}=Be($??C),N=`${(b==null?void 0:b.identifier)??(b==null?void 0:b.name)}-${e}-${i}`;return ne.createElement(v,{hideCodeViewerInProduction:m,fieldTransformer:A,resourceName:$??C,meta:l??{},key:N,id:i})},"InferencerComponent")},"createInferencer");import ze from"react";var me=o(({error:e})=>e?ze.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",minHeight:"300px",position:"relative"}},ze.createElement("div",{style:{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)"}},ze.createElement("div",{style:{fontSize:"1.5rem",fontWeight:"bold"},dangerouslySetInnerHTML:{__html:e??""}}))):null,"ErrorComponent");import ke from"react";var de=o(()=>{let[e,n]=ke.useState(0);return ke.useEffect(()=>{if(typeof window<"u"){let c=setInterval(()=>{n(a=>a===3?0:a+1)},300);return()=>{clearInterval(c)}}return()=>{}},[]),ke.createElement("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",minHeight:"120px",position:"relative"}},ke.createElement("div",{style:{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)"}},ke.createElement("span",{style:{fontSize:"1rem",fontWeight:600}},"loading",".".repeat(e))))},"LoadingComponent");var Rt=o(({resource:e,fields:n,meta:c,isCustomPage:a,id:s,i18n:p})=>{let y=te(e.label??e.name,"show"),u="record",f=[["React","react",!0],["useShow","@refinedev/core"],["useResource","@refinedev/core"],["useNavigation","@refinedev/core"],["IResourceComponentsProps","@refinedev/core"]];p&&f.push(["useTranslate","@refinedev/core"]);let v=n.filter(t=>(t==null?void 0:t.relation)&&!(t!=null&&t.fieldable)&&(t==null?void 0:t.resource)).filter(Boolean).map(t=>{var h,F,w,H;if(t!=null&&t.relation&&!t.fieldable&&t.resource){if(t.multiple){f.push(["useMany","@refinedev/core"]);let L=d(u,t.key);return t.accessor&&(L=`${d(u,t.key)}?.map((item: any) => ${d("item",void 0,t.accessor)})`),`
                const { data: ${P(t.key,"Data")}, isLoading: ${P(t.key,"IsLoading")} } =
                useMany({
                    resource: "${t.resource.name}",
                    ids: ${L} || [],
                    queryOptions: {
                        enabled: !!${u} && !!${L}?.length,
                    },
                    ${D(((h=t==null?void 0:t.resource)==null?void 0:h.identifier)??((F=t==null?void 0:t.resource)==null?void 0:F.name),c,"getMany")}
                });
                `}return f.push(["useOne","@refinedev/core"]),`
                const { data: ${P(t.key,"Data")}, isLoading: ${P(t.key,"IsLoading")} } =
                useOne({
                    resource: "${t.resource.name}",
                    id: ${d(u,t.key,t.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${u},
                    },
                    ${D(((w=t==null?void 0:t.resource)==null?void 0:w.identifier)??((H=t==null?void 0:t.resource)==null?void 0:H.name),c,"getOne")}
                });
            `}}).filter(Boolean),T=o(t=>{if(t.relation&&t.resource){let h=P(t.key,"Data"),F=P(t.key,"IsLoading");if(t.multiple){let w=d(u,t.key)+"?.length";return x`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                    {${F} && ${w} ? <>Loading...</> : (
                        <>
                        ${(()=>{var H;if(t.relationInfer)if((H=t.relationInfer)!=null&&H.accessor){if(Array.isArray(t.relationInfer.accessor))return"";{let L=P(t.key),Q=d(L,void 0,t.relationInfer.accessor);return x`
                                            {record?.${t.key}?.length ? ${h}?.data?.map((${L}: any) => <li key={${Q}}>{${Q}}</li>) : <></>}
                                        `}}else return"";else return""})()}
                        </>
                    )}
                    </ul>
                </div>
                `}return t.fieldable?x`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <div>{${d(u,t.key,t.accessor)}}</div>
                </div>
                `:x`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <div>
                    {${F} ? <>Loading...</> : (
                        <>
                        ${(()=>{var w;return t.relationInfer?(w=t.relationInfer)!=null&&w.accessor?Array.isArray(t.relationInfer.accessor)?`{${d(`${h}?.data`,void 0,t.relationInfer.accessor,' + " " + ')}}`:`{${h}?.data?.${t.relationInfer.accessor}}`:`{${h}?.data}`:`{${h}?.data?.id}`})()}
                        </>
                    )}
                    </div>
                </div>
                `}},"renderRelationFields"),C=o(t=>{if(t.type==="text"){if(t.multiple){let h=d("item",void 0,t.accessor);return x`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                        {${d(u,t.key)}?.map((item: any) => (
                            <li key={${h}}>
                                {${h}}
                            </li>
                        ))}
                    </ul>
                </div>
            `}return x`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <div>
                    {${d(u,t.key,t.accessor)}}
                    </div>
                </div>
            `}},"textFields"),$=o(t=>{if(t.type==="image"){if(t.multiple){let h=d("item",void 0,t.accessor);return x`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                    {${d(u,t.key)}?.map((item: any) => (
                        <li key={${h}}>
                            <img style={{ maxWidth: 200 }} src={${h}}/>
                        </li>
                    ))}
                    </ul>
                </div>
            `}return x`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <img src={{ maxWidth: 200 }} src={${d(u,t.key,t.accessor," + ")}} />
                </div>
                `}},"imageFields"),A=o(t=>{if(t.type==="email"){if(t.multiple){let h=d("item",void 0,t.accessor);return x`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                        {${d(u,t.key)}?.map((item: any) => (
                            <li key={${h}}>
                                <a href={"mailto:" + ${h}}>{${h}}</a>
                            </li>
                        ))}
                    </ul>
                </div>
            `}return x`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <div>
                        <a href={"mailto:" + ${d(u,t.key,t.accessor," + ")}}>
                            {${d(u,t.key,t.accessor," + ")}}
                        </a>
                    </div>
                </div>
            `}},"emailFields"),l=o(t=>{if(t.type==="url"){if(t.multiple){let h=d("item",void 0,t.accessor);return x`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                        {${d(u,t.key)}?.map((item: any) => (
                            <li key={${h}}>
                                <a href={${h}}>{${h}}</a>
                            </li>
                        ))}
                    </ul>
                </div>
            `}return x`
            <div style={{ marginTop: "6px" }}>
                <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                <div>
                    <a href={${d(u,t.key,t.accessor," + ")}} target="_blank" rel="noreferrer">
                        {${d(u,t.key,t.accessor," + ")}}
                    </a>
                </div>
            </div>
            `}},"urlFields"),m=o(t=>{if(t.type==="boolean"){if(t.multiple){let h=d("item",void 0,t.accessor);return x`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                        {${d(u,t.key)}?.map((item: any) => (
                            <li key={${h}}>
                                {${h} ? "Yes" : "No"}
                            </li>
                        ))}
                    </ul>
                </div>
            `}return x`
            <div style={{ marginTop: "6px" }}>
                <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                <div>
                {${d(u,t.key,t.accessor," && ")} ? "Yes" : "No"}
                </div>
            </div>
            `}},"booleanFields"),i=o(t=>{if(t.type==="date"){if(t.multiple){let h=d("item",void 0,t.accessor);return x`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                    {${d(u,t.key)}?.map((item: any) => (
                        <li key={${h}}>
                            {(new Date(${h})).toLocaleString(undefined, { timeZone: "UTC" })}
                        </li>
                    ))}
                    </ul>
                </div>
            `}return x`
            <div style={{ marginTop: "6px" }}>
                <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                <div>
                    {(new Date(${d(u,t.key,t.accessor," + ' ' + ")})).toLocaleString(undefined, { timeZone: "UTC" })}
                </div>
            </div>
            `}},"dateFields"),b=o(t=>{if(t.type==="richtext")return x`
            <div style={{ marginTop: "6px" }}>
                <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                <p>
                {${d(u,t.key,t.accessor,' + " " + ')}}
                </p>
            </div>
            `},"richtextFields"),N=o(t=>{if(t.type==="number"){if(t.multiple){let h=d("item",void 0,t.accessor);return x`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <ul>
                        {${d(u,t.key)}?.map((item: any) => (
                        <li key={${h}}>
                            {${h}}
                        </li>
                        ))}
                    </ul>
                </div>
                `}return x`
                <div style={{ marginTop: "6px" }}>
                    <h5>${k({resource:e,field:t,i18n:p,noQuotes:!0})}</h5>
                    <div>
                    {${d(u,t.key,t.accessor,' + " " + ')} ?? ""}
                    </div>
                </div>
            `}},"numberFields"),S=o(t=>{if(t)return x`
                ${t}
            `},"wrapper"),B=n.map(t=>{switch(t==null?void 0:t.type){case"text":return S(C(t));case"number":return S(N(t));case"richtext":return S(b(t));case"email":return S(A(t));case"image":return S($(t));case"date":return S(i(t));case"boolean":return S(m(t));case"url":return S(l(t));case"relation":return S(T(t));default:return}}),{canEdit:K,list:R}=e??{},M=!!R;ie(f);let r=p&&"const translate = useTranslate();";return x`
    ${ae(f)}
    
    export const ${y}: React.FC<IResourceComponentsProps> = () => {
        ${r}
        const { edit, list } = useNavigation();
        ${a?"":"const { id } = useResource();"}
        const { queryResult } = useShow(${a?`{ 
                    resource: "${e.name}", 
                    id: ${ve(s)},
                    ${D((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")}
                }`:D((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")?`{ ${D((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")} }`:""});
        const { data, isLoading } = queryResult;

        const ${u} = data?.data;
    
        ${v}

        return (
            <div style={{ padding: "16px" }}>
            <div style={{ display: "flex", alignItems: "center", justifyContent: "space-between" }}>
                <h1>${J({resource:e,action:"show",i18n:p})}</h1>
                <div style={{ display: "flex", gap: "8px" }}>
                ${M?x`<button onClick={() => list("${e.name}")}>${J({resource:e,action:"list",i18n:p})}</button>`:""}
                ${K?x`<button onClick={() => edit("${e.name}", ${a?`"${s}"`:"id ?? ''"})}>${ee({action:"edit",i18n:p,noQuotes:!0})}</button>`:""}
                </div>
            </div>
                <div>
                    ${B.join("")}
                </div>
            </div>
        );
    };
    `},"renderer"),Qe=le({type:"show",additionalScope:[],codeViewerComponent:ue,loadingComponent:de,errorComponent:me,renderer:Rt});import{useTable as fr}from"@refinedev/react-table";import{flexRender as gr}from"@tanstack/react-table";var ge=o(e=>Array.isArray(e.accessor)||e.multiple?`accessorKey: "${e.key}"`:e.accessor?`accessorKey: "${W(e.key,void 0,e.accessor)}"`:`accessorKey: "${e.key}"`,"getAccessorKey"),Pt=o(({resource:e,fields:n,meta:c,isCustomPage:a,i18n:s})=>{let p=te(e.label??e.name,"list"),y="tableData?.data",u=[["React","react",!0],["IResourceComponentsProps","@refinedev/core"],["useNavigation","@refinedev/core"],["useTable","@refinedev/react-table"],["ColumnDef","@tanstack/react-table"],["flexRender","@tanstack/react-table"]];s&&u.push(["useTranslate","@refinedev/core"]);let f=n.filter(r=>(r==null?void 0:r.relation)&&!(r!=null&&r.fieldable)&&(r==null?void 0:r.resource)),I=f.filter(Boolean).map(r=>{var t,h;if(r!=null&&r.relation&&!r.fieldable&&r.resource){u.push(["GetManyResponse","@refinedev/core"]),u.push(["useMany","@refinedev/core"]);let F="";return r.multiple?F=`[].concat(...(${y}?.map((item) => ${d("item",r.key,r.accessor,!1)}) ?? []))`:F=`${y}?.map((item) => ${d("item",r.key,r.accessor,!1)}) ?? []`,`
                const { data: ${P(r.key,"Data")} } =
                useMany({
                    resource: "${r.resource.name}",
                    ids: ${F},
                    queryOptions: {
                        enabled: !!${y},
                    },
                    ${D(((t=r==null?void 0:r.resource)==null?void 0:t.identifier)??((h=r==null?void 0:r.resource)==null?void 0:h.name),c,"getMany")}
                });
                `}}).filter(Boolean),v=f==null?void 0:f.map(r=>{if(r&&r.resource)return P(r.key,"Data")}).filter(Boolean),T=o(r=>{var t;if(r.relation&&r.resource){let h=`${P(r.key,"Data")}?.data`;if(Array.isArray(r.accessor))return;let F=`id: "${r.key}"`,w=`header: ${k({resource:e,field:r,i18n:s,noBraces:!0})}`,H=ge(r),L="";if(r.multiple){let Q="item";r!=null&&r.relationInfer&&(Q=d("item",void 0,r.relationInfer.accessor)),L=`cell: function render({ getValue, table }) {
                    const meta = table.options.meta as {
                        ${P(r.key,"Data")}: GetManyResponse;
                    };

                    ${r!=null&&r.accessor?"try {":""}

                    const ${P(r.key,"")} = getValue<any[]>()?.map((item) => {
                        return meta.${P(r.key,"Data")}?.data?.find(
                            (resourceItems) => resourceItems.id === ${d("item",void 0,r.accessor)}
                        );
                    })


                    return (
                        <ul>
                            {${P(r.key,"")}?.map((item, index) => (
                                <li key={index}>
                                    {${Q}}
                                </li>
                            ))}
                        </ul>
                    )
                    ${r!=null&&r.accessor?" } catch (error) { return null; }":""}
                }
            `}else r!=null&&r.relationInfer?L=`cell: function render({ getValue, table }) {
                        const meta = table.options.meta as {
                            ${P(r.key,"Data")}: GetManyResponse;
                        };

                        ${r!=null&&r.accessor?"try {":""}

                        const ${P(r.key,"")} = meta.${h}?.find(
                            (item) => item.id == getValue<any>(),
                        );

                        return ${d(P(r.key),void 0,(t=r==null?void 0:r.relationInfer)==null?void 0:t.accessor)} ?? "Loading...";

                        ${r!=null&&r.accessor?" } catch (error) { return null; }":""}
                    },`:L="";return`
                {
                    ${F},
                    ${w},
                    ${H},
                    ${L}
                }
            `}},"renderRelationFields"),C=o(r=>{if(r.type==="image"){let t=`id: "${r.key}"`,h=ge(r),F=`header: ${k({resource:e,field:r,i18n:s,noBraces:!0})}`,w=x`
                cell: function render({ getValue }) {
                    ${r!=null&&r.accessor?"try {":""}
                        return <img style={{ maxWidth: "100px" }} src={${d("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}} />
                    ${r!=null&&r.accessor?" } catch (error) { return null; }":""}
                }
            `;if(r.multiple){let H=d("item",void 0,r.accessor," + ");w=`
                    cell: function render({ getValue }) {
                        ${r!=null&&r.accessor?"try {":""}
                            return (
                                <ul>
                                    {getValue<any[]>()?.map((item, index) => (
                                        <li key={index}><img src={${H}} style={{ height: "50px", maxWidth: "100px" }} /></li>
                                    ))}
                                </ul>
                            )
                        ${r!=null&&r.accessor?" } catch (error) { return null; }":""}
                    }
                `}return`
                {
                    ${t},
                    ${h},
                    ${F},
                    ${w}
                }
            `}},"imageFields"),$=o(r=>{if(r.type==="email"){let t=`id: "${r.key}"`,h=ge(r),F=`header: ${k({resource:e,field:r,i18n:s,noBraces:!0})}`,w=x`
                cell: function render({ getValue }) {
                    return <a href={"mailto:" + ${d("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0,' + " " + ')}}>{${d("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0,' + " " + ')}}</a>
                }
            `;return r.multiple&&(w=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                        {${d("item",void 0,r.accessor," + ")}}
                                    </li>
                                ))}
                            </ul>
                        )
                    }
                `),`
                {
                    ${t},
                    ${h},
                    ${F},
                    ${w}
                }
            `}},"emailFields"),A=o(r=>{if(r.type==="url"){let t=`id: "${r.key}"`,h=ge(r),F=`header: ${k({resource:e,field:r,i18n:s,noBraces:!0})}`,w=x`
                cell: function render({ getValue }) {
                    return <a href={${d("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}}>{${d("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")}}</a>
                }
            `;return r.multiple&&(w=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                        {${d("item",void 0,r.accessor," + ")}}
                                    </li>
                                ))}
                            </ul>
                        )
                    }
                `),`
                {
                    ${t},
                    ${h},
                    ${F},
                    ${w}
                }
            `}},"urlFields"),l=o(r=>{if((r==null?void 0:r.type)==="boolean"){let t=`id: "${r.key}"`,h=ge(r),F=`header: ${k({resource:e,field:r,i18n:s,noBraces:!0})}`,w=x`
                cell: function render({ getValue }) {
                    return ${d("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0," + ")} ? "yes" : "no"
                }
            `;return r.multiple&&(w=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                        {${d("item",void 0,r.accessor," + ")} ? "yes" : "no"}
                                    </li>
                                ))}
                            </ul>
                        );
                    }
                `),`
                {
                    ${t},
                    ${h},
                    ${F},
                    ${w}
                }
            `}},"booleanFields"),m=o(r=>{if(r.type==="date"){let t=`id: "${r.key}"`,h=ge(r),F=`header: ${k({resource:e,field:r,i18n:s,noBraces:!0})}`,w=x`
                cell: function render({ getValue }) {
                    return (new Date(${d("getValue<any>()",void 0,Array.isArray(r.accessor)?r.accessor:void 0,' + " " + ')})).toLocaleString(undefined, { timeZone: "UTC" })
                }
            `;return r.multiple&&(w=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                    {(new Date(${d("item",void 0,r.accessor," + ")})).toLocaleString(undefined, { timeZone: "UTC" })}
                                    </li>
                                ))}
                            </ul>
                        )
                    }
                `),`
                {
                    ${t},
                    ${h},
                    ${F},
                    ${w}
                }
            `}},"dateFields"),i=o(r=>{if(r&&(r.type==="text"||r.type==="number"||r.type==="richtext")){let t=`id: "${r.key}"`,h=ge(r),F=`header: ${k({resource:e,field:r,i18n:s,noBraces:!0})}`,w="";return r.multiple&&(w=`
                    cell: function render({ getValue }) {
                        return (
                            <ul>
                                {getValue<any[]>()?.map((item, index) => (
                                    <li key={index}>
                                        {${d("item",void 0,r.accessor,' + " " + ')}}
                                    </li>
                                ))}
                            </ul>
                        )
                    }
                `),!r.multiple&&Array.isArray(r.accessor)&&(w=`
                    cell: function render({ getValue }) {
                        return (
                            <>{${d("getValue<any>()",r.key,r.accessor)}}</>
                        );
                    }
                `),`
                {
                    ${t},
                    ${h},
                    ${F},
                    ${w}
                }
            `}},"basicFields"),{canEdit:b,canShow:N,canCreate:S}=e??{},K=b||N?x`
    {
        id: "actions",
        accessorKey: "id",
        header: ${s?'translate("table.actions")':'"Actions"'},
        cell: function render({ getValue }) {
            return (
                <div
                    style={{
                        display: "flex",
                        flexDirection: "row",
                        flexWrap: "wrap",
                        gap: "4px",
                    }}
                >
                ${N?x`
                    <button
                        onClick={() => {
                            show("${e.name}", getValue() as string);
                        }}
                    >
                        ${ee({action:"show",i18n:s,noQuotes:!0})}
                    </button>
                    `:""}
                    ${b?x`
                            <button
                            onClick={() => {
                                edit("${e.name}", getValue() as string);
                            }}
                        >
                            ${ee({action:"edit",i18n:s,noQuotes:!0})}
                        </button>
                    `:""}
                </div>
            );
        },
    },
        `:"",R=n.map(r=>{switch(r==null?void 0:r.type){case"text":case"number":case"richtext":return i(r);case"email":return $(r);case"image":return C(r);case"date":return m(r);case"boolean":return l(r);case"url":return A(r);case"relation":return T(r);default:return}});ie(u);let M=s&&"const translate = useTranslate();";return x`
    ${ae(u)}
    
    export const ${p}: React.FC<IResourceComponentsProps> = () => {
        ${M}
        const columns = React.useMemo<ColumnDef<any>[]>(() => [
            ${[...R,K].filter(Boolean).join(",")}
        ], [${s?"translate":""}]);

        ${b||N?x`
        const { ${b?"edit,":""} ${N?"show,":""} ${S?"create,":""} } = useNavigation();
        `:""}

        const {
            getHeaderGroups,
            getRowModel,
            setOptions,
            refineCore: {
                tableQueryResult: { data: tableData },
            },
            getState,
            setPageIndex,
            getCanPreviousPage,
            getPageCount,
            getCanNextPage,
            nextPage,
            previousPage,
            setPageSize,
            getColumn,
        } = useTable({
            columns,
            ${a?`
            refineCoreProps: {
                resource: "${e.name}",
                ${D((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getList")}
            }
            `:D((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getList")?`refineCoreProps: { ${D((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getList")} },`:""}
            
        });

        ${I}

        setOptions((prev) => ({
            ...prev,
            meta: {
                ...prev.meta,
                ${v.join(", ")}
            },
        }));

        return (
            <div style={{ padding: "16px" }}>
            <div style={{ display: "flex", alignItems: "center", justifyContent: "space-between" }}>
                <h1>${J({resource:e,action:"list",i18n:s})}</h1>
                ${S?x`<button onClick={() => create("${e.name}")}>${ee({action:"create",i18n:s,noQuotes:!0})}</button>`:""}
            </div>
                <div style={{ maxWidth: "100%", overflowY: "scroll" }}>
                    <table>
                        <thead>
                            {getHeaderGroups().map((headerGroup) => (
                                <tr key={headerGroup.id}>
                                    {headerGroup.headers.map((header) => (
                                        <th key={header.id}>
                                            {!header.isPlaceholder && (
                                                flexRender(
                                                    header.column.columnDef
                                                        .header,
                                                    header.getContext(),
                                                )
                                            )}
                                        </th>
                                    ))}
                                </tr>
                            ))}
                        </thead>
                        <tbody>
                            {getRowModel().rows.map((row) => (
                                <tr key={row.id}>
                                    {row.getVisibleCells().map((cell) => (
                                        <td key={cell.id}>
                                            {flexRender(
                                                cell.column.columnDef.cell,
                                                cell.getContext(),
                                            )}
                                        </td>
                                    ))}
                                </tr>
                            ))}
                        </tbody>
                    </table>
                </div>
                <div style={{ marginTop: "12px" }}>
                    <button
                        onClick={() => setPageIndex(0)}
                        disabled={!getCanPreviousPage()}
                    >
                        {"<<"}
                    </button>
                    <button
                        onClick={() => previousPage()}
                        disabled={!getCanPreviousPage()}
                    >
                        {"<"}
                    </button>
                    <button onClick={() => nextPage()} disabled={!getCanNextPage()}>
                        {">"}
                    </button>
                    <button
                        onClick={() => setPageIndex(getPageCount() - 1)}
                        disabled={!getCanNextPage()}
                    >
                        {">>"}
                    </button>
                    <span>
                        <strong>
                            {" "} {getState().pagination.pageIndex + 1} / {" "} {getPageCount()} {" "}
                        </strong>
                    </span>
                    <span>
                        | ${s?'{translate("pagination.go")}':"Go to Page"}:{" "}
                        <input
                            type="number"
                            defaultValue={getState().pagination.pageIndex + 1}
                            onChange={(e) => {
                                const page = e.target.value
                                    ? Number(e.target.value) - 1
                                    : 0;
                                setPageIndex(page);
                            }}
                        />
                    </span>{" "}
                    <select
                        value={getState().pagination.pageSize}
                        onChange={(e) => {
                            setPageSize(Number(e.target.value));
                        }}
                    >
                        {[10, 20, 30, 40, 50].map((pageSize) => (
                            <option key={pageSize} value={pageSize}>
                                ${s?'{translate("pagination.show")}':"Show"} {pageSize}
                            </option>
                        ))}
                    </select>
                </div>
            </div>   
        );
    };
    `},"renderer"),Ke=le({type:"list",additionalScope:[["@refinedev/react-table","RefineReactTable",{useTable:fr}],["@tanstack/react-table","TanstackReactTable",{flexRender:gr}]],codeViewerComponent:ue,loadingComponent:de,errorComponent:me,renderer:Pt});import{useForm as yr}from"@refinedev/react-hook-form";var Tt=o(({resource:e,fields:n,meta:c,isCustomPage:a,i18n:s})=>{let p=te(e.label??e.name,"create"),y=[["React","react",!0],["useNavigation","@refinedev/core"],["IResourceComponentsProps","@refinedev/core"],["useForm","@refinedev/react-hook-form"]];s&&y.push(["useTranslate","@refinedev/core"]);let f=n.filter(l=>(l==null?void 0:l.relation)&&!(l!=null&&l.fieldable)&&(l==null?void 0:l.resource)).filter(Boolean).map(l=>{var m,i;if(l!=null&&l.relation&&!l.fieldable&&l.resource)return y.push(["useSelect","@refinedev/core"]),`
                const { options: ${P(l.key,"Options")} } =
                useSelect({
                    resource: "${l.resource.name}",
                    ${Ie(l)}
                    ${D(((m=l==null?void 0:l.resource)==null?void 0:m.identifier)??((i=l==null?void 0:l.resource)==null?void 0:i.name),c,"getList")}
                });
            `}).filter(Boolean),I=o(l=>{if(l.relation&&l.resource){y.push(["useSelect","@refinedev/core"]);let m=P(l.key,"Options");return x`
            <label>
                <span style={{ marginRight: "8px" }}>
                    ${k({resource:e,field:l,i18n:s,noQuotes:!0})}
                </span>
                <select
                    placeholder="Select ${_(l.resource.name)}"
                    {...register("${W(l.key,void 0,l.accessor)}", {
                        required: ${l.multiple?"false":'"This field is required"'},
                    })}
                >
                    {${m}?.map((option) => (
                        <option value={option.value} key={option.value}>
                            {option.label}
                        </option>
                    ))}
                </select>
                <span style={{ color: "red" }}>
                    {${d("(errors as any)",l.key,l.accessor,!1)}?.message as string}
                </span>
            </label>
            `}},"renderRelationFields"),v=o(l=>{if(l.type==="text"||l.type==="url"||l.type==="email"||l.type==="number"||l.type==="date"||l.type==="richtext"){if(xe(l.key)||l.multiple)return;let m=l.type==="richtext"?"textarea":"input";return x`
                <label>
                    <span style={{ marginRight: "8px" }}>
                        ${k({resource:e,field:l,i18n:s,noQuotes:!0})}
                    </span>
                    <${m}
                        ${l.type!=="date"&&l.type!=="richtext"?`type="${l.type}"`:""}
                        ${m==="textarea"?`
                            rows={5}
                            cols={33}
                            style={{ verticalAlign: "top" }}
                        `:""}
                        {...register("${W(l.key,void 0,l.accessor)}", {
                            required: "This field is required",
                            ${l.type==="number"?"valueAsNumber: true,":""}
                        })}

                    />
                    <span style={{ color: "red" }}>
                        {${d("(errors as any)",l.key,l.accessor,!1)}?.message as string}
                    </span>
                </label>
            `}},"basicInputFields"),T=o(l=>{if(l.type==="boolean")return l.multiple?void 0:x`
                <label>
                    <span style={{ marginRight: "8px" }}>
                        ${k({resource:e,field:l,i18n:s,noQuotes:!0})}
                    </span>
                    <input
                        type="checkbox"
                        {...register("${W(l.key,void 0,l.accessor)}", {
                            required: "This field is required",
                        })}
                    />
                    <span style={{ color: "red" }}>
                        {${d("errors",l.key,l.accessor,!1)}?.message as string}
                    </span>
                </label>
            `},"booleanFields"),C=n.map(l=>{switch(l==null?void 0:l.type){case"text":case"number":case"email":case"url":case"richtext":case"date":return v(l);case"boolean":return T(l);case"relation":return I(l);default:return}}),$=!!e.list;ie(y);let A=s&&"const translate = useTranslate();";return x`
    ${ae(y)}
    
    export const ${p}: React.FC<IResourceComponentsProps> = () => {
        ${A}
        ${$?`
        const { list } = useNavigation();
        `:""}
        const {
            refineCore: { onFinish, formLoading },
            register,
            handleSubmit,
            resetField,
            formState: { errors },
        } = useForm(
            ${a?`
            { 
                refineCoreProps: {
                    resource: "${e.name}",
                    action: "create",
                    ${D(e.identifier??e.name,c,"getOne")}
                }
            }`:D(e.identifier??e.name,c,"getOne")?`{
                        refineCoreProps: { ${D(e.identifier??e.name,c,"getOne")} }
                        }`:""}
        );
    
        ${f}

        return (
            <div style={{ padding: "16px" }}>
                <div style={{ display: "flex", justifyContent: ${$?'"space-between"':'"flex-start"'} }}>
                    <h1>${J({resource:e,action:"create",i18n:s})}</h1>
                    ${$?x`
                            <div>
                        <button
                                onClick={() => {
                                    list("${e.name}");
                                }}
                        >
                            ${J({resource:e,action:"list",i18n:s})}
                        </button>
                        </div>
                    `:""}
                </div>
                <form onSubmit={handleSubmit(onFinish)}>
                    <div style={{ display: "flex", flexDirection: "column", gap: "8px" }}>
                        ${C.join("")}
                        <div>
                            <input type="submit" value=${ee({action:"save",i18n:s})} />
                        </div>
                    </div>
                </form>
            </div>
        );
    };
    `},"renderer"),_e=le({type:"create",additionalScope:[["@refinedev/react-hook-form","RefineReactHookForm",{useForm:yr}]],codeViewerComponent:ue,loadingComponent:de,errorComponent:me,renderer:Tt});import{useForm as hr}from"@refinedev/react-hook-form";var Nt=o(({resource:e,fields:n,meta:c,isCustomPage:a,id:s,i18n:p})=>{let y=te(e.label??e.name,"edit"),u=P(e.label??e.name,"Data"),f=[["React","react",!0],["useNavigation","@refinedev/core"],["IResourceComponentsProps","@refinedev/core"],["useForm","@refinedev/react-hook-form"]];p&&f.push(["useTranslate","@refinedev/core"]);let v=n.filter(i=>(i==null?void 0:i.relation)&&!(i!=null&&i.fieldable)&&(i==null?void 0:i.resource)).filter(Boolean).map(i=>{var b,N;if(i!=null&&i.relation&&!i.fieldable&&i.resource){f.push(["useSelect","@refinedev/core"]);let S=d(u,i.key,i.accessor,!1);return i.multiple&&i.accessor&&(S=`${d(u,i.key)}?.map((item: any) => ${d("item",void 0,i.accessor)})`),`
                const { options: ${P(i.key,"Options")} } =
                useSelect({
                    resource: "${i.resource.name}",
                    defaultValue: ${S},
                    ${Ie(i)}
                    ${D(((b=i==null?void 0:i.resource)==null?void 0:b.identifier)??((N=i==null?void 0:i.resource)==null?void 0:N.name),c,"getList")}
                });

                React.useEffect(() => {
                    setValue("${W(i.key,void 0,i.accessor)}", ${u}?.${i.key}?.id);
                }, [${P(i.key,"Options")}]);
            `}}).filter(Boolean),T=o(i=>{if(i.relation&&i.resource){f.push(["useSelect","@refinedev/core"]);let b=P(i.key,"Options");return x`
            <label>
                <span style={{ marginRight: "8px" }}>${k({resource:e,field:i,i18n:p,noQuotes:!0})}</span>
                <select
                    placeholder="Select ${_(i.resource.name)}"
                    {...register("${W(i.key,void 0,i.accessor)}", {
                        required: ${i.multiple?"false":'"This field is required"'},
                    })}
                >
                    {${b}?.map((option) => (
                        <option value={option.value} key={option.value}>
                            {option.label}
                        </option>
                    ))}
                </select>
                <span style={{ color: "red" }}>
                    {${d("(errors as any)",i.key,i.accessor,!1)}?.message as string}
                </span>
            </label>
            `}},"renderRelationFields"),C=o(i=>{if(i.type==="text"||i.type==="url"||i.type==="email"||i.type==="number"||i.type==="date"||i.type==="richtext"){if(i.multiple){let N=W(i.key,"${index}",i.accessor),S=d(d("(errors as any)",i.key,void 0,!1)+"?.[index]",void 0,i.accessor);return`
                    <>
                        {${d(u,i.key)}?.map((item: any, index: number) => (
                            <label key={index}>
                                <span style={{ marginRight: "8px" }}>
                                    ${k({resource:e,field:i,i18n:p,noQuotes:!0})}
                                </span>
                                <input ${i.type!=="richtext"?`
                                type="${i.type!=="date"?i.type:"text"}"
                                `:""} {...register(\`${N}\`, { required: "This field is required", ${i.type==="number"?"valueAsNumber: true,":""} })} />
                                <span style={{color: "red"}}>
                                {${d(S,"message")} as string}
                                </span>
                            </label>
                        ))}
                    </>
                `}let b=i.type==="richtext"?"textarea":"input";return x`
            <label>
                <span style={{ marginRight: "8px" }}>${k({resource:e,field:i,i18n:p,noQuotes:!0})}</span>
                <${b}
                ${xe(i.key)?"disabled":""}
                ${i.type!=="date"&&i.type!=="richtext"?`type="${i.type}"`:""}
                ${b==="textarea"?`
                    rows={5}
                    cols={33}
                    style={{ verticalAlign: "top" }}
                `:""}
                {...register("${W(i.key,void 0,i.accessor)}", {
                    required: "This field is required",
                    ${i.type==="number"?"valueAsNumber: true,":""}
                })}
                />
                <span style={{ color: "red" }}>
                {${d("(errors as any)",i.key,i.accessor,!1)}?.message as string}
                </span>
            </label>
            `}},"basicInputFields"),$=o(i=>{if(i.type==="boolean"){if(i.multiple){let b=W(i.key,void 0,i.accessor),N=d("(errors as any)",i.key,void 0,!1)+"?.[index]";return`
                    <>
                        {${d(u,i.key)}?.map((item: any, index: number) => (
                            <label key={index}>
                            <span style={{ marginRight: "8px" }}>
                            ${k({resource:e,field:i,i18n:p,noQuotes:!0})}
                            </span>
                            <input
                                type="checkbox"
                                {...register(\`${b}.\${index}\`, {
                                    required: "This field is required",
                                })}
                            />
                            <span style={{ color: "red" }}>
                                {${N}?.message as string}
                            </span>
                        ))}
                    </>
                `}return x`
            <label>
                <span style={{ marginRight: "8px" }}>${k({resource:e,field:i,i18n:p,noQuotes:!0})}</span>
                <input type="checkbox" {...register("${W(i.key,void 0,i.accessor)}", {
                    required: "This field is required",
                })} />
                <span style={{ color: "red" }}>
                    {${d("errors",i.key,i.accessor,!1)}?.message as string}
                </span>
            </label>
            `}},"booleanFields"),A=n.map(i=>{switch(i==null?void 0:i.type){case"text":case"number":case"email":case"url":case"richtext":case"date":return C(i);case"boolean":return $(i);case"relation":return T(i);default:return}}),l=!!e.list;ie(f);let m=p&&"const translate = useTranslate();";return x`
    ${ae(f)}
    
    export const ${y}: React.FC<IResourceComponentsProps> = () => {
        ${m}
        ${l?`
        const { list } = useNavigation();
        `:""}
        const {
            refineCore: { onFinish, formLoading, queryResult },
            register,
            handleSubmit,
            setValue,
            formState: { errors },
        } = useForm(
            ${a?`
            { 
                refineCoreProps: {
                    resource: "${e.name}",
                    id: ${ve(s)},
                    action: "edit",
                    ${D((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")}
                }
            }`:D((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")?`{ refineCoreProps: {
                        ${D((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")}
                    } }`:""}
        );
    
        const ${u} = queryResult?.data?.data;
    
        ${v}

        return (
            <div style={{ padding: "16px" }}>
                <div style={{ display: "flex", justifyContent: ${l?'"space-between"':'"flex-start"'} }}>
                    <h1>${J({resource:e,action:"edit",i18n:p})}</h1>
                    ${l?x`
                    <div>
                        <button
                                onClick={() => {
                                    list("${e.name}");
                                }}
                        >
                            ${J({resource:e,action:"list",i18n:p})}
                        </button>
                    </div>
                    `:""}
                </div>
                <form onSubmit={handleSubmit(onFinish)}>
                    <div style={{ display: "flex", flexDirection: "column", gap: "8px" }}>
                        ${A.join("")}
                        <div>
                            <input type="submit" value=${ee({action:"save",i18n:p})} />
                        </div>
                    </div>
                </form>
            </div>
        );
    };
    `},"renderer"),We=le({type:"edit",additionalScope:[["@refinedev/react-hook-form","RefineReactHookForm",{useForm:hr}]],codeViewerComponent:ue,loadingComponent:de,errorComponent:me,renderer:Nt});var Za=o(({action:e,id:n,...c})=>{let{action:a,id:s}=$r();switch(e??a){case"show":return we.createElement(Qe,{...c,id:n??s});case"create":return we.createElement(_e,{...c,id:n??s});case"edit":return we.createElement(We,{...c,id:n??s});default:return we.createElement(Ke,{...c,id:n??s})}},"HeadlessInferencer");export{_e as HeadlessCreateInferencer,Tt as HeadlessCreateRenderer,We as HeadlessEditInferencer,Nt as HeadlessEditRenderer,Za as HeadlessInferencer,Ke as HeadlessListInferencer,Pt as HeadlessListRenderer,Qe as HeadlessShowInferencer,Rt as HeadlessShowRenderer};
//# sourceMappingURL=headless.js.map