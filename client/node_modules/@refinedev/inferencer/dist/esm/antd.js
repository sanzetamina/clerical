var Lt=Object.defineProperty;var n=(e,o)=>Lt(e,"name",{value:o,configurable:!0});import we from"react";import{useResource as ln}from"@refinedev/core";import{Show as gr,TagField as Ir,TextField as $r,ImageField as xr,EmailField as vr,UrlField as hr,BooleanField as Fr,DateField as br,MarkdownField as kr,NumberField as Cr}from"@refinedev/antd";import{Typography as wr}from"antd";import X,{useContext as cr}from"react";import{useResource as ze,TranslationContext as ur}from"@refinedev/core";var Nt=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,Te=n((e,o)=>{let u=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"];Nt.test(e)&&u.unshift("url");let c=u.find(a=>a in o&&!!o[a]);if(c)return c==="firstName"&&"lastName"in o?["firstName","lastName"]:c},"getFieldableKeys");import{pickNotDeprecated as Et}from"@refinedev/core";function Se(e,o,u){if(o)return o;let c=u==null?void 0:u.find(l=>l.name===e),a=Et(c==null?void 0:c.meta,c==null?void 0:c.options);return a!=null&&a.dataProviderName?a.dataProviderName:"default"}n(Se,"pickDataProvider");var xe=n(e=>{var o;return(o=e==null?void 0:e.options)==null?void 0:o.dataProviderName},"dataProviderFromResource");var Pe=n(e=>{let o=[...e].filter(Boolean).sort((u,c)=>(c.priority||0)-(u.priority||0))[0];return o||null},"pickInferredField");import Vt from"prettier/standalone";import Dt from"prettier/parser-typescript";var Re=n(e=>{try{return Vt.format(e,{parser:"typescript",plugins:[Dt],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(o){return console.warn("Formatting error in inferencer",o),e}},"prettierFormat");var qe=n(e=>e.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`),"prettySpaces");var Le=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,Ze=n((e,o)=>{let u=Le.test(e),c=typeof o=="string"||typeof o=="number",a=Array.isArray(o)&&o.every(l=>typeof l=="string"||typeof l=="number");return u&&c||u&&a?{key:e,relation:!0,multiple:!!a,type:"relation",priority:1}:!1},"relationInfer");var U=n(e=>e.replace(Le,""),"removeRelationSuffix");var Z=n(e=>U(e).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(I=>I.charAt(0).toUpperCase()+I.slice(1)).join(" "),"prettyString");var v=n(e=>{let{resource:o,field:u,i18n:c}=e;if(c){let l=`translate("${o.name}.fields.${u.key}")`;return e.noBraces?`${l}`:`{${l}}`}let a=Z(u.key);return e.noQuotes?a:`"${a}"`},"translatePrettyString");import Ge from"pluralize";var G=n((e="")=>Ge.isSingular(e)?e:Ge.singular(e),"toSingular");import Ye from"pluralize";var re=n((e="")=>Ye.isPlural(e)?e:Ye.plural(e),"toPlural");var Ne=n(e=>e.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(a=>!a.trim().startsWith("export default")).join(`
`),"replaceExports");var Je=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Mt=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Ot=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,Ee=n((e,o={})=>{let u=e.matchAll(Je),c=new Set;for(let a of u){let[,l,I,p,m]=a;if(m in o){let h=o[m];if(m==="react")continue;l&&c.add(`const { default: ${l} } = ${h};`),I&&c.add(`const${I.replace(Ot,"$1: $3$4")} = ${h};`),p&&c.add(`const ${p} = ${h};`)}}return qe(`
    ${Array.from(c).join(`
`)}
    ${e.replace(Je,"").replace(Mt,"")}
    `)},"replaceImports");import ke from"pluralize";var Ve=n((e,o)=>e?o.find(c=>{let a=U(e.key);return c.name===a||c.name===(ke.isPlural(a)?a:ke.plural(a))||c.name===(ke.isSingular(a)?a:ke.singular(a))}):void 0,"resourceFromInferred");import jt from"pluralize";var Y=n((e,o,u="Inferred")=>{let c=e.replace(/[^a-zA-Z0-9]/g," "),a=jt.singular(c),I=Z(a).replace(/ /g,"")||u,p=o.charAt(0).toUpperCase()+o.slice(1);return/^[a-zA-Z]/.test(I)?`${I}${p}`:`${p}${I}`},"componentName");var Bt=n(e=>e?Array.isArray(e)?e.join(""):typeof e=="string"?e:typeof e=="object"||typeof e=="function"?e.toString():typeof e=="number"?String(e):typeof e=="boolean"&&e?"true":e:"","handleExpression"),g=n((e,...o)=>e.reduce((c,a,l)=>`${c}${a}${Bt(o[l])}`,"").trim(),"jsx");var De=n((e,o)=>`
    ${e??""}
    
    render(typeof ${o} !== "undefined" ? <${o} /> : <></>);
    `,"prepareLiveCode");var Me=n(e=>e==null?void 0:e.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,""),"removeHiddenCode");var Ht=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,de=n(e=>Ht.test(e),"shouldDotAccess");function Oe(e,o,u){let c=`${e}`;return o&&(c+="?.",de(o)?c+=o:c+=`['${o}']`),u&&(c+="?.",de(u)?c+=u:c+=`['${u}']`),c}n(Oe,"accessorSingle");function zt(e,o,u){return(u??[]).map(a=>Oe(e,o,a))}n(zt,"accessorMultiple");var f=n((e,o,u,c=' + " " + ')=>Array.isArray(u)?c?zt(e,o,u).join(c):Oe(e,o,u[0]):Oe(e,o,u),"accessor");var ne=n(e=>{let o=e.reduce((c,[a,l,I])=>(c[l]||(c[l]=[]),c[l].includes(a)||(I?c[l].push([a,!0]):c[l].push(a)),c),{});return Object.entries(o).map(([c,a])=>{let l=a.find(h=>Array.isArray(h)&&h[1]),I=a.filter(h=>typeof h=="string"),p=l?`${l[0]}`:"",m=I.length?`{ ${I.join(", ")} }`:"";return`import ${p}${p&&m?", ":""}${m} from "${c}";`})},"printImports");var Ut=/^id$/i,ye=n(e=>Ut.test(e),"isIDKey");var je=n(e=>e.relationInfer&&e.relationInfer.accessor?Array.isArray(e.relationInfer.accessor)?`optionLabel: "${e.relationInfer.accessor[0]}",`:e.relationInfer.accessor!=="title"?`optionLabel: "${e.relationInfer.accessor}",`:"":"","getOptionLabel");var oe=n(e=>{},"noOp");var H=n((e,o="")=>{if(Number.isInteger(Number(e)))return o.charAt(0).toLowerCase()+o.slice(1)+e;let c=e.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),a=Z(c).replace(/ /g,"");return`${a.charAt(0).toLowerCase()+a.slice(1)}${o.charAt(0).toUpperCase()+o.slice(1)}`},"getVariableName");var z=n((e,o,u)=>{if(o&&u&&e){let c=e?o[e]:{},a=(c==null?void 0:c[u])??(c==null?void 0:c.default);return a?`meta: ${JSON.stringify(a)},`:""}return""},"getMetaProps"),ee=n((e,o,u)=>{if(o&&u&&e){let c=e?o[e]:{},l=[...u,"default"].reduce((I,p)=>I??(c==null?void 0:c[p]),void 0);if(l)return l}},"pickMeta");var ve=n(e=>e===void 0?e:typeof e=="string"?`"${e}"`:e,"idQuoteWrapper");var Xe=n(e=>{let o=n((u,c,a,l=o,I)=>{let p=e.map(h=>h(u,c,a,l,I));return Pe(p)},"fieldInferencer");return o},"composeInferencers");var et=n(e=>n((u,c,a,l,I,p)=>e.reduce((m,h)=>h(m,c,a,l,I,p),u),"fieldTransformer"),"composeTransformers");var tt=n((e,o,u,c,a)=>{let l=Array.isArray(o),I=Array.isArray(o)&&o.every(p=>typeof p=="string"||typeof p=="number");if(l){if(!I){let m=c(e,o[0],u,c,a);return m?{...m,key:e,multiple:!0,priority:1}:!1}let p=c(e,o[0],u,c,a)||{type:"string"};return{key:e,multiple:!0,priority:1,type:p==null?void 0:p.type}}return!1},"arrayInfer");var rt=n((e,o)=>typeof o=="boolean"?{key:e,type:"boolean"}:!1,"booleanInfer");import nt from"dayjs";var _t=/(_at|_on|At|On|AT|ON)(\[\])?$/,Qt=["/",":","-","."],ot=n((e,o)=>{let u=_t.test(e)&&nt(o).isValid(),c=typeof o=="string"&&nt(o).isValid();return typeof o=="string"&&Qt.some(l=>o.includes(l))&&(u||c)?{key:e,type:"date",priority:1}:!1},"dateInfer");var Wt=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,at=n((e,o)=>typeof o=="string"&&Wt.test(o)?{key:e,type:"email",priority:1}:!1,"emailInfer");var Kt=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,st=n((e,o)=>typeof o=="string"&&Kt.test(o)?{key:e,type:"image",priority:2}:!1,"imageInfer");var it=n((e,o)=>typeof o>"u"||o===null?null:!1,"nullishInfer");var ct=n((e,o)=>{let u=typeof o=="string"&&o.length>0,c=!isNaN(o);return u&&c||typeof o=="number"?{key:e,type:"number"}:!1},"numberInfer");var ut=/id$/i,lt=n((e,o,u,c,a)=>{let l=o!==null,I=!Array.isArray(o);if(l&&I&&typeof o=="object"){let m=Object.keys(o).length===1&&ut.test(Object.keys(o)[0]),h=Object.keys(o).some(w=>ut.test(w));if(m)return{key:e,type:"relation",relation:!0,accessor:"id",priority:1};let F=Te(e,o);if((F?F.length>0:!1)&&F){let w=F&&Array.isArray(F)?F[0]:F,x=c(w,o[w],o,c,a);if(x){let P=Array.isArray(F)?F.map(O=>x.accessor?`${O}.${Array.isArray(x.accessor)?x.accessor[0]:x.accessor}`:O):x.accessor?Array.isArray(x.accessor)?`${F}.${x.accessor[0]}`:`${F}.${x.accessor}`:F;return(x==null?void 0:x.type)==="text"&&(a==="create"||a==="edit")&&h?{key:e,type:"relation",relation:!0,accessor:"id",priority:1}:{...x,fieldable:!0,key:e,accessor:P,priority:1}}}return{key:e,fieldable:!1,type:"object",priority:1}}return!1},"objectInfer");var pt=n((e,o)=>typeof o=="string"&&o.length>100?{key:e,type:"richtext",priority:1}:!1,"richtextInfer");var mt=n((e,o)=>typeof o=="string"?{key:e,type:"text"}:!1,"textInfer");var qt=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,dt=n((e,o)=>typeof o=="string"&&qt.test(o)?{key:e,type:"url",priority:1}:!1,"urlInfer");var ft=[tt,rt,ot,at,st,it,ct,lt,Ze,pt,mt,dt];var yt=n((e,o,u,c)=>e.map(l=>{if(!l.relation&&(l.type==="text"||l.type==="richtext"||l.type==="number")&&!l.canRelation){let I=/^[a-z0-9-]+$/,p=n(w=>I.test(`${w}`),"isValidUUID"),m=l.key.toLowerCase()!=="id";return!(!l.accessor||typeof l.accessor=="string")||!m?l:(l.multiple?c[l.key]:[c[l.key]]).every(w=>p(l.accessor?w[l.accessor]:w))?{...l,canRelation:!0}:l}return l}),"basicToRelation");var Zt=/(image|photo|avatar|cover|thumbnail|icon)/i,gt=n(e=>e.map(u=>u.type==="url"&&Zt.test(u.key)?{...u,type:"image"}:u),"imageByKey");var It=n((e,o)=>e.map(c=>{let a=Ve(c,o);return a?{...c,relation:!0,type:"relation",resource:a}:c}),"relationByResource");var $t=n((e,o,u,c,a,l)=>e.map(p=>{if(p.relation&&p.type==="relation"&&!p.resource){let m=p.accessor?c[p.key][p.accessor]:c[p.key],h=a(p.key,m,c,a,l);if(h&&h.type!=="relation")return{...p,fieldable:!0,relation:!1,type:h.type,canRelation:!0}}return p}),"relationToFieldable");var xt=[gt,It,$t,yt];import J from"react";import*as Gt from"@refinedev/core";import{LivePreview as Yt,LiveProvider as Jt}from"@aliemir/react-live";var vt=[["react","React",J],["@refinedev/core","RefineCore",Gt]],Be=J.createContext({}),He=n(({fetchError:e,code:o,additionalScope:u,errorComponent:c})=>{let a=(o&&Ne(Ee(o,[...vt,...u??[]].reduce((p,[m,h,F,V])=>V?p:{...p,[m]:h},{}))))??"",l=J.useMemo(()=>({React:J,...J,...[...vt,...u??[]].reduce((p,[m,h,F])=>({...p,[h]:F}),{})}),[u]),I=J.useMemo(()=>n(()=>{let{error:m}=J.useContext(Be);return c?J.createElement(c,{error:m?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${m}</code>`:typeof e=="string"?e:e?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},"LiveErrorComponent"),[c,e]);return J.createElement(Jt,{Context:Be,code:a,scope:l,noInline:!0},!e&&J.createElement(Yt,{Context:Be}),J.createElement(I,null))},"LiveComponent");import y from"react";import Xt,{defaultProps as er}from"prism-react-renderer";import tr from"prism-react-renderer/themes/vsDark";var ie=n(({code:e,loading:o})=>{let u=y.useMemo(()=>Re(e??""),[e]),[c,a]=y.useState(!1),[l,I]=y.useState(!1),[p,m]=y.useState(!1),[h,F]=y.useState(!1),[V,w]=y.useState(!1);return y.useEffect(()=>{if(!o){let x=setTimeout(()=>{a(!0)},300);return()=>{clearTimeout(x)}}return()=>{}},[o]),y.useEffect(()=>{if(typeof window<"u"){let x=window.matchMedia("(max-width: 449px)");x.matches?m(!1):m(!0);let P=n(()=>{x.matches?m(!1):m(!0)},"handleResize");return window.addEventListener("resize",P),()=>{window.removeEventListener("resize",P)}}return()=>{}},[]),y.useEffect(()=>{if(typeof window<"u"){let x=window.matchMedia("(max-width: 1280px)");x.matches?F(!0):F(!1);let P=n(()=>{x.matches?F(!0):F(!1)},"handleResize");return window.addEventListener("resize",P),()=>{window.removeEventListener("resize",P)}}return()=>{}},[]),u&&!o?y.createElement(y.Fragment,null,p&&y.createElement("div",{className:"refine-inferencer--code-viewer",style:{position:"sticky",bottom:"24px",paddingTop:"24px",left:0,right:0,width:"100%",zIndex:10,display:"flex",justifyContent:"center",transition:"all 0.2s ease",opacity:c&&!l?1:0,transform:c&&!l?"translateY(0)":"translateY(100px)"}},y.createElement("div",{style:{width:"calc(100% - calc(64px * 2))",maxWidth:"1080px",padding:"20px",backgroundColor:"#1A1A1A",boxShadow:"0px 4px 16px -4px rgba(0, 0, 0, 0.5), 0px 8px 32px -8px rgba(0, 0, 0, 0.35)",borderRadius:"16px",display:"flex",alignItems:"center",justifyContent:"space-between",flexDirection:h?"column":"row",gap:"12px"}},y.createElement("div",{style:{display:"flex",alignItems:"flex-start",gap:"8px"}},y.createElement("div",null,y.createElement(nr,null)),y.createElement("div",{style:{fontSize:"14px",lineHeight:"20px",color:"#ffffff"}},y.createElement("p",{style:{padding:0,margin:0}},"Most of the page code is auto-generated by the"," ",y.createElement("span",{style:{textDecoration:"underline"}},"Inferencer")," ","feature, based on your backend data structure."),y.createElement("p",{style:{padding:0,margin:0}},"While this is an excellent way to experiment with refine,"," ",y.createElement("span",{style:{fontWeight:600}},"it's not intended to be used on production.")))),y.createElement("div",null,y.createElement("button",{onPointerEnter:()=>w(!0),onPointerLeave:()=>w(!1),onClick:()=>I(!0),style:{appearance:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:V?"scale(1.025)":void 0,filter:V?"brightness(1.1)":void 0}},y.createElement(Ft,{style:{flexShrink:0}}),y.createElement("span",null,"Show the auto-generated code"))))),y.createElement(rr,{visible:l,onClose:()=>I(!1),code:u})):null},"SharedCodeViewer"),rr=n(({visible:e,onClose:o,code:u=""})=>{let c=y.useRef(null),[a,l]=y.useState(!1),[I,p]=y.useState(!1),[m,h]=y.useState(!1),[F,V]=y.useState(!1);y.useEffect(()=>{if(typeof document<"u"){let d=n(i=>{c.current&&!c.current.contains(i.target)&&o()},"onOutsideClick");return document.addEventListener("pointerdown",d),()=>{document.removeEventListener("pointerdown",d)}}return()=>{}},[o]);let w=n(()=>{typeof navigator<"u"&&(navigator.clipboard.writeText(u),l(!0),setTimeout(()=>{l(!1)},1e3))},"onCopy"),x=y.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center"}},y.createElement("div",{style:{fontWeight:700,fontSize:"20px",lineHeight:"32px",color:"#0D0D0D"}},"Auto-generated code by Inferencer"),y.createElement("button",{onClick:o,onPointerEnter:()=>h(!0),onPointerLeave:()=>h(!1),style:{flexShrink:0,appearance:"none",border:"none",background:"none",padding:0,margin:0,outline:"none",borderRadius:"50px",width:"32px",height:"32px",cursor:"pointer",transition:"all 0.15s ease",transform:m?"scale(1.05)":void 0,filter:m?"brightness(0.8)":void 0}},y.createElement(or,null))),P=y.createElement("div",{style:{fontSize:"13px",borderRadius:"8px",flex:"1",overflow:"scroll",background:"#1E1E1E"}},y.createElement(Xt,{...er,theme:tr,code:u,language:"tsx"},({className:d,style:i,tokens:b,getLineProps:s,getTokenProps:C})=>y.createElement("pre",{className:d,style:{...i,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},b.map((k,r)=>y.createElement("div",{key:r,...s({line:k,key:r})},k.map(($,R)=>y.createElement("span",{key:R,...C({token:$,key:R})})))))));return y.createElement("div",{className:"refine-inferencer--code-viewer-modal",style:{position:"fixed",top:0,left:0,right:0,bottom:0,zIndex:9999,backgroundColor:"rgba(0, 0, 0, 0.5)",transition:"all 0.2s ease",opacity:e?1:0,pointerEvents:e?"all":"none",display:"flex",justifyContent:"center",alignItems:"center"}},y.createElement("div",{ref:c,style:{transform:e?"scale(1) translateY(0px)":"scale(0) translateY(-200px)",transition:"all 0.25s cubic-bezier(.35,1.29,.81,1.08)",transitionDelay:"0.25",width:"calc(100% - calc(32px * 2))",height:"calc(100% - calc(32px * 2))",backgroundColor:"#fff",maxWidth:"640px",maxHeight:"720px",borderRadius:"8px",padding:"16px"}},y.createElement("div",{style:{display:"flex",flexDirection:"column",height:"100%",width:"100%",gap:"16px"}},x,P,y.createElement("div",{style:{display:"flex",justifyContent:"flex-start",alignItems:"flex-end",gap:"16px"}},y.createElement("button",{onPointerEnter:()=>p(!0),onPointerLeave:()=>p(!1),onClick:w,style:{appearance:"none",height:"40px",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",position:"relative",overflow:"hidden",transition:"filter 0.2s ease",transform:I?"scale(1.025)":"scale(1)",filter:I?"brightness(1.1)":void 0}},y.createElement(ht,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),y.createElement("span",null,"Copy Generated Code"),y.createElement("div",{style:{position:"absolute",width:"100%",height:"100%",top:0,left:0,display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",transition:"all 0.2s ease",transform:a?"translateY(0)":"translateY(40px)"}},y.createElement(ht,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),y.createElement("span",null,"Copied!"))),y.createElement("a",{onPointerEnter:()=>V(!0),onPointerLeave:()=>V(!1),href:"https://refine.dev/docs/packages/documentation/inferencer",target:"_blank",rel:"noreferrer",style:{appearance:"none",textDecoration:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"rgba(0, 128, 255, 0.1)",color:"#0080FF",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:F?"scale(1.025)":void 0,filter:F?"brightness(1.1)":void 0}},y.createElement(Ft,{style:{flexShrink:0}}),y.createElement("span",null,"Learn more about inferencer"))))))},"CodeModal"),nr=n(e=>y.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,fill:"none",...e},y.createElement("path",{fill:"#0080FF",fillRule:"evenodd",d:"M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10Zm0-15a1.25 1.25 0 1 0 0 2.5A1.25 1.25 0 0 0 10 5Zm0 10c.69 0 1.25-.56 1.25-1.25V10a1.25 1.25 0 1 0-2.5 0v3.75c0 .69.56 1.25 1.25 1.25Z",clipRule:"evenodd"})),"InfoIcon"),Ft=n(e=>y.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:16,height:16,fill:"none",...e},y.createElement("path",{fill:"currentColor",d:"M5 2a1 1 0 0 1 0 2H4v8h8v-1a1 1 0 1 1 2 0v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h1Z"}),y.createElement("path",{fill:"currentColor",d:"M9 2a1 1 0 0 0 0 2h1.586L6.293 8.293a1 1 0 0 0 1.414 1.414L12 5.414V7a1 1 0 1 0 2 0V3a1 1 0 0 0-1-1H9Z"})),"OpenIcon"),or=n(e=>y.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:32,height:32,fill:"none",...e},y.createElement("path",{fill:"#A6A6A6",fillRule:"evenodd",d:"M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16Zm-2.586-21.414a2 2 0 1 0-2.828 2.828L13.172 16l-2.586 2.586a2 2 0 1 0 2.828 2.828L16 18.828l2.586 2.586a2 2 0 1 0 2.828-2.828L18.828 16l2.586-2.586a2 2 0 1 0-2.828-2.828L16 13.172l-2.586-2.586Z",clipRule:"evenodd"})),"CloseIcon"),ht=n(e=>y.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,viewBox:"0 0 24 24",fill:"none",...e},y.createElement("path",{fill:"currentColor",fillRule:"evenodd",d:"M8 5a3 3 0 0 0 3 3h2a3 3 0 0 0 3-3h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h1Zm0 7a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2H9a1 1 0 0 1-1-1Zm1 3a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2H9Z",clipRule:"evenodd"}),y.createElement("path",{fill:"currentColor",d:"M13 4a1 1 0 1 1 0 2h-2a1 1 0 1 1 0-2h2Z"})),"ClipboardIcon");import fe from"react";import{useDataProvider as ar,useResource as sr}from"@refinedev/core";var bt=n((e,o,u,c)=>{let{resource:a,id:l,resources:I}=sr(o),p=u??l,m=ar(),[h,F]=fe.useState(void 0),[V,w]=fe.useState(void 0),[x,P]=fe.useState(void 0),[O,d]=fe.useState(!0),[i,b]=fe.useState(!1),s=fe.useCallback(async C=>{var $;let k=xe(a)??Se(a==null?void 0:a.name,void 0,I),r=m(k);b(!0),F(void 0);try{if((e==="list"||e==="create")&&a){let R=await r.getList({resource:a==null?void 0:a.name,meta:ee((a==null?void 0:a.identifier)??(a==null?void 0:a.name),c,["getList"])}),L=($=R.data)==null?void 0:$[0];L||F(`<p>No records/data found for resource "${a==null?void 0:a.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),w(L),P(R.data),setTimeout(()=>{b(!1)},500)}if((e==="edit"||e==="show")&&C&&a){let L=(await r.getOne({resource:a==null?void 0:a.name,id:C,meta:ee((a==null?void 0:a.identifier)??(a==null?void 0:a.name),c,["getOne"])})).data;L||F(`<p>No records/data found for resource "${a==null?void 0:a.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),w(L),setTimeout(()=>{b(!1)},500)}}catch(R){console.warn("An error occured while fetching the resource data. Please check the error message below:",R),F(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${a==null?void 0:a.name}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{b(!1)},500)}},[e,m,a,I]);return fe.useEffect(()=>{d(!1),!i&&!V&&s(p)},[s,p]),{data:V,datas:x,loading:i,initial:O,error:h}},"useInferFetch");import he from"react";import{useDataProvider as ir}from"@refinedev/core";import{get as kt}from"lodash-es";var Ct=n(({record:e,fields:o,infer:u,meta:c})=>{let a=ir(),[l,I]=he.useState([]),[p,m]=he.useState(!0),[h,F]=he.useState(!1),V=he.useCallback(async w=>{console.groupCollapsed("@refinedev/inferencer is trying to detect relations");let x=[];F(!0);try{let P=w.map(async d=>{var i,b,s,C,k;if(d&&(d.relation||d.canRelation)&&e){if(d.relationInfer)return d;let r=xe(d.resource),$=a(r),R=d.multiple,L=Array.isArray(d.accessor)?void 0:d.multiple?e[d.key].map(j=>d.accessor?kt(j,d.accessor):j)[0]:d.accessor?kt(e[d.key],d.accessor):e[d.key];if(L&&d.resource)try{let j={};if(R&&$.getMany){let{data:T}=await $.getMany({resource:d.resource.name,ids:[L],meta:ee(((i=d.resource)==null?void 0:i.identifier)??((b=d.resource)==null?void 0:b.name),c,["getMany"])});j=T==null?void 0:T[0]}else{let{data:T}=await $.getOne({resource:d.resource.name,id:L,meta:ee(((s=d.resource)==null?void 0:s.identifier)??((C=d.resource)==null?void 0:C.name),c,R?["getMany","getOne"]:["getOne"])});j=T}x.push({status:"success",resource:d.resource.name,field:d.key});let t=u("__",j,{},u);return{...d,relationInfer:t}}catch{return x.push({status:"error",resource:d.resource.name,field:d.key}),{...d,relationInfer:null}}if(L){let j,t;try{let A={};if(R&&$.getMany){let{data:S}=await((k=$.getMany)==null?void 0:k.call($,{resource:re(U(d.key)),ids:[L],meta:ee(re(U(d.key)),c,["getMany"])}));A=S==null?void 0:S[0]}else{let{data:S}=await $.getOne({resource:re(U(d.key)),id:L,meta:ee(re(U(d.key)),c,R?["getMany","getOne"]:["getOne"])});A=S}x.push({status:"success",resource:re(U(d.key)),field:d.key}),j=A,t=!0}catch{x.push({status:"error",resource:re(U(d.key)),field:d.key});let S={};try{if(R&&$.getMany){let{data:_}=await $.getMany({resource:G(U(d.key)),meta:ee(G(U(d.key)),c,["getMany"]),ids:[L]});S=_==null?void 0:_[0]}else{let{data:_}=await $.getOne({resource:G(U(d.key)),meta:ee(G(U(d.key)),c,R?["getMany","getOne"]:["getOne"]),id:L});S=_}x.push({status:"success",resource:G(U(d.key)),field:d.key}),j=S,t=!1}catch{return x.push({status:"error",resource:G(U(d.key)),field:d.key}),{...d,relationInfer:null}}}let T=u("__",j,{},u),N=U(d.key);return{...d,relation:!0,type:"relation",resource:{name:t?re(N):G(N)},fieldable:!1,canRelation:void 0,relationInfer:T}}return{...d,relationInfer:null}}return d}),O=await Promise.all(P);I(O.filter(d=>d)),setTimeout(()=>{F(!1)},500)}catch{setTimeout(()=>{F(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${x.length} attempts and succeeded with ${x.filter(P=>P.status==="success").length} attempts.`),console.groupEnd(),console.info("@refinedev/inferencer may send multiple requests to your API for nonexistent resources when trying to detect relations. To learn more about how the inferencer works, visit https://s.refine.dev/how-inferencer-works")},500)},[a,e]);return he.useEffect(()=>{m(!1),!h&&o&&o.length>0&&l.length===0&&V(o)},[V,h,o,V]),{fields:l,loading:h,initial:p}},"useRelationFetch");var ce=n(({type:e,additionalScope:o=[],customElements:u=[],fieldTransformers:c=[],renderer:a,loadingComponent:l,errorComponent:I,codeViewerComponent:p})=>{let m=Xe([...ft,...u]),h=et([...xt,...c]),F=n(({resourceName:w,fieldTransformer:x,hideCodeViewerInProduction:P,meta:O,id:d})=>{var pe,me;let{resource:i,resources:b}=ze(w),{i18nProvider:s}=cr(ur),{resource:C}=ze(),{data:k,datas:r,loading:$,initial:R,error:L}=bt(e,w??(i==null?void 0:i.name),d,O),j=n((E,D,W)=>{let K=m(E,D,W,m,e);if(K&&i){let q=h([K],b,i,W,m,e),B=x?q.flatMap(M=>{let Q=x(M);return Q?[Q]:[]}):q;return B==null?void 0:B[0]}},"inferSingleField"),t=n(E=>Object.keys(E).map(W=>{let K=E[W];return j(W,K,E)}).filter(Boolean),"inferSingleRecord"),T=n(E=>{let D=E.map(M=>t(M)),W=E.flatMap(M=>Object.keys(M)).filter((M,Q,Ie)=>Ie.indexOf(M)===Q),K={},q=W.map(M=>{let Q=D.map(ae=>ae.find(te=>te.key===M));return Q.reduce((ae,te,be)=>{if(!te)return ae;let $e=Q.filter(se=>(se==null?void 0:se.key)===te.key&&(se==null?void 0:se.type)===te.type).length;return $e>ae.count?(K[M]=E[be][M],{count:$e,field:te}):ae},{count:0,field:void 0}).field});return{commonRecord:K,inferredFields:q}},"inferMultipleRecords"),[N,A]=X.useMemo(()=>{if(r&&(e==="list"||e==="create")){let E=T(r);return[E.inferredFields,E.commonRecord]}if(k){let E=Object.keys(k).map(D=>{let W=k[D];return m(D,W,k,m,e)}).filter(Boolean);if(i){let D=h(E,b,i,k,m,e);return[x?D.flatMap(K=>{let q=x(K);return q?[q]:[]}):D,k]}return[[],k]}return[[],void 0]},[k,r,b,i,x]),{fields:S,loading:_}=Ct({record:A,fields:N,infer:m,meta:O}),ge=X.useMemo(()=>{let E=[];return S.forEach((D,W,K)=>{if(D.resource){if(E.findIndex(B=>{var M,Q;return((M=B.resource)==null?void 0:M.name)===((Q=D.resource)==null?void 0:Q.name)})>-1)return;let q=K.filter((B,M)=>{var Q,Ie,ae,te,be,$e;if(M!==W){let se=D.resource,Pt=B.resource,Rt=((Q=B.resource)==null?void 0:Q.identifier)||((Ie=D.resource)==null?void 0:Ie.identifier)?((ae=B.resource)==null?void 0:ae.identifier)===((te=D.resource)==null?void 0:te.identifier):((be=B.resource)==null?void 0:be.name)===(($e=D.resource)==null?void 0:$e.name);return se&&Pt&&Rt}else return!1});if(q.length>0)if(e==="create"||e==="edit"){let B;[D,...q].find(M=>{M.fieldable!==!0&&B===void 0&&(B=M)}),B?E.push(B):E.push(D)}else{let B;[D,...q].find(M=>{M.fieldable!==!1&&B===void 0&&(B=M)}),B?E.push(B):E.push(D)}else E.push(D)}else E.push(D)}),E},[S,e]),Fe=X.useMemo(()=>!$&&!_&&!R&&i?a({resource:i,resources:b,fields:ge,infer:m,meta:O,isCustomPage:i.name!==(C==null?void 0:C.name),id:d,i18n:!!s}):"",[i,b,ge,$,_]),Ae=P;return X.createElement(X.Fragment,null,l&&($||_)&&X.createElement(l,null),!$&&!_&&X.createElement(X.Fragment,null,X.createElement(He,{fetchError:!$&&L?L:!$&&!R&&!k,code:De(Fe,Y(((pe=i==null?void 0:i.meta)==null?void 0:pe.label)??((me=i==null?void 0:i.options)==null?void 0:me.label)??(i==null?void 0:i.label)??(i==null?void 0:i.name)??"Resource",e)),errorComponent:I,additionalScope:o}),typeof p<"u"&&!Ae?X.createElement(p,{code:Me(Fe),loading:$||_}):null))},"Inferencer");return n(({name:w,resource:x,fieldTransformer:P,meta:O,hideCodeViewerInProduction:d,id:i})=>{let{resource:b}=ze(x??w),s=`${(b==null?void 0:b.identifier)??(b==null?void 0:b.name)}-${e}-${i}`;return X.createElement(F,{hideCodeViewerInProduction:d,fieldTransformer:P,resourceName:x??w,meta:O??{},key:s,id:i})},"InferencerComponent")},"createInferencer");import Ce from"react";import{Alert as lr,Row as pr,Col as mr}from"antd";var ue=n(({error:e})=>e?Ce.createElement(pr,{justify:"center",align:"middle",style:{minHeight:"200px"}},Ce.createElement(mr,null,Ce.createElement(lr,{message:"Error",description:Ce.createElement("div",{dangerouslySetInnerHTML:{__html:e??""}}),type:"error",showIcon:!0}))):null,"ErrorComponent");import Ue from"react";import{Spin as dr,Row as fr,Col as yr}from"antd";var le=n(()=>Ue.createElement(fr,{justify:"center",align:"middle",style:{minHeight:"300px"}},Ue.createElement(yr,null,Ue.createElement(dr,{size:"large"}))),"LoadingComponent");var wt=n(({resource:e,fields:o,meta:u,isCustomPage:c,id:a,i18n:l})=>{let I=Y(e.label??e.name,"show"),p="record",m=[["React","react",!0],["IResourceComponentsProps","@refinedev/core"],["useShow","@refinedev/core"],["Show","@refinedev/antd"],["Typography","antd"]];l&&m.push(["useTranslate","@refinedev/core"]);let F=o.filter(r=>(r==null?void 0:r.relation)&&!(r!=null&&r.fieldable)&&(r==null?void 0:r.resource)).filter(Boolean).map(r=>{var $,R,L,j;if(r!=null&&r.relation&&!r.fieldable&&r.resource){if(r.multiple){m.push(["useMany","@refinedev/core"]);let t=f(p,r.key);return r.accessor&&(t=`${f(p,r.key)}?.map((item: any) => ${f("item",void 0,r.accessor)})`),`
                const { data: ${H(r.key,"Data")}, isLoading: ${H(r.key,"IsLoading")} } =
                useMany({
                    resource: "${r.resource.name}",
                    ids: ${t} || [],
                    queryOptions: {
                        enabled: !!${p} && !!${t}?.length,
                    },
                    ${z((($=r==null?void 0:r.resource)==null?void 0:$.identifier)??((R=r==null?void 0:r.resource)==null?void 0:R.name),u,"getMany")}
                });
                `}return m.push(["useOne","@refinedev/core"]),`
                const { data: ${H(r.key,"Data")}, isLoading: ${H(r.key,"IsLoading")} } =
                useOne({
                    resource: "${r.resource.name}",
                    id: ${f(p,r.key,r.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${p},
                    },
                    ${z(((L=r==null?void 0:r.resource)==null?void 0:L.identifier)??((j=r==null?void 0:r.resource)==null?void 0:j.name),u,"getOne")}
                });
            `}}).filter(Boolean),V=n(r=>{if(r.relation&&r.resource){let $=H(r.key,"Data"),R=H(r.key,"IsLoading");if(r.multiple){let L=f(p,r.key)+"?.length";return m.push(["TagField","@refinedev/antd"]),g`
                <Title level={5}>${v({resource:e,field:r,i18n:l,noQuotes:!0})}</Title>
                {${R} && ${L} ? <>Loading...</> : (
                    <>
                    ${(()=>{var j,t;if(r.relationInfer)if((j=r.relationInfer)!=null&&j.accessor){if(Array.isArray(r.relationInfer.accessor))return"Not Handled.";{let T=G((t=r.resource)==null?void 0:t.name),N=f(T,void 0,r.relationInfer.accessor);return`{record?.${r.key}?.length ? ${$}?.data?.map((${T}: any) => <TagField key={${N}} value={${N}} />) : <></>}`}}else return;else return})()}
                    </>
                )}
                `}return r.fieldable?g`
                <Title level={5}>${v({resource:e,field:r,i18n:l,noQuotes:!0})}</Title>
                <TextField value={${f(p,r.key,r.accessor)}} />
                `:g`
                <Title level={5}>${v({resource:e,field:r,i18n:l,noQuotes:!0})}</Title>
                {${R} ? <>Loading...</> : (
                    <>
                    ${(()=>{var L;return r.relationInfer?(L=r.relationInfer)!=null&&L.accessor?Array.isArray(r.relationInfer.accessor)?`{${f(`${$}?.data`,void 0,r.relationInfer.accessor,' + " " + ')}}`:`{${$}?.data?.${r.relationInfer.accessor}}`:`{${$}?.data}`:`{${$}?.data?.id}`})()}
                    </>
                )}
                
                `}},"renderRelationFields"),w=n(r=>{if(r.type==="text"){if(m.push(["TagField","@refinedev/antd"],["TextField","@refinedev/antd"]),r.multiple){let $=f("item",void 0,r.accessor);return g`
                <Title level={5}>${v({resource:e,field:r,i18n:l,noQuotes:!0})}</Title>
                {${f(p,r.key)}?.map((item: any) => (
                    <TagField value={${$}} key={${$}} />
                ))}
            `}return g`
                <Title level={5}>${v({resource:e,field:r,i18n:l,noQuotes:!0})}</Title>
                <TextField value={${f(p,r.key,r.accessor)}} />
            `}},"textFields"),x=n(r=>{if(r.type==="image"){if(m.push(["ImageField","@refinedev/antd"]),r.multiple){let $=f("item",void 0,r.accessor);return g`
                <Title level={5}>${v({resource:e,field:r,i18n:l,noQuotes:!0})}</Title>
                {${f(p,r.key)}?.map((item: any) => (
                    <ImageField style={{ maxWidth: 200 }} value={${$}} key={${$}} />
                ))}
            `}return g`
                <Title level={5}>${v({resource:e,field:r,i18n:l,noQuotes:!0})}</Title>
                <ImageField style={{ maxWidth: 200 }} value={${f(p,r.key,r.accessor," + ")}} />
                `}},"imageFields"),P=n(r=>{if(r.type==="email"){if(m.push(["TagField","@refinedev/antd"],["EmailField","@refinedev/antd"]),r.multiple){let $=f("item",void 0,r.accessor);return g`
                <Title level={5}>${v({resource:e,field:r,i18n:l,noQuotes:!0})}</Title>
                <>
                {${f(p,r.key)}?.map((item: any) => (
                    <TagField value={${$}} key={${$}} />
                ))}
                </>
            `}return g`
                <Title level={5}>${v({resource:e,field:r,i18n:l,noQuotes:!0})}</Title>
                <EmailField value={${f(p,r.key,r.accessor," + ")}} />
            `}},"emailFields"),O=n(r=>{if(r.type==="url"){if(m.push(["TagField","@refinedev/antd"],["UrlField","@refinedev/antd"]),r.multiple){let $=f("item",void 0,r.accessor);return g`
                <Title level={5}>${v({resource:e,field:r,i18n:l,noQuotes:!0})}</Title>
                {${f(p,r.key)}?.map((item: any) => (
                    <TagField value={${$}} key={${$}} />
                ))}
            `}return g`
                <Title level={5}>${v({resource:e,field:r,i18n:l,noQuotes:!0})}</Title>
                <UrlField value={${f(p,r.key,r.accessor," + ")}} />
            `}},"urlFields"),d=n(r=>{if(r.type==="boolean"){if(m.push(["TagField","@refinedev/antd"],["BooleanField","@refinedev/antd"]),r.multiple){let $=f("item",void 0,r.accessor);return g`
                <Title level={5}>${v({resource:e,field:r,i18n:l,noQuotes:!0})}</Title>
                {(${f(p,r.key)} as any[])?.map((item, index) => (
                    <BooleanField value={${$}} key={index} />
                ))}
            `}return g`
                <Title level={5}>${v({resource:e,field:r,i18n:l,noQuotes:!0})}</Title>
                <BooleanField value={${f(p,r.key,r.accessor," && ")}} />
            `}},"booleanFields"),i=n(r=>{if(r.type==="date"){if(m.push(["DateField","@refinedev/antd"]),r.multiple){let $=f("item",void 0,r.accessor);return g`
                <Title level={5}>${v({resource:e,field:r,i18n:l,noQuotes:!0})}</Title>
                {${f(p,r.key)}?.map((item: any) => (
                    <DateField value={${$}} key={${$}} />
                ))}
            `}return g`
                <Title level={5}>${v({resource:e,field:r,i18n:l,noQuotes:!0})}</Title>
                <DateField value={${f(p,r.key,r.accessor," + ' ' + ")}} />
            `}},"dateFields"),b=n(r=>{if(r.type==="richtext")return m.push(["MarkdownField","@refinedev/antd"]),g`
                <Title level={5}>${v({resource:e,field:r,i18n:l,noQuotes:!0})}</Title>
                <MarkdownField value={${f(p,r.key,r.accessor,' + " " + ')}} />
            `},"richtextFields"),s=n(r=>{if(r.type==="number"){if(m.push(["NumberField","@refinedev/antd"]),r.multiple){let $=f("item",void 0,r.accessor);return g`
                <Title level={5}>${v({resource:e,field:r,i18n:l,noQuotes:!0})}</Title>
                {${f(p,r.key)}?.map((item: any) => (
                    <TagField value={${$}} key={${$}} />
                ))}
            `}return g`
                <Title level={5}>${v({resource:e,field:r,i18n:l,noQuotes:!0})}</Title>
                <NumberField value={${f(p,r.key,r.accessor,' + " " + ')} ?? ""} />
            `}},"numberFields"),C=o.map(r=>{switch(r==null?void 0:r.type){case"text":return w(r);case"number":return s(r);case"richtext":return b(r);case"email":return P(r);case"image":return x(r);case"date":return i(r);case"boolean":return d(r);case"url":return O(r);case"relation":return V(r);default:return}});oe(m);let k=l&&"const translate = useTranslate();";return g`
    ${ne(m)}
    
    const { Title } = Typography;

    export const ${I}: React.FC<IResourceComponentsProps> = () => {
        ${k}
        const { queryResult } = useShow(${c?`{ 
                    resource: "${e.name}", 
                    id: ${ve(a)},
                    ${z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),u,"getOne")}
                }`:z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),u,"getOne")?`{${z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),u,"getOne")}}`:""});
        const { data, isLoading } = queryResult;
    
        const ${p} = data?.data;

        ${F}

        return (
            <Show isLoading={isLoading}>
                ${C.join("")}
            </Show>
        );
    };
    `},"renderer"),_e=ce({type:"show",additionalScope:[["@refinedev/antd","RefineAntd",{Show:gr,TagField:Ir,TextField:$r,ImageField:xr,EmailField:vr,UrlField:hr,BooleanField:Fr,DateField:br,MarkdownField:kr,NumberField:Cr}],["antd","AntdPackage",{Typography:wr}]],codeViewerComponent:ie,loadingComponent:le,errorComponent:ue,renderer:wt});import{useTable as Ar,List as Tr,TagField as Sr,ImageField as Pr,EmailField as Rr,UrlField as Lr,BooleanField as Nr,DateField as Er,MarkdownField as Vr,EditButton as Dr,ShowButton as Mr,DeleteButton as Or}from"@refinedev/antd";import{Table as jr,Space as Br}from"antd";var At=n(({resource:e,fields:o,meta:u,isCustomPage:c,i18n:a})=>{let l=Y(e.label??e.name,"list"),I="tableProps?.dataSource",p=[["React","react",!0],["IResourceComponentsProps","@refinedev/core"],["BaseRecord","@refinedev/core"],["useTable","@refinedev/antd"],["List","@refinedev/antd"],["Table","antd"],["Space","antd"]];a&&p.push(["useTranslate","@refinedev/core"]);let h=o.filter(t=>(t==null?void 0:t.relation)&&!(t!=null&&t.fieldable)&&(t==null?void 0:t.resource)).filter(Boolean).map(t=>{var T,N;if(t!=null&&t.relation&&!t.fieldable&&t.resource){p.push(["useMany","@refinedev/core"]);let A="";return t.multiple?A=`[].concat(...(${I}?.map((item) => ${f("item",t.key,t.accessor,!1)}) ?? []))`:A=`${I}?.map((item) => ${f("item",t.key,t.accessor,!1)}) ?? []`,`
                const { data: ${H(t.key,"Data")}, isLoading: ${H(t.key,"IsLoading")} } =
                useMany({
                    resource: "${t.resource.name}",
                    ids: ${A},
                    queryOptions: {
                        enabled: !!${I},
                    },
                    ${z(((T=t==null?void 0:t.resource)==null?void 0:T.identifier)??((N=t==null?void 0:t.resource)==null?void 0:N.name),u,"getMany")}
                });
                `}}).filter(Boolean),F=n(t=>{var T,N;if(t.relation&&t.resource){let S=`${H(t.key,"Data")}?.data`,_=H(t.key,"IsLoading");if(Array.isArray(t.accessor))return;let ge=`${_} ? <>Loading...</> : `,Fe=t.multiple?`dataIndex="${t.key}"`:`dataIndex={["${t.key}", ${t.accessor?`"${t.accessor}"`:""}]}`,Ae=`title=${v({resource:e,field:t,i18n:a})}`,pe="";if(t.multiple){p.push(["TagField","@refinedev/antd"]);let me="item";if(t!=null&&t.relationInfer){let E=`${S}?.find((resourceItems) => resourceItems.id === ${f("item",void 0,t.accessor)})`;me=f(E,void 0,(T=t==null?void 0:t.relationInfer)==null?void 0:T.accessor)}pe=`render={(value: any[]) => ${ge} (
                    <>
                        {${f("value",void 0)}?.map((item, index) => (
                            <TagField key={index} value={${me}} />
                        ))}
                    </>
                )}`}else if(t!=null&&t.relationInfer){let me=`${S}?.find((item) => item.id === value)`,E=f(me,void 0,(N=t==null?void 0:t.relationInfer)==null?void 0:N.accessor);pe=`render={(value) => ${ge} ${E}}`}else pe="";return g`<Table.Column ${Fe} ${Ae} ${pe} />`}},"renderRelationFields"),V=n(t=>{if(t.type==="image"){p.push(["ImageField","@refinedev/antd"]);let T=Array.isArray(t.accessor)||t.multiple?`dataIndex="${t.key}"`:`dataIndex={["${t.key}", ${t.accessor?`"${t.accessor}"`:""}]}`,N=`title=${v({resource:e,field:t,i18n:a})}`,A=g`render={(value: any) => <ImageField style={{ maxWidth: "100px" }} value={${f("value",void 0,Array.isArray(t.accessor)?t.accessor:void 0," + ")}} />}`;if(t.multiple){let S=f("item",void 0,t.accessor," + ");A=g`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <ImageField style={{ maxWidth: "100px" }} value={${S}} key={index} />
                ))}</>)}`}return g`<Table.Column ${T} ${N} ${A} />`}},"imageFields"),w=n(t=>{if(t.type==="email"){p.push(["TagField","@refinedev/antd"],["EmailField","@refinedev/antd"]);let T=Array.isArray(t.accessor)||t.multiple?`dataIndex="${t.key}"`:`dataIndex={["${t.key}", ${t.accessor?`"${t.accessor}"`:""}]}`,N=`title=${v({resource:e,field:t,i18n:a})}`,A=g`render={(value: any) => <EmailField value={${f("value",void 0,Array.isArray(t.accessor)?t.accessor:void 0,' + " " + ')}} />}`;if(t.multiple){let S=f("item",void 0,t.accessor,' + " " + ');A=g`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <TagField value={${S}} key={index} />
                ))}</>)}`}return g`<Table.Column ${T} ${N} ${A} />`}},"emailFields"),x=n(t=>{if(t.type==="url"){p.push(["UrlField","@refinedev/antd"],["TagField","@refinedev/antd"]);let T=Array.isArray(t.accessor)||t.multiple?`dataIndex="${t.key}"`:`dataIndex={["${t.key}", ${t.accessor?`"${t.accessor}"`:""}]}`,N=`title=${v({resource:e,field:t,i18n:a})}`,A=g`render={(value: any) => <UrlField value={${f("value",void 0,Array.isArray(t.accessor)?t.accessor:void 0," + ")}} />}`;if(t.multiple){let S=f("item",void 0,t.accessor," + ");A=g`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <TagField value={${S}} key={index} />
                ))}</>)}`}return g`<Table.Column ${T} ${N} ${A} />`}},"urlFields"),P=n(t=>{if((t==null?void 0:t.type)==="boolean"){p.push(["BooleanField","@refinedev/antd"]);let T=Array.isArray(t.accessor)||t.multiple?`dataIndex="${t.key}"`:`dataIndex={["${t.key}", ${t.accessor?`"${t.accessor}"`:""}]}`,N=`title=${v({resource:e,field:t,i18n:a})}`,A=g`render={(value: any) => <BooleanField value={${f("value",void 0,Array.isArray(t.accessor)?t.accessor:void 0," && ")}} />}`;if(t.multiple){let S=f("item",void 0,t.accessor," && ");A=g`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <BooleanField value={${S}} key={index} />
                ))}</>)}`}return g`<Table.Column ${T} ${N} ${A} />`}},"booleanFields"),O=n(t=>{if(t.type==="date"){p.push(["DateField","@refinedev/antd"]);let T=Array.isArray(t.accessor)||t.multiple?`dataIndex="${t.key}"`:`dataIndex={["${t.key}", ${t.accessor?`"${t.accessor}"`:""}]}`,N=`title=${v({resource:e,field:t,i18n:a})}`,A=g`render={(value: any) => <DateField value={${f("value",void 0,Array.isArray(t.accessor)?t.accessor:void 0,' + " " + ')}} />}`;if(t.multiple){let S=f("item",void 0,t.accessor,' + " " + ');A=g`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <DateField value={${S}} key={index} />
                ))}</>)}`}return g`<Table.Column ${T} ${N} ${A} />`}},"dateFields"),d=n(t=>{if((t==null?void 0:t.type)==="richtext"){p.push(["MarkdownField","@refinedev/antd"]);let T=Array.isArray(t.accessor)||t.multiple?`dataIndex="${t.key}"`:t.accessor?`dataIndex={["${t.key}", "${t.accessor}"]}`:`dataIndex="${t.key}"`,N=`title=${v({resource:e,field:t,i18n:a})}`,A=g`render={(value: any) => <MarkdownField value={(${f("value",void 0,Array.isArray(t.accessor)?t.accessor:void 0)}).slice(0, 80) + "..."} />}`;if(t.multiple){let S=f("item",void 0,t.accessor,' + " " + ');A=g`render={(value: any[]) => (<>{value?.map((item, index) => (
                    <MarkdownField value={(${S})?.slice(0, 80) + "..."} key={index} />
                ))}</>)}`}return g`<Table.Column ${T} ${N} ${A} />`}},"richtextFields"),i=n(t=>{if(t&&(t.type==="text"||t.type==="number")){let T=t.accessor&&!Array.isArray(t.accessor)&&!t.multiple?`dataIndex={["${t.key}", "${t.accessor}"]}`:`dataIndex="${t.key}"`,N=`title=${v({resource:e,field:t,i18n:a})}`,A="";if(t.multiple){p.push(["TagField","@refinedev/antd"]);let S=f("item",void 0,t.accessor,' + " " + ');A=`render={(value: any[]) => (<>{value?.map((item) => (
                    <TagField value={${S}} key={${S}} />
                ))}</>)}`}return!t.multiple&&Array.isArray(t.accessor)&&(A=`render={(value: any) => (<>{${f("value",void 0,t.accessor)}}</>)}`),`<Table.Column ${T} ${N} ${A} />`}},"basicFields"),{canEdit:b,canShow:s,canDelete:C,meta:k}=e??{},r=C||(k==null?void 0:k.canDelete);b&&p.push(["EditButton","@refinedev/antd"]),s&&p.push(["ShowButton","@refinedev/antd"]),r&&p.push(["DeleteButton","@refinedev/antd"]);let R=b||s||r?g`
            <Table.Column
                title=${a?'{translate("table.actions")}':'"Actions"'}
                dataIndex="actions"
                render={(_, record: BaseRecord) => (
                    <Space>
                    ${b?g`
                        <EditButton
                            hideText
                            size="small"
                            recordItemId={record.id}
                        />
                        `:""}
                    ${s?g`
                        <ShowButton
                            hideText
                            size="small"
                            recordItemId={record.id}
                        />
                        `:""}
                    ${r?g`
                        <DeleteButton
                            hideText
                            size="small"
                            recordItemId={record.id}
                        />
                        `:""}
                    </Space>
                )}
            />
        `:"",L=o.map(t=>{switch(t==null?void 0:t.type){case"text":case"number":return i(t);case"richtext":return d(t);case"email":return w(t);case"image":return V(t);case"date":return O(t);case"boolean":return P(t);case"url":return x(t);case"relation":return F(t);default:return}});oe(p);let j=a&&"const translate = useTranslate();";return g`
    ${ne(p)}
    
    export const ${l}: React.FC<IResourceComponentsProps> = () => {
        ${j}
        const { tableProps } = useTable({
            syncWithLocation: true,
            ${c?` resource: "${e.name}",`:""}
            ${z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),u,"getList")}
        });
    
        ${h}

        return (
            <List>
                <Table {...tableProps} rowKey="id">
                    ${L.join(`\r
`)}
                    ${R}
                </Table>
            </List>
        );
    };
    `},"renderer"),Qe=ce({type:"list",additionalScope:[["@refinedev/antd","RefineAntd",{useTable:Ar,List:Tr,TagField:Sr,ImageField:Pr,EmailField:Rr,UrlField:Lr,BooleanField:Nr,DateField:Er,MarkdownField:Vr,EditButton:Dr,ShowButton:Mr,DeleteButton:Or}],["antd","AntdPackage",{Table:jr,Space:Br}]],codeViewerComponent:ie,loadingComponent:le,errorComponent:ue,renderer:At});import{Create as Hr,useForm as zr,useSelect as Ur,getValueFromEvent as _r}from"@refinedev/antd";import{Form as Qr,Input as Wr,Select as Kr,Upload as qr,Checkbox as Zr,DatePicker as Gr}from"antd";import Yr from"dayjs";var Tt=n(({resource:e,fields:o,meta:u,isCustomPage:c,i18n:a})=>{let l=Y(e.label??e.name,"create"),I=[["React","react",!0],["IResourceComponentsProps","@refinedev/core"],["Create","@refinedev/antd"],["Form","antd"],["useForm","@refinedev/antd"],["Input","antd"]];a&&I.push(["useTranslate","@refinedev/core"]);let m=o.filter(i=>(i==null?void 0:i.relation)&&!(i!=null&&i.fieldable)&&(i==null?void 0:i.resource)).filter(Boolean).map(i=>{var b,s;if(i!=null&&i.relation&&!i.fieldable&&i.resource)return I.push(["useSelect","@refinedev/antd"]),`
                const { selectProps: ${H(i.key,"SelectProps")} } =
                useSelect({
                    resource: "${i.resource.name}",
                    ${je(i)}
                    ${z(((b=i==null?void 0:i.resource)==null?void 0:b.identifier)??((s=i==null?void 0:i.resource)==null?void 0:s.name),u,"getList")}
                });
            `}).filter(Boolean),h=n(i=>{if(i.relation&&i.resource){I.push(["Select","antd"]);let b=H(i.key,"SelectProps"),s=i.accessor?i.multiple?`"${i.key}"`:`["${i.key}", "${i.accessor}"]`:`"${i.key}"`,C="",k="";return i.accessor&&i.multiple&&(k=`getValueFromEvent={(selected: string[]) => {
                    return selected?.map((item) => ({ ${de(`${i.accessor}`)?i.accessor:`["${i.accessor}"]`}: item }));
                }}`,C=`getValueProps={(value: any[]) => {
                    return {
                        value: value?.map((item) => ${f("item",void 0,i.accessor)}),
                    };
                }}`),g`
                <Form.Item
                    label=${v({resource:e,field:i,i18n:a})}
                    name={${s}}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    ${C}
                    ${k}
                >
                    <Select ${i.multiple?'mode="multiple"':""} {...${b}} />
                </Form.Item>             
                `}},"renderRelationFields"),F=n(i=>{if(i.type==="text"||i.type==="url"||i.type==="email"||i.type==="number")return ye(i.key)||i.multiple?void 0:g`
                <Form.Item
                    label=${v({resource:e,field:i,i18n:a})}
                    name={["${i.key}"${i.accessor?', "'+i.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Input  />
                </Form.Item>
            `},"basicInputFields"),V=n(i=>{if(i.type==="image"){I.push(["Upload","antd"],["getValueFromEvent","@refinedev/antd"]);let b='valuePropName="fileList"';return i.multiple&&!i.accessor&&(b="getValueProps={(value) => ({ fileList: value?.map((item: any) => ({ url: item, name: item, uid: item }))})}"),i.multiple||(i.accessor?b="getValueProps={(value) => ({ fileList: value ? [value] : [] })}":b="getValueProps={(value) => ({ fileList: [{ url: value, name: value, uid: value }]})}"),g`
                <Form.Item label=${v({resource:e,field:i,i18n:a})}>
                    <Form.Item
                        name="${i.key}"
                        ${b}
                        getValueFromEvent={getValueFromEvent}
                        noStyle
                        rules={[
                            {
                                required: true,
                            },
                        ]}
                    >
                        <Upload.Dragger
                            listType="picture"
                            ${i.multiple?"multiple":""}
                            beforeUpload={() => false}
                        >
                            <p className="ant-upload-text">
                                Drag & drop a file in this area
                            </p>
                        </Upload.Dragger>
                    </Form.Item>
                </Form.Item>
                `}},"imageFields"),w=n(i=>{if(i.type==="boolean")return I.push(["Checkbox","antd"]),i.multiple?void 0:g`
                <Form.Item
                    label=${v({resource:e,field:i,i18n:a})}
                    valuePropName="checked"
                    name={["${i.key}"${i.accessor?', "'+i.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Checkbox>${Z(i.key)}</Checkbox>
                </Form.Item>
            `},"booleanFields"),x=n(i=>{if(i.type==="date")return I.push(["DatePicker","antd"],["dayjs","dayjs",!0]),i.multiple?void 0:g`
                <Form.Item
                    label=${v({resource:e,field:i,i18n:a})}
                    name={["${i.key}"${i.accessor?', "'+i.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    getValueProps={(value) => ({ value: value ? dayjs(value) : undefined })}
                >
                    <DatePicker />
                </Form.Item>
            `},"dateFields"),P=n(i=>{if(i.type==="richtext")return g`
            <Form.Item
                label=${v({resource:e,field:i,i18n:a})}
                name="${i.key}"
                rules={[
                    {
                        required: true,
                    },
                ]}
            >
                <Input.TextArea rows={5} />
            </Form.Item>
            `},"richtextFields"),O=o.map(i=>{switch(i==null?void 0:i.type){case"text":case"number":case"email":case"url":return F(i);case"richtext":return P(i);case"image":return V(i);case"date":return x(i);case"boolean":return w(i);case"relation":return h(i);default:return}});oe(I);let d=a&&"const translate = useTranslate();";return g`
    ${ne(I)}
    
    export const ${l}: React.FC<IResourceComponentsProps> = () => {
        ${d}
        const { formProps, saveButtonProps, queryResult } = useForm(${c?`{
                      resource: "${e.name}",
                      action: "create",
                      ${z(e.identifier??e.name,u,"getOne")}
                  }`:z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),u,"getOne")?`{
                  ${z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),u,"getOne")}
              }`:""});
    
        ${m}

        return (
            <Create saveButtonProps={saveButtonProps}>
                <Form {...formProps} layout="vertical">
                    ${O.join("")}
                </Form>
            </Create>
        );
    };
    `},"renderer"),We=ce({type:"create",additionalScope:[["@refinedev/antd","RefineAntd",{Create:Hr,useForm:zr,useSelect:Ur,getValueFromEvent:_r}],["dayjs","dayjs",Yr,!0],["antd","AntdPackage",{Form:Qr,Input:Wr,Select:Kr,Upload:qr,Checkbox:Zr,DatePicker:Gr}]],codeViewerComponent:ie,loadingComponent:le,errorComponent:ue,renderer:Tt});import{Edit as Jr,useForm as Xr,useSelect as en,getValueFromEvent as tn}from"@refinedev/antd";import{Form as rn,Input as nn,Select as on,Upload as an,Checkbox as sn,DatePicker as cn}from"antd";import un from"dayjs";var St=n(({resource:e,fields:o,meta:u,isCustomPage:c,id:a,i18n:l})=>{let I=Y(e.label??e.name,"edit"),p=H(e.label??e.name,"Data"),m=[["React","react",!0],["IResourceComponentsProps","@refinedev/core"],["Edit","@refinedev/antd"],["Form","antd"],["useForm","@refinedev/antd"],["Input","antd"]];l&&m.push(["useTranslate","@refinedev/core"]);let F=o.filter(s=>(s==null?void 0:s.relation)&&!(s!=null&&s.fieldable)&&(s==null?void 0:s.resource)).filter(Boolean).map(s=>{var C,k;if(s!=null&&s.relation&&!s.fieldable&&s.resource){m.push(["useSelect","@refinedev/antd"]);let r=f(p,s.key,s.accessor,!1);return s.multiple&&s.accessor&&(r=`${f(p,s.key)}?.map((item: any) => ${f("item",void 0,s.accessor)})`),`
                const { selectProps: ${H(s.key,"SelectProps")} } =
                useSelect({
                    resource: "${s.resource.name}",
                    defaultValue: ${r},
                    ${s.relationInfer&&s.relationInfer.accessor?typeof s.relationInfer.accessor=="string"?s.relationInfer.accessor!=="title"?`optionLabel: "${s.relationInfer.accessor}",`:"":`optionLabel: "${s.relationInfer.accessor[0]}",`:""}
                    ${z(((C=s==null?void 0:s.resource)==null?void 0:C.identifier)??((k=s==null?void 0:s.resource)==null?void 0:k.name),u,"getList")}
                });
            `}}).filter(Boolean),V=n(s=>{if(s.relation&&s.resource){m.push(["Select","antd"]);let C=H(s.key,"SelectProps"),k=s.accessor?s.multiple?`"${s.key}"`:`["${s.key}", "${s.accessor}"]`:`"${s.key}"`,r="",$="";return s.accessor&&s.multiple&&($=`getValueFromEvent={(selected: string[]) => {
                    return selected?.map((item) => ({ ${de(`${s.accessor}`)?s.accessor:`["${s.accessor}"]`}: item }));
                }}`,r=`getValueProps={(value: any[]) => {
                    return {
                        value: value?.map((item) => ${f("item",void 0,s.accessor)}),
                    };
                }}`),g`
                <Form.Item
                    label=${v({resource:e,field:s,i18n:l})}
                    name={${k}}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    ${r}
                    ${$}
                >
                    <Select ${s.multiple?'mode="multiple"':""} {...${C}} />
                </Form.Item>             
                `}},"renderRelationFields"),w=n(s=>{if(s.type==="text"||s.type==="url"||s.type==="email"||s.type==="number"){if(s.multiple){let C=f(s.key,"index",s.accessor).split("?.").map(k=>`"${k}"`).join(", ").replace(/"index"/,"index");return`
                    <>
                        {(${f(p,s.key)} as any[])?.map((item, index) => (
                            <Form.Item
                                key={index}
                                label=${v({resource:e,field:s,i18n:l})}
                                name={[${C}]}
                            >
                                <Input
                                    type="${s.type}"
                                ${ye(s.key)?"readOnly disabled":""} />
                            </Form.Item>
                        ))}
                    </>
                `}return g`
                <Form.Item
                    label=${v({resource:e,field:s,i18n:l})}
                    name={["${s.key}"${s.accessor?', "'+s.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Input ${ye(s.key)?"readOnly disabled":""} />
                </Form.Item>
            `}},"basicInputFields"),x=n(s=>{if(s.type==="image"){m.push(["Upload","antd"],["getValueFromEvent","@refinedev/antd"]);let C='valuePropName="fileList"';return s.multiple&&!s.accessor&&(C="getValueProps={(value) => ({ fileList: value?.map((item: any) => ({ url: item, name: item, uid: item }))})}"),s.multiple||(s.accessor?C="getValueProps={(value) => ({ fileList: value ? [value] : [] })}":C="getValueProps={(value) => ({ fileList: [{ url: value, name: value, uid: value }]})}"),g`
                <Form.Item label=${v({resource:e,field:s,i18n:l})}>
                    <Form.Item
                        name="${s.key}"
                        ${C}
                        getValueFromEvent={getValueFromEvent}
                        noStyle
                        rules={[
                            {
                                required: true,
                            },
                        ]}
                    >
                        <Upload.Dragger
                            listType="picture"
                            ${s.multiple?"multiple":""}
                            beforeUpload={() => false}
                        >
                            <p className="ant-upload-text">
                                Drag & drop a file in this area
                            </p>
                        </Upload.Dragger>
                    </Form.Item>
                </Form.Item>
                `}},"imageFields"),P=n(s=>{if(s.type==="boolean"){if(m.push(["Checkbox","antd"]),s.multiple){let C=f(s.key,"index",s.accessor).split("?.").map(k=>`"${k}"`).join(", ").replace(/"index"/,"index");return`
                    <>
                        {(${f(p,s.key)} as any[])?.map((item, index) => (
                            <Form.Item
                                key={index}
                                valuePropName="checked"
                                label=${v({resource:e,field:s,i18n:l})}
                                name={[${C}]}
                            >
                                <Checkbox>${Z(s.key)}</Checkbox>
                            </Form.Item>
                        ))}
                    </>
                `}return g`
                <Form.Item
                    label=${v({resource:e,field:s,i18n:l})}
                    valuePropName="checked"
                    name={["${s.key}"${s.accessor?', "'+s.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                >
                    <Checkbox>${Z(s.key)}</Checkbox>
                </Form.Item>
            `}},"booleanFields"),O=n(s=>{if(s.type==="date"){if(m.push(["DatePicker","antd"],["dayjs","dayjs",!0]),s.multiple){let C=f(s.key,"index",s.accessor).split("?.").map(k=>`"${k}"`).join(", ").replace(/"index"/,"index");return g`
                    <>
                        {(${f(p,s.key)} as any[])?.map((item, index) => (
                            <Form.Item
                                key={index}
                                label=${v({resource:e,field:s,i18n:l})}
                                name={[${C}]}
                                getValueProps={(value) => ({ value: value ? dayjs(value) : undefined })}
                            >
                                <DatePicker />
                            </Form.Item>
                        ))}
                    </>
                `}return g`
                <Form.Item
                    label=${v({resource:e,field:s,i18n:l})}
                    name={["${s.key}"${s.accessor?', "'+s.accessor+'"':""}]}
                    rules={[
                        {
                            required: true,
                        },
                    ]}
                    getValueProps={(value) => ({ value: value ? dayjs(value) : undefined })}
                >
                    <DatePicker />
                </Form.Item>
            `}},"dateFields"),d=n(s=>{if(s.type==="richtext")return g`
            <Form.Item
                label=${v({resource:e,field:s,i18n:l})}
                name="${s.key}"
                rules={[
                    {
                        required: true,
                    },
                ]}
            >
                <Input.TextArea rows={5} />
            </Form.Item>
            `},"richtextFields"),i=o.map(s=>{switch(s==null?void 0:s.type){case"text":case"number":case"email":case"url":return w(s);case"richtext":return d(s);case"image":return x(s);case"date":return O(s);case"boolean":return P(s);case"relation":return V(s);default:return}});oe(m);let b=l&&"const translate = useTranslate();";return g`
    ${ne(m)}
    
    export const ${I}: React.FC<IResourceComponentsProps> = () => {
        ${b}
        const { formProps, saveButtonProps, queryResult } = useForm(${c?`{
                      resource: "${e.name}",
                      id: ${ve(a)},
                      action: "edit",
                      ${z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),u,"getOne")}
                  }`:z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),u,"getOne")?`{
                    ${z((e==null?void 0:e.identifier)??(e==null?void 0:e.name),u,"getOne")}
                }`:""});
    
        const ${p} = queryResult?.data?.data;
    
        ${F}

        return (
            <Edit saveButtonProps={saveButtonProps}>
                <Form {...formProps} layout="vertical">
                    ${i.join("")}
                </Form>
            </Edit>
        );
    };
    `},"renderer"),Ke=ce({type:"edit",additionalScope:[["@refinedev/antd","RefineAntd",{Edit:Jr,useForm:Xr,useSelect:en,getValueFromEvent:tn}],["dayjs","dayjs",un,!0],["antd","AntdPackage",{Form:rn,Input:nn,Select:on,Upload:an,Checkbox:sn,DatePicker:cn}]],codeViewerComponent:ie,loadingComponent:le,errorComponent:ue,renderer:St});var Bi=n(({action:e,id:o,...u})=>{let{action:c,id:a}=ln();switch(e??c){case"show":return we.createElement(_e,{...u,id:o??a});case"create":return we.createElement(We,{...u,id:o??a});case"edit":return we.createElement(Ke,{...u,id:o??a});default:return we.createElement(Qe,{...u,id:o??a})}},"AntdInferencer");export{We as AntdCreateInferencer,Tt as AntdCreateRenderer,Ke as AntdEditInferencer,St as AntdEditRenderer,Bi as AntdInferencer,Qe as AntdListInferencer,At as AntdListRenderer,_e as AntdShowInferencer,wt as AntdShowRenderer};
//# sourceMappingURL=antd.js.map