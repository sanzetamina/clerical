var Er=Object.defineProperty;var n=(e,o)=>Er(e,"name",{value:o,configurable:!0});import Se from"react";import{useResource as xn}from"@refinedev/core";import{Show as kt,TagField as It,TextField as xt,EmailField as $t,UrlField as Ft,BooleanField as bt,DateField as vt,MarkdownField as Ct,NumberField as St}from"@refinedev/chakra-ui";import{Heading as wt,HStack as Tt,Image as At}from"@chakra-ui/react";import X,{useContext as pt}from"react";import{useResource as ze,TranslationContext as mt}from"@refinedev/core";var Mr=/(image|photo|avatar|url|logo|cover|thumbnail|icon)/i,we=n((e,o)=>{let c=["name","label","title","count","content","username","nickname","login","firstName","lastName","url"];Mr.test(e)&&c.unshift("url");let i=c.find(s=>s in o&&!!o[s]);if(i)return i==="firstName"&&"lastName"in o?["firstName","lastName"]:i},"getFieldableKeys");import{pickNotDeprecated as Nr}from"@refinedev/core";function Te(e,o,c){if(o)return o;let i=c==null?void 0:c.find(u=>u.name===e),s=Nr(i==null?void 0:i.meta,i==null?void 0:i.options);return s!=null&&s.dataProviderName?s.dataProviderName:"default"}n(Te,"pickDataProvider");var ke=n(e=>{var o;return(o=e==null?void 0:e.options)==null?void 0:o.dataProviderName},"dataProviderFromResource");var Ae=n(e=>{let o=[...e].filter(Boolean).sort((c,i)=>(i.priority||0)-(c.priority||0))[0];return o||null},"pickInferredField");import Vr from"prettier/standalone";import Br from"prettier/parser-typescript";var He=n(e=>{try{return Vr.format(e,{parser:"typescript",plugins:[Br],arrowParens:"always",trailingComma:"all",semi:!0,tabWidth:4,printWidth:80})}catch(o){return console.warn("Formatting error in inferencer",o),e}},"prettierFormat");var We=n(e=>e.replace(/ {2,}/g," ").replace(/\n{2,}/g,`
`),"prettySpaces");var Re=/(-id|-ids|_id|_ids|Id|Ids|ID|IDs)(\[\])?$/,Ge=n((e,o)=>{let c=Re.test(e),i=typeof o=="string"||typeof o=="number",s=Array.isArray(o)&&o.every(u=>typeof u=="string"||typeof u=="number");return c&&i||c&&s?{key:e,relation:!0,multiple:!!s,type:"relation",priority:1}:!1},"relationInfer");var U=n(e=>e.replace(Re,""),"removeRelationSuffix");var fe=n(e=>U(e).replace(/([a-z])([A-Z])/g,"$1 $2").replace(/_/g," ").replace(/-/g," ").split(" ").map(y=>y.charAt(0).toUpperCase()+y.slice(1)).join(" "),"prettyString");var F=n(e=>{let{resource:o,field:c,i18n:i}=e;if(i){let u=`translate("${o.name}.fields.${c.key}")`;return e.noBraces?`${u}`:`{${u}}`}let s=fe(c.key);return e.noQuotes?s:`"${s}"`},"translatePrettyString");import Ze from"pluralize";var q=n((e="")=>Ze.isSingular(e)?e:Ze.singular(e),"toSingular");import Ye from"pluralize";var te=n((e="")=>Ye.isPlural(e)?e:Ye.plural(e),"toPlural");var Pe=n(e=>e.replace(/export\s+(const|let|var|type|interface|function|class)\s+(\w+)\s*(=|:)\s*/g,"$1 $2 = ").split(`
`).filter(s=>!s.trim().startsWith("export default")).join(`
`),"replaceExports");var Je=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Dr=/import[ \n\t](?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Or=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,Le=n((e,o={})=>{let c=e.matchAll(Je),i=new Set;for(let s of c){let[,u,y,p,l]=s;if(l in o){let $=o[l];if(l==="react")continue;u&&i.add(`const { default: ${u} } = ${$};`),y&&i.add(`const${y.replace(Or,"$1: $3$4")} = ${$};`),p&&i.add(`const ${p} = ${$};`)}}return We(`
    ${Array.from(i).join(`
`)}
    ${e.replace(Je,"").replace(Dr,"")}
    `)},"replaceImports");import Ce from"pluralize";var Ee=n((e,o)=>e?o.find(i=>{let s=U(e.key);return i.name===s||i.name===(Ce.isPlural(s)?s:Ce.plural(s))||i.name===(Ce.isSingular(s)?s:Ce.singular(s))}):void 0,"resourceFromInferred");import zr from"pluralize";var Y=n((e,o,c="Inferred")=>{let i=e.replace(/[^a-zA-Z0-9]/g," "),s=zr.singular(i),y=fe(s).replace(/ /g,"")||c,p=o.charAt(0).toUpperCase()+o.slice(1);return/^[a-zA-Z]/.test(y)?`${y}${p}`:`${p}${y}`},"componentName");var jr=n(e=>e?Array.isArray(e)?e.join(""):typeof e=="string"?e:typeof e=="object"||typeof e=="function"?e.toString():typeof e=="number"?String(e):typeof e=="boolean"&&e?"true":e:"","handleExpression"),x=n((e,...o)=>e.reduce((i,s,u)=>`${i}${s}${jr(o[u])}`,"").trim(),"jsx");var Me=n((e,o)=>`
    ${e??""}
    
    render(typeof ${o} !== "undefined" ? <${o} /> : <></>);
    `,"prepareLiveCode");var Ne=n(e=>e==null?void 0:e.replace(/(\/\* hidden-start \*\/)(.|\n)*?(\/\* hidden-end \*\/)/g,""),"removeHiddenCode");var Ur=/^[a-zA-Z_$][a-zA-Z_$0-9]*$/,Ve=n(e=>Ur.test(e),"shouldDotAccess");function Be(e,o,c){let i=`${e}`;return o&&(i+="?.",Ve(o)?i+=o:i+=`['${o}']`),c&&(i+="?.",Ve(c)?i+=c:i+=`['${c}']`),i}n(Be,"accessorSingle");function Kr(e,o,c){return(c??[]).map(s=>Be(e,o,s))}n(Kr,"accessorMultiple");var f=n((e,o,c,i=' + " " + ')=>Array.isArray(c)?i?Kr(e,o,c).join(i):Be(e,o,c[0]):Be(e,o,c),"accessor"),Q=n((e,o,c)=>{let i=e;return o&&(i+=`.${o}`),c&&(Array.isArray(c)?i+=`.${c[0]}`:i+=`.${c}`),i},"dotAccessor");var ne=n(e=>{let o=e.reduce((i,[s,u,y])=>(i[u]||(i[u]=[]),i[u].includes(s)||(y?i[u].push([s,!0]):i[u].push(s)),i),{});return Object.entries(o).map(([i,s])=>{let u=s.find($=>Array.isArray($)&&$[1]),y=s.filter($=>typeof $=="string"),p=u?`${u[0]}`:"",l=y.length?`{ ${y.join(", ")} }`:"";return`import ${p}${p&&l?", ":""}${l} from "${i}";`})},"printImports");var Qr=/^id$/i,Ie=n(e=>Qr.test(e),"isIDKey");var xe=n(e=>e.relationInfer&&e.relationInfer.accessor?Array.isArray(e.relationInfer.accessor)?`optionLabel: "${e.relationInfer.accessor[0]}",`:e.relationInfer.accessor!=="title"?`optionLabel: "${e.relationInfer.accessor}",`:"":"","getOptionLabel");var oe=n(e=>{},"noOp");var A=n((e,o="")=>{if(Number.isInteger(Number(e)))return o.charAt(0).toLowerCase()+o.slice(1)+e;let i=e.replace(/^\d+/,"").replace(/[^a-zA-Z0-9]/g,"-"),s=fe(i).replace(/ /g,"");return`${s.charAt(0).toLowerCase()+s.slice(1)}${o.charAt(0).toUpperCase()+o.slice(1)}`},"getVariableName");var O=n((e,o,c)=>{if(o&&c&&e){let i=e?o[e]:{},s=(i==null?void 0:i[c])??(i==null?void 0:i.default);return s?`meta: ${JSON.stringify(s)},`:""}return""},"getMetaProps"),ee=n((e,o,c)=>{if(o&&c&&e){let i=e?o[e]:{},u=[...c,"default"].reduce((y,p)=>y??(i==null?void 0:i[p]),void 0);if(u)return u}},"pickMeta");var $e=n(e=>e===void 0?e:typeof e=="string"?`"${e}"`:e,"idQuoteWrapper");var Xe=n(e=>{let o=n((c,i,s,u=o,y)=>{let p=e.map($=>$(c,i,s,u,y));return Ae(p)},"fieldInferencer");return o},"composeInferencers");var er=n(e=>n((c,i,s,u,y,p)=>e.reduce((l,$)=>$(l,i,s,u,y,p),c),"fieldTransformer"),"composeTransformers");var rr=n((e,o,c,i,s)=>{let u=Array.isArray(o),y=Array.isArray(o)&&o.every(p=>typeof p=="string"||typeof p=="number");if(u){if(!y){let l=i(e,o[0],c,i,s);return l?{...l,key:e,multiple:!0,priority:1}:!1}let p=i(e,o[0],c,i,s)||{type:"string"};return{key:e,multiple:!0,priority:1,type:p==null?void 0:p.type}}return!1},"arrayInfer");var tr=n((e,o)=>typeof o=="boolean"?{key:e,type:"boolean"}:!1,"booleanInfer");import nr from"dayjs";var _r=/(_at|_on|At|On|AT|ON)(\[\])?$/,qr=["/",":","-","."],or=n((e,o)=>{let c=_r.test(e)&&nr(o).isValid(),i=typeof o=="string"&&nr(o).isValid();return typeof o=="string"&&qr.some(u=>o.includes(u))&&(c||i)?{key:e,type:"date",priority:1}:!1},"dateInfer");var Wr=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,ar=n((e,o)=>typeof o=="string"&&Wr.test(o)?{key:e,type:"email",priority:1}:!1,"emailInfer");var Gr=/\.(gif|jpe?g|tiff?|png|webp|bmp|svg)$/i,sr=n((e,o)=>typeof o=="string"&&Gr.test(o)?{key:e,type:"image",priority:2}:!1,"imageInfer");var ir=n((e,o)=>typeof o>"u"||o===null?null:!1,"nullishInfer");var cr=n((e,o)=>{let c=typeof o=="string"&&o.length>0,i=!isNaN(o);return c&&i||typeof o=="number"?{key:e,type:"number"}:!1},"numberInfer");var ur=/id$/i,pr=n((e,o,c,i,s)=>{let u=o!==null,y=!Array.isArray(o);if(u&&y&&typeof o=="object"){let l=Object.keys(o).length===1&&ur.test(Object.keys(o)[0]),$=Object.keys(o).some(S=>ur.test(S));if(l)return{key:e,type:"relation",relation:!0,accessor:"id",priority:1};let I=we(e,o);if((I?I.length>0:!1)&&I){let S=I&&Array.isArray(I)?I[0]:I,h=i(S,o[S],o,i,s);if(h){let w=Array.isArray(I)?I.map(m=>h.accessor?`${m}.${Array.isArray(h.accessor)?h.accessor[0]:h.accessor}`:m):h.accessor?Array.isArray(h.accessor)?`${I}.${h.accessor[0]}`:`${I}.${h.accessor}`:I;return(h==null?void 0:h.type)==="text"&&(s==="create"||s==="edit")&&$?{key:e,type:"relation",relation:!0,accessor:"id",priority:1}:{...h,fieldable:!0,key:e,accessor:w,priority:1}}}return{key:e,fieldable:!1,type:"object",priority:1}}return!1},"objectInfer");var mr=n((e,o)=>typeof o=="string"&&o.length>100?{key:e,type:"richtext",priority:1}:!1,"richtextInfer");var lr=n((e,o)=>typeof o=="string"?{key:e,type:"text"}:!1,"textInfer");var Zr=/^(https?|ftp):\/\/(-\.)?([^\s/?\.#-]+\.?)+(\/[^\s]*)?$/i,dr=n((e,o)=>typeof o=="string"&&Zr.test(o)?{key:e,type:"url",priority:1}:!1,"urlInfer");var fr=[rr,tr,or,ar,sr,ir,cr,pr,Ge,mr,lr,dr];var gr=n((e,o,c,i)=>e.map(u=>{if(!u.relation&&(u.type==="text"||u.type==="richtext"||u.type==="number")&&!u.canRelation){let y=/^[a-z0-9-]+$/,p=n(S=>y.test(`${S}`),"isValidUUID"),l=u.key.toLowerCase()!=="id";return!(!u.accessor||typeof u.accessor=="string")||!l?u:(u.multiple?i[u.key]:[i[u.key]]).every(S=>p(u.accessor?S[u.accessor]:S))?{...u,canRelation:!0}:u}return u}),"basicToRelation");var Yr=/(image|photo|avatar|cover|thumbnail|icon)/i,yr=n(e=>e.map(c=>c.type==="url"&&Yr.test(c.key)?{...c,type:"image"}:c),"imageByKey");var hr=n((e,o)=>e.map(i=>{let s=Ee(i,o);return s?{...i,relation:!0,type:"relation",resource:s}:i}),"relationByResource");var kr=n((e,o,c,i,s,u)=>e.map(p=>{if(p.relation&&p.type==="relation"&&!p.resource){let l=p.accessor?i[p.key][p.accessor]:i[p.key],$=s(p.key,l,i,s,u);if($&&$.type!=="relation")return{...p,fieldable:!0,relation:!1,type:$.type,canRelation:!0}}return p}),"relationToFieldable");var Ir=[yr,hr,kr,gr];import J from"react";import*as Jr from"@refinedev/core";import{LivePreview as Xr,LiveProvider as et}from"@aliemir/react-live";var xr=[["react","React",J],["@refinedev/core","RefineCore",Jr]],De=J.createContext({}),Oe=n(({fetchError:e,code:o,additionalScope:c,errorComponent:i})=>{let s=(o&&Pe(Le(o,[...xr,...c??[]].reduce((p,[l,$,I,L])=>L?p:{...p,[l]:$},{}))))??"",u=J.useMemo(()=>({React:J,...J,...[...xr,...c??[]].reduce((p,[l,$,I])=>({...p,[$]:I}),{})}),[c]),y=J.useMemo(()=>n(()=>{let{error:l}=J.useContext(De);return i?J.createElement(i,{error:l?`<p>An error occured while rendering the generated component.You can check the generated code from the below "Show Code" button and fix the error manually.</p>
                                    <p>If you think this is a bug, please report the issue at <a target="_blank" rel="noopener noreferrer" href="https://github.com/refinedev/refine/issues">https://github.com/refinedev/refine/issues</a></p>
                                    <p>Exception:</p>
                                    <code>${l}</code>`:typeof e=="string"?e:e?`<p>Something went wrong while fetching the resource data.</p>
                                    <p>To learn more about the Inferencer, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`:void 0}):null},"LiveErrorComponent"),[i,e]);return J.createElement(et,{Context:De,code:s,scope:u,noInline:!0},!e&&J.createElement(Xr,{Context:De}),J.createElement(y,null))},"LiveComponent");import g from"react";import rt,{defaultProps as tt}from"prism-react-renderer";import nt from"prism-react-renderer/themes/vsDark";var ie=n(({code:e,loading:o})=>{let c=g.useMemo(()=>He(e??""),[e]),[i,s]=g.useState(!1),[u,y]=g.useState(!1),[p,l]=g.useState(!1),[$,I]=g.useState(!1),[L,S]=g.useState(!1);return g.useEffect(()=>{if(!o){let h=setTimeout(()=>{s(!0)},300);return()=>{clearTimeout(h)}}return()=>{}},[o]),g.useEffect(()=>{if(typeof window<"u"){let h=window.matchMedia("(max-width: 449px)");h.matches?l(!1):l(!0);let w=n(()=>{h.matches?l(!1):l(!0)},"handleResize");return window.addEventListener("resize",w),()=>{window.removeEventListener("resize",w)}}return()=>{}},[]),g.useEffect(()=>{if(typeof window<"u"){let h=window.matchMedia("(max-width: 1280px)");h.matches?I(!0):I(!1);let w=n(()=>{h.matches?I(!0):I(!1)},"handleResize");return window.addEventListener("resize",w),()=>{window.removeEventListener("resize",w)}}return()=>{}},[]),c&&!o?g.createElement(g.Fragment,null,p&&g.createElement("div",{className:"refine-inferencer--code-viewer",style:{position:"sticky",bottom:"24px",paddingTop:"24px",left:0,right:0,width:"100%",zIndex:10,display:"flex",justifyContent:"center",transition:"all 0.2s ease",opacity:i&&!u?1:0,transform:i&&!u?"translateY(0)":"translateY(100px)"}},g.createElement("div",{style:{width:"calc(100% - calc(64px * 2))",maxWidth:"1080px",padding:"20px",backgroundColor:"#1A1A1A",boxShadow:"0px 4px 16px -4px rgba(0, 0, 0, 0.5), 0px 8px 32px -8px rgba(0, 0, 0, 0.35)",borderRadius:"16px",display:"flex",alignItems:"center",justifyContent:"space-between",flexDirection:$?"column":"row",gap:"12px"}},g.createElement("div",{style:{display:"flex",alignItems:"flex-start",gap:"8px"}},g.createElement("div",null,g.createElement(at,null)),g.createElement("div",{style:{fontSize:"14px",lineHeight:"20px",color:"#ffffff"}},g.createElement("p",{style:{padding:0,margin:0}},"Most of the page code is auto-generated by the"," ",g.createElement("span",{style:{textDecoration:"underline"}},"Inferencer")," ","feature, based on your backend data structure."),g.createElement("p",{style:{padding:0,margin:0}},"While this is an excellent way to experiment with refine,"," ",g.createElement("span",{style:{fontWeight:600}},"it's not intended to be used on production.")))),g.createElement("div",null,g.createElement("button",{onPointerEnter:()=>S(!0),onPointerLeave:()=>S(!1),onClick:()=>y(!0),style:{appearance:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:L?"scale(1.025)":void 0,filter:L?"brightness(1.1)":void 0}},g.createElement(Fr,{style:{flexShrink:0}}),g.createElement("span",null,"Show the auto-generated code"))))),g.createElement(ot,{visible:u,onClose:()=>y(!1),code:c})):null},"SharedCodeViewer"),ot=n(({visible:e,onClose:o,code:c=""})=>{let i=g.useRef(null),[s,u]=g.useState(!1),[y,p]=g.useState(!1),[l,$]=g.useState(!1),[I,L]=g.useState(!1);g.useEffect(()=>{if(typeof document<"u"){let d=n(a=>{i.current&&!i.current.contains(a.target)&&o()},"onOutsideClick");return document.addEventListener("pointerdown",d),()=>{document.removeEventListener("pointerdown",d)}}return()=>{}},[o]);let S=n(()=>{typeof navigator<"u"&&(navigator.clipboard.writeText(c),u(!0),setTimeout(()=>{u(!1)},1e3))},"onCopy"),h=g.createElement("div",{style:{display:"flex",justifyContent:"space-between",alignItems:"center"}},g.createElement("div",{style:{fontWeight:700,fontSize:"20px",lineHeight:"32px",color:"#0D0D0D"}},"Auto-generated code by Inferencer"),g.createElement("button",{onClick:o,onPointerEnter:()=>$(!0),onPointerLeave:()=>$(!1),style:{flexShrink:0,appearance:"none",border:"none",background:"none",padding:0,margin:0,outline:"none",borderRadius:"50px",width:"32px",height:"32px",cursor:"pointer",transition:"all 0.15s ease",transform:l?"scale(1.05)":void 0,filter:l?"brightness(0.8)":void 0}},g.createElement(st,null))),w=g.createElement("div",{style:{fontSize:"13px",borderRadius:"8px",flex:"1",overflow:"scroll",background:"#1E1E1E"}},g.createElement(rt,{...tt,theme:nt,code:c,language:"tsx"},({className:d,style:a,tokens:b,getLineProps:H,getTokenProps:T})=>g.createElement("pre",{className:d,style:{...a,padding:"14px 14px 14px 14px",margin:"0",width:"100%",boxSizing:"border-box"}},b.map((z,K)=>g.createElement("div",{key:K,...H({line:z,key:K})},z.map((r,k)=>g.createElement("span",{key:k,...T({token:r,key:k})})))))));return g.createElement("div",{className:"refine-inferencer--code-viewer-modal",style:{position:"fixed",top:0,left:0,right:0,bottom:0,zIndex:9999,backgroundColor:"rgba(0, 0, 0, 0.5)",transition:"all 0.2s ease",opacity:e?1:0,pointerEvents:e?"all":"none",display:"flex",justifyContent:"center",alignItems:"center"}},g.createElement("div",{ref:i,style:{transform:e?"scale(1) translateY(0px)":"scale(0) translateY(-200px)",transition:"all 0.25s cubic-bezier(.35,1.29,.81,1.08)",transitionDelay:"0.25",width:"calc(100% - calc(32px * 2))",height:"calc(100% - calc(32px * 2))",backgroundColor:"#fff",maxWidth:"640px",maxHeight:"720px",borderRadius:"8px",padding:"16px"}},g.createElement("div",{style:{display:"flex",flexDirection:"column",height:"100%",width:"100%",gap:"16px"}},h,w,g.createElement("div",{style:{display:"flex",justifyContent:"flex-start",alignItems:"flex-end",gap:"16px"}},g.createElement("button",{onPointerEnter:()=>p(!0),onPointerLeave:()=>p(!1),onClick:S,style:{appearance:"none",height:"40px",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",color:"#ffffff",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",position:"relative",overflow:"hidden",transition:"filter 0.2s ease",transform:y?"scale(1.025)":"scale(1)",filter:y?"brightness(1.1)":void 0}},g.createElement($r,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),g.createElement("span",null,"Copy Generated Code"),g.createElement("div",{style:{position:"absolute",width:"100%",height:"100%",top:0,left:0,display:"flex",alignItems:"center",justifyContent:"center",background:"#0080FF",transition:"all 0.2s ease",transform:s?"translateY(0)":"translateY(40px)"}},g.createElement($r,{style:{flexShrink:0,marginTop:"-2px",marginBottom:"-2px"}}),g.createElement("span",null,"Copied!"))),g.createElement("a",{onPointerEnter:()=>L(!0),onPointerLeave:()=>L(!1),href:"https://refine.dev/docs/packages/documentation/inferencer",target:"_blank",rel:"noreferrer",style:{appearance:"none",textDecoration:"none",border:"none",padding:"10px 16px",borderRadius:"4px",display:"flex",alignItems:"center",justifyContent:"center",background:"rgba(0, 128, 255, 0.1)",color:"#0080FF",fontSize:"14px",lineHeight:"20px",fontWeight:600,gap:"8px",cursor:"pointer",transition:"all 0.2s ease",transform:I?"scale(1.025)":void 0,filter:I?"brightness(1.1)":void 0}},g.createElement(Fr,{style:{flexShrink:0}}),g.createElement("span",null,"Learn more about inferencer"))))))},"CodeModal"),at=n(e=>g.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,fill:"none",...e},g.createElement("path",{fill:"#0080FF",fillRule:"evenodd",d:"M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10Zm0-15a1.25 1.25 0 1 0 0 2.5A1.25 1.25 0 0 0 10 5Zm0 10c.69 0 1.25-.56 1.25-1.25V10a1.25 1.25 0 1 0-2.5 0v3.75c0 .69.56 1.25 1.25 1.25Z",clipRule:"evenodd"})),"InfoIcon"),Fr=n(e=>g.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:16,height:16,fill:"none",...e},g.createElement("path",{fill:"currentColor",d:"M5 2a1 1 0 0 1 0 2H4v8h8v-1a1 1 0 1 1 2 0v1a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h1Z"}),g.createElement("path",{fill:"currentColor",d:"M9 2a1 1 0 0 0 0 2h1.586L6.293 8.293a1 1 0 0 0 1.414 1.414L12 5.414V7a1 1 0 1 0 2 0V3a1 1 0 0 0-1-1H9Z"})),"OpenIcon"),st=n(e=>g.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:32,height:32,fill:"none",...e},g.createElement("path",{fill:"#A6A6A6",fillRule:"evenodd",d:"M16 32C7.163 32 0 24.837 0 16S7.163 0 16 0s16 7.163 16 16-7.163 16-16 16Zm-2.586-21.414a2 2 0 1 0-2.828 2.828L13.172 16l-2.586 2.586a2 2 0 1 0 2.828 2.828L16 18.828l2.586 2.586a2 2 0 1 0 2.828-2.828L18.828 16l2.586-2.586a2 2 0 1 0-2.828-2.828L16 13.172l-2.586-2.586Z",clipRule:"evenodd"})),"CloseIcon"),$r=n(e=>g.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:20,height:20,viewBox:"0 0 24 24",fill:"none",...e},g.createElement("path",{fill:"currentColor",fillRule:"evenodd",d:"M8 5a3 3 0 0 0 3 3h2a3 3 0 0 0 3-3h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h1Zm0 7a1 1 0 0 1 1-1h6a1 1 0 1 1 0 2H9a1 1 0 0 1-1-1Zm1 3a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2H9Z",clipRule:"evenodd"}),g.createElement("path",{fill:"currentColor",d:"M13 4a1 1 0 1 1 0 2h-2a1 1 0 1 1 0-2h2Z"})),"ClipboardIcon");import de from"react";import{useDataProvider as it,useResource as ct}from"@refinedev/core";var br=n((e,o,c,i)=>{let{resource:s,id:u,resources:y}=ct(o),p=c??u,l=it(),[$,I]=de.useState(void 0),[L,S]=de.useState(void 0),[h,w]=de.useState(void 0),[m,d]=de.useState(!0),[a,b]=de.useState(!1),H=de.useCallback(async T=>{var r;let z=ke(s)??Te(s==null?void 0:s.name,void 0,y),K=l(z);b(!0),I(void 0);try{if((e==="list"||e==="create")&&s){let k=await K.getList({resource:s==null?void 0:s.name,meta:ee((s==null?void 0:s.identifier)??(s==null?void 0:s.name),i,["getList"])}),E=(r=k.data)==null?void 0:r[0];E||I(`<p>No records/data found for resource "${s==null?void 0:s.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),S(E),w(k.data),setTimeout(()=>{b(!1)},500)}if((e==="edit"||e==="show")&&T&&s){let E=(await K.getOne({resource:s==null?void 0:s.name,id:T,meta:ee((s==null?void 0:s.identifier)??(s==null?void 0:s.name),i,["getOne"])})).data;E||I(`<p>No records/data found for resource "${s==null?void 0:s.name}".</p>
                            <p>Please check your data provider and resource.</p>
                            <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),S(E),setTimeout(()=>{b(!1)},500)}}catch(k){console.warn("An error occured while fetching the resource data. Please check the error message below:",k),I(`<p>Something went wrong while fetching the resource data.</p>
                    <p>Please check your data provider and API for resource "${s==null?void 0:s.name}".</p>
                    <p>For more info, please check the <a href="https://refine.dev/docs/packages/documentation/inferencer/" target="_blank">documentation</a>.</p>`),setTimeout(()=>{b(!1)},500)}},[e,l,s,y]);return de.useEffect(()=>{d(!1),!a&&!L&&H(p)},[H,p]),{data:L,datas:h,loading:a,initial:m,error:$}},"useInferFetch");import Fe from"react";import{useDataProvider as ut}from"@refinedev/core";import{get as vr}from"lodash-es";var Cr=n(({record:e,fields:o,infer:c,meta:i})=>{let s=ut(),[u,y]=Fe.useState([]),[p,l]=Fe.useState(!0),[$,I]=Fe.useState(!1),L=Fe.useCallback(async S=>{console.groupCollapsed("@refinedev/inferencer is trying to detect relations");let h=[];I(!0);try{let w=S.map(async d=>{var a,b,H,T,z;if(d&&(d.relation||d.canRelation)&&e){if(d.relationInfer)return d;let K=ke(d.resource),r=s(K),k=d.multiple,E=Array.isArray(d.accessor)?void 0:d.multiple?e[d.key].map(M=>d.accessor?vr(M,d.accessor):M)[0]:d.accessor?vr(e[d.key],d.accessor):e[d.key];if(E&&d.resource)try{let M={};if(k&&r.getMany){let{data:v}=await r.getMany({resource:d.resource.name,ids:[E],meta:ee(((a=d.resource)==null?void 0:a.identifier)??((b=d.resource)==null?void 0:b.name),i,["getMany"])});M=v==null?void 0:v[0]}else{let{data:v}=await r.getOne({resource:d.resource.name,id:E,meta:ee(((H=d.resource)==null?void 0:H.identifier)??((T=d.resource)==null?void 0:T.name),i,k?["getMany","getOne"]:["getOne"])});M=v}h.push({status:"success",resource:d.resource.name,field:d.key});let t=c("__",M,{},c);return{...d,relationInfer:t}}catch{return h.push({status:"error",resource:d.resource.name,field:d.key}),{...d,relationInfer:null}}if(E){let M,t;try{let P={};if(k&&r.getMany){let{data:C}=await((z=r.getMany)==null?void 0:z.call(r,{resource:te(U(d.key)),ids:[E],meta:ee(te(U(d.key)),i,["getMany"])}));P=C==null?void 0:C[0]}else{let{data:C}=await r.getOne({resource:te(U(d.key)),id:E,meta:ee(te(U(d.key)),i,k?["getMany","getOne"]:["getOne"])});P=C}h.push({status:"success",resource:te(U(d.key)),field:d.key}),M=P,t=!0}catch{h.push({status:"error",resource:te(U(d.key)),field:d.key});let C={};try{if(k&&r.getMany){let{data:B}=await r.getMany({resource:q(U(d.key)),meta:ee(q(U(d.key)),i,["getMany"]),ids:[E]});C=B==null?void 0:B[0]}else{let{data:B}=await r.getOne({resource:q(U(d.key)),meta:ee(q(U(d.key)),i,k?["getMany","getOne"]:["getOne"]),id:E});C=B}h.push({status:"success",resource:q(U(d.key)),field:d.key}),M=C,t=!1}catch{return h.push({status:"error",resource:q(U(d.key)),field:d.key}),{...d,relationInfer:null}}}let v=c("__",M,{},c),R=U(d.key);return{...d,relation:!0,type:"relation",resource:{name:t?te(R):q(R)},fieldable:!1,canRelation:void 0,relationInfer:v}}return{...d,relationInfer:null}}return d}),m=await Promise.all(w);y(m.filter(d=>d)),setTimeout(()=>{I(!1)},500)}catch{setTimeout(()=>{I(!1)},500)}setTimeout(()=>{console.log(`Tried to detect relations with ${h.length} attempts and succeeded with ${h.filter(w=>w.status==="success").length} attempts.`),console.groupEnd(),console.info("@refinedev/inferencer may send multiple requests to your API for nonexistent resources when trying to detect relations. To learn more about how the inferencer works, visit https://s.refine.dev/how-inferencer-works")},500)},[s,e]);return Fe.useEffect(()=>{l(!1),!$&&o&&o.length>0&&u.length===0&&L(o)},[L,$,o,L]),{fields:u,loading:$,initial:p}},"useRelationFetch");var ce=n(({type:e,additionalScope:o=[],customElements:c=[],fieldTransformers:i=[],renderer:s,loadingComponent:u,errorComponent:y,codeViewerComponent:p})=>{let l=Xe([...fr,...c]),$=er([...Ir,...i]),I=n(({resourceName:S,fieldTransformer:h,hideCodeViewerInProduction:w,meta:m,id:d})=>{var _e,qe;let{resource:a,resources:b}=ze(S),{i18nProvider:H}=pt(mt),{resource:T}=ze(),{data:z,datas:K,loading:r,initial:k,error:E}=br(e,S??(a==null?void 0:a.name),d,m),M=n((N,V,W)=>{let G=l(N,V,W,l,e);if(G&&a){let Z=$([G],b,a,W,l,e),j=h?Z.flatMap(D=>{let _=h(D);return _?[_]:[]}):Z;return j==null?void 0:j[0]}},"inferSingleField"),t=n(N=>Object.keys(N).map(W=>{let G=N[W];return M(W,G,N)}).filter(Boolean),"inferSingleRecord"),v=n(N=>{let V=N.map(D=>t(D)),W=N.flatMap(D=>Object.keys(D)).filter((D,_,ye)=>ye.indexOf(D)===_),G={},Z=W.map(D=>{let _=V.map(ae=>ae.find(re=>re.key===D));return _.reduce((ae,re,ve)=>{if(!re)return ae;let he=_.filter(se=>(se==null?void 0:se.key)===re.key&&(se==null?void 0:se.type)===re.type).length;return he>ae.count?(G[D]=N[ve][D],{count:he,field:re}):ae},{count:0,field:void 0}).field});return{commonRecord:G,inferredFields:Z}},"inferMultipleRecords"),[R,P]=X.useMemo(()=>{if(K&&(e==="list"||e==="create")){let N=v(K);return[N.inferredFields,N.commonRecord]}if(z){let N=Object.keys(z).map(V=>{let W=z[V];return l(V,W,z,l,e)}).filter(Boolean);if(a){let V=$(N,b,a,z,l,e);return[h?V.flatMap(G=>{let Z=h(G);return Z?[Z]:[]}):V,z]}return[[],z]}return[[],void 0]},[z,K,b,a,h]),{fields:C,loading:B}=Cr({record:P,fields:R,infer:l,meta:m}),le=X.useMemo(()=>{let N=[];return C.forEach((V,W,G)=>{if(V.resource){if(N.findIndex(j=>{var D,_;return((D=j.resource)==null?void 0:D.name)===((_=V.resource)==null?void 0:_.name)})>-1)return;let Z=G.filter((j,D)=>{var _,ye,ae,re,ve,he;if(D!==W){let se=V.resource,Pr=j.resource,Lr=((_=j.resource)==null?void 0:_.identifier)||((ye=V.resource)==null?void 0:ye.identifier)?((ae=j.resource)==null?void 0:ae.identifier)===((re=V.resource)==null?void 0:re.identifier):((ve=j.resource)==null?void 0:ve.name)===((he=V.resource)==null?void 0:he.name);return se&&Pr&&Lr}else return!1});if(Z.length>0)if(e==="create"||e==="edit"){let j;[V,...Z].find(D=>{D.fieldable!==!0&&j===void 0&&(j=D)}),j?N.push(j):N.push(V)}else{let j;[V,...Z].find(D=>{D.fieldable!==!1&&j===void 0&&(j=D)}),j?N.push(j):N.push(V)}else N.push(V)}else N.push(V)}),N},[C,e]),ge=X.useMemo(()=>!r&&!B&&!k&&a?s({resource:a,resources:b,fields:le,infer:l,meta:m,isCustomPage:a.name!==(T==null?void 0:T.name),id:d,i18n:!!H}):"",[a,b,le,r,B]),Rr=w;return X.createElement(X.Fragment,null,u&&(r||B)&&X.createElement(u,null),!r&&!B&&X.createElement(X.Fragment,null,X.createElement(Oe,{fetchError:!r&&E?E:!r&&!k&&!z,code:Me(ge,Y(((_e=a==null?void 0:a.meta)==null?void 0:_e.label)??((qe=a==null?void 0:a.options)==null?void 0:qe.label)??(a==null?void 0:a.label)??(a==null?void 0:a.name)??"Resource",e)),errorComponent:y,additionalScope:o}),typeof p<"u"&&!Rr?X.createElement(p,{code:Ne(ge),loading:r||B}):null))},"Inferencer");return n(({name:S,resource:h,fieldTransformer:w,meta:m,hideCodeViewerInProduction:d,id:a})=>{let{resource:b}=ze(h??S),H=`${(b==null?void 0:b.identifier)??(b==null?void 0:b.name)}-${e}-${a}`;return X.createElement(I,{hideCodeViewerInProduction:d,fieldTransformer:w,resourceName:h??S,meta:m??{},key:H,id:a})},"InferencerComponent")},"createInferencer");import be from"react";import{Center as lt,Alert as dt,AlertIcon as ft,AlertDescription as gt}from"@chakra-ui/react";var ue=n(({error:e})=>e?be.createElement(lt,{style:{minHeight:300}},be.createElement(dt,{status:"error",variant:"subtle",flexDirection:"column",alignItems:"center",justifyContent:"center",textAlign:"center",height:"200px",maxWidth:"700px"},be.createElement(ft,{boxSize:"40px",mr:0}),be.createElement(gt,{mt:4,maxWidth:"sm"},be.createElement("div",{dangerouslySetInnerHTML:{__html:e??""}})))):null,"ErrorComponent");import Sr from"react";import{Box as yt,Spinner as ht}from"@chakra-ui/react";var pe=n(()=>Sr.createElement(yt,{position:"relative",bg:"chakra-body-bg",minH:120},Sr.createElement(ht,{position:"absolute",top:"50%",left:"50%",transform:"translate(-50%, -50%)"})),"LoadingComponent");var wr=n(({resource:e,fields:o,meta:c,isCustomPage:i,id:s,i18n:u})=>{let y=Y(e.label??e.name,"show"),p="record",l=[["useShow","@refinedev/core"],["IResourceComponentsProps","@refinedev/core"],["Show","@refinedev/chakra-ui"],["Heading","@chakra-ui/react"]];u&&l.push(["useTranslate","@refinedev/core"]);let I=o.filter(r=>(r==null?void 0:r.relation)&&!(r!=null&&r.fieldable)&&(r==null?void 0:r.resource)).filter(Boolean).map(r=>{var k,E,M,t;if(r!=null&&r.relation&&!r.fieldable&&r.resource){if(r.multiple){l.push(["useMany","@refinedev/core"]);let v=f(p,r.key);return r.accessor&&(v=`${f(p,r.key)}?.map((item: any) => ${f("item",void 0,r.accessor)})`),`
                const { data: ${A(r.key,"Data")}, isLoading: ${A(r.key,"IsLoading")} } =
                useMany({
                    resource: "${r.resource.name}",
                    ids: ${v} || [],
                    queryOptions: {
                        enabled: !!${p} && !!${v}?.length,
                    },
                    ${O(((k=r==null?void 0:r.resource)==null?void 0:k.identifier)??((E=r==null?void 0:r.resource)==null?void 0:E.name),c,"getMany")}
                });
                `}return l.push(["useOne","@refinedev/core"]),`
                const { data: ${A(r.key,"Data")}, isLoading: ${A(r.key,"IsLoading")} } =
                useOne({
                    resource: "${r.resource.name}",
                    id: ${f(p,r.key,r.accessor,!1)} || "",
                    queryOptions: {
                        enabled: !!${p},
                    },
                    ${O(((M=r==null?void 0:r.resource)==null?void 0:M.identifier)??((t=r==null?void 0:r.resource)==null?void 0:t.name),c,"getOne")}
                });
            `}}).filter(Boolean),L=n(r=>{if(r.relation&&r.resource){let k=A(r.key,"Data"),E=A(r.key,"IsLoading");if(r.multiple){let M=f(p,r.key)+"?.length";return l.push(["TagField","@refinedev/chakra-ui"],["HStack","@chakra-ui/react"]),x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                {${E} && ${M} ? <>Loading...</> : (
                    <>
                    ${(()=>{var t;if(r.relationInfer)if((t=r.relationInfer)!=null&&t.accessor){if(Array.isArray(r.relationInfer.accessor))return"Not Handled.";{let v=A(r.key),R=f(v,void 0,r.relationInfer.accessor);return`{record?.${r.key}?.length ? <HStack spacing="12px">{${k}?.data?.map((${v}: any) => <TagField key={${R}} value={${R}} />)}</HStack> : <></>}`}}else return"Not Handled.";else return"not-handled - relation with multiple but no resource"})()}
                    </>
                )}
                `}return r.fieldable?x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <TextField value={${f(p,r.key,r.accessor)}} />
                `:x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                {${E} ? <>Loading...</> : (
                    <>
                    ${(()=>{var M;return r.relationInfer?(M=r.relationInfer)!=null&&M.accessor?Array.isArray(r.relationInfer.accessor)?`{${f(`${k}?.data`,void 0,r.relationInfer.accessor,' + " " + ')}}`:`{${k}?.data?.${r.relationInfer.accessor}}`:`{${k}?.data}`:`{${k}?.data?.id}`})()}
                    </>
                )}
                
                `}},"renderRelationFields"),S=n(r=>{if(r.type==="text"){if(l.push(["TagField","@refinedev/chakra-ui"],["TextField","@refinedev/chakra-ui"],["HStack","@chakra-ui/react"]),r.multiple){let k=f("item",void 0,r.accessor);return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <HStack spacing="12px">
                {${f(p,r.key)}?.map((item: any) => (
                    <TagField value={${k}} key={${k}} />
                ))}
                </HStack>
            `}return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <TextField value={${f(p,r.key,r.accessor)}} />
            `}},"textFields"),h=n(r=>{if(r.type==="image"){if(l.push(["Image","@chakra-ui/react"]),r.multiple){let k=f("item",void 0,r.accessor);return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                {${f(p,r.key)}?.map((item: any) => (
                    <Image sx={{ maxWidth: 200 }} src={${k}} key={${k}} />
                ))}
            `}return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <Image sx={{ maxWidth: 200 }} src={${f(p,r.key,r.accessor," + ")}} />
                `}},"imageFields"),w=n(r=>{if(r.type==="email"){if(l.push(["TagField","@refinedev/chakra-ui"],["EmailField","@refinedev/chakra-ui"],["HStack","@chakra-ui/react"]),r.multiple){let k=f("item",void 0,r.accessor);return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <HStack spacing="12px">
                {${f(p,r.key)}?.map((item: any) => (
                    <TagField value={${k}} key={${k}} />
                ))}
                </HStack>
            `}return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <EmailField value={${f(p,r.key,r.accessor," + ")}} />
            `}},"emailFields"),m=n(r=>{if(r.type==="url"){if(l.push(["TagField","@refinedev/chakra-ui"],["UrlField","@refinedev/chakra-ui"],["HStack","@chakra-ui/react"]),r.multiple){let k=f("item",void 0,r.accessor);return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <HStack spacing="12px">
                {${f(p,r.key)}?.map((item: any) => (
                    <TagField value={${k}} key={${k}} />
                ))}
                </HStack>
            `}return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <UrlField value={${f(p,r.key,r.accessor," + ")}} />
            `}},"urlFields"),d=n(r=>{if(r.type==="boolean"){if(l.push(["TagField","@refinedev/chakra-ui"],["BooleanField","@refinedev/chakra-ui"],["HStack","@chakra-ui/react"]),r.multiple){let k=f("item",void 0,r.accessor);return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <HStack spacing="12px">
                {${f(p,r.key)}?.map((item: any) => (
                    <TagField value={${k}} key={${k}} />
                ))}
                </HStack>
            `}return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <BooleanField value={${f(p,r.key,r.accessor," && ")}} />
            `}},"booleanFields"),a=n(r=>{if(r.type==="date"){if(l.push(["DateField","@refinedev/chakra-ui"]),r.multiple){let k=f("item",void 0,r.accessor);return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                {${f(p,r.key)}?.map((item: any) => (
                    <DateField value={${k}} key={${k}} />
                ))}
            `}return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <DateField value={${f(p,r.key,r.accessor," + ' ' + ")}} />
            `}},"dateFields"),b=n(r=>{if(r.type==="richtext")return l.push(["MarkdownField","@refinedev/chakra-ui"]),x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <MarkdownField value={${f(p,r.key,r.accessor,' + " " + ')}} />
            `},"richtextFields"),H=n(r=>{if(r.type==="number"){if(l.push(["NumberField","@refinedev/chakra-ui"],["TagField","@refinedev/chakra-ui"],["HStack","@chakra-ui/react"]),r.multiple){let k=f("item",void 0,r.accessor);return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <HStack spacing="12px">
                {${f(p,r.key)}?.map((item: any) => (
                    <TagField value={${k}} key={${k}} />
                ))}
                </HStack>
            `}return x`
                <Heading as="h5" size="sm" mt={4}>${F({resource:e,field:r,i18n:u,noQuotes:!0})}</Heading>
                <NumberField value={${f(p,r.key,r.accessor,' + " " + ')} ?? ""} />
            `}},"numberFields"),T=n(r=>{if(r)return x`
                ${r}
            `},"wrapper"),z=o.map(r=>{switch(r==null?void 0:r.type){case"text":return T(S(r));case"number":return T(H(r));case"richtext":return T(b(r));case"email":return T(w(r));case"image":return T(h(r));case"date":return T(a(r));case"boolean":return T(d(r));case"url":return T(m(r));case"relation":return T(L(r));default:return}});oe(l);let K=u&&"const translate = useTranslate();";return x`
    ${ne(l)}
    
    export const ${y}: React.FC<IResourceComponentsProps> = () => {
        ${K}
        const { queryResult } = useShow(${i?`{ 
                    resource: "${e.name}", 
                    id: ${$e(s)},
                    ${O((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")}
                }`:O((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")?`{ ${O((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")} }`:""});
        const { data, isLoading } = queryResult;

        const ${p} = data?.data;
    
        ${I}

        return (
            <Show isLoading={isLoading}>
                ${z.join("")}
            </Show>
        );
    };
    `},"renderer"),je=ce({type:"show",additionalScope:[["@refinedev/chakra-ui","RefineChakraUI",{Show:kt,TagField:It,TextField:xt,EmailField:$t,UrlField:Ft,BooleanField:bt,DateField:vt,MarkdownField:Ct,NumberField:St}],["@chakra-ui/react","ChakraUI",{Heading:wt,HStack:Tt,Image:At}]],codeViewerComponent:ie,loadingComponent:pe,errorComponent:ue,renderer:wr});import{List as Ht,usePagination as Rt,TagField as Pt,EmailField as Lt,UrlField as Et,BooleanField as Mt,DateField as Nt,MarkdownField as Vt,EditButton as Bt,ShowButton as Dt,DeleteButton as Ot}from"@refinedev/chakra-ui";import{TableContainer as zt,Table as jt,Thead as Ut,Tr as Kt,Th as Qt,Tbody as _t,Td as qt,HStack as Wt,Button as Gt,IconButton as Zt,Box as Yt,Image as Jt}from"@chakra-ui/react";import{useTable as Xt}from"@refinedev/react-table";import{flexRender as en}from"@tanstack/react-table";import{IconChevronRight as rn,IconChevronLeft as tn}from"@tabler/icons";var me=n(e=>Array.isArray(e.accessor)||e.multiple?`accessorKey: "${e.key}"`:e.accessor?`accessorKey: "${Q(e.key,void 0,e.accessor)}"`:`accessorKey: "${e.key}"`,"getAccessorKey"),Tr=n(({resource:e,fields:o,meta:c,isCustomPage:i,i18n:s})=>{let u=Y(e.label??e.name,"list"),y="tableData?.data",p=[["IResourceComponentsProps","@refinedev/core"],["useTable","@refinedev/react-table"],["ColumnDef","@tanstack/react-table"],["flexRender","@tanstack/react-table"],["List","@refinedev/chakra-ui"],["TableContainer","@chakra-ui/react"],["Table","@chakra-ui/react"],["Thead","@chakra-ui/react"],["Tr","@chakra-ui/react"],["Th","@chakra-ui/react"],["Tbody","@chakra-ui/react"],["Td","@chakra-ui/react"],["HStack","@chakra-ui/react"],["Button","@chakra-ui/react"],["IconButton","@chakra-ui/react"],["usePagination","@refinedev/chakra-ui"],["Box","@chakra-ui/react"],["IconChevronRight","@tabler/icons"],["IconChevronLeft","@tabler/icons"]];s&&p.push(["useTranslate","@refinedev/core"]);let l=o.filter(t=>(t==null?void 0:t.relation)&&!(t!=null&&t.fieldable)&&(t==null?void 0:t.resource)),$=l.filter(Boolean).map(t=>{var v,R;if(t!=null&&t.relation&&!t.fieldable&&t.resource){p.push(["GetManyResponse","@refinedev/core"]),p.push(["useMany","@refinedev/core"]);let P="";return t.multiple?P=`[].concat(...(${y}?.map((item) => ${f("item",t.key,t.accessor,!1)}) ?? []))`:P=`${y}?.map((item) => ${f("item",t.key,t.accessor,!1)}) ?? []`,`
                const { data: ${A(t.key,"Data")} } =
                useMany({
                    resource: "${t.resource.name}",
                    ids: ${P},
                    queryOptions: {
                        enabled: !!${y},
                    },
                    ${O(((v=t==null?void 0:t.resource)==null?void 0:v.identifier)??((R=t==null?void 0:t.resource)==null?void 0:R.name),c,"getMany")}
                });
                `}}).filter(Boolean),I=l==null?void 0:l.map(t=>{if(t&&t.resource)return A(t.key,"Data")}).filter(Boolean),L=n(t=>{var v;if(t.relation&&t.resource){let R=`${A(t.key,"Data")}?.data`;if(Array.isArray(t.accessor))return;let P=`id: "${t.key}"`,C=`header: ${F({resource:e,field:t,i18n:s,noBraces:!0})}`,B=me(t),le="";if(t.multiple){p.push(["TagField","@refinedev/chakra-ui"]);let ge="item";t!=null&&t.relationInfer&&(ge=f("item",void 0,t.relationInfer.accessor)),le=`cell: function render({ getValue, table }) {
                    const meta = table.options.meta as {
                        ${A(t.key,"Data")}: GetManyResponse;
                    };

                    const ${A(t.key,"")} = getValue<any[]>()?.map((item) => {
                        return meta.${A(t.key,"Data")}?.data?.find(
                            (resourceItems) => resourceItems.id === ${f("item",void 0,t.accessor)}
                        );
                    })


                    return (
                        <HStack>
                            {${A(t.key,"")}?.map((item, index) => (
                                <TagField key={index} value={${ge}} />
                            ))}
                        </HStack>
                    )
                }
            `}else t!=null&&t.relationInfer?le=`cell: function render({ getValue, table }) {
                        const meta = table.options.meta as {
                            ${A(t.key,"Data")}: GetManyResponse;
                        };

                        const ${A(t.key,"")} = meta.${R}?.find(
                            (item) => item.id == getValue<any>(),
                        );

                        return ${f(A(t.key),void 0,(v=t==null?void 0:t.relationInfer)==null?void 0:v.accessor)} ?? "Loading...";
                    },`:le="";return`
                {
                    ${P},
                    ${C},
                    ${B},
                    ${le}
                }
            `}},"renderRelationFields"),S=n(t=>{if(t.type==="image"){p.push(["Image","@chakra-ui/react"]);let v=`id: "${t.key}"`,R=me(t),P=`header: ${F({resource:e,field:t,i18n:s,noBraces:!0})}`,C=x`
                cell: function render({ getValue }) {
                    ${t!=null&&t.accessor?"try {":""}
                        return <Image sx={{ maxWidth: "100px" }} src={${f("getValue<any>()",void 0,Array.isArray(t.accessor)?t.accessor:void 0," + ")}} />
                    ${t!=null&&t.accessor?" } catch (error) { return null; }":""}
                }
            `;if(t.multiple){let B=f("item",void 0,t.accessor," + ");C=`
                    cell: function render({ getValue }) {
                        ${t!=null&&t.accessor?"try {":""}
                            return (
                                <HStack>
                                    {getValue<any[]>()?.map((item, index) => (
                                        <Image src={${B}} key={index} sx={{ height: "50px", maxWidth: "100px" }} />
                                    ))}
                                </HStack>
                            )
                        ${t!=null&&t.accessor?" } catch (error) { return null; }":""}
                    }
                `}return`
                {
                    ${v},
                    ${R},
                    ${P},
                    ${C}
                }
            `}},"imageFields"),h=n(t=>{if(t.type==="email"){p.push(["EmailField","@refinedev/chakra-ui"]);let v=`id: "${t.key}"`,R=me(t),P=`header: ${F({resource:e,field:t,i18n:s,noBraces:!0})}`,C=x`
                cell: function render({ getValue }) {
                    return <EmailField value={${f("getValue<any>()",void 0,Array.isArray(t.accessor)?t.accessor:void 0,' + " " + ')}} />
                }
            `;return t.multiple&&(p.push(["TagField","@refinedev/chakra-ui"]),C=`
                    cell: function render({ getValue }) {
                        return (
                            <HStack>
                                {getValue<any[]>()?.map((item, index) => (
                                    <TagField value={${f("item",void 0,t.accessor," + ")}} key={index} />
                                ))}
                            </HStack>
                        )
                    }
                `),`
                {
                    ${v},
                    ${R},
                    ${P},
                    ${C}
                }
            `}},"emailFields"),w=n(t=>{if(t.type==="url"){p.push(["UrlField","@refinedev/chakra-ui"]);let v=`id: "${t.key}"`,R=me(t),P=`header: ${F({resource:e,field:t,i18n:s,noBraces:!0})}`,C=x`
                cell: function render({ getValue }) {
                    return <UrlField value={${f("getValue<any>()",void 0,Array.isArray(t.accessor)?t.accessor:void 0," + ")}} />
                }
            `;return t.multiple&&(p.push(["TagField","@refinedev/chakra-ui"]),C=`
                    cell: function render({ getValue }) {
                        return (
                            <HStack>
                                {getValue<any[]>()?.map((item, index) => (
                                    <TagField value={${f("item",void 0,t.accessor," + ")}} key={index} />
                                ))}
                            </HStack>
                        )
                    }
                `),`
                {
                    ${v},
                    ${R},
                    ${P},
                    ${C}
                }
            `}},"urlFields"),m=n(t=>{if((t==null?void 0:t.type)==="boolean"){p.push(["BooleanField","@refinedev/chakra-ui"]);let v=`id: "${t.key}"`,R=me(t),P=`header: ${F({resource:e,field:t,i18n:s,noBraces:!0})}`,C=x`
                cell: function render({ getValue }) {
                    return <BooleanField value={${f("getValue<any>()",void 0,Array.isArray(t.accessor)?t.accessor:void 0," + ")}} />
                }
            `;return t.multiple&&(C=`
                    cell: function render({ getValue }) {
                        return (
                            <HStack>
                                {getValue<any[]>()?.map((item, index) => (
                                    <BooleanField value={${f("item",void 0,t.accessor," + ")}} key={index} />
                                ))}
                            </HStack>
                        )
                    }
                `),`
                {
                    ${v},
                    ${R},
                    ${P},
                    ${C}
                }
            `}},"booleanFields"),d=n(t=>{if(t.type==="date"){p.push(["DateField","@refinedev/chakra-ui"]);let v=`id: "${t.key}"`,R=me(t),P=`header: ${F({resource:e,field:t,i18n:s,noBraces:!0})}`,C=x`
                cell: function render({ getValue }) {
                    return <DateField value={${f("getValue<any>()",void 0,Array.isArray(t.accessor)?t.accessor:void 0,' + " " + ')}} />
                }
            `;return t.multiple&&(C=`
                    cell: function render({ getValue }) {
                        return (
                            <HStack>
                                {getValue<any[]>()?.map((item, index) => (
                                    <DateField value={${f("item",void 0,t.accessor," + ")}} key={index} />
                                ))}
                            </HStack>
                        )
                    }
                `),`
                {
                    ${v},
                    ${R},
                    ${P},
                    ${C}
                }
            `}},"dateFields"),a=n(t=>{if((t==null?void 0:t.type)==="richtext"){p.push(["MarkdownField","@refinedev/chakra-ui"]);let v=`id: "${t.key}"`,R=me(t),P=`header: ${F({resource:e,field:t,i18n:s,noBraces:!0})}`,C=x`
                cell: function render({ getValue }) {
                    return <MarkdownField value={(${f("getValue<string>()",void 0,Array.isArray(t.accessor)?t.accessor:void 0)})?.slice(0, 80) + "..." } />
                }
            `;return t.multiple&&(C=`
                    cell: function render({ getValue }) {
                        return (
                            <HStack>
                                {getValue<string[]>()?.map((item, index) => (
                                    <MarkdownField value={${f("item",void 0,t.accessor," + ")}} key={index} />
                                ))}
                            </HStack>
                        )
                    }
                `),`
                {
                    ${v},
                    ${R},
                    ${P},
                    ${C}
                }
            `}},"richtextFields"),b=n(t=>{if(t&&(t.type==="text"||t.type==="number")){let v=`id: "${t.key}"`,R=me(t),P=`header: ${F({resource:e,field:t,i18n:s,noBraces:!0})}`,C="";return t.multiple&&(p.push(["TagField","@refinedev/chakra-ui"]),C=`
                    cell: function render({ getValue }) {
                        return (
                            <HStack>
                                {getValue<any[]>()?.map((item, index) => (
                                    <TagField value={${f("item",void 0,t.accessor,' + " " + ')}} key={index} />
                                ))}
                            </HStack>
                        )
                    }
                `),!t.multiple&&Array.isArray(t.accessor)&&(C=`
                    cell: function render({ getValue }) {
                        return (
                            <>{${f("getValue<any>()",t.key,t.accessor)}}</>
                        );
                    }
                `),`
                {
                    ${v},
                    ${R},
                    ${P},
                    ${C}
                }
            `}},"basicFields"),{canEdit:H,canShow:T,canDelete:z,meta:K}=e??{},r=z||(K==null?void 0:K.canDelete);H&&p.push(["EditButton","@refinedev/chakra-ui"]),T&&p.push(["ShowButton","@refinedev/chakra-ui"]),r&&p.push(["DeleteButton","@refinedev/chakra-ui"]);let k=H||T||r?x`
    {
        id: "actions",
        accessorKey: "id",
        header: "Actions",
        cell: function render({ getValue }) {
            return (
                <HStack>
                ${T?x`
                    <ShowButton
                        hideText
                        recordItemId={getValue() as string}
                    />
                    `:""}
                    ${H?x`
                    <EditButton
                        hideText
                        recordItemId={getValue() as string}
                    />
                    `:""}
                    ${r?x`
                    <DeleteButton
                        hideText
                        recordItemId={getValue() as string}
                    />
                    `:""}
                </HStack>
            );
        },
    },
        `:"",E=o.map(t=>{switch(t==null?void 0:t.type){case"text":case"number":return b(t);case"richtext":return a(t);case"email":return h(t);case"image":return S(t);case"date":return d(t);case"boolean":return m(t);case"url":return w(t);case"relation":return L(t);default:return}});oe(p);let M=s&&"const translate = useTranslate();";return x`
    import React from "react";
    ${ne(p)}
    
    export const ${u}: React.FC<IResourceComponentsProps> = () => {
        ${M}
        const columns = React.useMemo<ColumnDef<any>[]>(() => [
            ${[...E,k].filter(Boolean).join(",")}
        ], [${s?"translate":""}]);

        const {
            getHeaderGroups,
            getRowModel,
            setOptions,
            refineCore: {
                setCurrent,
                pageCount,
                current,
                tableQueryResult: { data: tableData },
            },
        } = useTable({
            columns,
            ${i?`
            refineCoreProps: {
                resource: "${e.name}",
                ${O((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getList")}
            }
            `:O((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getList")?`refineCoreProps: { ${O((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getList")} },`:""}
            
        });

        ${$}

        setOptions((prev) => ({
            ...prev,
            meta: {
                ...prev.meta,
                ${I.join(", ")}
            },
        }));

        return (
            <List>
                <TableContainer whiteSpace="pre-line">
                    <Table variant="simple">
                        <Thead>
                            {getHeaderGroups().map((headerGroup) => (
                                <Tr key={headerGroup.id}>
                                    {headerGroup.headers.map((header) => (
                                        <Th key={header.id}>
                                            {!header.isPlaceholder && (
                                                flexRender(
                                                    header.column.columnDef
                                                        .header,
                                                    header.getContext(),
                                                )
                                            )}
                                        </Th>
                                    ))}
                                </Tr>
                            ))}
                        </Thead>
                        <Tbody>
                            {getRowModel().rows.map((row) => (
                                <Tr key={row.id}>
                                    {row.getVisibleCells().map((cell) => (
                                        <Td key={cell.id}>
                                            {flexRender(
                                                cell.column.columnDef.cell,
                                                cell.getContext(),
                                            )}
                                        </Td>
                                    ))}
                                </Tr>
                            ))}
                        </Tbody>
                    </Table>
                </TableContainer>
                <Pagination
                    current={current}
                    pageCount={pageCount}
                    setCurrent={setCurrent}
                />
            </List>   
        );
    };

    type PaginationProps = {
        current: number;
        pageCount: number;
        setCurrent: (page: number) => void;
    };

    const Pagination: React.FC<PaginationProps> = ({
        current,
        pageCount,
        setCurrent,
    }) => {
        const pagination = usePagination({
            current,
            pageCount,
        });
    
        return (
            <Box display="flex" justifyContent="flex-end">
                <HStack my="3" spacing="1">
                    {pagination?.prev && (
                        <IconButton
                            aria-label="previous page"
                            onClick={() => setCurrent(current - 1)}
                            disabled={!pagination?.prev}
                            variant="outline"
                        >
                            <IconChevronLeft size="18" />
                        </IconButton>
                    )}
    
                    {pagination?.items.map((page) => {
                        if (typeof page === "string")
                            return <span key={page}>...</span>;
    
                        return (
                            <Button
                                key={page}
                                onClick={() => setCurrent(page)}
                                variant={page === current ? "solid" : "outline"}
                            >
                                {page}
                            </Button>
                        );
                    })}
                    {pagination?.next && (
                        <IconButton
                            aria-label="next page"
                            onClick={() => setCurrent(current + 1)}
                            variant="outline"
                        >
                            <IconChevronRight size="18" />
                        </IconButton>
                    )}
                </HStack>
            </Box>
        );
    };
    `},"renderer"),Ue=ce({type:"list",additionalScope:[["@refinedev/chakra-ui","RefineChakraUI",{List:Ht,usePagination:Rt,TagField:Pt,EmailField:Lt,UrlField:Et,BooleanField:Mt,DateField:Nt,MarkdownField:Vt,EditButton:Bt,ShowButton:Dt,DeleteButton:Ot}],["@refinedev/react-table","RefineReactTable",{useTable:Xt}],["@tabler/icons","TablerIcons",{IconChevronRight:rn,IconChevronLeft:tn}],["@chakra-ui/react","ChakraUI",{TableContainer:zt,Table:jt,Thead:Ut,Tr:Kt,Th:Qt,Tbody:_t,Td:qt,HStack:Wt,Button:Gt,IconButton:Zt,Box:Yt,Image:Jt}],["@tanstack/react-table","TanstackReactTable",{flexRender:en}]],codeViewerComponent:ie,loadingComponent:pe,errorComponent:ue,renderer:Tr});import{Create as nn}from"@refinedev/chakra-ui";import{FormControl as on,FormLabel as an,FormErrorMessage as sn,Select as cn,Input as un,Checkbox as pn}from"@chakra-ui/react";import{useForm as mn}from"@refinedev/react-hook-form";var Ar=n(({resource:e,fields:o,meta:c,isCustomPage:i,i18n:s})=>{let u=Y(e.label??e.name,"create"),y=[["IResourceComponentsProps","@refinedev/core"],["Create","@refinedev/chakra-ui"],["FormControl","@chakra-ui/react"],["FormLabel","@chakra-ui/react"],["FormErrorMessage","@chakra-ui/react"],["useForm","@refinedev/react-hook-form"]];s&&y.push(["useTranslate","@refinedev/core"]);let l=o.filter(m=>(m==null?void 0:m.relation)&&!(m!=null&&m.fieldable)&&(m==null?void 0:m.resource)).filter(Boolean).map(m=>{var d,a;if(m!=null&&m.relation&&!m.fieldable&&m.resource)return y.push(["useSelect","@refinedev/core"]),`
                const { options: ${A(m.key,"Options")} } =
                useSelect({
                    resource: "${m.resource.name}",
                    ${xe(m)}
                    ${O(((d=m==null?void 0:m.resource)==null?void 0:d.identifier)??((a=m==null?void 0:m.resource)==null?void 0:a.name),c,"getList")}
                });
            `}).filter(Boolean),$=n(m=>{if(m.relation&&m.resource){y.push(["useSelect","@refinedev/core"]),y.push(["Select","@chakra-ui/react"]);let d=A(m.key,"Options");return x`
            <FormControl mb="3" isInvalid={!!errors?.${Q(m.key,void 0)}}>
                <FormLabel>${F({resource:e,field:m,i18n:s,noQuotes:!0})}</FormLabel>
                <Select
                    placeholder="Select ${q(m.resource.name)}"
                    {...register("${Q(m.key,void 0,m.accessor)}", {
                        required: "This field is required",
                    })}
                >
                    {${d}?.map((option) => (
                        <option value={option.value} key={option.value}>
                            {option.label}
                        </option>
                    ))}
                </Select>
                <FormErrorMessage>
                    {${f("(errors as any)",m.key,m.accessor,!1)}?.message as string}
                </FormErrorMessage>
            </FormControl>
            `}},"renderRelationFields"),I=n(m=>{if(m.type==="text"||m.type==="url"||m.type==="email"||m.type==="number"||m.type==="date"||m.type==="richtext")return Ie(m.key)||(y.push(["Input","@chakra-ui/react"]),m.multiple)?void 0:x`
                <FormControl mb="3" isInvalid={!!${f("(errors as any)",m.key,m.accessor,!1)}}>
                    <FormLabel>${F({resource:e,field:m,i18n:s,noQuotes:!0})}</FormLabel>
                    <Input
                        ${m.type!=="date"&&m.type!=="richtext"?`type="${m.type}"`:""}
                        {...register("${Q(m.key,void 0,m.accessor)}", {
                            required: "This field is required",
                            ${m.type==="number"?"valueAsNumber: true,":""}
                        })}
                    />
                    <FormErrorMessage>
                        {${f("(errors as any)",m.key,m.accessor,!1)}?.message as string}
                    </FormErrorMessage>
                </FormControl>
            `},"basicInputFields"),L=n(m=>{if(m.type==="boolean")return y.push(["Checkbox","@chakra-ui/react"]),m.multiple?void 0:x`
                <FormControl mb="3" isInvalid={!!${f("errors",m.key,m.accessor,!1)}}>
                    <FormLabel>${F({resource:e,field:m,i18n:s,noQuotes:!0})}</FormLabel>
                    <Checkbox
                        {...register("${Q(m.key,void 0,m.accessor)}", {
                            required: "This field is required",
                        })}
                    />
                    <FormErrorMessage>
                        {${f("errors",m.key,m.accessor,!1)}?.message as string}
                    </FormErrorMessage>
                </FormControl>
               
            `},"booleanFields"),S=n(m=>{if(m.type==="date")return`
                {/* 
                    DatePicker component is not included in "@refinedev/chakra-ui" package.
                    To use a <DatePicker> component, you can examine the following links:
                    
                    - https://github.com/aboveyunhai/chakra-dayzed-datepicker
                    - https://github.com/wojtekmaj/react-date-picker
                */}
                ${I(m)??""}
                `},"dateFields"),h=o.map(m=>{switch(m==null?void 0:m.type){case"text":case"number":case"email":case"url":case"richtext":return I(m);case"date":return S(m);case"boolean":return L(m);case"relation":return $(m);default:return}});oe(y);let w=s&&"const translate = useTranslate();";return x`
    ${ne(y)}
    
    export const ${u}: React.FC<IResourceComponentsProps> = () => {
        ${w}
        const {
            refineCore: { formLoading },
            saveButtonProps,
            register,
            formState: { errors },
        } = useForm(
            ${i?`
            { 
                refineCoreProps: {
                    resource: "${e.name}",
                    action: "create",
                    ${O(e.identifier??e.name,c,"getOne")}
                }
            }`:O(e.identifier??e.name,c,"getOne")?`{
                        refineCoreProps: { ${O(e.identifier??e.name,c,"getOne")} }
                        }`:""}
        );
    
        ${l}

        return (
            <Create isLoading={formLoading} saveButtonProps={saveButtonProps}>
                ${h.join("")}
            </Create>
        );
    };
    `},"renderer"),Ke=ce({type:"create",additionalScope:[["@refinedev/chakra-ui","RefineChakraUI",{Create:nn}],["@refinedev/react-hook-form","RefineReactHookForm",{useForm:mn}],["@chakra-ui/react","ChakraUI",{FormControl:on,FormLabel:an,FormErrorMessage:sn,Select:cn,Input:un,Checkbox:pn}]],codeViewerComponent:ie,loadingComponent:pe,errorComponent:ue,renderer:Ar});import{Edit as ln}from"@refinedev/chakra-ui";import{FormControl as dn,FormLabel as fn,FormErrorMessage as gn,Select as yn,Input as hn,Checkbox as kn}from"@chakra-ui/react";import{useForm as In}from"@refinedev/react-hook-form";var Hr=n(({resource:e,fields:o,meta:c,isCustomPage:i,id:s,i18n:u})=>{let y=Y(e.label??e.name,"edit"),p=A(e.label??e.name,"Data"),l=[["React","react",!0],["IResourceComponentsProps","@refinedev/core"],["Edit","@refinedev/chakra-ui"],["FormControl","@chakra-ui/react"],["FormLabel","@chakra-ui/react"],["FormErrorMessage","@chakra-ui/react"],["useForm","@refinedev/react-hook-form"]];u&&l.push(["useTranslate","@refinedev/core"]);let I=o.filter(a=>(a==null?void 0:a.relation)&&!(a!=null&&a.fieldable)&&(a==null?void 0:a.resource)).filter(Boolean).map(a=>{var b,H;if(a!=null&&a.relation&&!a.fieldable&&a.resource){l.push(["useSelect","@refinedev/core"]);let T=f(p,a.key,a.accessor,!1);return a.multiple&&a.accessor&&(T=`${f(p,a.key)}?.map((item: any) => ${f("item",void 0,a.accessor)})`),`
                const { options: ${A(a.key,"Options")} } =
                useSelect({
                    resource: "${a.resource.name}",
                    defaultValue: ${T},
                    ${xe(a)}
                    ${O(((b=a==null?void 0:a.resource)==null?void 0:b.identifier)??((H=a==null?void 0:a.resource)==null?void 0:H.name),c,"getList")}
                });

                React.useEffect(() => {
                    setValue("${Q(a.key,void 0,a.accessor)}", ${p}?.${a.key}?.id);
                }, [${A(a.key,"Options")}]);
            `}}).filter(Boolean),L=n(a=>{if(a.relation&&a.resource){l.push(["useSelect","@refinedev/core"]),l.push(["Select","@chakra-ui/react"]);let b=A(a.key,"Options");return x`
            <FormControl mb="3" isInvalid={!!errors?.${Q(a.key,void 0)}}>
                <FormLabel>${F({resource:e,field:a,i18n:u,noQuotes:!0})}</FormLabel>
                <Select
                    placeholder="Select ${q(a.resource.name)}"
                    {...register("${Q(a.key,void 0,a.accessor)}", {
                        required: "This field is required",
                    })}
                >
                    {${b}?.map((option) => (
                        <option value={option.value} key={option.value}>
                            {option.label}
                        </option>
                    ))}
                </Select>
                <FormErrorMessage>
                    {${f("(errors as any)",a.key,a.accessor,!1)}?.message as string}
                </FormErrorMessage>
            </FormControl>
            `}},"renderRelationFields"),S=n(a=>{if(a.type==="text"||a.type==="url"||a.type==="email"||a.type==="number"||a.type==="date"||a.type==="richtext"){if(l.push(["Input","@chakra-ui/react"]),a.multiple){let b=Q(a.key,"${index}",a.accessor),H=f(f("(errors as any)",a.key,void 0,!1)+"?.[index]",void 0,a.accessor);return`
                    <>
                        {${f(p,a.key)}?.map((item: any, index: number) => (
                            <FormControl key={index} mb="3" isInvalid={!!${H}}>
                                <FormLabel>${F({resource:e,field:a,i18n:u,noQuotes:!0})}</FormLabel>
                                <Input
                                    {...register(\`${b}\`, {
                                        required: "This field is required",
                                        ${a.type==="number"?"valueAsNumber: true,":""}
                                    })}
                                />
                                <FormErrorMessage>
                                    {${f(H,"message")} as string}
                                </FormErrorMessage>
                            </FormControl>
                        ))}
                    </>
                `}return x`
                <FormControl mb="3" isInvalid={!!${f("(errors as any)",a.key,a.accessor,!1)}}>
                    <FormLabel>${F({resource:e,field:a,i18n:u,noQuotes:!0})}</FormLabel>
                    <Input
                        ${Ie(a.key)?"disabled":""}
                        ${a.type!=="date"&&a.type!=="richtext"?`type="${a.type}"`:""}
                        {...register("${Q(a.key,void 0,a.accessor)}", {
                            required: "This field is required",
                            ${a.type==="number"?"valueAsNumber: true,":""}
                        })}
                    />
                    <FormErrorMessage>
                        {${f("(errors as any)",a.key,a.accessor,!1)}?.message as string}
                    </FormErrorMessage>
                </FormControl>
            `}},"basicInputFields"),h=n(a=>{if(a.type==="boolean"){if(l.push(["Checkbox","@chakra-ui/react"]),a.multiple){let b=Q(a.key,void 0,a.accessor),H=f("(errors as any)",a.key,void 0,!1)+"?.[index]";return`
                    <>
                        {${f(p,a.key)}?.map((item: any, index: number) => (
                            <FormControl key={index} mb="3" isInvalid={!!${H}}>
                                <FormLabel>${F({resource:e,field:a,i18n:u,noQuotes:!0})}</FormLabel>
                                <Checkbox
                                    {...register(\`${b}.\${index}\`, {
                                        required: "This field is required",
                                    })}
                                />
                                <FormErrorMessage>
                                    {${H}?.message as string}
                                </FormErrorMessage>
                            </FormControl>
                        ))}
                    </>
                `}return x`
                <FormControl mb="3" isInvalid={!!${f("errors",a.key,a.accessor,!1)}}>
                    <FormLabel>${F({resource:e,field:a,i18n:u,noQuotes:!0})}</FormLabel>
                    <Checkbox
                        {...register("${Q(a.key,void 0,a.accessor)}", {
                            required: "This field is required",
                        })}
                    />
                    <FormErrorMessage>
                        {${f("errors",a.key,a.accessor,!1)}?.message as string}
                    </FormErrorMessage>
                </FormControl>
               
            `}},"booleanFields"),w=n(a=>{if(a.type==="date")return`
                {/* 
                    DatePicker component is not included in "@refinedev/chakra-ui" package.
                    To use a <DatePicker> component, you can examine the following links:
                    
                    - https://github.com/aboveyunhai/chakra-dayzed-datepicker
                    - https://github.com/wojtekmaj/react-date-picker
                */}
                ${S(a)}
                `},"dateFields"),m=o.map(a=>{switch(a==null?void 0:a.type){case"text":case"number":case"email":case"url":case"richtext":return S(a);case"date":return w(a);case"boolean":return h(a);case"relation":return L(a);default:return}});oe(l);let d=u&&"const translate = useTranslate();";return x`
    ${ne(l)}
    
    export const ${y}: React.FC<IResourceComponentsProps> = () => {
        ${d}
        const {
            refineCore: { formLoading, queryResult },
            saveButtonProps,
            register,
            setValue,
            formState: { errors },
        } = useForm(
            ${i?`
            { 
                refineCoreProps: {
                    resource: "${e.name}",
                    id: ${$e(s)},
                    action: "edit",
                    ${O((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")}
                }
            }`:O((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")?`{ refineCoreProps: { ${O((e==null?void 0:e.identifier)??(e==null?void 0:e.name),c,"getOne")} }
                        }`:""}
        );
    
        const ${p} = queryResult?.data?.data;
    
        ${I}

        return (
            <Edit isLoading={formLoading} saveButtonProps={saveButtonProps}>
                ${m.join("")}
            </Edit>
        );
    };
    `},"renderer"),Qe=ce({type:"edit",additionalScope:[["@refinedev/chakra-ui","RefineChakraUI",{Edit:ln}],["@refinedev/react-hook-form","RefineReactHookForm",{useForm:In}],["@chakra-ui/react","ChakraUI",{FormControl:dn,FormLabel:fn,FormErrorMessage:gn,Select:yn,Input:hn,Checkbox:kn}]],codeViewerComponent:ie,loadingComponent:pe,errorComponent:ue,renderer:Hr});var Yi=n(({action:e,id:o,...c})=>{let{action:i,id:s}=xn();switch(e??i){case"show":return Se.createElement(je,{...c,id:o??s});case"create":return Se.createElement(Ke,{...c,id:o??s});case"edit":return Se.createElement(Qe,{...c,id:o??s});default:return Se.createElement(Ue,{...c,id:o??s})}},"ChakraUIInferencer");export{Ke as ChakraUICreateInferencer,Ar as ChakraUICreateRenderer,Qe as ChakraUIEditInferencer,Hr as ChakraUIEditRenderer,Yi as ChakraUIInferencer,Ue as ChakraUIListInferencer,Tr as ChakraUIListRenderer,je as ChakraUIShowInferencer,wr as ChakraUIShowRenderer};
//# sourceMappingURL=chakra-ui.js.map