{"version":3,"sources":["../../src/index.tsx","../../src/components/layout/index.tsx","../../src/components/layout/sider/index.tsx","../../src/components/layout/header/index.tsx","../../src/components/layout/title/index.tsx","../../src/components/themedLayout/index.tsx","../../src/components/themedLayout/sider/index.tsx","../../src/components/themedLayout/header/index.tsx","../../src/components/themedLayout/title/index.tsx","../../src/components/themedLayoutV2/index.tsx","../../src/contexts/themedLayoutContext/index.tsx","../../src/components/themedLayoutV2/sider/index.tsx","../../src/hooks/useAutocomplete/index.ts","../../src/hooks/useDataGrid/index.ts","../../src/definitions/dataGrid/index.ts","../../src/hooks/useSiderVisible/index.ts","../../src/hooks/useThemedLayoutContext/index.ts","../../src/components/themedLayoutV2/header/index.tsx","../../src/components/themedLayoutV2/hamburgerMenu/index.tsx","../../src/components/themedLayoutV2/title/index.tsx","../../src/components/pages/login/index.tsx","../../src/components/pages/ready/index.tsx","../../src/components/pages/welcome/index.tsx","../../src/components/pages/error/index.tsx","../../src/components/pages/auth/index.tsx","../../src/components/pages/auth/components/login/index.tsx","../../src/components/pages/auth/components/styles.ts","../../src/components/pages/auth/components/register/index.tsx","../../src/components/pages/auth/components/forgotPassword/index.tsx","../../src/components/pages/auth/components/updatePassword/index.tsx","../../src/components/crud/create/index.tsx","../../src/components/crud/edit/index.tsx","../../src/components/crud/list/index.tsx","../../src/components/crud/show/index.tsx","../../src/components/buttons/create/index.tsx","../../src/components/buttons/edit/index.tsx","../../src/components/buttons/delete/index.tsx","../../src/components/buttons/refresh/index.tsx","../../src/components/buttons/show/index.tsx","../../src/components/buttons/list/index.tsx","../../src/components/buttons/export/index.tsx","../../src/components/buttons/save/index.tsx","../../src/components/buttons/clone/index.tsx","../../src/components/buttons/import/index.tsx","../../src/components/circularDeterminate/index.tsx","../../src/components/fields/text/index.tsx","../../src/components/fields/tag/index.tsx","../../src/components/fields/email/index.tsx","../../src/components/fields/boolean/index.tsx","../../src/components/fields/date/index.tsx","../../src/components/fields/file/index.tsx","../../src/components/fields/url/index.tsx","../../src/components/fields/number/index.tsx","../../src/components/fields/markdown/index.tsx","../../src/components/breadcrumb/index.tsx","../../src/components/autoSaveIndicator/index.tsx","../../src/theme/index.ts","../../src/theme/palette/lightPalette.ts","../../src/theme/palette/darkPalette.ts","../../src/theme/typography.ts","../../src/theme/palette/refinePalette.ts","../../src/providers/notificationProvider/index.tsx","../../src/providers/refineSnackbarProvider/index.tsx"],"sourcesContent":["/** @deprecated not exists anymore - this type exists as a fallback for existing usages */\nexport type ThemeInput = any;\n\n/** Notistack */\n/**\n * Part of the following typing and documentation is from material-ui/src/Snackbar/Snackbar.d.ts\n */\nexport {\n    SnackbarProvider,\n    withSnackbar,\n    SnackbarContent as NotistackSnackbarContent,\n    useSnackbar,\n} from \"notistack\";\n\nexport type {\n    WithSnackbarProps,\n    SnackbarKey,\n    ProviderContext,\n    VariantType,\n    CloseReason,\n    SnackbarMessage,\n    SnackbarAction,\n    SnackbarContentCallback,\n    TransitionCloseHandler,\n    TransitionEnterHandler,\n    TransitionHandler,\n    ContainerClassKey as NotistackContainerClassKey,\n    VariantClassKey,\n    CombinedClassKey,\n    SnackbarOrigin,\n    IconVariant,\n    TransitionHandlerProps,\n    SnackbarContentProps,\n    SnackbarProps,\n    SharedProps,\n    OptionsObject,\n    SnackbarProviderProps,\n} from \"notistack\";\n\nexport * from \"./components\";\nexport * from \"./hooks\";\nexport * from \"./theme\";\nexport * from \"./providers\";\nexport * from \"./contexts\";\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\n\nimport { RefineLayoutLayoutProps } from \"./types\";\nimport { Sider as DefaultSider } from \"./sider\";\nimport { Header as DefaultHeader } from \"./header\";\n\n/**\n * @deprecated use `<ThemedLayout>` instead with 100% backward compatibility.\n * @see https://refine.dev/docs/api-reference/mui/components/mui-themed-layout\n **/\nexport const Layout: React.FC<RefineLayoutLayoutProps> = ({\n    Sider,\n    Header,\n    Title,\n    Footer,\n    OffLayoutArea,\n    children,\n}) => {\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n\n    return (\n        <Box display=\"flex\" flexDirection=\"row\">\n            <SiderToRender Title={Title} />\n            <Box\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    flex: 1,\n                    minHeight: \"100vh\",\n                }}\n            >\n                <HeaderToRender />\n                <Box\n                    component=\"main\"\n                    sx={{\n                        p: { xs: 1, md: 2, lg: 3 },\n                        flexGrow: 1,\n                        bgcolor: (theme) => theme.palette.background.default,\n                    }}\n                >\n                    {children}\n                </Box>\n                {Footer && <Footer />}\n            </Box>\n            {OffLayoutArea && <OffLayoutArea />}\n        </Box>\n    );\n};\n","import React, { useState } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\n\nimport ListOutlined from \"@mui/icons-material/ListOutlined\";\nimport Logout from \"@mui/icons-material/Logout\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport ChevronLeft from \"@mui/icons-material/ChevronLeft\";\nimport ChevronRight from \"@mui/icons-material/ChevronRight\";\nimport MenuRounded from \"@mui/icons-material/MenuRounded\";\nimport Dashboard from \"@mui/icons-material/Dashboard\";\n\nimport {\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useLogout,\n    useTitle,\n    useTranslate,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    useMenu,\n    useRefineContext,\n    useActiveAuthProvider,\n    pickNotDeprecated,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\n\nimport { RefineLayoutSiderProps } from \"../types\";\n\nimport { Title as DefaultTitle } from \"@components\";\n\nexport const Sider: React.FC<RefineLayoutSiderProps> = ({\n    Title: TitleFromProps,\n    render,\n    meta,\n}) => {\n    const [collapsed, setCollapsed] = useState(false);\n    const [opened, setOpened] = useState(false);\n\n    const drawerWidth = () => {\n        if (collapsed) return 64;\n        return 200;\n    };\n\n    const t = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n    const { hasDashboard } = useRefineContext();\n    const translate = useTranslate();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n    const isExistAuthentication = useIsExistAuthentication();\n    const TitleFromContext = useTitle();\n    const authProvider = useActiveAuthProvider();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const [open, setOpen] = useState<{ [k: string]: any }>({});\n\n    React.useEffect(() => {\n        setOpen((previous) => {\n            const previousKeys: string[] = Object.keys(previous);\n            const previousOpenKeys = previousKeys.filter(\n                (key) => previous[key],\n            );\n\n            const uniqueKeys = new Set([\n                ...previousOpenKeys,\n                ...defaultOpenKeys,\n            ]);\n            const uniqueKeysRecord = Object.fromEntries(\n                Array.from(uniqueKeys.values()).map((key) => [key, true]),\n            );\n            return uniqueKeysRecord;\n        });\n    }, [defaultOpenKeys]);\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n    const handleClick = (key: string) => {\n        setOpen({ ...open, [key]: !open[key] });\n    };\n\n    const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n        return tree.map((item: ITreeMenu) => {\n            const {\n                icon,\n                label,\n                route,\n                name,\n                children,\n                parentName,\n                meta,\n                options,\n            } = item;\n            const isOpen = open[item.key || \"\"] || false;\n\n            const isSelected = item.key === selectedKey;\n            const isNested = !(\n                pickNotDeprecated(meta?.parent, options?.parent, parentName) ===\n                undefined\n            );\n\n            if (children.length > 0) {\n                return (\n                    <CanAccess\n                        key={item.key}\n                        resource={name.toLowerCase()}\n                        action=\"list\"\n                        params={{\n                            resource: item,\n                        }}\n                    >\n                        <div key={item.key}>\n                            <Tooltip\n                                title={label ?? name}\n                                placement=\"right\"\n                                disableHoverListener={!collapsed}\n                                arrow\n                            >\n                                <ListItemButton\n                                    onClick={() => {\n                                        if (collapsed) {\n                                            setCollapsed(false);\n                                            if (!isOpen) {\n                                                handleClick(item.key || \"\");\n                                            }\n                                        } else {\n                                            handleClick(item.key || \"\");\n                                        }\n                                    }}\n                                    sx={{\n                                        pl: isNested ? 4 : 2,\n                                        justifyContent: \"center\",\n                                        \"&.Mui-selected\": {\n                                            \"&:hover\": {\n                                                backgroundColor: \"transparent\",\n                                            },\n                                            backgroundColor: \"transparent\",\n                                        },\n                                    }}\n                                >\n                                    <ListItemIcon\n                                        sx={{\n                                            justifyContent: \"center\",\n                                            minWidth: 36,\n                                            color: \"secondary.contrastText\",\n                                        }}\n                                    >\n                                        {icon ?? <ListOutlined />}\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={label}\n                                        primaryTypographyProps={{\n                                            noWrap: true,\n                                            fontSize: \"14px\",\n                                            fontWeight: isSelected\n                                                ? \"bold\"\n                                                : \"normal\",\n                                        }}\n                                    />\n                                    {!collapsed &&\n                                        (isOpen ? (\n                                            <ExpandLess />\n                                        ) : (\n                                            <ExpandMore />\n                                        ))}\n                                </ListItemButton>\n                            </Tooltip>\n                            {!collapsed && (\n                                <Collapse\n                                    in={open[item.key || \"\"]}\n                                    timeout=\"auto\"\n                                    unmountOnExit\n                                >\n                                    <List component=\"div\" disablePadding>\n                                        {renderTreeView(children, selectedKey)}\n                                    </List>\n                                </Collapse>\n                            )}\n                        </div>\n                    </CanAccess>\n                );\n            }\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{ resource: item }}\n                >\n                    <Tooltip\n                        title={label ?? name}\n                        placement=\"right\"\n                        disableHoverListener={!collapsed}\n                        arrow\n                    >\n                        <ListItemButton\n                            component={ActiveLink}\n                            to={route}\n                            selected={isSelected}\n                            onClick={() => {\n                                setOpened(false);\n                            }}\n                            sx={{\n                                pl: isNested ? 4 : 2,\n                                py: isNested ? 1.25 : 1,\n                                \"&.Mui-selected\": {\n                                    \"&:hover\": {\n                                        backgroundColor: \"transparent\",\n                                    },\n                                    backgroundColor: \"transparent\",\n                                },\n                                justifyContent: \"center\",\n                            }}\n                        >\n                            <ListItemIcon\n                                sx={{\n                                    justifyContent: \"center\",\n                                    minWidth: 36,\n                                    color: \"secondary.contrastText\",\n                                }}\n                            >\n                                {icon ?? <ListOutlined />}\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={label}\n                                primaryTypographyProps={{\n                                    noWrap: true,\n                                    fontSize: \"14px\",\n                                    fontWeight: isSelected ? \"bold\" : \"normal\",\n                                }}\n                            />\n                        </ListItemButton>\n                    </Tooltip>\n                </CanAccess>\n            );\n        });\n    };\n\n    const dashboard = hasDashboard ? (\n        <CanAccess resource=\"dashboard\" action=\"list\">\n            <Tooltip\n                title={translate(\"dashboard.title\", \"Dashboard\")}\n                placement=\"right\"\n                disableHoverListener={!collapsed}\n                arrow\n            >\n                <ListItemButton\n                    component={ActiveLink}\n                    to=\"/\"\n                    selected={selectedKey === \"/\"}\n                    onClick={() => {\n                        setOpened(false);\n                    }}\n                    sx={{\n                        pl: 2,\n                        py: 1,\n                        \"&.Mui-selected\": {\n                            \"&:hover\": {\n                                backgroundColor: \"transparent\",\n                            },\n                            backgroundColor: \"transparent\",\n                        },\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <ListItemIcon\n                        sx={{\n                            justifyContent: \"center\",\n                            minWidth: 36,\n                            color: \"secondary.contrastText\",\n                        }}\n                    >\n                        <Dashboard />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={translate(\"dashboard.title\", \"Dashboard\")}\n                        primaryTypographyProps={{\n                            noWrap: true,\n                            fontSize: \"14px\",\n                            fontWeight: selectedKey === \"/\" ? \"bold\" : \"normal\",\n                        }}\n                    />\n                </ListItemButton>\n            </Tooltip>\n        </CanAccess>\n    ) : null;\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                translate(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Tooltip\n            title={t(\"buttons.logout\", \"Logout\")}\n            placement=\"right\"\n            disableHoverListener={!collapsed}\n            arrow\n        >\n            <ListItemButton\n                key=\"logout\"\n                onClick={handleLogout}\n                sx={{ justifyContent: \"center\" }}\n            >\n                <ListItemIcon\n                    sx={{\n                        justifyContent: \"center\",\n                        minWidth: 36,\n                        color: \"secondary.contrastText\",\n                    }}\n                >\n                    <Logout />\n                </ListItemIcon>\n                <ListItemText\n                    primary={t(\"buttons.logout\", \"Logout\")}\n                    primaryTypographyProps={{\n                        noWrap: true,\n                        fontSize: \"14px\",\n                    }}\n                />\n            </ListItemButton>\n        </Tooltip>\n    );\n\n    const items = renderTreeView(menuItems, selectedKey);\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                logout,\n                items,\n                collapsed,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    const drawer = (\n        <List disablePadding sx={{ mt: 1, color: \"secondary.contrastText\" }}>\n            {renderSider()}\n        </List>\n    );\n\n    return (\n        <>\n            <Box\n                sx={{\n                    width: { xs: drawerWidth() },\n                    display: {\n                        xs: \"none\",\n                        md: \"block\",\n                    },\n                    transition: \"width 0.3s ease\",\n                }}\n            />\n            <Box\n                component=\"nav\"\n                sx={{\n                    position: \"fixed\",\n                    zIndex: 1101,\n                    width: { sm: drawerWidth() },\n                    display: \"flex\",\n                }}\n            >\n                <Drawer\n                    variant=\"temporary\"\n                    open={opened}\n                    onClose={() => setOpened(false)}\n                    ModalProps={{\n                        keepMounted: true, // Better open performance on mobile.\n                    }}\n                    sx={{\n                        display: { sm: \"block\", md: \"none\" },\n                        \"& .MuiDrawer-paper\": {\n                            width: 256,\n                            bgcolor: \"secondary.main\",\n                        },\n                    }}\n                >\n                    <Box\n                        sx={{\n                            height: 64,\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <RenderToTitle collapsed={false} />\n                    </Box>\n                    {drawer}\n                </Drawer>\n                <Drawer\n                    variant=\"permanent\"\n                    PaperProps={{ elevation: 1 }}\n                    sx={{\n                        display: { xs: \"none\", md: \"block\" },\n                        \"& .MuiDrawer-paper\": {\n                            width: drawerWidth,\n                            bgcolor: \"secondary.main\",\n                            overflow: \"hidden\",\n                            transition:\n                                \"width 200ms cubic-bezier(0.4, 0, 0.6, 1) 0ms\",\n                        },\n                    }}\n                    open\n                >\n                    <Box\n                        sx={{\n                            height: 64,\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <RenderToTitle collapsed={collapsed} />\n                    </Box>\n                    <Box\n                        sx={{\n                            flexGrow: 1,\n                            overflowX: \"hidden\",\n                            overflowY: \"auto\",\n                        }}\n                    >\n                        {drawer}\n                    </Box>\n                    <Button\n                        sx={{\n                            background: \"rgba(0,0,0,.5)\",\n                            color: \"secondary.contrastText\",\n                            textAlign: \"center\",\n                            borderRadius: 0,\n                            borderTop: \"1px solid #ffffff1a\",\n                        }}\n                        fullWidth\n                        size=\"large\"\n                        onClick={() => setCollapsed((prev) => !prev)}\n                    >\n                        {collapsed ? <ChevronRight /> : <ChevronLeft />}\n                    </Button>\n                </Drawer>\n                <Box\n                    sx={{\n                        display: { xs: \"block\", md: \"none\" },\n                        position: \"fixed\",\n                        top: \"64px\",\n                        left: \"0px\",\n                        borderRadius: \"0 6px 6px 0\",\n                        bgcolor: \"secondary.main\",\n                        zIndex: 1199,\n                        width: \"36px\",\n                    }}\n                >\n                    <IconButton\n                        sx={{ color: \"#fff\", width: \"36px\" }}\n                        onClick={() => setOpened((prev) => !prev)}\n                    >\n                        <MenuRounded />\n                    </IconButton>\n                </Box>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\nimport { useGetIdentity, useActiveAuthProvider } from \"@refinedev/core\";\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Stack from \"@mui/material/Stack\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Avatar from \"@mui/material/Avatar\";\n\nimport { RefineLayoutHeaderProps } from \"../types\";\n\nexport const Header: React.FC<RefineLayoutHeaderProps> = () => {\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const shouldRenderHeader = user && (user.name || user.avatar);\n\n    return shouldRenderHeader ? (\n        <AppBar color=\"default\" position=\"sticky\" elevation={1}>\n            <Toolbar>\n                <Stack\n                    direction=\"row\"\n                    width=\"100%\"\n                    justifyContent=\"flex-end\"\n                    alignItems=\"center\"\n                >\n                    <Stack\n                        direction=\"row\"\n                        gap=\"16px\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n                    >\n                        <Typography variant=\"subtitle2\">\n                            {user?.name}\n                        </Typography>\n                        <Avatar src={user?.avatar} alt={user?.name} />\n                    </Stack>\n                </Stack>\n            </Toolbar>\n        </AppBar>\n    ) : null;\n};\n","import React from \"react\";\nimport {\n    useRouterContext,\n    TitleProps,\n    useLink,\n    useRouterType,\n} from \"@refinedev/core\";\n\nimport Button from \"@mui/material/Button\";\n\nexport const Title: React.FC<TitleProps> = ({ collapsed }) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <Button fullWidth variant=\"text\" disableRipple>\n            <ActiveLink to=\"/\">\n                {collapsed ? (\n                    <img\n                        src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine-mini.svg\"\n                        alt=\"Refine\"\n                        width=\"28px\"\n                        style={{ maxHeight: \"38px\" }}\n                    />\n                ) : (\n                    <img\n                        src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                        alt=\"Refine\"\n                        width=\"140px\"\n                    />\n                )}\n            </ActiveLink>\n        </Button>\n    );\n};\n","import React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\n\nimport { ThemedSider as DefaultSider } from \"./sider\";\nimport { ThemedHeader as DefaultHeader } from \"./header\";\nimport { RefineThemedLayoutProps } from \"./types\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/mui/components/mui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedLayout: React.FC<RefineThemedLayoutProps> = ({\n    Sider,\n    Header,\n    Title,\n    Footer,\n    OffLayoutArea,\n    children,\n}) => {\n    const [isSiderOpen, setIsSiderOpen] = useState(true);\n\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n\n    return (\n        <Box display=\"flex\" flexDirection=\"row\">\n            <SiderToRender\n                Title={Title}\n                isSiderOpen={isSiderOpen}\n                onToggleSiderClick={(isOpen) => setIsSiderOpen(Boolean(isOpen))}\n            />\n            <Box\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    flex: 1,\n                    minHeight: \"100vh\",\n                }}\n            >\n                <HeaderToRender\n                    isSiderOpen={isSiderOpen}\n                    onToggleSiderClick={() => setIsSiderOpen((prev) => !prev)}\n                />\n                <Box\n                    component=\"main\"\n                    sx={{\n                        p: { xs: 1, md: 2, lg: 3 },\n                        flexGrow: 1,\n                        bgcolor: (theme) => theme.palette.background.default,\n                    }}\n                >\n                    {children}\n                </Box>\n                {Footer && <Footer />}\n            </Box>\n            {OffLayoutArea && <OffLayoutArea />}\n        </Box>\n    );\n};\n","import React, { useState } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Paper from \"@mui/material/Paper\";\n\nimport ListOutlined from \"@mui/icons-material/ListOutlined\";\nimport Logout from \"@mui/icons-material/Logout\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport ChevronLeft from \"@mui/icons-material/ChevronLeft\";\nimport MenuRounded from \"@mui/icons-material/MenuRounded\";\nimport Dashboard from \"@mui/icons-material/Dashboard\";\n\nimport {\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useLogout,\n    useTitle,\n    useTranslate,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    useMenu,\n    useRefineContext,\n    useActiveAuthProvider,\n    pickNotDeprecated,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\n\nimport { RefineThemedLayoutSiderProps } from \"../types\";\n\nimport { ThemedTitle as DefaultTitle } from \"@components\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/mui/components/mui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedSider: React.FC<RefineThemedLayoutSiderProps> = ({\n    Title: TitleFromProps,\n    render,\n    meta,\n    isSiderOpen,\n    onToggleSiderClick,\n}) => {\n    const [opened, setOpened] = useState(false);\n\n    const drawerWidth = () => {\n        if (isSiderOpen) return 240;\n        return 56;\n    };\n\n    const t = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n    const { hasDashboard } = useRefineContext();\n    const translate = useTranslate();\n\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n    const isExistAuthentication = useIsExistAuthentication();\n    const TitleFromContext = useTitle();\n    const authProvider = useActiveAuthProvider();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const [open, setOpen] = useState<{ [k: string]: any }>({});\n\n    React.useEffect(() => {\n        setOpen((previous) => {\n            const previousKeys: string[] = Object.keys(previous);\n            const previousOpenKeys = previousKeys.filter(\n                (key) => previous[key],\n            );\n\n            const uniqueKeys = new Set([\n                ...previousOpenKeys,\n                ...defaultOpenKeys,\n            ]);\n            const uniqueKeysRecord = Object.fromEntries(\n                Array.from(uniqueKeys.values()).map((key) => [key, true]),\n            );\n            return uniqueKeysRecord;\n        });\n    }, [defaultOpenKeys]);\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n    const handleClick = (key: string) => {\n        setOpen({ ...open, [key]: !open[key] });\n    };\n\n    const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n        return tree.map((item: ITreeMenu) => {\n            const {\n                icon,\n                label,\n                route,\n                name,\n                children,\n                parentName,\n                meta,\n                options,\n            } = item;\n            const isOpen = open[item.key || \"\"] || false;\n\n            const isSelected = item.key === selectedKey;\n            const isNested = !(\n                pickNotDeprecated(meta?.parent, options?.parent, parentName) ===\n                undefined\n            );\n\n            if (children.length > 0) {\n                return (\n                    <CanAccess\n                        key={item.key}\n                        resource={name.toLowerCase()}\n                        action=\"list\"\n                        params={{\n                            resource: item,\n                        }}\n                    >\n                        <div key={item.key}>\n                            <Tooltip\n                                title={label ?? name}\n                                placement=\"right\"\n                                disableHoverListener={isSiderOpen}\n                                arrow\n                            >\n                                <ListItemButton\n                                    onClick={() => {\n                                        if (!isSiderOpen) {\n                                            onToggleSiderClick?.(true);\n                                            if (!isOpen) {\n                                                handleClick(item.key || \"\");\n                                            }\n                                        } else {\n                                            handleClick(item.key || \"\");\n                                        }\n                                    }}\n                                    sx={{\n                                        pl: isNested ? 4 : 2,\n                                        justifyContent: \"center\",\n                                        marginTop: \"8px\",\n                                    }}\n                                >\n                                    <ListItemIcon\n                                        sx={{\n                                            justifyContent: \"center\",\n                                            minWidth: \"24px\",\n                                            transition: \"margin-right 0.3s\",\n                                            marginRight: isSiderOpen\n                                                ? \"12px\"\n                                                : \"0px\",\n                                            color: \"currentColor\",\n                                        }}\n                                    >\n                                        {icon ?? <ListOutlined />}\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={label}\n                                        primaryTypographyProps={{\n                                            noWrap: true,\n                                            fontSize: \"14px\",\n                                        }}\n                                    />\n                                    {isOpen ? (\n                                        <ExpandLess\n                                            sx={{\n                                                color: \"text.icon\",\n                                            }}\n                                        />\n                                    ) : (\n                                        <ExpandMore\n                                            sx={{\n                                                color: \"text.icon\",\n                                            }}\n                                        />\n                                    )}\n                                </ListItemButton>\n                            </Tooltip>\n                            {isSiderOpen && (\n                                <Collapse\n                                    in={open[item.key || \"\"]}\n                                    timeout=\"auto\"\n                                    unmountOnExit\n                                >\n                                    <List component=\"div\" disablePadding>\n                                        {renderTreeView(children, selectedKey)}\n                                    </List>\n                                </Collapse>\n                            )}\n                        </div>\n                    </CanAccess>\n                );\n            }\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{ resource: item }}\n                >\n                    <Tooltip\n                        title={label ?? name}\n                        placement=\"right\"\n                        disableHoverListener={isSiderOpen}\n                        arrow\n                    >\n                        <ListItemButton\n                            component={ActiveLink}\n                            to={route}\n                            selected={isSelected}\n                            onClick={() => {\n                                setOpened(false);\n                            }}\n                            sx={{\n                                pl: isNested ? 4 : 2,\n                                py: isNested ? 1.25 : 1,\n                                justifyContent: \"center\",\n                                color: isSelected\n                                    ? \"primary.main\"\n                                    : \"text.primary\",\n                            }}\n                        >\n                            <ListItemIcon\n                                sx={{\n                                    justifyContent: \"center\",\n                                    transition: \"margin-right 0.3s\",\n                                    marginRight: isSiderOpen ? \"12px\" : \"0px\",\n                                    minWidth: \"24px\",\n                                    color: \"currentColor\",\n                                }}\n                            >\n                                {icon ?? <ListOutlined />}\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={label}\n                                primaryTypographyProps={{\n                                    noWrap: true,\n                                    fontSize: \"14px\",\n                                }}\n                            />\n                        </ListItemButton>\n                    </Tooltip>\n                </CanAccess>\n            );\n        });\n    };\n\n    const dashboard = hasDashboard ? (\n        <CanAccess resource=\"dashboard\" action=\"list\">\n            <Tooltip\n                title={translate(\"dashboard.title\", \"Dashboard\")}\n                placement=\"right\"\n                disableHoverListener={isSiderOpen}\n                arrow\n            >\n                <ListItemButton\n                    component={ActiveLink}\n                    to=\"/\"\n                    selected={selectedKey === \"/\"}\n                    onClick={() => {\n                        setOpened(false);\n                    }}\n                    sx={{\n                        pl: 2,\n                        py: 1,\n                        justifyContent: \"center\",\n                        color:\n                            selectedKey === \"/\"\n                                ? \"primary.main\"\n                                : \"text.primary\",\n                    }}\n                >\n                    <ListItemIcon\n                        sx={{\n                            justifyContent: \"center\",\n                            minWidth: \"24px\",\n                            transition: \"margin-right 0.3s\",\n                            marginRight: isSiderOpen ? \"12px\" : \"0px\",\n                            color: \"currentColor\",\n                            fontSize: \"14px\",\n                        }}\n                    >\n                        <Dashboard />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={translate(\"dashboard.title\", \"Dashboard\")}\n                        primaryTypographyProps={{\n                            noWrap: true,\n                            fontSize: \"14px\",\n                        }}\n                    />\n                </ListItemButton>\n            </Tooltip>\n        </CanAccess>\n    ) : null;\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                t(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Tooltip\n            title={t(\"buttons.logout\", \"Logout\")}\n            placement=\"right\"\n            disableHoverListener={isSiderOpen}\n            arrow\n        >\n            <ListItemButton\n                key=\"logout\"\n                onClick={() => handleLogout()}\n                sx={{\n                    justifyContent: \"center\",\n                }}\n            >\n                <ListItemIcon\n                    sx={{\n                        justifyContent: \"center\",\n                        minWidth: \"24px\",\n                        transition: \"margin-right 0.3s\",\n                        marginRight: isSiderOpen ? \"12px\" : \"0px\",\n                        marginLeft: \"2px\",\n                        color: \"currentColor\",\n                    }}\n                >\n                    <Logout />\n                </ListItemIcon>\n                <ListItemText\n                    primary={t(\"buttons.logout\", \"Logout\")}\n                    primaryTypographyProps={{\n                        noWrap: true,\n                        fontSize: \"14px\",\n                    }}\n                />\n            </ListItemButton>\n        </Tooltip>\n    );\n\n    const items = renderTreeView(menuItems, selectedKey);\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                logout,\n                items,\n                collapsed: !isSiderOpen,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    const drawer = (\n        <List\n            disablePadding\n            sx={{\n                flexGrow: 1,\n                paddingTop: \"16px\",\n            }}\n        >\n            {renderSider()}\n        </List>\n    );\n\n    return (\n        <>\n            <Box\n                sx={{\n                    width: { xs: drawerWidth() },\n                    display: {\n                        xs: \"none\",\n                        md: \"block\",\n                    },\n                    transition: \"width 0.3s ease\",\n                }}\n            />\n            <Box\n                component=\"nav\"\n                sx={{\n                    position: \"fixed\",\n                    zIndex: 1101,\n                    width: { sm: drawerWidth() },\n                    display: \"flex\",\n                }}\n            >\n                <Drawer\n                    variant=\"temporary\"\n                    elevation={2}\n                    open={opened}\n                    onClose={() => setOpened(false)}\n                    ModalProps={{\n                        keepMounted: true, // Better open performance on mobile.\n                    }}\n                    sx={{\n                        display: {\n                            sm: \"block\",\n                            md: \"none\",\n                        },\n                    }}\n                >\n                    <Box\n                        sx={{\n                            width: drawerWidth(),\n                        }}\n                    >\n                        <Box\n                            sx={{\n                                height: 64,\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                paddingLeft: \"16px\",\n                                fontSize: \"14px\",\n                            }}\n                        >\n                            <RenderToTitle collapsed={false} />\n                        </Box>\n                        {drawer}\n                    </Box>\n                </Drawer>\n                <Drawer\n                    variant=\"permanent\"\n                    sx={{\n                        display: { xs: \"none\", md: \"block\" },\n                        \"& .MuiDrawer-paper\": {\n                            width: drawerWidth,\n                            overflow: \"hidden\",\n                            transition:\n                                \"width 200ms cubic-bezier(0.4, 0, 0.6, 1) 0ms\",\n                        },\n                    }}\n                    open\n                >\n                    <Paper\n                        elevation={0}\n                        sx={{\n                            fontSize: \"14px\",\n                            width: \"100%\",\n                            height: 64,\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: !isSiderOpen\n                                ? \"center\"\n                                : \"space-between\",\n                            paddingLeft: !isSiderOpen ? 0 : \"16px\",\n                            paddingRight: !isSiderOpen ? 0 : \"8px\",\n                            variant: \"outlined\",\n                            borderRadius: 0,\n                            borderBottom: (theme) =>\n                                `1px solid ${theme.palette.action.focus}`,\n                        }}\n                    >\n                        <RenderToTitle collapsed={!isSiderOpen} />\n                        {isSiderOpen && (\n                            <IconButton\n                                size=\"small\"\n                                onClick={() => onToggleSiderClick?.(false)}\n                            >\n                                {<ChevronLeft />}\n                            </IconButton>\n                        )}\n                    </Paper>\n                    <Box\n                        sx={{\n                            flexGrow: 1,\n                            overflowX: \"hidden\",\n                            overflowY: \"auto\",\n                        }}\n                    >\n                        {drawer}\n                    </Box>\n                </Drawer>\n                <IconButton\n                    sx={(theme) => {\n                        const { palette } = theme;\n                        const { mode, getContrastText, primary, background } =\n                            palette;\n\n                        return {\n                            color:\n                                mode === \"light\"\n                                    ? getContrastText(primary.main)\n                                    : getContrastText(background.paper),\n                            display: { xs: \"flex\", md: \"none\" },\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            position: \"fixed\",\n                            top: \"12px\",\n                            left: \"16px\",\n                            zIndex: 1199,\n                            height: \"36px\",\n                            width: \"36px\",\n                        };\n                    }}\n                    onClick={() => setOpened((prev) => !prev)}\n                >\n                    <MenuRounded />\n                </IconButton>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\nimport { useGetIdentity, useActiveAuthProvider } from \"@refinedev/core\";\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Stack from \"@mui/material/Stack\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Avatar from \"@mui/material/Avatar\";\nimport IconButton from \"@mui/material/IconButton\";\n\nimport Menu from \"@mui/icons-material/Menu\";\n\nimport { RefineThemedLayoutHeaderProps } from \"../types\";\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/mui/components/mui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedHeader: React.FC<RefineThemedLayoutHeaderProps> = ({\n    isSiderOpen,\n    onToggleSiderClick,\n    toggleSiderIcon: toggleSiderIconFromProps,\n}) => {\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const hasSidebarToggle = Boolean(onToggleSiderClick);\n\n    return (\n        <AppBar position=\"sticky\">\n            <Toolbar>\n                {hasSidebarToggle && (\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={() => onToggleSiderClick?.()}\n                        edge=\"start\"\n                        sx={{\n                            mr: 2,\n                            display: { xs: \"none\", md: \"flex\" },\n                            ...(isSiderOpen && { display: \"none\" }),\n                        }}\n                    >\n                        {toggleSiderIconFromProps?.(Boolean(isSiderOpen)) ?? (\n                            <Menu />\n                        )}\n                    </IconButton>\n                )}\n                <Stack\n                    direction=\"row\"\n                    width=\"100%\"\n                    justifyContent=\"flex-end\"\n                    alignItems=\"center\"\n                >\n                    <Stack\n                        direction=\"row\"\n                        gap=\"16px\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n                    >\n                        <Typography\n                            sx={{\n                                display: { xs: \"none\", md: \"block\" },\n                            }}\n                            variant=\"subtitle2\"\n                        >\n                            {user?.name}\n                        </Typography>\n                        <Avatar src={user?.avatar} alt={user?.name} />\n                    </Stack>\n                </Stack>\n            </Toolbar>\n        </AppBar>\n    );\n};\n","import React from \"react\";\nimport { useRouterContext, useLink, useRouterType } from \"@refinedev/core\";\n\nimport MuiLink from \"@mui/material/Link\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { RefineLayoutThemedTitleProps } from \"../types\";\n\nconst defaultText = \"refine Project\";\n\nconst defaultIcon = (\n    <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-testid=\"refine-logo\"\n    >\n        <path\n            d=\"M12 9C13.6569 9 15 7.65685 15 6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6C9 7.65685 10.3431 9 12 9Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM8 6C8 3.79086 9.79086 2 12 2C14.2091 2 16 3.79086 16 6V18C16 20.2091 14.2091 22 12 22C9.79086 22 8 20.2091 8 18V6Z\"\n            fill=\"currentColor\"\n        />\n    </svg>\n);\n\n/**\n * @deprecated It is recommended to use the improved `ThemedLayoutV2`. Review migration guidelines. https://refine.dev/docs/api-reference/mui/components/mui-themed-layout/#migrate-themedlayout-to-themedlayoutv2\n */\nexport const ThemedTitle: React.FC<RefineLayoutThemedTitleProps> = ({\n    collapsed,\n    wrapperStyles,\n    icon = defaultIcon,\n    text = defaultText,\n}) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <MuiLink\n            to=\"/\"\n            component={ActiveLink}\n            underline=\"none\"\n            sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: \"12px\",\n                ...wrapperStyles,\n            }}\n        >\n            <SvgIcon height=\"24px\" width=\"24px\" color=\"primary\">\n                {icon}\n            </SvgIcon>\n            {!collapsed && (\n                <Typography\n                    variant=\"h6\"\n                    fontWeight={700}\n                    color=\"text.primary\"\n                    fontSize=\"inherit\"\n                    textOverflow=\"ellipsis\"\n                    overflow=\"hidden\"\n                >\n                    {text}\n                </Typography>\n            )}\n        </MuiLink>\n    );\n};\n","import React from \"react\";\n\nimport Box from \"@mui/material/Box\";\n\nimport { ThemedLayoutContextProvider } from \"@contexts\";\nimport { ThemedSiderV2 as DefaultSider } from \"./sider\";\nimport { ThemedHeaderV2 as DefaultHeader } from \"./header\";\nimport { RefineThemedLayoutV2Props } from \"./types\";\n\nexport const ThemedLayoutV2: React.FC<RefineThemedLayoutV2Props> = ({\n    Sider,\n    Header,\n    Title,\n    Footer,\n    OffLayoutArea,\n    children,\n    initialSiderCollapsed,\n}) => {\n    const SiderToRender = Sider ?? DefaultSider;\n    const HeaderToRender = Header ?? DefaultHeader;\n\n    return (\n        <ThemedLayoutContextProvider\n            initialSiderCollapsed={initialSiderCollapsed}\n        >\n            <Box display=\"flex\" flexDirection=\"row\">\n                <SiderToRender Title={Title} />\n                <Box\n                    sx={[\n                        {\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            flex: 1,\n                            minHeight: \"100vh\",\n                        },\n                        { overflow: \"auto\" },\n                        { overflow: \"clip\" },\n                    ]}\n                >\n                    <HeaderToRender />\n                    <Box\n                        component=\"main\"\n                        sx={{\n                            p: { xs: 1, md: 2, lg: 3 },\n                            flexGrow: 1,\n                            bgcolor: (theme) =>\n                                theme.palette.background.default,\n                        }}\n                    >\n                        {children}\n                    </Box>\n                    {Footer && <Footer />}\n                </Box>\n                {OffLayoutArea && <OffLayoutArea />}\n            </Box>\n        </ThemedLayoutContextProvider>\n    );\n};\n","import React, { ReactNode, useState } from \"react\";\n\nimport { IThemedLayoutContext } from \"./IThemedLayoutContext\";\n\nexport const ThemedLayoutContext = React.createContext<IThemedLayoutContext>({\n    siderCollapsed: false,\n    mobileSiderOpen: false,\n    setSiderCollapsed: () => undefined,\n    setMobileSiderOpen: () => undefined,\n});\n\nexport const ThemedLayoutContextProvider: React.FC<{\n    children: ReactNode;\n    initialSiderCollapsed?: boolean;\n}> = ({ children, initialSiderCollapsed }) => {\n    const [siderCollapsed, setSiderCollapsed] = useState(\n        initialSiderCollapsed ?? false,\n    );\n    const [mobileSiderOpen, setMobileSiderOpen] = useState(false);\n\n    return (\n        <ThemedLayoutContext.Provider\n            value={{\n                siderCollapsed,\n                mobileSiderOpen,\n                setSiderCollapsed,\n                setMobileSiderOpen,\n            }}\n        >\n            {children}\n        </ThemedLayoutContext.Provider>\n    );\n};\n","import React, { CSSProperties, useState } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport Drawer from \"@mui/material/Drawer\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Paper from \"@mui/material/Paper\";\n\nimport ListOutlined from \"@mui/icons-material/ListOutlined\";\nimport Logout from \"@mui/icons-material/Logout\";\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\nimport ChevronLeft from \"@mui/icons-material/ChevronLeft\";\nimport Dashboard from \"@mui/icons-material/Dashboard\";\n\nimport {\n    CanAccess,\n    ITreeMenu,\n    useIsExistAuthentication,\n    useLogout,\n    useTitle,\n    useTranslate,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    useMenu,\n    useRefineContext,\n    useActiveAuthProvider,\n    pickNotDeprecated,\n    useWarnAboutChange,\n} from \"@refinedev/core\";\nimport { RefineThemedLayoutV2SiderProps } from \"../types\";\n\nimport { ThemedTitleV2 as DefaultTitle } from \"@components\";\nimport { useThemedLayoutContext } from \"@hooks\";\n\nexport const ThemedSiderV2: React.FC<RefineThemedLayoutV2SiderProps> = ({\n    Title: TitleFromProps,\n    render,\n    meta,\n    activeItemDisabled = false,\n}) => {\n    const {\n        siderCollapsed,\n        setSiderCollapsed,\n        mobileSiderOpen,\n        setMobileSiderOpen,\n    } = useThemedLayoutContext();\n\n    const drawerWidth = () => {\n        if (siderCollapsed) return 56;\n        return 240;\n    };\n\n    const t = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n    const { hasDashboard } = useRefineContext();\n    const translate = useTranslate();\n\n    const { menuItems, selectedKey, defaultOpenKeys } = useMenu({ meta });\n    const isExistAuthentication = useIsExistAuthentication();\n    const TitleFromContext = useTitle();\n    const authProvider = useActiveAuthProvider();\n    const { warnWhen, setWarnWhen } = useWarnAboutChange();\n    const { mutate: mutateLogout } = useLogout({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const [open, setOpen] = useState<{ [k: string]: any }>({});\n\n    React.useEffect(() => {\n        setOpen((previous) => {\n            const previousKeys: string[] = Object.keys(previous);\n            const previousOpenKeys = previousKeys.filter(\n                (key) => previous[key],\n            );\n\n            const uniqueKeys = new Set([\n                ...previousOpenKeys,\n                ...defaultOpenKeys,\n            ]);\n            const uniqueKeysRecord = Object.fromEntries(\n                Array.from(uniqueKeys.values()).map((key) => [key, true]),\n            );\n            return uniqueKeysRecord;\n        });\n    }, [defaultOpenKeys]);\n\n    const RenderToTitle = TitleFromProps ?? TitleFromContext ?? DefaultTitle;\n\n    const handleClick = (key: string) => {\n        setOpen({ ...open, [key]: !open[key] });\n    };\n\n    const renderTreeView = (tree: ITreeMenu[], selectedKey?: string) => {\n        return tree.map((item: ITreeMenu) => {\n            const {\n                icon,\n                label,\n                route,\n                name,\n                children,\n                parentName,\n                meta,\n                options,\n            } = item;\n            const isOpen = open[item.key || \"\"] || false;\n\n            const isSelected = item.key === selectedKey;\n            const isNested = !(\n                pickNotDeprecated(meta?.parent, options?.parent, parentName) ===\n                undefined\n            );\n\n            if (children.length > 0) {\n                return (\n                    <CanAccess\n                        key={item.key}\n                        resource={name.toLowerCase()}\n                        action=\"list\"\n                        params={{\n                            resource: item,\n                        }}\n                    >\n                        <div key={item.key}>\n                            <Tooltip\n                                title={label ?? name}\n                                placement=\"right\"\n                                disableHoverListener={!siderCollapsed}\n                                arrow\n                            >\n                                <ListItemButton\n                                    onClick={() => {\n                                        if (siderCollapsed) {\n                                            setSiderCollapsed(false);\n                                            if (!isOpen) {\n                                                handleClick(item.key || \"\");\n                                            }\n                                        } else {\n                                            handleClick(item.key || \"\");\n                                        }\n                                    }}\n                                    sx={{\n                                        pl: isNested ? 4 : 2,\n                                        justifyContent: \"center\",\n                                        marginTop: \"8px\",\n                                    }}\n                                >\n                                    <ListItemIcon\n                                        sx={{\n                                            justifyContent: \"center\",\n                                            minWidth: \"24px\",\n                                            transition: \"margin-right 0.3s\",\n                                            marginRight: siderCollapsed\n                                                ? \"0px\"\n                                                : \"12px\",\n                                            color: \"currentColor\",\n                                        }}\n                                    >\n                                        {icon ?? <ListOutlined />}\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={label}\n                                        primaryTypographyProps={{\n                                            noWrap: true,\n                                            fontSize: \"14px\",\n                                        }}\n                                    />\n                                    {isOpen ? (\n                                        <ExpandLess\n                                            sx={{\n                                                color: \"text.icon\",\n                                            }}\n                                        />\n                                    ) : (\n                                        <ExpandMore\n                                            sx={{\n                                                color: \"text.icon\",\n                                            }}\n                                        />\n                                    )}\n                                </ListItemButton>\n                            </Tooltip>\n                            {!siderCollapsed && (\n                                <Collapse\n                                    in={open[item.key || \"\"]}\n                                    timeout=\"auto\"\n                                    unmountOnExit\n                                >\n                                    <List component=\"div\" disablePadding>\n                                        {renderTreeView(children, selectedKey)}\n                                    </List>\n                                </Collapse>\n                            )}\n                        </div>\n                    </CanAccess>\n                );\n            }\n\n            const linkStyle: CSSProperties =\n                activeItemDisabled && isSelected\n                    ? { pointerEvents: \"none\" }\n                    : {};\n\n            return (\n                <CanAccess\n                    key={item.key}\n                    resource={name.toLowerCase()}\n                    action=\"list\"\n                    params={{ resource: item }}\n                >\n                    <Tooltip\n                        title={label ?? name}\n                        placement=\"right\"\n                        disableHoverListener={!siderCollapsed}\n                        arrow\n                    >\n                        <ListItemButton\n                            component={ActiveLink}\n                            to={route}\n                            selected={isSelected}\n                            style={linkStyle}\n                            onClick={() => {\n                                setMobileSiderOpen(false);\n                            }}\n                            sx={{\n                                pl: isNested ? 4 : 2,\n                                py: isNested ? 1.25 : 1,\n                                justifyContent: \"center\",\n                                color: isSelected\n                                    ? \"primary.main\"\n                                    : \"text.primary\",\n                            }}\n                        >\n                            <ListItemIcon\n                                sx={{\n                                    justifyContent: \"center\",\n                                    transition: \"margin-right 0.3s\",\n                                    marginRight: siderCollapsed\n                                        ? \"0px\"\n                                        : \"12px\",\n                                    minWidth: \"24px\",\n                                    color: \"currentColor\",\n                                }}\n                            >\n                                {icon ?? <ListOutlined />}\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={label}\n                                primaryTypographyProps={{\n                                    noWrap: true,\n                                    fontSize: \"14px\",\n                                }}\n                            />\n                        </ListItemButton>\n                    </Tooltip>\n                </CanAccess>\n            );\n        });\n    };\n\n    const dashboard = hasDashboard ? (\n        <CanAccess resource=\"dashboard\" action=\"list\">\n            <Tooltip\n                title={translate(\"dashboard.title\", \"Dashboard\")}\n                placement=\"right\"\n                disableHoverListener={!siderCollapsed}\n                arrow\n            >\n                <ListItemButton\n                    component={ActiveLink}\n                    to=\"/\"\n                    selected={selectedKey === \"/\"}\n                    onClick={() => {\n                        setMobileSiderOpen(false);\n                    }}\n                    sx={{\n                        pl: 2,\n                        py: 1,\n                        justifyContent: \"center\",\n                        color:\n                            selectedKey === \"/\"\n                                ? \"primary.main\"\n                                : \"text.primary\",\n                    }}\n                >\n                    <ListItemIcon\n                        sx={{\n                            justifyContent: \"center\",\n                            minWidth: \"24px\",\n                            transition: \"margin-right 0.3s\",\n                            marginRight: siderCollapsed ? \"0px\" : \"12px\",\n                            color: \"currentColor\",\n                            fontSize: \"14px\",\n                        }}\n                    >\n                        <Dashboard />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={translate(\"dashboard.title\", \"Dashboard\")}\n                        primaryTypographyProps={{\n                            noWrap: true,\n                            fontSize: \"14px\",\n                        }}\n                    />\n                </ListItemButton>\n            </Tooltip>\n        </CanAccess>\n    ) : null;\n\n    const handleLogout = () => {\n        if (warnWhen) {\n            const confirm = window.confirm(\n                t(\n                    \"warnWhenUnsavedChanges\",\n                    \"Are you sure you want to leave? You have unsaved changes.\",\n                ),\n            );\n\n            if (confirm) {\n                setWarnWhen(false);\n                mutateLogout();\n            }\n        } else {\n            mutateLogout();\n        }\n    };\n\n    const logout = isExistAuthentication && (\n        <Tooltip\n            title={t(\"buttons.logout\", \"Logout\")}\n            placement=\"right\"\n            disableHoverListener={!siderCollapsed}\n            arrow\n        >\n            <ListItemButton\n                key=\"logout\"\n                onClick={() => handleLogout()}\n                sx={{\n                    justifyContent: \"center\",\n                }}\n            >\n                <ListItemIcon\n                    sx={{\n                        justifyContent: \"center\",\n                        minWidth: \"24px\",\n                        transition: \"margin-right 0.3s\",\n                        marginRight: siderCollapsed ? \"0px\" : \"12px\",\n                        color: \"currentColor\",\n                    }}\n                >\n                    <Logout />\n                </ListItemIcon>\n                <ListItemText\n                    primary={t(\"buttons.logout\", \"Logout\")}\n                    primaryTypographyProps={{\n                        noWrap: true,\n                        fontSize: \"14px\",\n                    }}\n                />\n            </ListItemButton>\n        </Tooltip>\n    );\n\n    const items = renderTreeView(menuItems, selectedKey);\n\n    const renderSider = () => {\n        if (render) {\n            return render({\n                dashboard,\n                logout,\n                items,\n                collapsed: siderCollapsed,\n            });\n        }\n        return (\n            <>\n                {dashboard}\n                {items}\n                {logout}\n            </>\n        );\n    };\n\n    const drawer = (\n        <List\n            disablePadding\n            sx={{\n                flexGrow: 1,\n                paddingTop: \"16px\",\n            }}\n        >\n            {renderSider()}\n        </List>\n    );\n\n    return (\n        <>\n            <Box\n                sx={{\n                    width: { xs: drawerWidth() },\n                    display: {\n                        xs: \"none\",\n                        md: \"block\",\n                    },\n                    transition: \"width 0.3s ease\",\n                }}\n            />\n            <Box\n                component=\"nav\"\n                sx={{\n                    position: \"fixed\",\n                    zIndex: 1101,\n                    width: { sm: drawerWidth() },\n                    display: \"flex\",\n                }}\n            >\n                <Drawer\n                    variant=\"temporary\"\n                    elevation={2}\n                    open={mobileSiderOpen}\n                    onClose={() => setMobileSiderOpen(false)}\n                    ModalProps={{\n                        keepMounted: true, // Better open performance on mobile.\n                    }}\n                    sx={{\n                        display: {\n                            sm: \"block\",\n                            md: \"none\",\n                        },\n                    }}\n                >\n                    <Box\n                        sx={{\n                            width: drawerWidth(),\n                        }}\n                    >\n                        <Box\n                            sx={{\n                                height: 64,\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                paddingLeft: \"16px\",\n                                fontSize: \"14px\",\n                            }}\n                        >\n                            <RenderToTitle collapsed={false} />\n                        </Box>\n                        {drawer}\n                    </Box>\n                </Drawer>\n                <Drawer\n                    variant=\"permanent\"\n                    sx={{\n                        display: { xs: \"none\", md: \"block\" },\n                        \"& .MuiDrawer-paper\": {\n                            width: drawerWidth(),\n                            overflow: \"hidden\",\n                            transition:\n                                \"width 200ms cubic-bezier(0.4, 0, 0.6, 1) 0ms\",\n                        },\n                    }}\n                    open\n                >\n                    <Paper\n                        elevation={0}\n                        sx={{\n                            fontSize: \"14px\",\n                            width: \"100%\",\n                            height: 64,\n                            display: \"flex\",\n                            flexShrink: 0,\n                            alignItems: \"center\",\n                            justifyContent: siderCollapsed\n                                ? \"center\"\n                                : \"space-between\",\n                            paddingLeft: siderCollapsed ? 0 : \"16px\",\n                            paddingRight: siderCollapsed ? 0 : \"8px\",\n                            variant: \"outlined\",\n                            borderRadius: 0,\n                            borderBottom: (theme) =>\n                                `1px solid ${theme.palette.action.focus}`,\n                        }}\n                    >\n                        <RenderToTitle collapsed={siderCollapsed} />\n                        {!siderCollapsed && (\n                            <IconButton\n                                size=\"small\"\n                                onClick={() => setSiderCollapsed(true)}\n                            >\n                                {<ChevronLeft />}\n                            </IconButton>\n                        )}\n                    </Paper>\n                    <Box\n                        sx={{\n                            flexGrow: 1,\n                            overflowX: \"hidden\",\n                            overflowY: \"auto\",\n                        }}\n                    >\n                        {drawer}\n                    </Box>\n                </Drawer>\n            </Box>\n        </>\n    );\n};\n","import {\n    useSelect as useSelectCore,\n    HttpError,\n    UseSelectProps,\n    UseSelectReturnType,\n    BaseRecord,\n} from \"@refinedev/core\";\n\nimport type { AutocompleteProps } from \"@mui/material/Autocomplete\";\n\nimport isEqual from \"lodash-es/isEqual\";\nimport unionWith from \"lodash-es/unionWith\";\n\nexport type UseAutocompleteProps<TQueryFnData, TError, TData> = Pick<\n    UseSelectProps<TQueryFnData, TError, TData>,\n    \"resource\"\n> &\n    Omit<\n        UseSelectProps<TQueryFnData, TError, TData>,\n        \"optionLabel\" | \"optionValue\"\n    >;\n\ntype AutocompletePropsType<TQueryFnData> = Required<\n    Pick<\n        AutocompleteProps<TQueryFnData, boolean, boolean, boolean>,\n        \"options\" | \"loading\" | \"onInputChange\" | \"filterOptions\"\n    >\n>;\n\nexport type UseAutocompleteReturnType<TData extends BaseRecord> = Omit<\n    UseSelectReturnType<TData>,\n    \"options\"\n> & {\n    autocompleteProps: AutocompletePropsType<TData>;\n};\n\n/**\n * `useAutocomplete` hook is used to fetch data from the dataProvider and return the options for the select box.\n *\n * It uses `getList` method as query function from the dataProvider that is\n * passed to {@link https://refine.dev/docs/api-reference/core/components/refine-config `<Refine>`}.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/hooks/useAutocomplete/} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useAutocomplete = <\n    TQueryFnData extends BaseRecord = any,\n    TError extends HttpError = HttpError,\n    TData extends BaseRecord = TQueryFnData,\n>(\n    props: UseAutocompleteProps<TQueryFnData, TError, TData>,\n): UseAutocompleteReturnType<TData> => {\n    const { queryResult, defaultValueQueryResult, onSearch, overtime } =\n        useSelectCore<TQueryFnData, TError, TData>(props);\n\n    return {\n        autocompleteProps: {\n            options: unionWith(\n                queryResult.data?.data || [],\n                defaultValueQueryResult.data?.data || [],\n                isEqual,\n            ),\n            loading:\n                queryResult.isFetching || defaultValueQueryResult.isFetching,\n            onInputChange: (event, value) => {\n                if (event?.type === \"change\") {\n                    onSearch(value);\n                } else if (event?.type === \"click\") {\n                    onSearch(\"\");\n                }\n            },\n            filterOptions: (x) => x,\n        },\n        onSearch,\n        queryResult,\n        defaultValueQueryResult,\n        overtime,\n    };\n};\n","import {\n    BaseRecord,\n    CrudFilters,\n    HttpError,\n    Pagination,\n    pickNotDeprecated,\n    Prettify,\n    useLiveMode,\n    useTable as useTableCore,\n    useTableProps as useTablePropsCore,\n    useTableReturnType as useTableReturnTypeCore,\n} from \"@refinedev/core\";\nimport { useState } from \"react\";\n\nimport type {\n    DataGridProps,\n    GridFilterModel,\n    GridSortModel,\n} from \"@mui/x-data-grid\";\n\nimport { darken, useTheme } from \"@mui/material/styles\";\n\nimport differenceWith from \"lodash-es/differenceWith\";\nimport isEqual from \"lodash-es/isEqual\";\n\nimport {\n    transformCrudFiltersToFilterModel,\n    transformCrudSortingToSortModel,\n    transformFilterModelToCrudFilters,\n    transformSortModelToCrudSorting,\n} from \"@definitions\";\n\ntype DataGridPropsType = Required<\n    Pick<\n        DataGridProps,\n        | \"rows\"\n        | \"loading\"\n        | \"rowCount\"\n        | \"sortingMode\"\n        | \"sortModel\"\n        | \"onSortModelChange\"\n        | \"filterMode\"\n        | \"onFilterModelChange\"\n        | \"sx\"\n        | \"disableRowSelectionOnClick\"\n        | \"onStateChange\"\n        | \"paginationMode\"\n    >\n> &\n    Pick<\n        DataGridProps,\n        \"paginationModel\" | \"onPaginationModelChange\" | \"filterModel\"\n    >;\n\nexport type UseDataGridProps<TQueryFnData, TError, TSearchVariables, TData> =\n    Omit<\n        useTablePropsCore<TQueryFnData, TError, TData>,\n        \"pagination\" | \"filters\"\n    > & {\n        onSearch?: (\n            data: TSearchVariables,\n        ) => CrudFilters | Promise<CrudFilters>;\n        pagination?: Prettify<\n            Omit<Pagination, \"pageSize\"> & {\n                /**\n                 * Initial number of items per page\n                 * @default 25\n                 */\n                pageSize?: number;\n            }\n        >;\n        filters?: Prettify<\n            Omit<\n                NonNullable<\n                    useTablePropsCore<TQueryFnData, TError, TData>[\"filters\"]\n                >,\n                \"defaultBehavior\"\n            > & {\n                /**\n                 * Default behavior of the `setFilters` function\n                 * @default \"replace\"\n                 */\n                defaultBehavior?: \"replace\" | \"merge\";\n            }\n        >;\n    };\n\nexport type UseDataGridReturnType<\n    TData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n> = useTableReturnTypeCore<TData, TError> & {\n    dataGridProps: DataGridPropsType;\n    search: (value: TSearchVariables) => Promise<void>;\n};\n\n/**\n * By using useDataGrid, you are able to get properties that are compatible with\n * Material UI {@link https://mui.com/x/react-data-grid/ `<DataGrid>`} component.\n * All features such as sorting, filtering and pagination comes as out of box.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/hooks/useDataGrid/} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TSearchVariables - Values for search params\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport function useDataGrid<\n    TQueryFnData extends BaseRecord = BaseRecord,\n    TError extends HttpError = HttpError,\n    TSearchVariables = unknown,\n    TData extends BaseRecord = TQueryFnData,\n>({\n    onSearch: onSearchProp,\n    initialCurrent,\n    initialPageSize = 25,\n    pagination,\n    hasPagination = true,\n    initialSorter,\n    permanentSorter,\n    defaultSetFilterBehavior = \"replace\",\n    initialFilter,\n    permanentFilter,\n    filters: filtersFromProp,\n    sorters: sortersFromProp,\n    syncWithLocation: syncWithLocationProp,\n    resource: resourceFromProp,\n    successNotification,\n    errorNotification,\n    queryOptions,\n    liveMode: liveModeFromProp,\n    onLiveEvent,\n    liveParams,\n    meta,\n    metaData,\n    dataProviderName,\n    overtimeOptions,\n}: UseDataGridProps<\n    TQueryFnData,\n    TError,\n    TSearchVariables,\n    TData\n> = {}): UseDataGridReturnType<TData, TError, TSearchVariables> {\n    const theme = useTheme();\n    const liveMode = useLiveMode(liveModeFromProp);\n\n    const [columnsTypes, setColumnsType] = useState<Record<string, string>>();\n\n    const {\n        tableQueryResult,\n        current,\n        setCurrent,\n        pageSize,\n        setPageSize,\n        filters,\n        setFilters,\n        sorters,\n        setSorters,\n        sorter,\n        setSorter,\n        pageCount,\n        createLinkForSyncWithLocation,\n        overtime,\n    } = useTableCore<TQueryFnData, TError, TData>({\n        permanentSorter,\n        permanentFilter,\n        initialCurrent,\n        initialPageSize,\n        pagination,\n        hasPagination,\n        initialSorter,\n        initialFilter,\n        filters: filtersFromProp,\n        sorters: sortersFromProp,\n        syncWithLocation: syncWithLocationProp,\n        defaultSetFilterBehavior,\n        resource: resourceFromProp,\n        successNotification,\n        errorNotification,\n        queryOptions,\n        liveMode: liveModeFromProp,\n        onLiveEvent,\n        liveParams,\n        meta: pickNotDeprecated(meta, metaData),\n        metaData: pickNotDeprecated(meta, metaData),\n        dataProviderName,\n        overtimeOptions,\n    });\n\n    const [muiCrudFilters, setMuiCrudFilters] = useState<CrudFilters>(filters);\n\n    const { data, isFetched, isLoading } = tableQueryResult;\n\n    const isServerSideFilteringEnabled =\n        (filtersFromProp?.mode || \"server\") === \"server\";\n    const isServerSideSortingEnabled =\n        (sortersFromProp?.mode || \"server\") === \"server\";\n    const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n    const isPaginationEnabled =\n        (pagination?.mode ?? hasPaginationString) !== \"off\";\n\n    const preferredPermanentSorters =\n        pickNotDeprecated(sortersFromProp?.permanent, permanentSorter) ?? [];\n    const preferredPermanentFilters =\n        pickNotDeprecated(filtersFromProp?.permanent, permanentFilter) ?? [];\n\n    const handlePageChange = (page: number) => {\n        if (isPaginationEnabled) {\n            setCurrent(page + 1);\n        }\n    };\n    const handlePageSizeChange = (pageSize: number) => {\n        if (isPaginationEnabled) {\n            setPageSize(pageSize);\n        }\n    };\n\n    const handleSortModelChange = (sortModel: GridSortModel) => {\n        const crudSorting = transformSortModelToCrudSorting(sortModel);\n        setSorters(crudSorting);\n    };\n\n    const handleFilterModelChange = (filterModel: GridFilterModel) => {\n        const crudFilters = transformFilterModelToCrudFilters(filterModel);\n        setMuiCrudFilters(crudFilters);\n        setFilters(crudFilters.filter((f) => f.value !== \"\"));\n        if (isPaginationEnabled) {\n            setCurrent(1);\n        }\n    };\n\n    const search = async (value: TSearchVariables) => {\n        if (onSearchProp) {\n            const searchFilters = await onSearchProp(value);\n            setMuiCrudFilters(searchFilters);\n            setFilters(searchFilters.filter((f) => f.value !== \"\"));\n            if (isPaginationEnabled) {\n                setCurrent(1);\n            }\n        }\n    };\n\n    const dataGridPaginationValues = (): Pick<\n        DataGridProps,\n        \"paginationModel\" | \"onPaginationModelChange\"\n    > &\n        Required<Pick<DataGridProps, \"paginationMode\">> => {\n        if (isPaginationEnabled) {\n            return {\n                paginationMode: \"server\" as const,\n                paginationModel: {\n                    page: current - 1,\n                    pageSize,\n                },\n                onPaginationModelChange: (model) => {\n                    handlePageChange(model.page);\n                    handlePageSizeChange(model.pageSize);\n                },\n            };\n        }\n\n        return {\n            paginationMode: \"client\" as const,\n        };\n    };\n\n    return {\n        tableQueryResult,\n        dataGridProps: {\n            disableRowSelectionOnClick: true,\n            rows: data?.data || [],\n            loading: liveMode === \"auto\" ? isLoading : !isFetched,\n            rowCount: data?.total || 0,\n            ...dataGridPaginationValues(),\n            sortingMode: isServerSideSortingEnabled ? \"server\" : \"client\",\n            sortModel: transformCrudSortingToSortModel(\n                differenceWith(sorters, preferredPermanentSorters, isEqual),\n            ),\n            onSortModelChange: handleSortModelChange,\n            filterMode: isServerSideFilteringEnabled ? \"server\" : \"client\",\n            filterModel: transformCrudFiltersToFilterModel(\n                differenceWith(\n                    muiCrudFilters,\n                    preferredPermanentFilters,\n                    isEqual,\n                ),\n                columnsTypes,\n            ),\n            onFilterModelChange: handleFilterModelChange,\n            onStateChange: (state) => {\n                const newColumnsTypes = Object.fromEntries(\n                    Object.entries(state.columns.lookup).map(([key, value]) => {\n                        return [key, (value as any).type];\n                    }),\n                );\n                const isStateChanged = !isEqual(newColumnsTypes, columnsTypes);\n\n                if (isStateChanged) {\n                    setColumnsType(newColumnsTypes);\n                }\n            },\n            sx: {\n                border: \"none\",\n                \"& .MuiDataGrid-columnHeaders\": {\n                    background: darken(theme.palette.background.paper, 0.05),\n                    borderBottom: `1px solid ${darken(\n                        theme.palette.background.paper,\n                        0.1,\n                    )}`,\n                },\n                \"& .MuiDataGrid-cell\": {\n                    borderBottom: `1px solid ${darken(\n                        theme.palette.background.paper,\n                        0.05,\n                    )}`,\n                },\n            },\n        },\n        current,\n        setCurrent,\n        pageSize,\n        setPageSize,\n        pageCount,\n        sorters,\n        setSorters,\n        sorter,\n        setSorter,\n        filters,\n        setFilters,\n        search,\n        createLinkForSyncWithLocation,\n        overtime,\n    };\n}\n","import type {\n    GridFilterItem,\n    GridFilterModel,\n    GridSortModel,\n} from \"@mui/x-data-grid\";\nimport { GridLogicOperator } from \"@mui/x-data-grid\";\n\nimport {\n    CrudFilters,\n    CrudOperators,\n    CrudSorting,\n    LogicalFilter,\n} from \"@refinedev/core\";\n\nexport const transformSortModelToCrudSorting = (\n    sortModel: GridSortModel,\n): CrudSorting => {\n    const sorter = sortModel.map(({ field, sort }) => ({\n        field,\n        order: sort || \"asc\",\n    }));\n    return sorter;\n};\n\nexport const transformCrudSortingToSortModel = (\n    crudSorting: CrudSorting,\n): GridSortModel => {\n    const sortModel = crudSorting.map(({ field, order }) => ({\n        field,\n        sort: order,\n    }));\n    return sortModel;\n};\n\nexport const transformMuiOperatorToCrudOperator = (\n    operatorValue?: string,\n): Exclude<CrudOperators, \"or\"> => {\n    if (!operatorValue) {\n        return \"eq\";\n    }\n\n    switch (operatorValue) {\n        case \"equals\":\n        case \"is\":\n        case \"=\":\n            return \"eq\";\n        case \"!=\":\n        case \"not\":\n            return \"ne\";\n        case \"contains\":\n            return \"contains\";\n        case \"isAnyOf\":\n            return \"in\";\n        case \">\":\n        case \"after\":\n            return \"gt\";\n        case \">=\":\n        case \"onOrAfter\":\n            return \"gte\";\n        case \"<\":\n        case \"before\":\n            return \"lt\";\n        case \"<=\":\n        case \"onOrBefore\":\n            return \"lte\";\n        case \"startsWith\":\n            return \"startswith\";\n        case \"endsWith\":\n            return \"endswith\";\n        case \"isEmpty\":\n            return \"null\";\n        case \"isNotEmpty\":\n            return \"nnull\";\n        default:\n            return operatorValue as Exclude<CrudOperators, \"or\">;\n    }\n};\n\nexport const transformFilterModelToCrudFilters = ({\n    items,\n    logicOperator,\n}: GridFilterModel): CrudFilters => {\n    const filters = items.map(({ field, value, operator }) => {\n        return {\n            field: field,\n            value: [\"isEmpty\", \"isNotEmpty\"].includes(operator)\n                ? true\n                : value ?? \"\",\n            operator: transformMuiOperatorToCrudOperator(operator),\n        };\n    });\n\n    if (logicOperator === GridLogicOperator.Or) {\n        return [{ operator: \"or\", value: filters }];\n    }\n    return filters;\n};\n\nexport const transformCrudOperatorToMuiOperator = (\n    operator: CrudOperators,\n    columnType?: string,\n): string => {\n    switch (columnType) {\n        case \"number\":\n            switch (operator) {\n                case \"eq\":\n                    return \"=\";\n                case \"ne\":\n                    return \"!=\";\n                case \"gt\":\n                    return \">\";\n                case \"gte\":\n                    return \">=\";\n                case \"lt\":\n                    return \"<\";\n                case \"lte\":\n                    return \"<=\";\n                case \"null\":\n                    return \"isEmpty\";\n                case \"nnull\":\n                    return \"isNotEmpty\";\n                case \"in\":\n                    return \"isAnyOf\";\n                default:\n                    return operator;\n            }\n        case \"singleSelect\":\n        case \"boolean\":\n            switch (operator) {\n                case \"eq\":\n                    return \"is\";\n                default:\n                    return operator;\n            }\n        case undefined:\n        case \"string\":\n            switch (operator) {\n                case \"eq\":\n                    return \"equals\";\n                case \"contains\":\n                    return \"contains\";\n                case \"null\":\n                    return \"isEmpty\";\n                case \"nnull\":\n                    return \"isNotEmpty\";\n                case \"startswith\":\n                    return \"startsWith\";\n                case \"endswith\":\n                    return \"endsWith\";\n                case \"in\":\n                    return \"isAnyOf\";\n                default:\n                    return operator;\n            }\n        case \"date\":\n        case \"dateTime\":\n            switch (operator) {\n                case \"eq\":\n                    return \"is\";\n                case \"ne\":\n                    return \"not\";\n                case \"gt\":\n                    return \"after\";\n                case \"gte\":\n                    return \"onOrAfter\";\n                case \"lt\":\n                    return \"before\";\n                case \"lte\":\n                    return \"onOrBefore\";\n                case \"null\":\n                    return \"isEmpty\";\n                case \"nnull\":\n                    return \"isNotEmpty\";\n                default:\n                    return operator;\n            }\n        default:\n            return operator;\n    }\n};\n\nexport const transformCrudFiltersToFilterModel = (\n    crudFilters: CrudFilters,\n    columnsType?: Record<string, string>,\n): GridFilterModel | undefined => {\n    const gridFilterItems: GridFilterItem[] = [];\n\n    const isExistOrFilter = crudFilters.some(\n        (filter) => filter.operator === \"or\",\n    );\n\n    if (columnsType) {\n        if (isExistOrFilter) {\n            const orLogicalFilters = crudFilters.find(\n                (filter) => filter.operator === \"or\",\n            )?.value as LogicalFilter[];\n\n            orLogicalFilters.map(({ field, value, operator }) => {\n                const columnType = columnsType[field];\n\n                gridFilterItems.push({\n                    field: field,\n                    operator: transformCrudOperatorToMuiOperator(\n                        operator,\n                        columnType,\n                    ),\n                    value: value === \"\" ? undefined : value,\n                    id: field + operator,\n                });\n            });\n        } else {\n            (crudFilters as LogicalFilter[]).map(\n                ({ field, value, operator }) => {\n                    const columnType = columnsType[field];\n\n                    gridFilterItems.push({\n                        field: field,\n                        operator: transformCrudOperatorToMuiOperator(\n                            operator,\n                            columnType,\n                        ),\n                        value: value === \"\" ? undefined : value,\n                        id: field + operator,\n                    });\n                },\n            );\n        }\n    }\n\n    return {\n        items: gridFilterItems,\n        // If there is \"or\" filter, default link operator is \"or\"\n        logicOperator: isExistOrFilter\n            ? GridLogicOperator.Or\n            : GridLogicOperator.And,\n    };\n};\n","import { useContext } from \"react\";\n\nimport { ThemedLayoutContext } from \"../../contexts/themedLayoutContext\";\n\nexport type UseSiderVisibleType = {\n    siderVisible: boolean;\n    drawerSiderVisible: boolean;\n    setSiderVisible: (visible: boolean) => void;\n    setDrawerSiderVisible: (visible: boolean) => void;\n};\n\n/**\n * @deprecated Please use `useThemedLayoutContext` instead.\n */\nexport const useSiderVisible = (): UseSiderVisibleType => {\n    const {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    } = useContext(ThemedLayoutContext);\n\n    return {\n        siderVisible: mobileSiderOpen,\n        setSiderVisible: setMobileSiderOpen,\n        drawerSiderVisible: !siderCollapsed,\n        setDrawerSiderVisible: (visible) => setSiderCollapsed(!visible),\n    };\n};\n","import { useContext } from \"react\";\n\nimport { ThemedLayoutContext } from \"../../contexts\";\nimport { IThemedLayoutContext } from \"../../contexts/themedLayoutContext/IThemedLayoutContext\";\n\nexport type UseThemedLayoutContextType = IThemedLayoutContext;\n\nexport const useThemedLayoutContext = (): UseThemedLayoutContextType => {\n    const {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    } = useContext(ThemedLayoutContext);\n\n    return {\n        mobileSiderOpen,\n        siderCollapsed,\n        setMobileSiderOpen,\n        setSiderCollapsed,\n    };\n};\n","import React from \"react\";\nimport {\n    useGetIdentity,\n    useActiveAuthProvider,\n    pickNotDeprecated,\n} from \"@refinedev/core\";\n\nimport AppBar from \"@mui/material/AppBar\";\nimport Stack from \"@mui/material/Stack\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Avatar from \"@mui/material/Avatar\";\n\nimport { RefineThemedLayoutV2HeaderProps } from \"../types\";\n\nimport { HamburgerMenu } from \"../hamburgerMenu\";\n\nexport const ThemedHeaderV2: React.FC<RefineThemedLayoutV2HeaderProps> = ({\n    isSticky,\n    sticky,\n}) => {\n    const authProvider = useActiveAuthProvider();\n    const { data: user } = useGetIdentity({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const prefferedSticky = pickNotDeprecated(sticky, isSticky) ?? true;\n\n    return (\n        <AppBar position={prefferedSticky ? \"sticky\" : \"relative\"}>\n            <Toolbar>\n                <HamburgerMenu />\n                <Stack\n                    direction=\"row\"\n                    width=\"100%\"\n                    justifyContent=\"flex-end\"\n                    alignItems=\"center\"\n                >\n                    <Stack\n                        direction=\"row\"\n                        gap=\"16px\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n                    >\n                        {user?.name && (\n                            <Typography\n                                variant=\"subtitle2\"\n                                data-testid=\"header-user-name\"\n                            >\n                                {user?.name}\n                            </Typography>\n                        )}\n                        {user?.avatar && (\n                            <Avatar src={user?.avatar} alt={user?.name} />\n                        )}\n                    </Stack>\n                </Stack>\n            </Toolbar>\n        </AppBar>\n    );\n};\n","import React from \"react\";\n\nimport IconButton from \"@mui/material/IconButton\";\nimport Menu from \"@mui/icons-material/Menu\";\n\nimport type { IconButtonProps } from \"@mui/material/IconButton\";\n\nimport { useThemedLayoutContext } from \"@hooks\";\n\nconst HamburgerIcon = (props: IconButtonProps) => (\n    <IconButton\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        edge=\"start\"\n        {...props}\n    >\n        <Menu />\n    </IconButton>\n);\n\nexport const HamburgerMenu: React.FC = () => {\n    const {\n        siderCollapsed,\n        setSiderCollapsed,\n        mobileSiderOpen,\n        setMobileSiderOpen,\n    } = useThemedLayoutContext();\n\n    return (\n        <>\n            <HamburgerIcon\n                onClick={() => setSiderCollapsed(!siderCollapsed)}\n                sx={{\n                    mr: 2,\n                    display: { xs: \"none\", md: \"flex\" },\n                    ...(!siderCollapsed && { display: \"none\" }),\n                }}\n            />\n            <HamburgerIcon\n                onClick={() => setMobileSiderOpen(!mobileSiderOpen)}\n                sx={{\n                    mr: 2,\n                    display: { xs: \"flex\", md: \"none\" },\n                    ...(mobileSiderOpen && { display: \"none\" }),\n                }}\n            />\n        </>\n    );\n};\n","import React from \"react\";\nimport { useRouterContext, useLink, useRouterType } from \"@refinedev/core\";\n\nimport MuiLink from \"@mui/material/Link\";\nimport SvgIcon from \"@mui/material/SvgIcon\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { RefineLayoutThemedTitleProps } from \"../types\";\n\nconst defaultText = \"refine Project\";\n\nconst defaultIcon = (\n    <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        data-testid=\"refine-logo\"\n    >\n        <path\n            d=\"M12 9C13.6569 9 15 7.65685 15 6C15 4.34315 13.6569 3 12 3C10.3431 3 9 4.34315 9 6C9 7.65685 10.3431 9 12 9Z\"\n            fill=\"currentColor\"\n        />\n        <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM8 6C8 3.79086 9.79086 2 12 2C14.2091 2 16 3.79086 16 6V18C16 20.2091 14.2091 22 12 22C9.79086 22 8 20.2091 8 18V6Z\"\n            fill=\"currentColor\"\n        />\n    </svg>\n);\n\nexport const ThemedTitleV2: React.FC<RefineLayoutThemedTitleProps> = ({\n    collapsed,\n    wrapperStyles,\n    icon = defaultIcon,\n    text = defaultText,\n}) => {\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    return (\n        <MuiLink\n            to=\"/\"\n            component={ActiveLink}\n            underline=\"none\"\n            sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: \"12px\",\n                ...wrapperStyles,\n            }}\n        >\n            <SvgIcon height=\"24px\" width=\"24px\" color=\"primary\">\n                {icon}\n            </SvgIcon>\n            {!collapsed && (\n                <Typography\n                    variant=\"h6\"\n                    fontWeight={700}\n                    color=\"text.primary\"\n                    fontSize=\"inherit\"\n                    textOverflow=\"ellipsis\"\n                    overflow=\"hidden\"\n                >\n                    {text}\n                </Typography>\n            )}\n        </MuiLink>\n    );\n};\n","import * as React from \"react\";\nimport { LoginPageProps, useActiveAuthProvider } from \"@refinedev/core\";\nimport { useForm } from \"@refinedev/react-hook-form\";\n\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\n\nimport { BaseRecord, HttpError, useLogin, useTranslate } from \"@refinedev/core\";\n\ntype ILoginForm = {\n    username: string;\n    password: string;\n    remember?: boolean;\n};\n\n/**\n * @deprecated LoginPage is deprecated. Use AuthPage instead. @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page} for more details.\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#loginpage} for more details.\n */\nexport const LoginPage: React.FC<LoginPageProps> = () => {\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, ILoginForm>();\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login, isLoading } = useLogin<ILoginForm>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n    const translate = useTranslate();\n\n    return (\n        <>\n            <Box\n                component=\"div\"\n                sx={{\n                    background: `radial-gradient(50% 50% at 50% 50%, #63386A 0%, #310438 100%)`,\n                    backgroundSize: \"cover\",\n                }}\n            >\n                <Container\n                    component=\"main\"\n                    maxWidth=\"xs\"\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100vh\",\n                    }}\n                >\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <div>\n                            <img\n                                src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                                alt=\"Refine Logo\"\n                                style={{ maxWidth: 200 }}\n                            />\n                        </div>\n                        <Box mt={4}>\n                            <Card>\n                                <CardContent sx={{ paddingX: \"32px\" }}>\n                                    <Typography\n                                        component=\"h1\"\n                                        variant=\"h5\"\n                                        align=\"center\"\n                                        sx={{\n                                            fontWeight: \"700\",\n                                            margin: \"12px 0\",\n                                        }}\n                                    >\n                                        {translate(\n                                            \"pages.login.title\",\n                                            \"Sign in your account\",\n                                        )}\n                                    </Typography>\n                                    <Box\n                                        component=\"form\"\n                                        onSubmit={handleSubmit((data) => {\n                                            login(data);\n                                        })}\n                                        gap=\"16px\"\n                                    >\n                                        <TextField\n                                            {...register(\"username\", {\n                                                required: true,\n                                            })}\n                                            id=\"username\"\n                                            margin=\"normal\"\n                                            size=\"small\"\n                                            fullWidth\n                                            label={translate(\n                                                \"pages.login.username\",\n                                                \"Username\",\n                                            )}\n                                            name=\"username\"\n                                            autoComplete=\"username\"\n                                            autoFocus\n                                        />\n                                        <TextField\n                                            {...register(\"password\", {\n                                                required: true,\n                                            })}\n                                            id=\"password\"\n                                            size=\"small\"\n                                            margin=\"normal\"\n                                            fullWidth\n                                            name=\"password\"\n                                            label={translate(\n                                                \"pages.login.password\",\n                                                \"Password\",\n                                            )}\n                                            helperText={\n                                                errors?.password?.message\n                                            }\n                                            type=\"password\"\n                                            placeholder=\"●●●●●●●●\"\n                                            autoComplete=\"current-password\"\n                                        />\n                                        <Box\n                                            component=\"div\"\n                                            sx={{\n                                                display: \"flex\",\n                                                justifyContent: \"space-between\",\n                                                alignItems: \"center\",\n                                            }}\n                                        >\n                                            <FormControlLabel\n                                                sx={{\n                                                    span: {\n                                                        fontSize: \"12px\",\n                                                        color: \"text.secondary\",\n                                                    },\n                                                }}\n                                                color=\"secondary\"\n                                                control={\n                                                    <Checkbox\n                                                        size=\"small\"\n                                                        id=\"remember\"\n                                                        {...register(\n                                                            \"remember\",\n                                                        )}\n                                                    />\n                                                }\n                                                label={translate(\n                                                    \"pages.login.remember\",\n                                                    \"Remember me\",\n                                                )}\n                                            />\n                                            <Link\n                                                href=\"#\"\n                                                sx={{\n                                                    fontSize: \"12px\",\n                                                    textDecoration: \"none\",\n                                                }}\n                                            >\n                                                <Typography\n                                                    sx={{\n                                                        fontSize: \"12px\",\n                                                    }}\n                                                >\n                                                    {translate(\n                                                        \"pages.login.forgotPassword\",\n                                                        \"Forgot password?\",\n                                                    )}\n                                                </Typography>\n                                            </Link>\n                                        </Box>\n                                        <Button\n                                            type=\"submit\"\n                                            fullWidth\n                                            variant=\"contained\"\n                                            sx={{\n                                                my: \"8px\",\n                                                color: \"white\",\n                                            }}\n                                            disabled={isLoading}\n                                        >\n                                            {translate(\n                                                \"pages.login.signin\",\n                                                \"Sign in\",\n                                            )}\n                                        </Button>\n                                        <Box style={{ marginTop: 8 }}>\n                                            <Typography variant=\"subtitle2\">\n                                                {translate(\n                                                    \"pages.login.noAccount\",\n                                                    \"Don’t have an account?\",\n                                                )}{\" \"}\n                                                <Link\n                                                    underline=\"none\"\n                                                    href=\"#\"\n                                                    style={{\n                                                        fontWeight: \"bold\",\n                                                    }}\n                                                >\n                                                    {translate(\n                                                        \"pages.login.signup\",\n                                                        \"Sign up\",\n                                                    )}\n                                                </Link>\n                                            </Typography>\n                                        </Box>\n                                    </Box>\n                                </CardContent>\n                            </Card>\n                        </Box>\n                    </Box>\n                </Container>\n            </Box>\n        </>\n    );\n};\n","import * as React from \"react\";\nimport { RefineReadyPageProps } from \"@refinedev/ui-types\";\n\nimport Stack from \"@mui/material/Stack\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Link from \"@mui/material/Link\";\n\n/**\n * @deprecated `ReadyPage` is deprecated and will be removed in the next major release.\n */\nexport const ReadyPage: React.FC<RefineReadyPageProps> = () => {\n    const renderCode = (text: string) => (\n        <Typography\n            sx={{\n                backgroundColor: (theme) =>\n                    theme.palette.secondary.contrastText,\n                color: (theme) => theme.palette.secondary.main,\n                display: \"inline-block\",\n                fontFamily: \"monospace\",\n            }}\n        >\n            {text}\n        </Typography>\n    );\n    return (\n        <>\n            <Grid\n                container\n                sx={{\n                    backgroundColor: (theme) => theme.palette.secondary.main,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    height: \"100vh\",\n                    backgroundImage:\n                        \"url('https://refine.ams3.cdn.digitaloceanspaces.com/login-background/background.png')\",\n                    backgroundSize: \"cover\",\n                }}\n                p={3}\n            >\n                <Grid\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    flex={1}\n                    alignItems=\"center\"\n                    color={(theme) => theme.palette.primary.contrastText}\n                >\n                    <Typography display=\"flex\" justifyContent=\"center\">\n                        <img\n                            style={{ marginBottom: \"48px\" }}\n                            src=\"https://refine.ams3.cdn.digitaloceanspaces.com/logo/refine.svg\"\n                            alt=\"Refine Logo\"\n                        />\n                    </Typography>\n                    <Typography\n                        variant=\"h2\"\n                        fontWeight=\"bold\"\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                    >\n                        Welcome on board\n                    </Typography>\n                    <Typography variant=\"h5\" mt={2}>\n                        Your configuration is completed.\n                    </Typography>\n                    <Typography variant=\"h6\" mt={2}>\n                        Now you can get started by adding your resources to the{\" \"}\n                        {renderCode(`resources`)} property of{\" \"}\n                        {renderCode(`Refine`)}\n                    </Typography>\n                    <Grid\n                        item\n                        sm={12}\n                        mt={12}\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                    >\n                        <Stack\n                            spacing={2}\n                            direction={{ xs: \"column\", sm: \"row\" }}\n                        >\n                            <Link\n                                href=\"https://refine.dev\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                style={{\n                                    textDecoration: \"none\",\n                                }}\n                            >\n                                <Button variant=\"outlined\" fullWidth>\n                                    Documentation\n                                </Button>\n                            </Link>\n                            <Link\n                                href=\"https://refine.dev/examples\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                style={{\n                                    textDecoration: \"none\",\n                                }}\n                            >\n                                <Button variant=\"outlined\" fullWidth>\n                                    Examples\n                                </Button>\n                            </Link>\n                            <Link\n                                href=\"https://discord.gg/refine\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                style={{\n                                    textDecoration: \"none\",\n                                }}\n                            >\n                                <Button variant=\"outlined\" fullWidth>\n                                    Community\n                                </Button>\n                            </Link>\n                        </Stack>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n","import React from \"react\";\nimport { WelcomePage as WelcomePageFromCore } from \"@refinedev/core\";\n\n/**\n * It is a page that welcomes you after the configuration is completed.\n * @deprecated `WelcomePage` is deprecated. Use `WelcomePage` from `@refinedev/core` instead.\n */\nexport const WelcomePage: React.FC = () => {\n    return <WelcomePageFromCore />;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useGo, useResource, useRouterType } from \"@refinedev/core\";\nimport { RefineErrorPageProps } from \"@refinedev/ui-types\";\nimport { useNavigation, useTranslate } from \"@refinedev/core\";\n\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\n\nimport Info from \"@mui/icons-material/Info\";\n\nexport const ErrorComponent: React.FC<RefineErrorPageProps> = () => {\n    const [errorMessage, setErrorMessage] = useState<string>();\n    const { push } = useNavigation();\n    const go = useGo();\n    const routerType = useRouterType();\n\n    const { resource, action } = useResource();\n\n    const translate = useTranslate();\n\n    useEffect(() => {\n        if (resource && action) {\n            setErrorMessage(\n                translate(\n                    \"pages.error.info\",\n                    {\n                        action,\n                        resource: resource?.name,\n                    },\n                    `You may have forgotten to add the \"${action}\" component to \"${resource?.name}\" resource.`,\n                ),\n            );\n        }\n    }, [action, resource]);\n\n    return (\n        <Grid\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            mt={20}\n        >\n            <Grid\n                container\n                direction=\"column\"\n                display=\"flex\"\n                alignItems=\"center\"\n            >\n                <Typography variant=\"h1\">404</Typography>\n                <Stack direction=\"row\" spacing=\"2\">\n                    <Typography>\n                        {translate(\n                            \"pages.error.404\",\n                            \"Sorry, the page you visited does not exist.\",\n                        )}\n                    </Typography>\n\n                    {errorMessage && (\n                        <Tooltip title={errorMessage}>\n                            <Info data-testid=\"error-component-tooltip\" />\n                        </Tooltip>\n                    )}\n                </Stack>\n                <Button\n                    onClick={() => {\n                        if (routerType === \"legacy\") {\n                            push(\"/\");\n                        } else {\n                            go({ to: \"/\" });\n                        }\n                    }}\n                >\n                    {translate(\"pages.error.backHome\", \"Back Home\")}\n                </Button>\n            </Grid>\n        </Grid>\n    );\n};\n","import React from \"react\";\nimport type { BoxProps } from \"@mui/material/Box\";\nimport type { CardProps } from \"@mui/material/Card\";\n\nimport { AuthPageProps, RegisterFormTypes } from \"@refinedev/core\";\n\nimport { UseFormProps } from \"@refinedev/react-hook-form\";\n\nimport {\n    LoginPage,\n    RegisterPage,\n    ForgotPasswordPage,\n    UpdatePasswordPage,\n} from \"./components\";\n\nexport interface FormPropsType extends UseFormProps {\n    onSubmit?: (values: RegisterFormTypes) => void;\n}\n\nexport type AuthProps = AuthPageProps<BoxProps, CardProps, FormPropsType>;\n\n/**\n * **refine** has a default auth page form served on the `/login` route when the `authProvider` configuration is provided.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/} for more details.\n */\nexport const AuthPage: React.FC<AuthProps> = (props) => {\n    const { type } = props;\n    const renderView = () => {\n        switch (type) {\n            case \"register\":\n                return <RegisterPage {...props} />;\n            case \"forgotPassword\":\n                return <ForgotPasswordPage {...props} />;\n            case \"updatePassword\":\n                return <UpdatePasswordPage {...props} />;\n            default:\n                return <LoginPage {...props} />;\n        }\n    };\n\n    return <>{renderView()}</>;\n};\n","import * as React from \"react\";\nimport {\n    LoginPageProps,\n    LoginFormTypes,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport { useForm } from \"@refinedev/react-hook-form\";\nimport { FormProvider } from \"react-hook-form\";\n\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Divider from \"@mui/material/Divider\";\nimport MuiLink from \"@mui/material/Link\";\nimport Stack from \"@mui/material/Stack\";\n\nimport type { BoxProps } from \"@mui/material/Box\";\nimport type { CardContentProps } from \"@mui/material/CardContent\";\n\nimport {\n    BaseRecord,\n    HttpError,\n    useLogin,\n    useTranslate,\n    useRouterContext,\n    useRouterType,\n    useLink,\n} from \"@refinedev/core\";\nimport { layoutStyles, titleStyles } from \"../styles\";\n\nimport { FormPropsType } from \"../../index\";\nimport { ThemedTitle } from \"@components\";\n\ntype LoginProps = LoginPageProps<BoxProps, CardContentProps, FormPropsType>;\n\n/**\n * login will be used as the default type of the <AuthPage> component. The login page will be used to log in to the system.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#login} for more details.\n */\nexport const LoginPage: React.FC<LoginProps> = ({\n    providers,\n    registerLink,\n    forgotPasswordLink,\n    rememberMe,\n    contentProps,\n    wrapperProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const methods = useForm<BaseRecord, HttpError, LoginFormTypes>({\n        ...useFormProps,\n    });\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = methods;\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: login, isLoading } = useLogin<LoginFormTypes>({\n        v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? (\n                    <ThemedTitle\n                        collapsed={false}\n                        wrapperStyles={{\n                            gap: \"8px\",\n                        }}\n                    />\n                )}\n            </div>\n        );\n\n    const renderProviders = () => {\n        if (providers && providers.length > 0) {\n            return (\n                <>\n                    <Stack spacing={1}>\n                        {providers.map((provider: any) => {\n                            return (\n                                <Button\n                                    key={provider.name}\n                                    variant=\"outlined\"\n                                    fullWidth\n                                    sx={{\n                                        color: \"primary.light\",\n                                        borderColor: \"primary.light\",\n                                        textTransform: \"none\",\n                                    }}\n                                    onClick={() =>\n                                        login({ providerName: provider.name })\n                                    }\n                                    startIcon={provider.icon}\n                                >\n                                    {provider.label}\n                                </Button>\n                            );\n                        })}\n                    </Stack>\n                    <Divider\n                        sx={{\n                            fontSize: \"12px\",\n                            marginY: \"16px\",\n                        }}\n                    >\n                        {translate(\"pages.login.divider\", \"or\")}\n                    </Divider>\n                </>\n            );\n        }\n        return null;\n    };\n\n    const Content = (\n        <Card {...(contentProps ?? {})}>\n            <CardContent sx={{ p: \"32px\", \"&:last-child\": { pb: \"32px\" } }}>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                    align=\"center\"\n                    style={titleStyles}\n                    color=\"primary\"\n                    fontWeight={700}\n                >\n                    {translate(\"pages.login.title\", \"Sign in to your account\")}\n                </Typography>\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => {\n                        if (onSubmit) {\n                            return onSubmit(data);\n                        }\n\n                        return login(data);\n                    })}\n                >\n                    {renderProviders()}\n                    <TextField\n                        {...register(\"email\", {\n                            required: true,\n                        })}\n                        id=\"email\"\n                        margin=\"normal\"\n                        fullWidth\n                        label={translate(\"pages.login.fields.email\", \"Email\")}\n                        error={!!errors.email}\n                        name=\"email\"\n                        type=\"email\"\n                        autoComplete=\"email\"\n                        sx={{\n                            mt: 0,\n                        }}\n                    />\n                    <TextField\n                        {...register(\"password\", {\n                            required: true,\n                        })}\n                        id=\"password\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"password\"\n                        label={translate(\n                            \"pages.login.fields.password\",\n                            \"Password\",\n                        )}\n                        helperText={errors?.password?.message}\n                        error={!!errors.password}\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        autoComplete=\"current-password\"\n                        sx={{\n                            mb: 0,\n                        }}\n                    />\n\n                    <Box\n                        component=\"div\"\n                        sx={{\n                            mt: \"24px\",\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        {rememberMe ?? (\n                            <FormControlLabel\n                                sx={{\n                                    span: {\n                                        fontSize: \"14px\",\n                                        color: \"text.secondary\",\n                                    },\n                                }}\n                                color=\"secondary\"\n                                control={\n                                    <Checkbox\n                                        size=\"small\"\n                                        id=\"remember\"\n                                        {...register(\"remember\")}\n                                    />\n                                }\n                                label={translate(\n                                    \"pages.login.buttons.rememberMe\",\n                                    \"Remember me\",\n                                )}\n                            />\n                        )}\n                        {forgotPasswordLink ?? (\n                            <MuiLink\n                                variant=\"body2\"\n                                color=\"primary\"\n                                fontSize=\"12px\"\n                                component={ActiveLink}\n                                underline=\"none\"\n                                to=\"/forgot-password\"\n                            >\n                                {translate(\n                                    \"pages.login.buttons.forgotPassword\",\n                                    \"Forgot password?\",\n                                )}\n                            </MuiLink>\n                        )}\n                    </Box>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        disabled={isLoading}\n                        sx={{ mt: \"24px\" }}\n                    >\n                        {translate(\"pages.login.signin\", \"Sign in\")}\n                    </Button>\n                    {registerLink ?? (\n                        <Box\n                            sx={{\n                                mt: \"24px\",\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                            }}\n                        >\n                            <Typography\n                                textAlign=\"center\"\n                                variant=\"body2\"\n                                component=\"span\"\n                                fontSize=\"12px\"\n                            >\n                                {translate(\n                                    \"pages.login.buttons.noAccount\",\n                                    \"Don’t have an account?\",\n                                )}\n                            </Typography>\n                            <MuiLink\n                                ml=\"4px\"\n                                fontSize=\"12px\"\n                                variant=\"body2\"\n                                color=\"primary\"\n                                component={ActiveLink}\n                                underline=\"none\"\n                                to=\"/register\"\n                                fontWeight=\"bold\"\n                            >\n                                {translate(\"pages.login.signup\", \"Sign up\")}\n                            </MuiLink>\n                        </Box>\n                    )}\n                </Box>\n            </CardContent>\n        </Card>\n    );\n\n    return (\n        <FormProvider {...methods}>\n            <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n                <Container\n                    component=\"main\"\n                    maxWidth=\"xs\"\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100vh\",\n                    }}\n                >\n                    <Box\n                        sx={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        {renderContent ? (\n                            renderContent(Content, PageTitle)\n                        ) : (\n                            <>\n                                {PageTitle}\n                                {Content}\n                            </>\n                        )}\n                    </Box>\n                </Container>\n            </Box>\n        </FormProvider>\n    );\n};\n","import { CSSProperties } from \"react\";\n\nexport const layoutStyles: CSSProperties = {};\n\nexport const titleStyles: CSSProperties = {\n    textAlign: \"center\",\n    fontSize: \"24px\",\n    marginBottom: \"24px\",\n    overflowWrap: \"break-word\",\n    hyphens: \"manual\",\n    textOverflow: \"unset\",\n    whiteSpace: \"pre-wrap\",\n};\n","import * as React from \"react\";\nimport {\n    RegisterFormTypes,\n    RegisterPageProps,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\nimport { useForm } from \"@refinedev/react-hook-form\";\n\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Divider from \"@mui/material/Divider\";\nimport Stack from \"@mui/material/Stack\";\nimport MuiLink from \"@mui/material/Link\";\n\nimport type { BoxProps } from \"@mui/material/Box\";\nimport type { CardContentProps } from \"@mui/material/CardContent\";\n\nimport {\n    BaseRecord,\n    HttpError,\n    useTranslate,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    useRegister,\n} from \"@refinedev/core\";\n\nimport { layoutStyles, titleStyles } from \"../styles\";\nimport { FormPropsType } from \"../../index\";\nimport { ThemedTitle } from \"@components/themedLayout/title\";\n\ntype RegisterProps = RegisterPageProps<\n    BoxProps,\n    CardContentProps,\n    FormPropsType\n>;\n\n/**\n * The register page will be used to register new users. You can use the following props for the <AuthPage> component when the type is \"register\".\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#register} for more details.\n */\nexport const RegisterPage: React.FC<RegisterProps> = ({\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    providers,\n    formProps,\n    title,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, RegisterFormTypes>({\n        ...useFormProps,\n    });\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: registerMutate, isLoading } =\n        useRegister<RegisterFormTypes>({\n            v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n        });\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? (\n                    <ThemedTitle\n                        collapsed={false}\n                        wrapperStyles={{\n                            gap: \"8px\",\n                        }}\n                    />\n                )}\n            </div>\n        );\n\n    const renderProviders = () => {\n        if (providers && providers.length > 0) {\n            return (\n                <>\n                    <Stack spacing={1}>\n                        {providers.map((provider: any) => {\n                            return (\n                                <Button\n                                    key={provider.name}\n                                    color=\"secondary\"\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    sx={{\n                                        color: \"primary.light\",\n                                        borderColor: \"primary.light\",\n                                        textTransform: \"none\",\n                                    }}\n                                    onClick={() =>\n                                        registerMutate({\n                                            providerName: provider.name,\n                                        })\n                                    }\n                                    startIcon={provider.icon}\n                                >\n                                    {provider.label}\n                                </Button>\n                            );\n                        })}\n                    </Stack>\n                    <Divider sx={{ fontSize: 12, marginY: \"16px\" }}>\n                        {translate(\"pages.login.divider\", \"or\")}\n                    </Divider>\n                </>\n            );\n        }\n        return null;\n    };\n\n    const Content = (\n        <Card {...(contentProps ?? {})}>\n            <CardContent sx={{ p: \"32px\", \"&:last-child\": { pb: \"32px\" } }}>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                    align=\"center\"\n                    style={titleStyles}\n                    color=\"primary\"\n                    fontWeight={700}\n                >\n                    {translate(\n                        \"pages.register.title\",\n                        \"Sign up for your account\",\n                    )}\n                </Typography>\n                {renderProviders()}\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => {\n                        if (onSubmit) {\n                            return onSubmit(data);\n                        }\n\n                        return registerMutate(data);\n                    })}\n                >\n                    <TextField\n                        {...register(\"email\", {\n                            required: true,\n                            pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                message: translate(\n                                    \"pages.register.errors.validEmail\",\n                                    \"Invalid email address\",\n                                ),\n                            },\n                        })}\n                        id=\"email\"\n                        margin=\"normal\"\n                        fullWidth\n                        label={translate(\"pages.register.email\", \"Email\")}\n                        error={!!errors.email}\n                        helperText={\n                            errors[\"email\"] ? errors[\"email\"].message : \"\"\n                        }\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        sx={{\n                            mt: 0,\n                        }}\n                    />\n                    <TextField\n                        {...register(\"password\", {\n                            required: true,\n                        })}\n                        id=\"password\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"password\"\n                        label={translate(\n                            \"pages.register.fields.password\",\n                            \"Password\",\n                        )}\n                        helperText={\n                            errors[\"password\"] ? errors[\"password\"].message : \"\"\n                        }\n                        error={!!errors.password}\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        autoComplete=\"current-password\"\n                        sx={{\n                            mb: 0,\n                        }}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        disabled={isLoading}\n                        sx={{\n                            mt: \"24px\",\n                        }}\n                    >\n                        {translate(\"pages.register.signup\", \"Sign up\")}\n                    </Button>\n                    {loginLink ?? (\n                        <Box\n                            display=\"flex\"\n                            justifyContent=\"flex-end\"\n                            alignItems=\"center\"\n                            sx={{\n                                mt: \"24px\",\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n                            }}\n                        >\n                            <Typography\n                                variant=\"body2\"\n                                component=\"span\"\n                                fontSize=\"12px\"\n                            >\n                                {translate(\n                                    \"pages.login.buttons.haveAccount\",\n                                    \"Have an account?\",\n                                )}\n                            </Typography>\n                            <MuiLink\n                                ml=\"4px\"\n                                variant=\"body2\"\n                                color=\"primary\"\n                                component={ActiveLink}\n                                underline=\"none\"\n                                to=\"/login\"\n                                fontSize=\"12px\"\n                                fontWeight=\"bold\"\n                            >\n                                {translate(\"pages.login.signin\", \"Sign in\")}\n                            </MuiLink>\n                        </Box>\n                    )}\n                </Box>\n            </CardContent>\n        </Card>\n    );\n\n    return (\n        <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n            <Container\n                component=\"main\"\n                maxWidth=\"xs\"\n                sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    height: \"100vh\",\n                }}\n            >\n                {renderContent ? (\n                    renderContent(Content, PageTitle)\n                ) : (\n                    <>\n                        {PageTitle}\n                        {Content}\n                    </>\n                )}\n            </Container>\n        </Box>\n    );\n};\n","import Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport MuiLink from \"@mui/material/Link\";\n\nimport type { BoxProps } from \"@mui/material/Box\";\nimport type { CardContentProps } from \"@mui/material/CardContent\";\n\nimport {\n    ForgotPasswordFormTypes,\n    ForgotPasswordPageProps,\n} from \"@refinedev/core\";\nimport { useForm } from \"@refinedev/react-hook-form\";\nimport * as React from \"react\";\n\nimport {\n    BaseRecord,\n    HttpError,\n    useForgotPassword,\n    useLink,\n    useRouterContext,\n    useRouterType,\n    useTranslate,\n} from \"@refinedev/core\";\n\nimport { ThemedTitle } from \"@components\";\nimport { FormPropsType } from \"../../index\";\nimport { layoutStyles, titleStyles } from \"../styles\";\n\ntype ForgotPasswordProps = ForgotPasswordPageProps<\n    BoxProps,\n    CardContentProps,\n    FormPropsType\n>;\n\n/**\n * The forgotPassword type is a page that allows users to reset their passwords. You can use this page to reset your password.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#forgot-password} for more details.\n */\nexport const ForgotPasswordPage: React.FC<ForgotPasswordProps> = ({\n    loginLink,\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, ForgotPasswordFormTypes>({\n        ...useFormProps,\n    });\n\n    const { mutate, isLoading } = useForgotPassword<ForgotPasswordFormTypes>();\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? (\n                    <ThemedTitle\n                        collapsed={false}\n                        wrapperStyles={{\n                            gap: \"8px\",\n                        }}\n                    />\n                )}\n            </div>\n        );\n\n    const Content = (\n        <Card {...(contentProps ?? {})}>\n            <CardContent sx={{ p: \"32px\", \"&:last-child\": { pb: \"32px\" } }}>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                    align=\"center\"\n                    style={titleStyles}\n                    color=\"primary\"\n                    fontWeight={700}\n                >\n                    {translate(\n                        \"pages.forgotPassword.title\",\n                        \"Forgot your password?\",\n                    )}\n                </Typography>\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => {\n                        if (onSubmit) {\n                            return onSubmit(data);\n                        }\n\n                        return mutate(data);\n                    })}\n                >\n                    <TextField\n                        {...register(\"email\", {\n                            required: true,\n                            pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                message: translate(\n                                    \"pages.register.errors.validEmail\",\n                                    \"Invalid email address\",\n                                ),\n                            },\n                        })}\n                        id=\"email\"\n                        margin=\"normal\"\n                        fullWidth\n                        label={translate(\n                            \"pages.forgotPassword.fields.email\",\n                            \"Email\",\n                        )}\n                        name=\"email\"\n                        type=\"email\"\n                        error={!!errors.email}\n                        autoComplete=\"email\"\n                        sx={{\n                            m: 0,\n                        }}\n                    />\n                    {loginLink ?? (\n                        <Box textAlign=\"right\" sx={{ mt: \"24px\" }}>\n                            <Typography\n                                variant=\"body2\"\n                                component=\"span\"\n                                fontSize=\"12px\"\n                            >\n                                {translate(\n                                    \"pages.register.buttons.haveAccount\",\n                                    \"Have an account?\",\n                                )}\n                            </Typography>{\" \"}\n                            <MuiLink\n                                variant=\"body2\"\n                                component={ActiveLink}\n                                underline=\"none\"\n                                to=\"/login\"\n                                fontWeight=\"bold\"\n                                fontSize=\"12px\"\n                                color=\"primary.light\"\n                            >\n                                {translate(\"pages.login.signin\", \"Sign in\")}\n                            </MuiLink>\n                        </Box>\n                    )}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: \"24px\" }}\n                        disabled={isLoading}\n                    >\n                        {translate(\n                            \"pages.forgotPassword.buttons.submit\",\n                            \"Send reset instructions\",\n                        )}\n                    </Button>\n                </Box>\n            </CardContent>\n        </Card>\n    );\n\n    return (\n        <>\n            <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n                <Container\n                    component=\"main\"\n                    maxWidth=\"xs\"\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100vh\",\n                    }}\n                >\n                    {renderContent ? (\n                        renderContent(Content, PageTitle)\n                    ) : (\n                        <>\n                            {PageTitle}\n                            {Content}\n                        </>\n                    )}\n                </Container>\n            </Box>\n        </>\n    );\n};\n","import * as React from \"react\";\nimport {\n    UpdatePasswordFormTypes,\n    UpdatePasswordPageProps,\n    useActiveAuthProvider,\n} from \"@refinedev/core\";\n\nimport { useForm } from \"@refinedev/react-hook-form\";\n\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\n\nimport type { BoxProps } from \"@mui/material/Box\";\nimport type { CardContentProps } from \"@mui/material/CardContent\";\n\nimport {\n    BaseRecord,\n    HttpError,\n    useTranslate,\n    useUpdatePassword,\n} from \"@refinedev/core\";\n\nimport { layoutStyles, titleStyles } from \"../styles\";\nimport { FormPropsType } from \"../../index\";\nimport { ThemedTitle } from \"@components\";\n\ntype UpdatePasswordProps = UpdatePasswordPageProps<\n    BoxProps,\n    CardContentProps,\n    FormPropsType\n>;\n\n/**\n * The updatePassword type is the page used to update the password of the user.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/mui-auth-page/#update-password} for more details.\n */\nexport const UpdatePasswordPage: React.FC<UpdatePasswordProps> = ({\n    wrapperProps,\n    contentProps,\n    renderContent,\n    formProps,\n    title = undefined,\n}) => {\n    const { onSubmit, ...useFormProps } = formProps || {};\n    const {\n        register,\n        watch,\n        handleSubmit,\n        formState: { errors },\n    } = useForm<BaseRecord, HttpError, UpdatePasswordFormTypes>({\n        ...useFormProps,\n    });\n\n    const authProvider = useActiveAuthProvider();\n    const { mutate: update, isLoading } =\n        useUpdatePassword<UpdatePasswordFormTypes>({\n            v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n        });\n\n    const translate = useTranslate();\n\n    const PageTitle =\n        title === false ? null : (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    marginBottom: \"32px\",\n                    fontSize: \"20px\",\n                }}\n            >\n                {title ?? (\n                    <ThemedTitle\n                        collapsed={false}\n                        wrapperStyles={{\n                            gap: \"8px\",\n                        }}\n                    />\n                )}\n            </div>\n        );\n\n    const Content = (\n        <Card {...(contentProps ?? {})}>\n            <CardContent sx={{ p: \"32px\", \"&:last-child\": { pb: \"32px\" } }}>\n                <Typography\n                    component=\"h1\"\n                    variant=\"h5\"\n                    align=\"center\"\n                    style={titleStyles}\n                    color=\"primary\"\n                    fontWeight={700}\n                >\n                    {translate(\n                        \"pages.updatePassword.title\",\n                        \"Set New Password\",\n                    )}\n                </Typography>\n                <Box\n                    component=\"form\"\n                    onSubmit={handleSubmit((data) => {\n                        if (onSubmit) {\n                            return onSubmit(data);\n                        }\n\n                        return update(data);\n                    })}\n                >\n                    <TextField\n                        {...register(\"password\", {\n                            required: true,\n                        })}\n                        id=\"password\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"password\"\n                        label={translate(\n                            \"pages.updatePassword.fields.password\",\n                            \"New Password\",\n                        )}\n                        helperText={errors?.password?.message}\n                        error={!!errors?.password}\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        autoComplete=\"current-password\"\n                        sx={{\n                            m: 0,\n                        }}\n                    />\n\n                    <TextField\n                        {...register(\"confirmPassword\", {\n                            required: true,\n                            validate: (value?: string) => {\n                                if (watch(\"password\") !== value) {\n                                    return translate(\n                                        \"pages.updatePassword.errors.confirmPasswordNotMatch\",\n                                        \"Passwords do not match\",\n                                    );\n                                }\n                                return true;\n                            },\n                        })}\n                        id=\"confirmPassword\"\n                        margin=\"normal\"\n                        fullWidth\n                        name=\"confirmPassword\"\n                        label={translate(\n                            \"pages.updatePassword.fields.confirmPassword\",\n                            \"Confirm New Password\",\n                        )}\n                        helperText={errors?.confirmPassword?.message}\n                        error={!!errors?.confirmPassword}\n                        type=\"password\"\n                        placeholder=\"●●●●●●●●\"\n                        autoComplete=\"current-confirm-password\"\n                        sx={{\n                            mb: 0,\n                        }}\n                    />\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{\n                            mt: \"24px\",\n                        }}\n                        disabled={isLoading}\n                    >\n                        {translate(\n                            \"pages.updatePassword.buttons.submit\",\n                            \"Update\",\n                        )}\n                    </Button>\n                </Box>\n            </CardContent>\n        </Card>\n    );\n\n    return (\n        <>\n            <Box component=\"div\" style={layoutStyles} {...(wrapperProps ?? {})}>\n                <Container\n                    component=\"main\"\n                    maxWidth=\"xs\"\n                    sx={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        height: \"100vh\",\n                    }}\n                >\n                    {renderContent ? (\n                        renderContent(Content, PageTitle)\n                    ) : (\n                        <>\n                            {PageTitle}\n                            {Content}\n                        </>\n                    )}\n                </Container>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\n\nimport {\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useRouterType,\n    useBack,\n    useResource,\n} from \"@refinedev/core\";\n\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nimport { Breadcrumb, SaveButton, SaveButtonProps } from \"@components\";\nimport { CreateProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\n/**\n * `<Create>` provides us a layout to display the page.\n * It does not contain any logic but adds extra functionalities like action buttons and giving titles to the page.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/create} for more details.\n */\nexport const Create: React.FC<CreateProps> = ({\n    title,\n    children,\n    saveButtonProps: saveButtonPropsFromProps,\n    resource: resourceFromProps,\n    isLoading = false,\n    breadcrumb: breadcrumbFromProps,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n    footerButtonProps,\n    footerButtons,\n    goBack: goBackFromProps,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const { goBack } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const { resource, action, identifier } = useResource(resourceFromProps);\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const saveButtonProps: SaveButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        ...saveButtonPropsFromProps,\n    };\n\n    const defaultFooterButtons = <SaveButton {...saveButtonProps} />;\n\n    return (\n        <Card {...(wrapperProps ?? {})}>\n            {breadcrumbComponent}\n            <CardHeader\n                sx={{\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    \".MuiCardHeader-action\": {\n                        margin: 0,\n                        alignSelf: \"center\",\n                    },\n                }}\n                title={\n                    title ?? (\n                        <Typography\n                            variant=\"h5\"\n                            className={RefinePageHeaderClassNames.Title}\n                        >\n                            {translate(\n                                `${identifier}.titles.create`,\n                                `Create ${getUserFriendlyName(\n                                    resource?.meta?.label ??\n                                        resource?.options?.label ??\n                                        resource?.label ??\n                                        identifier,\n                                    \"singular\",\n                                )}`,\n                            )}\n                        </Typography>\n                    )\n                }\n                avatar={\n                    typeof goBackFromProps !== \"undefined\" ? (\n                        goBackFromProps\n                    ) : (\n                        <IconButton\n                            onClick={\n                                action !== \"list\" ||\n                                typeof action !== \"undefined\"\n                                    ? routerType === \"legacy\"\n                                        ? goBack\n                                        : back\n                                    : undefined\n                            }\n                        >\n                            <ArrowBackIcon />\n                        </IconButton>\n                    )\n                }\n                action={\n                    headerButtons ? (\n                        <Box\n                            display=\"flex\"\n                            gap=\"16px\"\n                            {...(headerButtonProps ?? {})}\n                        >\n                            {headerButtons\n                                ? typeof headerButtons === \"function\"\n                                    ? headerButtons({\n                                          defaultButtons: null,\n                                      })\n                                    : headerButtons\n                                : null}\n                        </Box>\n                    ) : undefined\n                }\n                {...(headerProps ?? {})}\n            />\n            <CardContent {...(contentProps ?? {})}>{children}</CardContent>\n            <CardActions\n                sx={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    gap: \"16px\",\n                    padding: \"16px\",\n                }}\n                {...(footerButtonProps ?? {})}\n            >\n                {footerButtons\n                    ? typeof footerButtons === \"function\"\n                        ? footerButtons({\n                              defaultButtons: defaultFooterButtons,\n                              saveButtonProps,\n                          })\n                        : footerButtons\n                    : defaultFooterButtons}\n            </CardActions>\n        </Card>\n    );\n};\n","import React from \"react\";\n\nimport {\n    useMutationMode,\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useToPath,\n    useResource,\n    useRouterType,\n    useBack,\n    useGo,\n} from \"@refinedev/core\";\n\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nimport {\n    DeleteButton,\n    RefreshButton,\n    ListButton,\n    SaveButton,\n    Breadcrumb,\n    ListButtonProps,\n    RefreshButtonProps,\n    DeleteButtonProps,\n    SaveButtonProps,\n    AutoSaveIndicator,\n} from \"@components\";\nimport { EditProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\n/**\n * `<Edit>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/edit} for more details.\n */\nexport const Edit: React.FC<EditProps> = ({\n    title,\n    saveButtonProps: saveButtonPropsFromProps,\n    mutationMode: mutationModeProp,\n    recordItemId,\n    children,\n    deleteButtonProps: deleteButtonPropsFromProps,\n    canDelete,\n    resource: resourceFromProps,\n    isLoading = false,\n    breadcrumb: breadcrumbFromProps,\n    dataProviderName,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n    footerButtonProps,\n    footerButtons,\n    goBack: goBackFromProps,\n    autoSaveProps,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n    const { mutationMode: mutationModeContext } = useMutationMode();\n    const mutationMode = mutationModeProp ?? mutationModeContext;\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const go = useGo();\n    const { goBack, list: legacyGoList } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const {\n        resource,\n        action,\n        id: idFromParams,\n        identifier,\n    } = useResource(resourceFromProps);\n\n    const goListPath = useToPath({\n        resource,\n        action: \"list\",\n    });\n\n    const id = recordItemId ?? idFromParams;\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const hasList = resource?.list && !recordItemId;\n    const isDeleteButtonVisible =\n        canDelete ??\n        ((resource?.meta?.canDelete ?? resource?.canDelete) ||\n            deleteButtonPropsFromProps);\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const listButtonProps: ListButtonProps | undefined = hasList\n        ? {\n              ...(isLoading ? { disabled: true } : {}),\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n          }\n        : undefined;\n\n    const refreshButtonProps: RefreshButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        recordItemId: id,\n        dataProviderName,\n    };\n\n    const defaultHeaderButtons = (\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n            {autoSaveProps && <AutoSaveIndicator {...autoSaveProps} />}\n            {hasList && <ListButton {...listButtonProps} />}\n            <RefreshButton {...refreshButtonProps} />\n        </Box>\n    );\n\n    const deleteButtonProps: DeleteButtonProps | undefined =\n        isDeleteButtonVisible\n            ? ({\n                  ...(isLoading ? { disabled: true } : {}),\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  mutationMode,\n                  variant: \"outlined\",\n                  onSuccess: () => {\n                      if (routerType === \"legacy\") {\n                          legacyGoList(resource?.route ?? resource?.name ?? \"\");\n                      } else {\n                          go({ to: goListPath });\n                      }\n                  },\n                  recordItemId: id,\n                  dataProviderName,\n                  ...deleteButtonPropsFromProps,\n              } as const)\n            : undefined;\n\n    const saveButtonProps: SaveButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        ...saveButtonPropsFromProps,\n    };\n\n    const defaultFooterButtons = (\n        <>\n            {isDeleteButtonVisible && <DeleteButton {...deleteButtonProps} />}\n            <SaveButton {...saveButtonProps} />\n        </>\n    );\n\n    return (\n        <Card {...(wrapperProps ?? {})}>\n            {breadcrumbComponent}\n            <CardHeader\n                sx={{\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    \".MuiCardHeader-action\": {\n                        margin: 0,\n                        alignSelf: \"center\",\n                    },\n                }}\n                title={\n                    title ?? (\n                        <Typography\n                            variant=\"h5\"\n                            className={RefinePageHeaderClassNames.Title}\n                        >\n                            {translate(\n                                `${identifier}.titles.edit`,\n                                `Edit ${getUserFriendlyName(\n                                    resource?.meta?.label ??\n                                        resource?.options?.label ??\n                                        resource?.label ??\n                                        identifier,\n                                    \"singular\",\n                                )}`,\n                            )}\n                        </Typography>\n                    )\n                }\n                avatar={\n                    typeof goBackFromProps !== \"undefined\" ? (\n                        goBackFromProps\n                    ) : (\n                        <IconButton\n                            onClick={\n                                action !== \"list\" &&\n                                typeof action !== \"undefined\"\n                                    ? routerType === \"legacy\"\n                                        ? goBack\n                                        : back\n                                    : undefined\n                            }\n                        >\n                            <ArrowBackIcon />\n                        </IconButton>\n                    )\n                }\n                action={\n                    <Box\n                        display=\"flex\"\n                        gap=\"16px\"\n                        {...(headerButtonProps ?? {})}\n                    >\n                        {headerButtons\n                            ? typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: defaultHeaderButtons,\n                                      listButtonProps,\n                                      refreshButtonProps,\n                                  })\n                                : headerButtons\n                            : defaultHeaderButtons}\n                    </Box>\n                }\n                {...(headerProps ?? {})}\n            />\n            <CardContent {...(contentProps ?? {})}>{children}</CardContent>\n            <CardActions\n                sx={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    gap: \"16px\",\n                    padding: \"16px\",\n                }}\n                {...(footerButtonProps ?? {})}\n            >\n                {footerButtons\n                    ? typeof footerButtons === \"function\"\n                        ? footerButtons({\n                              defaultButtons: defaultFooterButtons,\n                              deleteButtonProps,\n                              saveButtonProps,\n                          })\n                        : footerButtons\n                    : defaultFooterButtons}\n            </CardActions>\n        </Card>\n    );\n};\n","import React from \"react\";\n\nimport {\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useRouterType,\n    useResource,\n} from \"@refinedev/core\";\n\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nimport { CreateButton, Breadcrumb, CreateButtonProps } from \"@components\";\n\nimport { ListProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\n/**\n * `<List>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/list} for more details.\n */\nexport const List: React.FC<ListProps> = ({\n    title,\n    canCreate,\n    children,\n    createButtonProps: createButtonPropsFromProps,\n    resource: resourceFromProps,\n    breadcrumb: breadcrumbFromProps,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const routerType = useRouterType();\n\n    const { resource, identifier } = useResource(resourceFromProps);\n\n    const isCreateButtonVisible =\n        canCreate ??\n        ((resource?.canCreate ?? !!resource?.create) ||\n            createButtonPropsFromProps);\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const createButtonProps: CreateButtonProps | undefined =\n        isCreateButtonVisible\n            ? {\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  ...createButtonPropsFromProps,\n              }\n            : undefined;\n\n    const defaultHeaderButtons = isCreateButtonVisible ? (\n        <CreateButton {...createButtonProps} />\n    ) : null;\n\n    return (\n        <Card {...(wrapperProps ?? {})}>\n            {breadcrumbComponent}\n            <CardHeader\n                sx={{\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    \".MuiCardHeader-action\": {\n                        margin: 0,\n                        alignSelf: \"center\",\n                    },\n                }}\n                title={\n                    title ?? (\n                        <Typography\n                            variant=\"h5\"\n                            className={RefinePageHeaderClassNames.Title}\n                        >\n                            {translate(\n                                `${identifier}.titles.list`,\n                                getUserFriendlyName(\n                                    resource?.meta?.label ??\n                                        resource?.options?.label ??\n                                        resource?.label ??\n                                        identifier,\n                                    \"plural\",\n                                ),\n                            )}\n                        </Typography>\n                    )\n                }\n                action={\n                    <Box display=\"flex\" gap=\"16px\" {...headerButtonProps}>\n                        {headerButtons\n                            ? typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: defaultHeaderButtons,\n                                      createButtonProps,\n                                  })\n                                : headerButtons\n                            : defaultHeaderButtons}\n                    </Box>\n                }\n                {...(headerProps ?? {})}\n            />\n            <CardContent {...(contentProps ?? {})}>{children}</CardContent>\n        </Card>\n    );\n};\n","import React from \"react\";\nimport {\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useRefineContext,\n    useRouterType,\n    useBack,\n    useGo,\n    useResource,\n    useToPath,\n} from \"@refinedev/core\";\n\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nimport {\n    DeleteButton,\n    RefreshButton,\n    ListButton,\n    EditButton,\n    Breadcrumb,\n    ListButtonProps,\n    EditButtonProps,\n    DeleteButtonProps,\n    RefreshButtonProps,\n} from \"@components\";\nimport { ShowProps } from \"../types\";\nimport { RefinePageHeaderClassNames } from \"@refinedev/ui-types\";\n\n/**\n * `<Show>` provides us a layout for displaying the page.\n * It does not contain any logic but adds extra functionalities like a refresh button.\n *\n * @see {@link https://refine.dev/docs/ui-frameworks/mui/components/basic-views/show} for more details.\n */\nexport const Show: React.FC<ShowProps> = ({\n    title,\n    canEdit,\n    canDelete,\n    isLoading = false,\n    children,\n    resource: resourceFromProps,\n    recordItemId,\n    breadcrumb: breadcrumbFromProps,\n    dataProviderName,\n    wrapperProps,\n    headerProps,\n    contentProps,\n    headerButtonProps,\n    headerButtons,\n    footerButtonProps,\n    footerButtons,\n    goBack: goBackFromProps,\n}) => {\n    const translate = useTranslate();\n    const { options: { breadcrumb: globalBreadcrumb } = {} } =\n        useRefineContext();\n\n    const routerType = useRouterType();\n    const back = useBack();\n    const go = useGo();\n    const { goBack, list: legacyGoList } = useNavigation();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const {\n        resource,\n        action,\n        id: idFromParams,\n        identifier,\n    } = useResource(resourceFromProps);\n\n    const goListPath = useToPath({\n        resource,\n        action: \"list\",\n    });\n\n    const id = recordItemId ?? idFromParams;\n\n    const breadcrumb =\n        typeof breadcrumbFromProps === \"undefined\"\n            ? globalBreadcrumb\n            : breadcrumbFromProps;\n\n    const hasList = resource?.list && !recordItemId;\n    const hasDelete =\n        canDelete ?? resource?.meta?.canDelete ?? resource?.canDelete;\n    const isDeleteButtonVisible = hasDelete && typeof id !== \"undefined\";\n    const isEditButtonVisible =\n        canEdit ?? resource?.canEdit ?? !!resource?.edit;\n\n    const breadcrumbComponent =\n        typeof breadcrumb !== \"undefined\" ? (\n            <>{breadcrumb}</> ?? undefined\n        ) : (\n            <Breadcrumb />\n        );\n\n    const listButtonProps: ListButtonProps | undefined = hasList\n        ? {\n              ...(isLoading ? { disabled: true } : {}),\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n          }\n        : undefined;\n    const editButtonProps: EditButtonProps | undefined = isEditButtonVisible\n        ? {\n              ...(isLoading ? { disabled: true } : {}),\n              resource: routerType === \"legacy\" ? resource?.route : identifier,\n              recordItemId: id,\n          }\n        : undefined;\n    const deleteButtonProps: DeleteButtonProps | undefined =\n        isDeleteButtonVisible\n            ? {\n                  ...(isLoading ? { disabled: true } : {}),\n                  resource:\n                      routerType === \"legacy\" ? resource?.route : identifier,\n                  recordItemId: id,\n                  onSuccess: () => {\n                      if (routerType === \"legacy\") {\n                          legacyGoList(resource?.route ?? resource?.name ?? \"\");\n                      } else {\n                          go({ to: goListPath });\n                      }\n                  },\n                  dataProviderName,\n              }\n            : undefined;\n    const refreshButtonProps: RefreshButtonProps = {\n        ...(isLoading ? { disabled: true } : {}),\n        resource: routerType === \"legacy\" ? resource?.route : identifier,\n        recordItemId: id,\n        dataProviderName,\n    };\n\n    const defaultHeaderButtons = (\n        <>\n            {hasList && <ListButton {...listButtonProps} />}\n            {isEditButtonVisible && <EditButton {...editButtonProps} />}\n            {isDeleteButtonVisible && <DeleteButton {...deleteButtonProps} />}\n            <RefreshButton {...refreshButtonProps} />\n        </>\n    );\n\n    return (\n        <Card {...(wrapperProps ?? {})}>\n            {breadcrumbComponent}\n            <CardHeader\n                sx={{\n                    display: \"flex\",\n                    flexWrap: \"wrap\",\n                    \".MuiCardHeader-action\": {\n                        margin: 0,\n                        alignSelf: \"center\",\n                    },\n                }}\n                title={\n                    title ?? (\n                        <Typography\n                            variant=\"h5\"\n                            className={RefinePageHeaderClassNames.Title}\n                        >\n                            {translate(\n                                `${identifier}.titles.show`,\n                                `Show ${getUserFriendlyName(\n                                    resource?.meta?.label ??\n                                        resource?.options?.label ??\n                                        resource?.label ??\n                                        identifier,\n                                    \"singular\",\n                                )}`,\n                            )}\n                        </Typography>\n                    )\n                }\n                avatar={\n                    typeof goBackFromProps !== \"undefined\" ? (\n                        goBackFromProps\n                    ) : (\n                        <IconButton\n                            onClick={\n                                action !== \"list\" &&\n                                typeof action !== \"undefined\"\n                                    ? routerType === \"legacy\"\n                                        ? goBack\n                                        : back\n                                    : undefined\n                            }\n                        >\n                            <ArrowBackIcon />\n                        </IconButton>\n                    )\n                }\n                action={\n                    <Box\n                        display=\"flex\"\n                        gap=\"16px\"\n                        {...(headerButtonProps ?? {})}\n                    >\n                        {headerButtons\n                            ? typeof headerButtons === \"function\"\n                                ? headerButtons({\n                                      defaultButtons: defaultHeaderButtons,\n                                      deleteButtonProps,\n                                      editButtonProps,\n                                      listButtonProps,\n                                      refreshButtonProps,\n                                  })\n                                : headerButtons\n                            : defaultHeaderButtons}\n                    </Box>\n                }\n                {...(headerProps ?? {})}\n            />\n            <CardContent {...(contentProps ?? {})}>{children}</CardContent>\n            <CardActions\n                sx={{ padding: \"16px\" }}\n                {...(footerButtonProps ?? {})}\n            >\n                {footerButtons\n                    ? typeof footerButtons === \"function\"\n                        ? footerButtons({ defaultButtons: null })\n                        : footerButtons\n                    : null}\n            </CardActions>\n        </Card>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useNavigation,\n    useTranslate,\n    useCan,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport Button from \"@mui/material/Button\";\nimport AddBoxOutlined from \"@mui/icons-material/AddBoxOutlined\";\n\nimport { CreateButtonProps } from \"../types\";\n\n/**\n * <CreateButton> uses Material UI {@link https://mui.com/components/buttons/ `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#create `create`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful to redirect the app to the create page route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/create-button} for more details.\n */\nexport const CreateButton: React.FC<CreateButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n    const translate = useTranslate();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { createUrl: generateCreateUrl } = useNavigation();\n\n    const { resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"create\",\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n        params: {\n            resource,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const createUrl = resource ? generateCreateUrl(resource, meta) : \"\";\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={createUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={!hideText && <AddBoxOutlined {...svgIconProps} />}\n                title={disabledTitle()}\n                variant=\"contained\"\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.CreateButton}\n                className={RefineButtonClassNames.CreateButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <AddBoxOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.create\", \"Create\")\n                )}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport Button from \"@mui/material/Button\";\nimport EditOutlined from \"@mui/icons-material/EditOutlined\";\n\nimport { EditButtonProps } from \"../types\";\n\n/**\n * `<EditButton>` uses uses Material UI {@link https://mui.com/components/buttons/ `<Button>`} component.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#edit `edit`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the edit page with the record id route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/edit-button} for more details.\n */\nexport const EditButton: React.FC<EditButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n    const translate = useTranslate();\n\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const { editUrl: generateEditUrl } = useNavigation();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"edit\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const editUrl =\n        resource && (recordItemId ?? id)\n            ? generateEditUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={editUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={\n                    !hideText && (\n                        <EditOutlined\n                            sx={{ selfAlign: \"center\" }}\n                            {...svgIconProps}\n                        />\n                    )\n                }\n                title={disabledTitle()}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.EditButton}\n                className={RefineButtonClassNames.EditButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <EditOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.edit\", \"Edit\")\n                )}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useDelete,\n    useTranslate,\n    useMutationMode,\n    useCan,\n    useResource,\n    pickNotDeprecated,\n    useWarnAboutChange,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\n\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\nimport DeleteOutline from \"@mui/icons-material/DeleteOutline\";\n\nimport { DeleteButtonProps } from \"../types\";\n\n/**\n * `<DeleteButton>` uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} and {@link https://mui.com/material-ui/react-dialog/#main-content `<Dialog>`} components.\n * When you try to delete something, a dialog modal shows up and asks for confirmation. When confirmed it executes the `useDelete` method provided by your `dataProvider`.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/delete-button} for more details.\n */\nexport const DeleteButton: React.FC<DeleteButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    onSuccess,\n    mutationMode: mutationModeProp,\n    children,\n    successNotification,\n    errorNotification,\n    hideText = false,\n    accessControl,\n    meta,\n    metaData,\n    dataProviderName,\n    confirmTitle,\n    confirmOkText,\n    confirmCancelText,\n    svgIconProps,\n    invalidates,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n    const translate = useTranslate();\n\n    const { id, resource, identifier } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { mutationMode: mutationModeContext } = useMutationMode();\n\n    const mutationMode = mutationModeProp ?? mutationModeContext;\n\n    const { mutate, isLoading, variables } = useDelete();\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"delete\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleCloseOnConfirm = () => {\n        if ((recordItemId ?? id) && identifier) {\n            setWarnWhen(false);\n            setOpen(false);\n            mutate(\n                {\n                    id: recordItemId ?? id ?? \"\",\n                    resource: identifier,\n                    mutationMode,\n                    successNotification,\n                    errorNotification,\n                    meta: pickNotDeprecated(meta, metaData),\n                    metaData: pickNotDeprecated(meta, metaData),\n                    dataProviderName,\n                    invalidates,\n                },\n                {\n                    onSuccess: (value) => {\n                        onSuccess && onSuccess(value);\n                    },\n                },\n            );\n        }\n    };\n\n    const { sx, ...restProps } = rest;\n\n    const { setWarnWhen } = useWarnAboutChange();\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <div>\n            <LoadingButton\n                color=\"error\"\n                onClick={handleClickOpen}\n                disabled={data?.can === false}\n                loading={(recordItemId ?? id) === variables?.id && isLoading}\n                startIcon={!hideText && <DeleteOutline {...svgIconProps} />}\n                title={disabledTitle()}\n                sx={{ minWidth: 0, ...sx }}\n                loadingPosition={hideText ? \"center\" : \"start\"}\n                data-testid={RefineButtonTestIds.DeleteButton}\n                className={RefineButtonClassNames.DeleteButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <DeleteOutline fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.delete\", \"Delete\")\n                )}\n            </LoadingButton>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {confirmTitle ??\n                        translate(\"buttons.confirm\", \"Are you sure?\")}\n                </DialogTitle>\n                <DialogActions sx={{ justifyContent: \"center\" }}>\n                    <Button onClick={handleClose}>\n                        {confirmCancelText ??\n                            translate(\"buttons.cancel\", \"Cancel\")}\n                    </Button>\n                    <Button\n                        color=\"error\"\n                        onClick={handleCloseOnConfirm}\n                        autoFocus\n                    >\n                        {confirmOkText ?? translate(\"buttons.delete\", \"Delete\")}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n","import React from \"react\";\nimport {\n    useTranslate,\n    useResource,\n    useInvalidate,\n    queryKeys,\n    pickDataProvider,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport RefreshOutlined from \"@mui/icons-material/RefreshOutlined\";\n\nimport { RefreshButtonProps } from \"../types\";\n\nimport { useQueryClient } from \"@tanstack/react-query\";\n\n/**\n * `<RefreshButton>` uses uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} component\n * to update the data shown on the page via the {@link https://refine.dev/docs/api-reference/core/hooks/invalidate/useInvalidate `useInvalidate`} hook.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/refresh-button} for more details.\n */\nexport const RefreshButton: React.FC<RefreshButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    dataProviderName,\n    svgIconProps,\n    children,\n    onClick,\n    meta: _meta,\n    metaData: _metaData,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const queryClient = useQueryClient();\n    const invalidates = useInvalidate();\n\n    const { resources, identifier, id } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const isInvalidating = !!queryClient.isFetching({\n        queryKey: queryKeys(\n            identifier,\n            pickDataProvider(identifier, dataProviderName, resources),\n        ).detail(recordItemId ?? id),\n    });\n\n    const handleInvalidate = () => {\n        invalidates({\n            id: recordItemId ?? id,\n            invalidates: [\"detail\"],\n            dataProviderName,\n            resource: identifier,\n        });\n    };\n\n    const { sx, ...restProps } = rest;\n\n    return (\n        <LoadingButton\n            startIcon={!hideText && <RefreshOutlined {...svgIconProps} />}\n            loading={isInvalidating}\n            loadingPosition={hideText ? \"center\" : \"start\"}\n            onClick={(e) => {\n                onClick ? onClick(e) : handleInvalidate();\n            }}\n            sx={{ minWidth: 0, ...sx }}\n            data-testid={RefineButtonTestIds.RefreshButton}\n            className={RefineButtonClassNames.RefreshButton}\n            {...restProps}\n        >\n            {hideText ? (\n                <RefreshOutlined fontSize=\"small\" {...svgIconProps} />\n            ) : (\n                children ?? translate(\"buttons.refresh\", \"Refresh\")\n            )}\n        </LoadingButton>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport Button from \"@mui/material/Button\";\nimport VisibilityOutlined from \"@mui/icons-material/VisibilityOutlined\";\n\nimport { ShowButtonProps } from \"../types\";\n\n/**\n * `<ShowButton>` uses uses Material UI {@link https://mui.com/components/buttons/ `<Button>`} component.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#show `show`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when red sirecting the app to the show page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/show-button} for more details.\n */\nexport const ShowButton: React.FC<ShowButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n    const { showUrl: generateShowUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"show\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const showUrl =\n        resource && (recordItemId || id)\n            ? generateShowUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={showUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={\n                    !hideText && <VisibilityOutlined {...svgIconProps} />\n                }\n                title={disabledTitle()}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.ShowButton}\n                className={RefineButtonClassNames.ShowButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <VisibilityOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.show\", \"Show\")\n                )}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useUserFriendlyName,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    pickNotDeprecated,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport Button from \"@mui/material/Button\";\nimport ListOutlined from \"@mui/icons-material/ListOutlined\";\n\nimport { ListButtonProps } from \"../types\";\n\n/**\n * `<ListButton>` is using uses Material UI {@link https://mui.com/components/buttons/ `<Button>`} component.\n * It uses the  {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#list `list`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation `useNavigation`} under the hood.\n * It can be useful when redirecting the app to the list page route of resource}.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/list-button} for more details.\n */\nexport const ListButton: React.FC<ListButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n    const { listUrl: generateListUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n    const getUserFriendlyName = useUserFriendlyName();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { resource, identifier } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"list\",\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n        params: {\n            resource,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const listUrl = resource ? generateListUrl(resource, meta) : \"\";\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={listUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={!hideText && <ListOutlined {...svgIconProps} />}\n                title={disabledTitle()}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.ListButton}\n                className={RefineButtonClassNames.ListButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <ListOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ??\n                    translate(\n                        `${\n                            identifier ??\n                            resourceNameFromProps ??\n                            resourceNameOrRouteName\n                        }.titles.list`,\n                        getUserFriendlyName(\n                            resource?.meta?.label ??\n                                resource?.label ??\n                                identifier ??\n                                pickNotDeprecated(\n                                    resourceNameFromProps,\n                                    resourceNameOrRouteName,\n                                ),\n                            \"plural\",\n                        ),\n                    )\n                )}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport ImportExportOutlined from \"@mui/icons-material/ImportExportOutlined\";\n\nimport { ExportButtonProps } from \"../types\";\n\n/**\n * `<ExportButton>` uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} with a default export icon and a default text with \"Export\".\n * It only has presentational value.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/export-button} for more details.\n */\nexport const ExportButton: React.FC<ExportButtonProps> = ({\n    hideText = false,\n    children,\n    loading = false,\n    svgIconProps,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const { sx, ...restProps } = rest;\n\n    return (\n        <LoadingButton\n            {...rest}\n            loading={loading}\n            startIcon={!hideText && <ImportExportOutlined {...svgIconProps} />}\n            loadingPosition={hideText ? \"center\" : \"start\"}\n            sx={{ minWidth: 0, ...sx }}\n            data-testid={RefineButtonTestIds.ExportButton}\n            className={RefineButtonClassNames.ExportButton}\n            {...restProps}\n        >\n            {hideText ? (\n                <ImportExportOutlined fontSize=\"small\" {...svgIconProps} />\n            ) : (\n                children ?? translate(\"buttons.export\", \"Export\")\n            )}\n        </LoadingButton>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport SaveOutlined from \"@mui/icons-material/SaveOutlined\";\n\nimport { SaveButtonProps } from \"../types\";\n\n/**\n * `<SaveButton>` uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content `<LoadingButton>`} component.\n * It uses it for presantation purposes only. Some of the hooks that refine has adds features to this button.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/save-button} for more details.\n */\nexport const SaveButton: React.FC<SaveButtonProps> = ({\n    hideText = false,\n    svgIconProps,\n    children,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const { sx, ...restProps } = rest;\n\n    return (\n        <LoadingButton\n            startIcon={!hideText && <SaveOutlined {...svgIconProps} />}\n            sx={{ minWidth: 0, ...sx }}\n            variant=\"contained\"\n            data-testid={RefineButtonTestIds.SaveButton}\n            className={RefineButtonClassNames.SaveButton}\n            {...restProps}\n        >\n            {hideText ? (\n                <SaveOutlined fontSize=\"small\" {...svgIconProps} />\n            ) : (\n                children ?? translate(\"buttons.save\", \"Save\")\n            )}\n        </LoadingButton>\n    );\n};\n","import React, { useContext } from \"react\";\nimport {\n    useCan,\n    useNavigation,\n    useTranslate,\n    useResource,\n    useRouterContext,\n    useRouterType,\n    useLink,\n    AccessControlContext,\n} from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport Button from \"@mui/material/Button\";\nimport AddBoxOutlined from \"@mui/icons-material/AddBoxOutlined\";\n\nimport { CloneButtonProps } from \"../types\";\n\n/**\n * `<CloneButton>` uses Material UI {@link https://mui.com/components/buttons/ `<Button> component`}.\n * It uses the {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation#clone `clone`} method from {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation useNavigation} under the hood.\n * It can be useful when redirecting the app to the create page with the record id route of resource.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/clone-button} for more details.\n *\n */\nexport const CloneButton: React.FC<CloneButtonProps> = ({\n    resource: resourceNameFromProps,\n    resourceNameOrRouteName,\n    recordItemId,\n    hideText = false,\n    accessControl,\n    svgIconProps,\n    meta,\n    children,\n    onClick,\n    ...rest\n}) => {\n    const accessControlContext = useContext(AccessControlContext);\n\n    const accessControlEnabled =\n        accessControl?.enabled ??\n        accessControlContext.options.buttons.enableAccessControl;\n\n    const hideIfUnauthorized =\n        accessControl?.hideIfUnauthorized ??\n        accessControlContext.options.buttons.hideIfUnauthorized;\n\n    const { cloneUrl: generateCloneUrl } = useNavigation();\n    const routerType = useRouterType();\n    const Link = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n    const translate = useTranslate();\n\n    const { id, resource } = useResource(\n        resourceNameFromProps ?? resourceNameOrRouteName,\n    );\n\n    const { data } = useCan({\n        resource: resource?.name,\n        action: \"create\",\n        params: { id: recordItemId ?? id, resource },\n        queryOptions: {\n            enabled: accessControlEnabled,\n        },\n    });\n\n    const disabledTitle = () => {\n        if (data?.can) return \"\";\n        else if (data?.reason) return data.reason;\n        else\n            return translate(\n                \"buttons.notAccessTitle\",\n                \"You don't have permission to access\",\n            );\n    };\n\n    const cloneUrl =\n        resource && (recordItemId || id)\n            ? generateCloneUrl(resource, recordItemId! ?? id!, meta)\n            : \"\";\n\n    const { sx, ...restProps } = rest;\n\n    if (accessControlEnabled && hideIfUnauthorized && !data?.can) {\n        return null;\n    }\n\n    return (\n        <ActiveLink\n            to={cloneUrl}\n            replace={false}\n            onClick={(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n                if (data?.can === false) {\n                    e.preventDefault();\n                    return;\n                }\n                if (onClick) {\n                    e.preventDefault();\n                    onClick(e);\n                }\n            }}\n            style={{ textDecoration: \"none\" }}\n        >\n            <Button\n                disabled={data?.can === false}\n                startIcon={!hideText && <AddBoxOutlined {...svgIconProps} />}\n                title={disabledTitle()}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.CloneButton}\n                className={RefineButtonClassNames.CloneButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <AddBoxOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.clone\", \"Clone\")\n                )}\n            </Button>\n        </ActiveLink>\n    );\n};\n","import React from \"react\";\nimport { useTranslate } from \"@refinedev/core\";\nimport {\n    RefineButtonClassNames,\n    RefineButtonTestIds,\n} from \"@refinedev/ui-types\";\n\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport ImportExportOutlined from \"@mui/icons-material/ImportExportOutlined\";\n\nimport { ImportButtonProps } from \"../types\";\n\n/**\n * `<ImportButton>` is compatible with the {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useImport/ `useImport`} core hook.\n * It uses Material UI {@link https://mui.com/material-ui/api/loading-button/#main-content  `<LoadingButton>`} and native html {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input  `<input>`} element.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/buttons/import-button} for more details.\n */\nexport const ImportButton: React.FC<ImportButtonProps> = ({\n    inputProps,\n    hideText = false,\n    loading = false,\n    svgIconProps,\n    children,\n    ...rest\n}) => {\n    const translate = useTranslate();\n\n    const { sx, ...restProps } = rest;\n\n    return (\n        <label htmlFor=\"contained-button-file\">\n            <input {...inputProps} id=\"contained-button-file\" multiple hidden />\n            <LoadingButton\n                component=\"span\"\n                startIcon={\n                    !hideText && <ImportExportOutlined {...svgIconProps} />\n                }\n                loadingPosition={hideText ? \"center\" : \"start\"}\n                loading={loading}\n                sx={{ minWidth: 0, ...sx }}\n                data-testid={RefineButtonTestIds.ImportButton}\n                className={RefineButtonClassNames.ImportButton}\n                {...restProps}\n            >\n                {hideText ? (\n                    <ImportExportOutlined fontSize=\"small\" {...svgIconProps} />\n                ) : (\n                    children ?? translate(\"buttons.import\", \"Import\")\n                )}\n            </LoadingButton>\n        </label>\n    );\n};\n","import React, { useState, useEffect } from \"react\";\n\nimport Box from \"@mui/material/Box\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\n\ntype CircularDeterminateProps = {\n    undoableTimeout: number;\n    message: string;\n};\n\nexport const CircularDeterminate: React.FC<CircularDeterminateProps> = ({\n    undoableTimeout,\n    message,\n}) => {\n    const [progress, setProgress] = useState(100);\n\n    const [timeCount, setTimeCount] = useState(undoableTimeout);\n\n    useEffect(() => {\n        const increaseProgress = 100 / undoableTimeout;\n        const timer = setInterval(() => {\n            setTimeCount((prevProgress) => prevProgress - 1);\n            setProgress((prevProgress) => prevProgress - increaseProgress);\n        }, 1000);\n\n        if (timeCount === 0) {\n            clearInterval(timer);\n        }\n\n        return () => {\n            clearInterval(timer);\n        };\n    }, [timeCount]);\n\n    return (\n        <>\n            <Box sx={{ position: \"relative\", display: \"inline-flex\" }}>\n                <CircularProgress\n                    color=\"inherit\"\n                    variant=\"determinate\"\n                    value={progress}\n                />\n                <Box\n                    sx={{\n                        top: 0,\n                        left: 0,\n                        bottom: 0,\n                        right: 0,\n                        position: \"absolute\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                    }}\n                >\n                    <Typography component=\"div\">{timeCount}</Typography>\n                </Box>\n            </Box>\n            <Box\n                sx={{\n                    marginLeft: \"10px\",\n                    maxWidth: { xs: \"150px\", md: \"100%\" },\n                }}\n            >\n                <Typography variant=\"subtitle2\">{message}</Typography>\n            </Box>\n        </>\n    );\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { TextFieldProps } from \"../types\";\n\n/**\n * This field lets you show basic text. It uses Materail UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/text} for more details.\n */\nconst TextField: React.FC<TextFieldProps> = ({ value, ...rest }) => {\n    return (\n        <Typography variant=\"body2\" {...rest}>\n            {value}\n        </Typography>\n    );\n};\n\nexport { TextField as TextFieldComponent };\n","import React from \"react\";\nimport Chip from \"@mui/material/Chip\";\n\nimport { TagFieldProps } from \"../types\";\n\n/**\n * This field lets you display a value in a tag. It uses Material UI {@link https://mui.com/material-ui/react-chip/#main-content `<Chip>`} component.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/tag} for more details.\n */\nexport const TagField: React.FC<TagFieldProps> = ({ value, ...rest }) => {\n    return <Chip label={value?.toString()} {...rest} />;\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\n\nimport { EmailFieldProps } from \"../types\";\n\n/**\n * This field is used to display email values. It uses the {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>` }\n * and {@link https://mui.com/material-ui/react-link/#main-content `<Link>`} components from Material UI.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/email} for more details.\n */\nexport const EmailField: React.FC<EmailFieldProps> = ({ value, ...rest }) => {\n    return (\n        <Typography variant=\"body2\">\n            <Link href={`mailto:${value}`} {...rest}>\n                {value}\n            </Link>\n        </Typography>\n    );\n};\n","import React from \"react\";\n\nimport Tooltip from \"@mui/material/Tooltip\";\nimport CheckOutlined from \"@mui/icons-material/CheckOutlined\";\nimport CloseOutlined from \"@mui/icons-material/CloseOutlined\";\n\nimport { BooleanFieldProps } from \"../types\";\n\n/**\n * This field is used to display boolean values. It uses the {@link https://mui.com/material-ui/react-tooltip/#main-content `<Tooltip>`} values from Materila UI.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/boolean} for more details.\n */\nexport const BooleanField: React.FC<BooleanFieldProps> = ({\n    value,\n    valueLabelTrue = \"true\",\n    valueLabelFalse = \"false\",\n    trueIcon,\n    falseIcon,\n    svgIconProps,\n    ...rest\n}) => {\n    return (\n        <Tooltip title={value ? valueLabelTrue : valueLabelFalse} {...rest}>\n            {value ? (\n                <span>{trueIcon ?? <CheckOutlined {...svgIconProps} />}</span>\n            ) : (\n                <span>{falseIcon ?? <CloseOutlined {...svgIconProps} />}</span>\n            )}\n        </Tooltip>\n    );\n};\n","import React from \"react\";\n\nimport dayjs from \"dayjs\";\n\nimport LocalizedFormat from \"dayjs/plugin/localizedFormat\";\n\nimport Typography from \"@mui/material/Typography\";\n\nimport { DateFieldProps } from \"../types\";\n\ndayjs.extend(LocalizedFormat);\n\nconst defaultLocale = dayjs.locale();\n\n/**\n * This field is used to display dates. It uses {@link https://day.js.org/docs/en/display/format `Day.js`} to display date format and\n * Material UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`} component\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/date} for more details.\n */\nexport const DateField: React.FC<DateFieldProps> = ({\n    value,\n    locales,\n    format: dateFormat = \"L\",\n    ...rest\n}) => {\n    return (\n        <Typography variant=\"body2\" {...rest}>\n            {dayjs(value)\n                .locale(locales || defaultLocale)\n                .format(dateFormat)}\n        </Typography>\n    );\n};\n","import React from \"react\";\n\nimport { UrlField } from \"@components\";\n\nimport { FileFieldProps } from \"../types\";\n\n/**\n * This field is used to display files and  uses Material UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`}  and {@link https://mui.com/material-ui/react-link/#main-content `<Link>`} components.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/file} for more details.\n */\nexport const FileField: React.FC<FileFieldProps> = ({\n    title,\n    src,\n    ...rest\n}) => {\n    return (\n        <UrlField value={src} title={title} {...rest}>\n            {title ?? src}\n        </UrlField>\n    );\n};\n","import React from \"react\";\nimport Link from \"@mui/material/Link\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { UrlFieldProps } from \"../types\";\n\n/**\n * This field lets you embed a link.It uses the {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>` }\n * and {@link https://mui.com/material-ui/react-link/#main-content `<Link>`} components from Material UI.\n * You can pass a URL in its `value` property and you can show a text in its place by passing any `children`.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/url} for more details.\n */\nexport const UrlField: React.FC<UrlFieldProps> = ({\n    children,\n    value,\n    ...rest\n}) => {\n    return (\n        <Typography variant=\"body2\">\n            <Link href={value} {...rest}>\n                {children ?? value}\n            </Link>\n        </Typography>\n    );\n};\n","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { NumberFieldProps } from \"../types\";\n\nfunction toLocaleStringSupportsOptions() {\n    return !!(\n        typeof Intl == \"object\" &&\n        Intl &&\n        typeof Intl.NumberFormat == \"function\"\n    );\n}\n\n/**\n * This field is used to display a number formatted according to the browser locale, right aligned. and uses {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl `Intl`} to display date format\n * and Material UI {@link https://mui.com/material-ui/react-typography/#main-content `<Typography>`} component.\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/number} for more details.\n */\nexport const NumberField: React.FC<NumberFieldProps> = ({\n    value,\n    locale,\n    options,\n    ...rest\n}) => {\n    const number = Number(value);\n\n    return (\n        <Typography variant=\"body2\" {...rest}>\n            {toLocaleStringSupportsOptions()\n                ? number.toLocaleString(locale, options)\n                : number}\n        </Typography>\n    );\n};\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\n\nimport { MarkdownFieldProps } from \"../types\";\n\n/**\n * This field lets you display markdown content. It supports {@link https://github.github.com/gfm/ GitHub Flavored Markdown}.\n *\n * @see {@link https://refine.dev/docs/api-reference/mui/components/fields/markdown} for more details.\n */\nexport const MarkdownField: React.FC<MarkdownFieldProps> = ({ value = \"\" }) => {\n    return <ReactMarkdown plugins={[gfm]}>{value}</ReactMarkdown>;\n};\n","import React from \"react\";\nimport {\n    matchResourceFromRoute,\n    useBreadcrumb,\n    useLink,\n    useRefineContext,\n    useResource,\n    useRouterContext,\n    useRouterType,\n} from \"@refinedev/core\";\nimport { RefineBreadcrumbProps } from \"@refinedev/ui-types\";\n\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\nimport Typography from \"@mui/material/Typography\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\n\nimport type { BreadcrumbsProps as MuiBreadcrumbProps } from \"@mui/material/Breadcrumbs\";\nimport type { LinkProps } from \"@mui/material/Link\";\n\nimport HomeOutlined from \"@mui/icons-material/HomeOutlined\";\n\nexport type BreadcrumbProps = RefineBreadcrumbProps<MuiBreadcrumbProps>;\n\nexport const Breadcrumb: React.FC<BreadcrumbProps> = ({\n    breadcrumbProps,\n    showHome = true,\n    hideIcons = false,\n    meta,\n}) => {\n    const { breadcrumbs } = useBreadcrumb({ meta });\n    const routerType = useRouterType();\n    const NewLink = useLink();\n    const { Link: LegacyLink } = useRouterContext();\n\n    const ActiveLink = routerType === \"legacy\" ? LegacyLink : NewLink;\n\n    const { hasDashboard } = useRefineContext();\n\n    const { resources } = useResource();\n\n    const rootRouteResource = matchResourceFromRoute(\"/\", resources);\n\n    if (breadcrumbs.length === 1) {\n        return null;\n    }\n\n    const LinkRouter = (props: LinkProps & { to?: string }) => (\n        <Link {...props} component={ActiveLink} />\n    );\n\n    return (\n        <Breadcrumbs\n            aria-label=\"breadcrumb\"\n            sx={{\n                paddingY: 2,\n                paddingX: 2,\n                ...(breadcrumbProps?.sx ?? {}),\n            }}\n            {...breadcrumbProps}\n        >\n            {showHome && (hasDashboard || rootRouteResource.found) && (\n                <LinkRouter\n                    underline=\"hover\"\n                    sx={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                    }}\n                    color=\"inherit\"\n                    to=\"/\"\n                >\n                    {rootRouteResource?.resource?.meta?.icon ?? (\n                        <HomeOutlined\n                            sx={{\n                                fontSize: \"18px\",\n                            }}\n                        />\n                    )}\n                </LinkRouter>\n            )}\n            {breadcrumbs.map(({ label, icon, href }) => {\n                return (\n                    <Grid\n                        key={label}\n                        sx={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            \"& .MuiSvgIcon-root\": {\n                                fontSize: \"16px\",\n                            },\n                        }}\n                    >\n                        {!hideIcons && icon}\n                        {href ? (\n                            <LinkRouter\n                                underline=\"hover\"\n                                sx={{\n                                    display: \"flex\",\n                                    alignItems: \"center\",\n                                    fontSize: \"14px\",\n                                }}\n                                color=\"inherit\"\n                                to={href}\n                                variant=\"subtitle1\"\n                                marginLeft={0.5}\n                            >\n                                {label}\n                            </LinkRouter>\n                        ) : (\n                            <Typography fontSize=\"14px\">{label}</Typography>\n                        )}\n                    </Grid>\n                );\n            })}\n        </Breadcrumbs>\n    );\n};\n","import React from \"react\";\nimport { AutoSaveIndicatorProps, useTranslate } from \"@refinedev/core\";\nimport Typography from \"@mui/material/Typography\";\nimport MoreHorizOutlinedIcon from \"@mui/icons-material/MoreHorizOutlined\";\nimport SyncOutlinedIcon from \"@mui/icons-material/SyncOutlined\";\nimport TaskAltOutlinedIcon from \"@mui/icons-material/TaskAltOutlined\";\nimport ErrorOutlineOutlinedIcon from \"@mui/icons-material/ErrorOutlineOutlined\";\n\nexport const AutoSaveIndicator: React.FC<AutoSaveIndicatorProps> = ({\n    status,\n}) => {\n    const translate = useTranslate();\n    let message = null;\n    let icon = <MoreHorizOutlinedIcon fontSize=\"small\" />;\n\n    switch (status) {\n        case \"success\":\n            message = translate(\"autoSave.success\", \"saved\");\n            icon = <TaskAltOutlinedIcon fontSize=\"small\" />;\n            break;\n        case \"error\":\n            message = translate(\"autoSave.error\", \"auto save failure\");\n            icon = <ErrorOutlineOutlinedIcon fontSize=\"small\" />;\n\n            break;\n        case \"loading\":\n            message = translate(\"autoSave.loading\", \"saving...\");\n            icon = <SyncOutlinedIcon fontSize=\"small\" />;\n            break;\n        default:\n            // for idle\n            message = translate(\"autoSave.idle\", \"waiting for changes\");\n            break;\n    }\n\n    return (\n        <Typography\n            color=\"gray\"\n            fontSize=\"0.8rem\"\n            position=\"relative\"\n            display=\"flex\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n            marginRight=\".3rem\"\n        >\n            {message}\n            <span\n                style={{ position: \"relative\", top: \"3px\", marginLeft: \"3px\" }}\n            >\n                {icon}\n            </span>\n        </Typography>\n    );\n};\n","import type { Theme, ThemeOptions } from \"@mui/material/styles\";\nimport { createTheme } from \"@mui/material/styles\";\n\nimport { lightPalette } from \"./palette/lightPalette\";\nimport { darkPalette } from \"./palette/darkPalette\";\nimport { typography } from \"./typography\";\nimport { RefinePalettes } from \"./palette\";\n\nconst commonThemeProperties: ThemeOptions = {\n    shape: {\n        borderRadius: 6,\n    },\n    typography: {\n        ...typography,\n    },\n};\n\nconst LightTheme = createTheme({\n    ...commonThemeProperties,\n    palette: lightPalette,\n    components: {\n        MuiAppBar: {\n            styleOverrides: {\n                colorDefault: {\n                    backgroundColor: \"#fff\",\n                },\n            },\n        },\n        MuiPaper: {\n            styleOverrides: {\n                root: {\n                    backgroundImage:\n                        \"linear-gradient(rgba(255, 255, 255, 0.01), rgba(255, 255, 255, 0.01))\",\n                },\n            },\n        },\n        MuiTypography: {\n            styleOverrides: {\n                h5: {\n                    fontWeight: 800,\n                    lineHeight: \"2rem\",\n                },\n            },\n        },\n    },\n});\n\nconst DarkTheme = createTheme({\n    ...commonThemeProperties,\n    palette: darkPalette,\n    components: {\n        MuiPaper: {\n            styleOverrides: {\n                root: {\n                    backgroundImage:\n                        \"linear-gradient(rgba(255, 255, 255, 0.025), rgba(255, 255, 255, 0.025))\",\n                },\n            },\n        },\n        MuiAppBar: {\n            defaultProps: {\n                color: \"transparent\",\n            },\n        },\n        MuiTypography: {\n            styleOverrides: {\n                h5: {\n                    fontWeight: 800,\n                    lineHeight: \"2rem\",\n                },\n            },\n        },\n    },\n});\n\nconst RefineThemes = Object.keys(RefinePalettes).reduce((acc, key) => {\n    const paletteName = key as keyof typeof RefinePalettes;\n\n    return {\n        ...acc,\n        [key]: createTheme({\n            palette: {\n                ...RefinePalettes[paletteName],\n            },\n            components: {\n                MuiButton: {\n                    styleOverrides: {\n                        root: ({ ownerState }) => ({\n                            ...(ownerState.variant === \"contained\" &&\n                                ownerState.color === \"primary\" && {\n                                    color: \"#fff\",\n                                }),\n                        }),\n                    },\n                },\n            },\n        }),\n    };\n}, {}) as Record<keyof typeof RefinePalettes, Theme>;\n\nexport { LightTheme, DarkTheme, RefineThemes };\n","import type { PaletteOptions } from \"@mui/material/styles\";\n\nexport const lightPalette: PaletteOptions = {\n    mode: \"light\",\n    primary: {\n        main: \"#67be23\",\n        contrastText: \"#fff\",\n    },\n    secondary: {\n        main: \"#2A132E\",\n        contrastText: \"#fff\",\n    },\n    background: {\n        default: \"#f0f0f0\",\n        paper: \"#ffffff\",\n    },\n    success: {\n        main: \"#67be23\",\n        contrastText: \"#fff\",\n    },\n    error: {\n        main: \"#fa541c\",\n        contrastText: \"#fff\",\n    },\n    warning: {\n        main: \"#fa8c16\",\n        contrastText: \"#fff\",\n    },\n    info: {\n        main: \"#0b82f0\",\n        contrastText: \"#fff\",\n    },\n    divider: \"rgba(0,0,0,0)\",\n    text: {\n        primary: \"#626262\",\n        secondary: \"#9f9f9f\",\n        disabled: \"#c1c1c1\",\n    },\n};\n","import type { PaletteOptions } from \"@mui/material/styles\";\n\nexport const darkPalette: PaletteOptions = {\n    mode: \"dark\",\n    primary: {\n        main: \"#67be23\",\n        contrastText: \"#fff\",\n    },\n    secondary: {\n        main: \"#2A132E\",\n        contrastText: \"#fff\",\n    },\n    background: {\n        default: \"#212121\",\n        paper: \"#242424\",\n    },\n    success: {\n        main: \"#67be23\",\n        contrastText: \"#fff\",\n    },\n    error: {\n        main: \"#ee2a1e\",\n        contrastText: \"#fff\",\n    },\n    warning: {\n        main: \"#fa8c16\",\n        contrastText: \"#fff\",\n    },\n    info: {\n        main: \"#1890ff\",\n        contrastText: \"#fff\",\n    },\n    divider: \"rgba(0,0,0,0)\",\n    text: {\n        primary: \"#fff\",\n        secondary: \"rgba(255,255,255,0.7)\",\n        disabled: \"#d1d1d1\",\n    },\n};\n","import type { TypographyVariantsOptions } from \"@mui/material/styles\";\n\nexport const typography: TypographyVariantsOptions = {\n    fontFamily: [\n        \"Montserrat\",\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n};\n","export const RefinePalettes = {\n    Blue: {\n        mode: \"light\",\n        primary: {\n            main: \"#1976D2\",\n            light: \"#4791db\",\n            dark: \"#115293\",\n        },\n    },\n    BlueDark: {\n        mode: \"dark\",\n        primary: {\n            main: \"#67b7f7\",\n            light: \"#85c5f8\",\n            dark: \"#4880ac\",\n        },\n    },\n    Purple: {\n        mode: \"light\",\n        primary: {\n            main: \"#7B1FA2\",\n            light: \"#954bb4\",\n            dark: \"#561571\",\n        },\n    },\n    PurpleDark: {\n        mode: \"dark\",\n        primary: {\n            main: \"#AB47BC\",\n            light: \"#bb6bc9\",\n            dark: \"#773183\",\n        },\n    },\n    Magenta: {\n        mode: \"light\",\n        primary: {\n            main: \"#C2185B\",\n            light: \"#ce467b\",\n            dark: \"#87103f\",\n        },\n    },\n    MagentaDark: {\n        mode: \"dark\",\n        primary: {\n            main: \"#EC407A\",\n            light: \"#ef6694\",\n            dark: \"#a52c55\",\n        },\n    },\n    Red: {\n        mode: \"light\",\n        primary: {\n            main: \"#D32F2F\",\n            light: \"#db5858\",\n            dark: \"#932020\",\n        },\n    },\n    RedDark: {\n        mode: \"dark\",\n        primary: {\n            main: \"#EF5350\",\n            light: \"#f27573\",\n            dark: \"#a73a38\",\n        },\n    },\n    Orange: {\n        mode: \"light\",\n        primary: {\n            main: \"#F57C00\",\n            light: \"#f79633\",\n            dark: \"#ab5600\",\n        },\n    },\n    OrangeDark: {\n        mode: \"dark\",\n        primary: {\n            main: \"#FFA726\",\n            light: \"#ffb851\",\n            dark: \"#b2741a\",\n        },\n    },\n    Yellow: {\n        mode: \"light\",\n        primary: {\n            main: \"#FFA000\",\n            light: \"#ffb333\",\n            dark: \"#b27000\",\n        },\n    },\n    YellowDark: {\n        mode: \"dark\",\n        primary: {\n            main: \"#FFCA28\",\n            light: \"#ffd453\",\n            dark: \"#E87040\",\n        },\n    },\n    Green: {\n        mode: \"light\",\n        primary: {\n            main: \"#689F38\",\n            light: \"#86b25f\",\n            dark: \"#486f27\",\n        },\n    },\n    GreenDark: {\n        mode: \"dark\",\n        primary: {\n            main: \"#9CCC65\",\n            light: \"#afd683\",\n            dark: \"#6d8e46\",\n        },\n    },\n} as const;\n","import React from \"react\";\nimport { NotificationProvider } from \"@refinedev/core\";\n\nimport { useSnackbar } from \"notistack\";\n\nimport { CircularDeterminate } from \"@components\";\n\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport UndoOutlined from \"@mui/icons-material/UndoOutlined\";\n\nexport const notificationProvider = (): NotificationProvider => {\n    const { closeSnackbar, enqueueSnackbar } = useSnackbar();\n\n    const notificationProvider: NotificationProvider = {\n        open: ({\n            message,\n            type,\n            undoableTimeout,\n            key,\n            cancelMutation,\n            description,\n        }) => {\n            if (type === \"progress\") {\n                const action = (key: any) => (\n                    <IconButton\n                        onClick={() => {\n                            cancelMutation?.();\n                            closeSnackbar(key);\n                        }}\n                        color=\"inherit\"\n                    >\n                        <UndoOutlined />\n                    </IconButton>\n                );\n                enqueueSnackbar(\n                    <>\n                        <CircularDeterminate\n                            undoableTimeout={undoableTimeout ?? 0}\n                            message={message}\n                        />\n                    </>,\n                    {\n                        action,\n                        anchorOrigin: {\n                            vertical: \"top\",\n                            horizontal: \"right\",\n                        },\n                        preventDuplicate: true,\n                        key,\n                        autoHideDuration: (undoableTimeout ?? 0) * 1000,\n                        disableWindowBlurListener: true,\n                    },\n                );\n            } else {\n                enqueueSnackbar(\n                    <Box>\n                        <Typography variant=\"subtitle2\" component=\"h6\">\n                            {description}\n                        </Typography>\n                        <Typography variant=\"caption\" component=\"p\">\n                            {message}\n                        </Typography>\n                    </Box>,\n                    {\n                        variant: type,\n                        anchorOrigin: {\n                            vertical: \"top\",\n                            horizontal: \"right\",\n                        },\n                        disableWindowBlurListener: true,\n                    },\n                );\n            }\n        },\n        close: (key) => {\n            closeSnackbar(key);\n        },\n    };\n\n    return notificationProvider;\n};\n","import { styled } from \"@mui/material/styles\";\nimport { SnackbarProvider } from \"notistack\";\n\nexport const RefineSnackbarProvider = styled(SnackbarProvider)`\n    &.SnackbarItem-contentRoot {\n        background-color: ${(props) => props.theme.palette.background.default};\n        color: ${(props) => props.theme.palette.primary.main};\n    }\n    &.SnackbarItem-variantSuccess {\n        background-color: ${(props) => props.theme.palette.success.main};\n        color: ${(props) => props.theme.palette.success.contrastText};\n    }\n    &.SnackbarItem-variantError {\n        background-color: ${(props) => props.theme.palette.error.main};\n        color: ${(props) => props.theme.palette.error.contrastText};\n    }\n    &.SnackbarItem-variantInfo {\n        background-color: ${(props) => props.theme.palette.info.main};\n        color: ${(props) => props.theme.palette.info.contrastText};\n    }\n    &.SnackbarItem-variantWarning {\n        background-color: ${(props) => props.theme.palette.warning.main};\n        color: ${(props) => props.theme.palette.warning.contrastText};\n    }\n`;\n"],"mappings":"iFAOA,OACI,oBAAAA,GACA,gBAAAC,GACmB,mBAAnBC,GACA,eAAAC,OACG,YCZP,OAAOC,OAAW,QAClB,OAAOC,OAAS,oBCDhB,OAAOC,GAAS,YAAAC,OAAgB,QAEhC,OAAOC,OAAS,oBAChB,OAAOC,OAAY,uBACnB,OAAOC,OAAU,qBACjB,OAAOC,OAAoB,+BAC3B,OAAOC,OAAkB,6BACzB,OAAOC,OAAkB,6BACzB,OAAOC,OAAc,yBACrB,OAAOC,OAAa,wBACpB,OAAOC,OAAY,uBACnB,OAAOC,OAAgB,2BAEvB,OAAOC,OAAkB,mCACzB,OAAOC,OAAY,6BACnB,OAAOC,OAAgB,iCACvB,OAAOC,OAAgB,iCACvB,OAAOC,OAAiB,kCACxB,OAAOC,OAAkB,mCACzB,OAAOC,OAAiB,kCACxB,OAAOC,OAAe,gCAEtB,OACI,aAAAC,GAEA,4BAAAC,GACA,aAAAC,GACA,YAAAC,GACA,gBAAAC,GACA,oBAAAC,GACA,iBAAAC,GACA,WAAAC,GACA,WAAAC,GACA,oBAAAC,GACA,yBAAAC,GACA,qBAAAC,GACA,sBAAAC,OACG,kBAMA,IAAMC,GAA0CC,EAAA,CAAC,CACpD,MAAOC,EACP,OAAAC,EACA,KAAAC,CACJ,IAAM,CACF,GAAM,CAACC,EAAWC,CAAY,EAAIC,GAAS,EAAK,EAC1C,CAACC,EAAQC,CAAS,EAAIF,GAAS,EAAK,EAEpCG,EAAcT,EAAA,IACZI,EAAkB,GACf,IAFS,eAKdM,EAAIC,GAAa,EACjBC,EAAaC,GAAc,EAC3BC,EAAOC,GAAQ,EACf,CAAE,KAAMC,CAAW,EAAIC,GAAiB,EACxCC,EAAaN,IAAe,SAAWI,EAAaF,EACpD,CAAE,aAAAK,CAAa,EAAIC,GAAiB,EACpCC,EAAYV,GAAa,EACzB,CAAE,SAAAW,EAAU,YAAAC,CAAY,EAAIC,GAAmB,EAE/C,CAAE,UAAAC,EAAW,YAAAC,EAAa,gBAAAC,CAAgB,EAAIC,GAAQ,CAAE,KAAAzB,CAAK,CAAC,EAC9D0B,EAAwBC,GAAyB,EACjDC,EAAmBC,GAAS,EAC5BC,EAAeC,GAAsB,EACrC,CAAE,OAAQC,CAAa,EAAIC,GAAU,CACvC,+BAAgC,GAAQH,GAAA,MAAAA,EAAc,SAC1D,CAAC,EAEK,CAACI,EAAMC,CAAO,EAAIhC,GAA+B,CAAC,CAAC,EAEzDiC,EAAM,UAAU,IAAM,CAClBD,EAASE,GAAa,CAElB,IAAMC,EADyB,OAAO,KAAKD,CAAQ,EACb,OACjCE,GAAQF,EAASE,CAAG,CACzB,EAEMC,EAAa,IAAI,IAAI,CACvB,GAAGF,EACH,GAAGd,CACP,CAAC,EAID,OAHyB,OAAO,YAC5B,MAAM,KAAKgB,EAAW,OAAO,CAAC,EAAE,IAAKD,GAAQ,CAACA,EAAK,EAAI,CAAC,CAC5D,CAEJ,CAAC,CACL,EAAG,CAACf,CAAe,CAAC,EAEpB,IAAMiB,EAAgB3C,GAAkB8B,GAAoBc,GAEtDC,EAAc9C,EAAC0C,GAAgB,CACjCJ,EAAQ,CAAE,GAAGD,EAAM,CAACK,CAAG,EAAG,CAACL,EAAKK,CAAG,CAAE,CAAC,CAC1C,EAFoB,eAIdK,EAAiB/C,EAAA,CAACgD,EAAmBtB,IAChCsB,EAAK,IAAKC,GAAoB,CACjC,GAAM,CACF,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,KAAAC,EACA,SAAAC,EACA,WAAAC,GACA,KAAApD,EACA,QAAAqD,EACJ,EAAIP,EACEQ,GAASpB,EAAKY,EAAK,KAAO,EAAE,GAAK,GAEjCS,GAAaT,EAAK,MAAQvB,EAC1BiC,GACFC,GAAkBzD,GAAA,YAAAA,EAAM,OAAQqD,IAAA,YAAAA,GAAS,OAAQD,EAAU,IAC3D,OAGJ,OAAID,EAAS,OAAS,EAEdf,EAAA,cAACsB,GAAA,CACG,IAAKZ,EAAK,IACV,SAAUI,EAAK,YAAY,EAC3B,OAAO,OACP,OAAQ,CACJ,SAAUJ,CACd,GAEAV,EAAA,cAAC,OAAI,IAAKU,EAAK,KACXV,EAAA,cAACuB,GAAA,CACG,MAAOX,GAASE,EAChB,UAAU,QACV,qBAAsB,CAACjD,EACvB,MAAK,IAELmC,EAAA,cAACwB,GAAA,CACG,QAAS,IAAM,CACP3D,GACAC,EAAa,EAAK,EACboD,IACDX,EAAYG,EAAK,KAAO,EAAE,GAG9BH,EAAYG,EAAK,KAAO,EAAE,CAElC,EACA,GAAI,CACA,GAAIU,GAAW,EAAI,EACnB,eAAgB,SAChB,iBAAkB,CACd,UAAW,CACP,gBAAiB,aACrB,EACA,gBAAiB,aACrB,CACJ,GAEApB,EAAA,cAACyB,GAAA,CACG,GAAI,CACA,eAAgB,SAChB,SAAU,GACV,MAAO,wBACX,GAECd,GAAQX,EAAA,cAAC0B,GAAA,IAAa,CAC3B,EACA1B,EAAA,cAAC2B,GAAA,CACG,QAASf,EACT,uBAAwB,CACpB,OAAQ,GACR,SAAU,OACV,WAAYO,GACN,OACA,QACV,EACJ,EACC,CAACtD,IACGqD,GACGlB,EAAA,cAAC4B,GAAA,IAAW,EAEZ5B,EAAA,cAAC6B,GAAA,IAAW,EAExB,CACJ,EACC,CAAChE,GACEmC,EAAA,cAAC8B,GAAA,CACG,GAAIhC,EAAKY,EAAK,KAAO,EAAE,EACvB,QAAQ,OACR,cAAa,IAEbV,EAAA,cAAC+B,GAAA,CAAK,UAAU,MAAM,eAAc,IAC/BvB,EAAeO,EAAU5B,CAAW,CACzC,CACJ,CAER,CACJ,EAKJa,EAAA,cAACsB,GAAA,CACG,IAAKZ,EAAK,IACV,SAAUI,EAAK,YAAY,EAC3B,OAAO,OACP,OAAQ,CAAE,SAAUJ,CAAK,GAEzBV,EAAA,cAACuB,GAAA,CACG,MAAOX,GAASE,EAChB,UAAU,QACV,qBAAsB,CAACjD,EACvB,MAAK,IAELmC,EAAA,cAACwB,GAAA,CACG,UAAW7C,EACX,GAAIkC,EACJ,SAAUM,GACV,QAAS,IAAM,CACXlD,EAAU,EAAK,CACnB,EACA,GAAI,CACA,GAAImD,GAAW,EAAI,EACnB,GAAIA,GAAW,KAAO,EACtB,iBAAkB,CACd,UAAW,CACP,gBAAiB,aACrB,EACA,gBAAiB,aACrB,EACA,eAAgB,QACpB,GAEApB,EAAA,cAACyB,GAAA,CACG,GAAI,CACA,eAAgB,SAChB,SAAU,GACV,MAAO,wBACX,GAECd,GAAQX,EAAA,cAAC0B,GAAA,IAAa,CAC3B,EACA1B,EAAA,cAAC2B,GAAA,CACG,QAASf,EACT,uBAAwB,CACpB,OAAQ,GACR,SAAU,OACV,WAAYO,GAAa,OAAS,QACtC,EACJ,CACJ,CACJ,CACJ,CAER,CAAC,EA3JkB,kBA8JjBa,EAAYpD,EACdoB,EAAA,cAACsB,GAAA,CAAU,SAAS,YAAY,OAAO,QACnCtB,EAAA,cAACuB,GAAA,CACG,MAAOzC,EAAU,kBAAmB,WAAW,EAC/C,UAAU,QACV,qBAAsB,CAACjB,EACvB,MAAK,IAELmC,EAAA,cAACwB,GAAA,CACG,UAAW7C,EACX,GAAG,IACH,SAAUQ,IAAgB,IAC1B,QAAS,IAAM,CACXlB,EAAU,EAAK,CACnB,EACA,GAAI,CACA,GAAI,EACJ,GAAI,EACJ,iBAAkB,CACd,UAAW,CACP,gBAAiB,aACrB,EACA,gBAAiB,aACrB,EACA,eAAgB,QACpB,GAEA+B,EAAA,cAACyB,GAAA,CACG,GAAI,CACA,eAAgB,SAChB,SAAU,GACV,MAAO,wBACX,GAEAzB,EAAA,cAACiC,GAAA,IAAU,CACf,EACAjC,EAAA,cAAC2B,GAAA,CACG,QAAS7C,EAAU,kBAAmB,WAAW,EACjD,uBAAwB,CACpB,OAAQ,GACR,SAAU,OACV,WAAYK,IAAgB,IAAM,OAAS,QAC/C,EACJ,CACJ,CACJ,CACJ,EACA,KAEE+C,EAAezE,EAAA,IAAM,CACnBsB,EACgB,OAAO,QACnBD,EACI,yBACA,2DACJ,CACJ,IAGIE,EAAY,EAAK,EACjBY,EAAa,GAGjBA,EAAa,CAErB,EAhBqB,gBAkBfuC,EAAS7C,GACXU,EAAA,cAACuB,GAAA,CACG,MAAOpD,EAAE,iBAAkB,QAAQ,EACnC,UAAU,QACV,qBAAsB,CAACN,EACvB,MAAK,IAELmC,EAAA,cAACwB,GAAA,CACG,IAAI,SACJ,QAASU,EACT,GAAI,CAAE,eAAgB,QAAS,GAE/BlC,EAAA,cAACyB,GAAA,CACG,GAAI,CACA,eAAgB,SAChB,SAAU,GACV,MAAO,wBACX,GAEAzB,EAAA,cAACoC,GAAA,IAAO,CACZ,EACApC,EAAA,cAAC2B,GAAA,CACG,QAASxD,EAAE,iBAAkB,QAAQ,EACrC,uBAAwB,CACpB,OAAQ,GACR,SAAU,MACd,EACJ,CACJ,CACJ,EAGEkE,EAAQ7B,EAAetB,EAAWC,CAAW,EAoB7CmD,EACFtC,EAAA,cAAC+B,GAAA,CAAK,eAAc,GAAC,GAAI,CAAE,GAAI,EAAG,MAAO,wBAAyB,GAnBlDtE,EAAA,IACZE,EACOA,EAAO,CACV,UAAAqE,EACA,OAAAG,EACA,MAAAE,EACA,UAAAxE,CACJ,CAAC,EAGDmC,EAAA,cAAAA,EAAA,cACKgC,EACAK,EACAF,CACL,EAdY,eAoBC,CACjB,EAGJ,OACInC,EAAA,cAAAA,EAAA,cACIA,EAAA,cAACuC,GAAA,CACG,GAAI,CACA,MAAO,CAAE,GAAIrE,EAAY,CAAE,EAC3B,QAAS,CACL,GAAI,OACJ,GAAI,OACR,EACA,WAAY,iBAChB,EACJ,EACA8B,EAAA,cAACuC,GAAA,CACG,UAAU,MACV,GAAI,CACA,SAAU,QACV,OAAQ,KACR,MAAO,CAAE,GAAIrE,EAAY,CAAE,EAC3B,QAAS,MACb,GAEA8B,EAAA,cAACwC,GAAA,CACG,QAAQ,YACR,KAAMxE,EACN,QAAS,IAAMC,EAAU,EAAK,EAC9B,WAAY,CACR,YAAa,EACjB,EACA,GAAI,CACA,QAAS,CAAE,GAAI,QAAS,GAAI,MAAO,EACnC,qBAAsB,CAClB,MAAO,IACP,QAAS,gBACb,CACJ,GAEA+B,EAAA,cAACuC,GAAA,CACG,GAAI,CACA,OAAQ,GACR,QAAS,OACT,WAAY,SACZ,eAAgB,QACpB,GAEAvC,EAAA,cAACK,EAAA,CAAc,UAAW,GAAO,CACrC,EACCiC,CACL,EACAtC,EAAA,cAACwC,GAAA,CACG,QAAQ,YACR,WAAY,CAAE,UAAW,CAAE,EAC3B,GAAI,CACA,QAAS,CAAE,GAAI,OAAQ,GAAI,OAAQ,EACnC,qBAAsB,CAClB,MAAOtE,EACP,QAAS,iBACT,SAAU,SACV,WACI,8CACR,CACJ,EACA,KAAI,IAEJ8B,EAAA,cAACuC,GAAA,CACG,GAAI,CACA,OAAQ,GACR,QAAS,OACT,WAAY,SACZ,eAAgB,QACpB,GAEAvC,EAAA,cAACK,EAAA,CAAc,UAAWxC,EAAW,CACzC,EACAmC,EAAA,cAACuC,GAAA,CACG,GAAI,CACA,SAAU,EACV,UAAW,SACX,UAAW,MACf,GAECD,CACL,EACAtC,EAAA,cAACyC,GAAA,CACG,GAAI,CACA,WAAY,iBACZ,MAAO,yBACP,UAAW,SACX,aAAc,EACd,UAAW,qBACf,EACA,UAAS,GACT,KAAK,QACL,QAAS,IAAM3E,EAAc4E,GAAS,CAACA,CAAI,GAE1C7E,EAAYmC,EAAA,cAAC2C,GAAA,IAAa,EAAK3C,EAAA,cAAC4C,GAAA,IAAY,CACjD,CACJ,EACA5C,EAAA,cAACuC,GAAA,CACG,GAAI,CACA,QAAS,CAAE,GAAI,QAAS,GAAI,MAAO,EACnC,SAAU,QACV,IAAK,OACL,KAAM,MACN,aAAc,cACd,QAAS,iBACT,OAAQ,KACR,MAAO,MACX,GAEAvC,EAAA,cAAC6C,GAAA,CACG,GAAI,CAAE,MAAO,OAAQ,MAAO,MAAO,EACnC,QAAS,IAAM5E,EAAWyE,GAAS,CAACA,CAAI,GAExC1C,EAAA,cAAC8C,GAAA,IAAY,CACjB,CACJ,CACJ,CACJ,CAER,EA1cuD,SC3CvD,OAAOC,OAAW,QAClB,OAAS,kBAAAC,GAAgB,yBAAAC,OAA6B,kBAEtD,OAAOC,OAAY,uBACnB,OAAOC,OAAW,sBAClB,OAAOC,OAAa,wBACpB,OAAOC,OAAgB,2BACvB,OAAOC,OAAY,uBAIZ,IAAMC,GAA4CC,EAAA,IAAM,CAC3D,IAAMC,EAAeC,GAAsB,EACrC,CAAE,KAAMC,CAAK,EAAIC,GAAe,CAClC,+BAAgC,GAAQH,GAAA,MAAAA,EAAc,SAC1D,CAAC,EAID,OAF2BE,IAASA,EAAK,MAAQA,EAAK,QAGlDE,GAAA,cAACC,GAAA,CAAO,MAAM,UAAU,SAAS,SAAS,UAAW,GACjDD,GAAA,cAACE,GAAA,KACGF,GAAA,cAACG,GAAA,CACG,UAAU,MACV,MAAM,OACN,eAAe,WACf,WAAW,UAEXH,GAAA,cAACG,GAAA,CACG,UAAU,MACV,IAAI,OACJ,WAAW,SACX,eAAe,UAEfH,GAAA,cAACI,GAAA,CAAW,QAAQ,aACfN,GAAA,YAAAA,EAAM,IACX,EACAE,GAAA,cAACK,GAAA,CAAO,IAAKP,GAAA,YAAAA,EAAM,OAAQ,IAAKA,GAAA,YAAAA,EAAM,KAAM,CAChD,CACJ,CACJ,CACJ,EACA,IACR,EAhCyD,UFAlD,IAAMQ,GAA4CC,EAAA,CAAC,CACtD,MAAAC,EACA,OAAAC,EACA,MAAAC,EACA,OAAAC,EACA,cAAAC,EACA,SAAAC,CACJ,IAKQC,GAAA,cAACC,GAAA,CAAI,QAAQ,OAAO,cAAc,OAC9BD,GAAA,cALcN,GAASA,GAKtB,CAAc,MAAOE,EAAO,EAC7BI,GAAA,cAACC,GAAA,CACG,GAAI,CACA,QAAS,OACT,cAAe,SACf,KAAM,EACN,UAAW,OACf,GAEAD,GAAA,cAbWL,GAAUA,GAapB,IAAe,EAChBK,GAAA,cAACC,GAAA,CACG,UAAU,OACV,GAAI,CACA,EAAG,CAAE,GAAI,EAAG,GAAI,EAAG,GAAI,CAAE,EACzB,SAAU,EACV,QAAUC,GAAUA,EAAM,QAAQ,WAAW,OACjD,GAECH,CACL,EACCF,GAAUG,GAAA,cAACH,EAAA,IAAO,CACvB,EACCC,GAAiBE,GAAA,cAACF,EAAA,IAAc,CACrC,EApCiD,UGXzD,OAAOK,OAAW,QAClB,OACI,oBAAAC,GAEA,WAAAC,GACA,iBAAAC,OACG,kBAEP,OAAOC,OAAY,uBAEZ,IAAMC,GAA8BC,EAAA,CAAC,CAAE,UAAAC,CAAU,IAAM,CAC1D,IAAMC,EAAaC,GAAc,EAC3BC,EAAOC,GAAQ,EACf,CAAE,KAAMC,CAAW,EAAIC,GAAiB,EAI9C,OACIC,GAAA,cAACC,GAAA,CAAO,UAAS,GAAC,QAAQ,OAAO,cAAa,IAC1CD,GAAA,cAJWN,IAAe,SAAWI,EAAaF,EAIjD,CAAW,GAAG,KACVH,EACGO,GAAA,cAAC,OACG,IAAI,sEACJ,IAAI,SACJ,MAAM,OACN,MAAO,CAAE,UAAW,MAAO,EAC/B,EAEAA,GAAA,cAAC,OACG,IAAI,iEACJ,IAAI,SACJ,MAAM,QACV,CAER,CACJ,CAER,EA3B2C,SCV3C,OAAOE,IAAS,YAAAC,OAAgB,QAChC,OAAOC,OAAS,oBCDhB,OAAOC,GAAS,YAAAC,OAAgB,QAEhC,OAAOC,OAAS,oBAChB,OAAOC,OAAY,uBACnB,OAAOC,OAAU,qBACjB,OAAOC,OAAoB,+BAC3B,OAAOC,OAAkB,6BACzB,OAAOC,OAAkB,6BACzB,OAAOC,OAAc,yBACrB,OAAOC,OAAa,wBACpB,OAAOC,OAAgB,2BACvB,OAAOC,OAAW,sBAElB,OAAOC,OAAkB,mCACzB,OAAOC,OAAY,6BACnB,OAAOC,OAAgB,iCACvB,OAAOC,OAAgB,iCACvB,OAAOC,OAAiB,kCACxB,OAAOC,OAAiB,kCACxB,OAAOC,OAAe,gCAEtB,OACI,aAAAC,GAEA,4BAAAC,GACA,aAAAC,GACA,YAAAC,GACA,gBAAAC,GACA,oBAAAC,GACA,iBAAAC,GACA,WAAAC,GACA,WAAAC,GACA,oBAAAC,GACA,yBAAAC,GACA,qBAAAC,GACA,sBAAAC,OACG,kBASA,IAAMC,GAAsDC,EAAA,CAAC,CAChE,MAAOC,EACP,OAAAC,EACA,KAAAC,EACA,YAAAC,EACA,mBAAAC,CACJ,IAAM,CACF,GAAM,CAACC,EAAQC,CAAS,EAAIC,GAAS,EAAK,EAEpCC,EAAcT,EAAA,IACZI,EAAoB,IACjB,GAFS,eAKdM,EAAIC,GAAa,EACjBC,EAAaC,GAAc,EAC3BC,EAAOC,GAAQ,EACf,CAAE,KAAMC,CAAW,EAAIC,GAAiB,EACxCC,EAAaN,IAAe,SAAWI,EAAaF,EACpD,CAAE,aAAAK,CAAa,EAAIC,GAAiB,EACpCC,EAAYV,GAAa,EAEzB,CAAE,UAAAW,EAAW,YAAAC,EAAa,gBAAAC,CAAgB,EAAIC,GAAQ,CAAE,KAAAtB,CAAK,CAAC,EAC9DuB,EAAwBC,GAAyB,EACjDC,EAAmBC,GAAS,EAC5BC,EAAeC,GAAsB,EACrC,CAAE,SAAAC,EAAU,YAAAC,CAAY,EAAIC,GAAmB,EAC/C,CAAE,OAAQC,CAAa,EAAIC,GAAU,CACvC,+BAAgC,GAAQN,GAAA,MAAAA,EAAc,SAC1D,CAAC,EAEK,CAACO,EAAMC,CAAO,EAAI9B,GAA+B,CAAC,CAAC,EAEzD+B,EAAM,UAAU,IAAM,CAClBD,EAASE,GAAa,CAElB,IAAMC,EADyB,OAAO,KAAKD,CAAQ,EACb,OACjCE,GAAQF,EAASE,CAAG,CACzB,EAEMC,EAAa,IAAI,IAAI,CACvB,GAAGF,EACH,GAAGjB,CACP,CAAC,EAID,OAHyB,OAAO,YAC5B,MAAM,KAAKmB,EAAW,OAAO,CAAC,EAAE,IAAKD,GAAQ,CAACA,EAAK,EAAI,CAAC,CAC5D,CAEJ,CAAC,CACL,EAAG,CAAClB,CAAe,CAAC,EAEpB,IAAMoB,EAAgB3C,GAAkB2B,GAAoBiB,GAEtDC,EAAc9C,EAAC0C,GAAgB,CACjCJ,EAAQ,CAAE,GAAGD,EAAM,CAACK,CAAG,EAAG,CAACL,EAAKK,CAAG,CAAE,CAAC,CAC1C,EAFoB,eAIdK,EAAiB/C,EAAA,CAACgD,EAAmBzB,IAChCyB,EAAK,IAAKC,GAAoB,CACjC,GAAM,CACF,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,KAAAC,EACA,SAAAC,EACA,WAAAC,GACA,KAAApD,EACA,QAAAqD,EACJ,EAAIP,EACEQ,GAASpB,EAAKY,EAAK,KAAO,EAAE,GAAK,GAEjCS,GAAaT,EAAK,MAAQ1B,EAC1BoC,GACFC,GAAkBzD,GAAA,YAAAA,EAAM,OAAQqD,IAAA,YAAAA,GAAS,OAAQD,EAAU,IAC3D,OAGJ,OAAID,EAAS,OAAS,EAEdf,EAAA,cAACsB,GAAA,CACG,IAAKZ,EAAK,IACV,SAAUI,EAAK,YAAY,EAC3B,OAAO,OACP,OAAQ,CACJ,SAAUJ,CACd,GAEAV,EAAA,cAAC,OAAI,IAAKU,EAAK,KACXV,EAAA,cAACuB,GAAA,CACG,MAAOX,GAASE,EAChB,UAAU,QACV,qBAAsBjD,EACtB,MAAK,IAELmC,EAAA,cAACwB,GAAA,CACG,QAAS,IAAM,CACN3D,EAMD0C,EAAYG,EAAK,KAAO,EAAE,GAL1B5C,GAAA,MAAAA,EAAqB,IAChBoD,IACDX,EAAYG,EAAK,KAAO,EAAE,EAKtC,EACA,GAAI,CACA,GAAIU,GAAW,EAAI,EACnB,eAAgB,SAChB,UAAW,KACf,GAEApB,EAAA,cAACyB,GAAA,CACG,GAAI,CACA,eAAgB,SAChB,SAAU,OACV,WAAY,oBACZ,YAAa5D,EACP,OACA,MACN,MAAO,cACX,GAEC8C,GAAQX,EAAA,cAAC0B,GAAA,IAAa,CAC3B,EACA1B,EAAA,cAAC2B,GAAA,CACG,QAASf,EACT,uBAAwB,CACpB,OAAQ,GACR,SAAU,MACd,EACJ,EACCM,GACGlB,EAAA,cAAC4B,GAAA,CACG,GAAI,CACA,MAAO,WACX,EACJ,EAEA5B,EAAA,cAAC6B,GAAA,CACG,GAAI,CACA,MAAO,WACX,EACJ,CAER,CACJ,EACChE,GACGmC,EAAA,cAAC8B,GAAA,CACG,GAAIhC,EAAKY,EAAK,KAAO,EAAE,EACvB,QAAQ,OACR,cAAa,IAEbV,EAAA,cAAC+B,GAAA,CAAK,UAAU,MAAM,eAAc,IAC/BvB,EAAeO,EAAU/B,CAAW,CACzC,CACJ,CAER,CACJ,EAKJgB,EAAA,cAACsB,GAAA,CACG,IAAKZ,EAAK,IACV,SAAUI,EAAK,YAAY,EAC3B,OAAO,OACP,OAAQ,CAAE,SAAUJ,CAAK,GAEzBV,EAAA,cAACuB,GAAA,CACG,MAAOX,GAASE,EAChB,UAAU,QACV,qBAAsBjD,EACtB,MAAK,IAELmC,EAAA,cAACwB,GAAA,CACG,UAAW7C,EACX,GAAIkC,EACJ,SAAUM,GACV,QAAS,IAAM,CACXnD,EAAU,EAAK,CACnB,EACA,GAAI,CACA,GAAIoD,GAAW,EAAI,EACnB,GAAIA,GAAW,KAAO,EACtB,eAAgB,SAChB,MAAOD,GACD,eACA,cACV,GAEAnB,EAAA,cAACyB,GAAA,CACG,GAAI,CACA,eAAgB,SAChB,WAAY,oBACZ,YAAa5D,EAAc,OAAS,MACpC,SAAU,OACV,MAAO,cACX,GAEC8C,GAAQX,EAAA,cAAC0B,GAAA,IAAa,CAC3B,EACA1B,EAAA,cAAC2B,GAAA,CACG,QAASf,EACT,uBAAwB,CACpB,OAAQ,GACR,SAAU,MACd,EACJ,CACJ,CACJ,CACJ,CAER,CAAC,EA5JkB,kBA+JjBoB,EAAYpD,EACdoB,EAAA,cAACsB,GAAA,CAAU,SAAS,YAAY,OAAO,QACnCtB,EAAA,cAACuB,GAAA,CACG,MAAOzC,EAAU,kBAAmB,WAAW,EAC/C,UAAU,QACV,qBAAsBjB,EACtB,MAAK,IAELmC,EAAA,cAACwB,GAAA,CACG,UAAW7C,EACX,GAAG,IACH,SAAUK,IAAgB,IAC1B,QAAS,IAAM,CACXhB,EAAU,EAAK,CACnB,EACA,GAAI,CACA,GAAI,EACJ,GAAI,EACJ,eAAgB,SAChB,MACIgB,IAAgB,IACV,eACA,cACd,GAEAgB,EAAA,cAACyB,GAAA,CACG,GAAI,CACA,eAAgB,SAChB,SAAU,OACV,WAAY,oBACZ,YAAa5D,EAAc,OAAS,MACpC,MAAO,eACP,SAAU,MACd,GAEAmC,EAAA,cAACiC,GAAA,IAAU,CACf,EACAjC,EAAA,cAAC2B,GAAA,CACG,QAAS7C,EAAU,kBAAmB,WAAW,EACjD,uBAAwB,CACpB,OAAQ,GACR,SAAU,MACd,EACJ,CACJ,CACJ,CACJ,EACA,KAEEoD,EAAezE,EAAA,IAAM,CACnBgC,EACgB,OAAO,QACnBtB,EACI,yBACA,2DACJ,CACJ,IAGIuB,EAAY,EAAK,EACjBE,EAAa,GAGjBA,EAAa,CAErB,EAhBqB,gBAkBfuC,EAAShD,GACXa,EAAA,cAACuB,GAAA,CACG,MAAOpD,EAAE,iBAAkB,QAAQ,EACnC,UAAU,QACV,qBAAsBN,EACtB,MAAK,IAELmC,EAAA,cAACwB,GAAA,CACG,IAAI,SACJ,QAAS,IAAMU,EAAa,EAC5B,GAAI,CACA,eAAgB,QACpB,GAEAlC,EAAA,cAACyB,GAAA,CACG,GAAI,CACA,eAAgB,SAChB,SAAU,OACV,WAAY,oBACZ,YAAa5D,EAAc,OAAS,MACpC,WAAY,MACZ,MAAO,cACX,GAEAmC,EAAA,cAACoC,GAAA,IAAO,CACZ,EACApC,EAAA,cAAC2B,GAAA,CACG,QAASxD,EAAE,iBAAkB,QAAQ,EACrC,uBAAwB,CACpB,OAAQ,GACR,SAAU,MACd,EACJ,CACJ,CACJ,EAGEkE,EAAQ7B,EAAezB,EAAWC,CAAW,EAoB7CsD,EACFtC,EAAA,cAAC+B,GAAA,CACG,eAAc,GACd,GAAI,CACA,SAAU,EACV,WAAY,MAChB,GAxBYtE,EAAA,IACZE,EACOA,EAAO,CACV,UAAAqE,EACA,OAAAG,EACA,MAAAE,EACA,UAAW,CAACxE,CAChB,CAAC,EAGDmC,EAAA,cAAAA,EAAA,cACKgC,EACAK,EACAF,CACL,EAdY,eA0BC,CACjB,EAGJ,OACInC,EAAA,cAAAA,EAAA,cACIA,EAAA,cAACuC,GAAA,CACG,GAAI,CACA,MAAO,CAAE,GAAIrE,EAAY,CAAE,EAC3B,QAAS,CACL,GAAI,OACJ,GAAI,OACR,EACA,WAAY,iBAChB,EACJ,EACA8B,EAAA,cAACuC,GAAA,CACG,UAAU,MACV,GAAI,CACA,SAAU,QACV,OAAQ,KACR,MAAO,CAAE,GAAIrE,EAAY,CAAE,EAC3B,QAAS,MACb,GAEA8B,EAAA,cAACwC,GAAA,CACG,QAAQ,YACR,UAAW,EACX,KAAMzE,EACN,QAAS,IAAMC,EAAU,EAAK,EAC9B,WAAY,CACR,YAAa,EACjB,EACA,GAAI,CACA,QAAS,CACL,GAAI,QACJ,GAAI,MACR,CACJ,GAEAgC,EAAA,cAACuC,GAAA,CACG,GAAI,CACA,MAAOrE,EAAY,CACvB,GAEA8B,EAAA,cAACuC,GAAA,CACG,GAAI,CACA,OAAQ,GACR,QAAS,OACT,WAAY,SACZ,YAAa,OACb,SAAU,MACd,GAEAvC,EAAA,cAACK,EAAA,CAAc,UAAW,GAAO,CACrC,EACCiC,CACL,CACJ,EACAtC,EAAA,cAACwC,GAAA,CACG,QAAQ,YACR,GAAI,CACA,QAAS,CAAE,GAAI,OAAQ,GAAI,OAAQ,EACnC,qBAAsB,CAClB,MAAOtE,EACP,SAAU,SACV,WACI,8CACR,CACJ,EACA,KAAI,IAEJ8B,EAAA,cAACyC,GAAA,CACG,UAAW,EACX,GAAI,CACA,SAAU,OACV,MAAO,OACP,OAAQ,GACR,QAAS,OACT,WAAY,SACZ,eAAiB5E,EAEX,gBADA,SAEN,YAAcA,EAAkB,OAAJ,EAC5B,aAAeA,EAAkB,MAAJ,EAC7B,QAAS,WACT,aAAc,EACd,aAAe6E,GACX,aAAaA,EAAM,QAAQ,OAAO,OAC1C,GAEA1C,EAAA,cAACK,EAAA,CAAc,UAAW,CAACxC,EAAa,EACvCA,GACGmC,EAAA,cAAC2C,GAAA,CACG,KAAK,QACL,QAAS,IAAM7E,GAAA,YAAAA,EAAqB,KAEnCkC,EAAA,cAAC4C,GAAA,IAAY,CAClB,CAER,EACA5C,EAAA,cAACuC,GAAA,CACG,GAAI,CACA,SAAU,EACV,UAAW,SACX,UAAW,MACf,GAECD,CACL,CACJ,EACAtC,EAAA,cAAC2C,GAAA,CACG,GAAKD,GAAU,CACX,GAAM,CAAE,QAAAG,CAAQ,EAAIH,EACd,CAAE,KAAAI,EAAM,gBAAAC,EAAiB,QAAAC,EAAS,WAAAC,CAAW,EAC/CJ,EAEJ,MAAO,CACH,MAEUE,EADND,IAAS,QACaE,EAAQ,KACRC,EAAW,KADC,EAEtC,QAAS,CAAE,GAAI,OAAQ,GAAI,MAAO,EAClC,eAAgB,SAChB,WAAY,SACZ,SAAU,QACV,IAAK,OACL,KAAM,OACN,OAAQ,KACR,OAAQ,OACR,MAAO,MACX,CACJ,EACA,QAAS,IAAMjF,EAAWkF,GAAS,CAACA,CAAI,GAExClD,EAAA,cAACmD,GAAA,IAAY,CACjB,CACJ,CACJ,CAER,EAxemE,eC7CnE,OAAOC,OAAW,QAClB,OAAS,kBAAAC,GAAgB,yBAAAC,OAA6B,kBAEtD,OAAOC,OAAY,uBACnB,OAAOC,OAAW,sBAClB,OAAOC,OAAa,wBACpB,OAAOC,OAAgB,2BACvB,OAAOC,OAAY,uBACnB,OAAOC,OAAgB,2BAEvB,OAAOC,OAAU,2BAOV,IAAMC,GAAwDC,EAAA,CAAC,CAClE,YAAAC,EACA,mBAAAC,EACA,gBAAiBC,CACrB,IAAM,CACF,IAAMC,EAAeC,GAAsB,EACrC,CAAE,KAAMC,CAAK,EAAIC,GAAe,CAClC,+BAAgC,GAAQH,GAAA,MAAAA,EAAc,SAC1D,CAAC,EAID,OACII,GAAA,cAACC,GAAA,CAAO,SAAS,UACbD,GAAA,cAACE,GAAA,KAJgB,EAAQR,GAMjBM,GAAA,cAACG,GAAA,CACG,MAAM,UACN,aAAW,cACX,QAAS,IAAMT,GAAA,YAAAA,IACf,KAAK,QACL,GAAI,CACA,GAAI,EACJ,QAAS,CAAE,GAAI,OAAQ,GAAI,MAAO,EAClC,GAAID,GAAe,CAAE,QAAS,MAAO,CACzC,IAECE,GAAA,YAAAA,EAA2B,EAAQF,KAChCO,GAAA,cAACI,GAAA,IAAK,CAEd,EAEJJ,GAAA,cAACK,GAAA,CACG,UAAU,MACV,MAAM,OACN,eAAe,WACf,WAAW,UAEXL,GAAA,cAACK,GAAA,CACG,UAAU,MACV,IAAI,OACJ,WAAW,SACX,eAAe,UAEfL,GAAA,cAACM,GAAA,CACG,GAAI,CACA,QAAS,CAAE,GAAI,OAAQ,GAAI,OAAQ,CACvC,EACA,QAAQ,aAEPR,GAAA,YAAAA,EAAM,IACX,EACAE,GAAA,cAACO,GAAA,CAAO,IAAKT,GAAA,YAAAA,EAAM,OAAQ,IAAKA,GAAA,YAAAA,EAAM,KAAM,CAChD,CACJ,CACJ,CACJ,CAER,EA1DqE,gBFP9D,IAAMU,GAAkDC,EAAA,CAAC,CAC5D,MAAAC,EACA,OAAAC,EACA,MAAAC,EACA,OAAAC,EACA,cAAAC,EACA,SAAAC,CACJ,IAAM,CACF,GAAM,CAACC,EAAaC,CAAc,EAAIC,GAAS,EAAI,EAKnD,OACIC,GAAA,cAACC,GAAA,CAAI,QAAQ,OAAO,cAAc,OAC9BD,GAAA,cALcT,GAASW,GAKtB,CACG,MAAOT,EACP,YAAaI,EACb,mBAAqBM,GAAWL,EAAe,EAAQK,CAAO,EAClE,EACAH,GAAA,cAACC,GAAA,CACG,GAAI,CACA,QAAS,OACT,cAAe,SACf,KAAM,EACN,UAAW,OACf,GAEAD,GAAA,cAjBWR,GAAUY,GAiBpB,CACG,YAAaP,EACb,mBAAoB,IAAMC,EAAgBO,GAAS,CAACA,CAAI,EAC5D,EACAL,GAAA,cAACC,GAAA,CACG,UAAU,OACV,GAAI,CACA,EAAG,CAAE,GAAI,EAAG,GAAI,EAAG,GAAI,CAAE,EACzB,SAAU,EACV,QAAUK,GAAUA,EAAM,QAAQ,WAAW,OACjD,GAECV,CACL,EACCF,GAAUM,GAAA,cAACN,EAAA,IAAO,CACvB,EACCC,GAAiBK,GAAA,cAACL,EAAA,IAAc,CACrC,CAER,EA/C+D,gBGV/D,OAAOY,OAAW,QAClB,OAAS,oBAAAC,GAAkB,WAAAC,GAAS,iBAAAC,OAAqB,kBAEzD,OAAOC,OAAa,qBACpB,OAAOC,OAAa,wBACpB,OAAOC,OAAgB,2BAIvB,IAAMC,GAAc,iBAEdC,GACFC,GAAA,cAAC,OACG,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,MAAM,6BACN,cAAY,eAEZA,GAAA,cAAC,QACG,EAAE,8GACF,KAAK,eACT,EACAA,GAAA,cAAC,QACG,SAAS,UACT,SAAS,UACT,EAAE,uOACF,KAAK,eACT,CACJ,EAMSC,GAAsDC,EAAA,CAAC,CAChE,UAAAC,EACA,cAAAC,EACA,KAAAC,EAAON,GACP,KAAAO,EAAOR,EACX,IAAM,CACF,IAAMS,EAAaC,GAAc,EAC3BC,EAAOC,GAAQ,EACf,CAAE,KAAMC,CAAW,EAAIC,GAAiB,EAI9C,OACIZ,GAAA,cAACa,GAAA,CACG,GAAG,IACH,UALWN,IAAe,SAAWI,EAAaF,EAMlD,UAAU,OACV,GAAI,CACA,QAAS,OACT,WAAY,SACZ,IAAK,OACL,GAAGL,CACP,GAEAJ,GAAA,cAACc,GAAA,CAAQ,OAAO,OAAO,MAAM,OAAO,MAAM,WACrCT,CACL,EACC,CAACF,GACEH,GAAA,cAACe,GAAA,CACG,QAAQ,KACR,WAAY,IACZ,MAAM,eACN,SAAS,UACT,aAAa,WACb,SAAS,UAERT,CACL,CAER,CAER,EAzCmE,eCpCnE,OAAOU,OAAW,QAElB,OAAOC,OAAS,oBCFhB,OAAOC,IAAoB,YAAAC,OAAgB,QAIpC,IAAMC,GAAsBC,GAAM,cAAoC,CACzE,eAAgB,GAChB,gBAAiB,GACjB,kBAAmB,IAAG,GACtB,mBAAoB,IAAG,EAC3B,CAAC,EAEYC,GAGRC,EAAA,CAAC,CAAE,SAAAC,EAAU,sBAAAC,CAAsB,IAAM,CAC1C,GAAM,CAACC,EAAgBC,CAAiB,EAAIC,GACxCH,GAAyB,EAC7B,EACM,CAACI,EAAiBC,CAAkB,EAAIF,GAAS,EAAK,EAE5D,OACIP,GAAA,cAACD,GAAoB,SAApB,CACG,MAAO,CACH,eAAAM,EACA,gBAAAG,EACA,kBAAAF,EACA,mBAAAG,CACJ,GAECN,CACL,CAER,EAlBK,+BCdL,OAAOO,GAAwB,YAAAC,OAAgB,QAE/C,OAAOC,OAAS,oBAChB,OAAOC,OAAY,uBACnB,OAAOC,OAAU,qBACjB,OAAOC,OAAoB,+BAC3B,OAAOC,OAAkB,6BACzB,OAAOC,OAAkB,6BACzB,OAAOC,OAAc,yBACrB,OAAOC,OAAa,wBACpB,OAAOC,OAAgB,2BACvB,OAAOC,OAAW,sBAElB,OAAOC,OAAkB,mCACzB,OAAOC,OAAY,6BACnB,OAAOC,OAAgB,iCACvB,OAAOC,OAAgB,iCACvB,OAAOC,OAAiB,kCACxB,OAAOC,OAAe,gCAEtB,OACI,aAAAC,GAEA,4BAAAC,GACA,aAAAC,GACA,YAAAC,GACA,gBAAAC,GACA,oBAAAC,GACA,iBAAAC,GACA,WAAAC,GACA,WAAAC,GACA,oBAAAC,GACA,yBAAAC,GACA,qBAAAC,GACA,sBAAAC,OACG,kBCnCP,OACI,aAAaC,OAKV,kBAIP,OAAOC,OAAa,oBACpB,OAAOC,OAAe,sBAuCf,IAAMC,GAAkBC,EAK3BC,GACmC,CAxDvC,IAAAC,EAAAC,EAyDI,GAAM,CAAE,YAAAC,EAAa,wBAAAC,EAAyB,SAAAC,EAAU,SAAAC,CAAS,EAC7DC,GAA2CP,CAAK,EAEpD,MAAO,CACH,kBAAmB,CACf,QAASQ,KACLP,EAAAE,EAAY,OAAZ,YAAAF,EAAkB,OAAQ,CAAC,IAC3BC,EAAAE,EAAwB,OAAxB,YAAAF,EAA8B,OAAQ,CAAC,EACvCO,EACJ,EACA,QACIN,EAAY,YAAcC,EAAwB,WACtD,cAAe,CAACM,EAAOC,IAAU,EACzBD,GAAA,YAAAA,EAAO,QAAS,SAChBL,EAASM,CAAK,GACPD,GAAA,YAAAA,EAAO,QAAS,SACvBL,EAAS,EAAE,CAEnB,EACA,cAAgBO,GAAMA,CAC1B,EACA,SAAAP,EACA,YAAAF,EACA,wBAAAC,EACA,SAAAE,CACJ,CACJ,EAjC+B,mBClD/B,OAKI,qBAAAO,GAEA,eAAAC,GACA,YAAYC,OAGT,kBACP,OAAS,YAAAC,OAAgB,QAQzB,OAAS,UAAAC,GAAQ,YAAAC,OAAgB,uBAEjC,OAAOC,OAAoB,2BAC3B,OAAOC,OAAa,oBClBpB,OAAS,qBAAAC,OAAyB,mBAS3B,IAAMC,GAAkCC,EAC3CC,GAEeA,EAAU,IAAI,CAAC,CAAE,MAAAC,EAAO,KAAAC,CAAK,KAAO,CAC/C,MAAAD,EACA,MAAOC,GAAQ,KACnB,EAAE,EANyC,mCAUlCC,GAAkCJ,EAC3CK,GAEkBA,EAAY,IAAI,CAAC,CAAE,MAAAH,EAAO,MAAAI,CAAM,KAAO,CACrD,MAAAJ,EACA,KAAMI,CACV,EAAE,EANyC,mCAUlCC,GAAqCP,EAC9CQ,GAC+B,CAC/B,GAAI,CAACA,EACD,MAAO,KAGX,OAAQA,EAAe,CACnB,IAAK,SACL,IAAK,KACL,IAAK,IACD,MAAO,KACX,IAAK,KACL,IAAK,MACD,MAAO,KACX,IAAK,WACD,MAAO,WACX,IAAK,UACD,MAAO,KACX,IAAK,IACL,IAAK,QACD,MAAO,KACX,IAAK,KACL,IAAK,YACD,MAAO,MACX,IAAK,IACL,IAAK,SACD,MAAO,KACX,IAAK,KACL,IAAK,aACD,MAAO,MACX,IAAK,aACD,MAAO,aACX,IAAK,WACD,MAAO,WACX,IAAK,UACD,MAAO,OACX,IAAK,aACD,MAAO,QACX,QACI,OAAOA,CACf,CACJ,EA1CkD,sCA4CrCC,GAAoCT,EAAA,CAAC,CAC9C,MAAAU,EACA,cAAAC,CACJ,IAAoC,CAChC,IAAMC,EAAUF,EAAM,IAAI,CAAC,CAAE,MAAAR,EAAO,MAAAW,EAAO,SAAAC,CAAS,KACzC,CACH,MAAOZ,EACP,MAAO,CAAC,UAAW,YAAY,EAAE,SAASY,CAAQ,EAC5C,GACAD,GAAS,GACf,SAAUN,GAAmCO,CAAQ,CACzD,EACH,EAED,OAAIH,IAAkBI,GAAkB,GAC7B,CAAC,CAAE,SAAU,KAAM,MAAOH,CAAQ,CAAC,EAEvCA,CACX,EAlBiD,qCAoBpCI,GAAqChB,EAAA,CAC9Cc,EACAG,IACS,CACT,OAAQA,EAAY,CAChB,IAAK,SACD,OAAQH,EAAU,CACd,IAAK,KACD,MAAO,IACX,IAAK,KACD,MAAO,KACX,IAAK,KACD,MAAO,IACX,IAAK,MACD,MAAO,KACX,IAAK,KACD,MAAO,IACX,IAAK,MACD,MAAO,KACX,IAAK,OACD,MAAO,UACX,IAAK,QACD,MAAO,aACX,IAAK,KACD,MAAO,UACX,QACI,OAAOA,CACf,CACJ,IAAK,eACL,IAAK,UACD,OAAQA,EAAU,CACd,IAAK,KACD,MAAO,KACX,QACI,OAAOA,CACf,CACJ,KAAK,OACL,IAAK,SACD,OAAQA,EAAU,CACd,IAAK,KACD,MAAO,SACX,IAAK,WACD,MAAO,WACX,IAAK,OACD,MAAO,UACX,IAAK,QACD,MAAO,aACX,IAAK,aACD,MAAO,aACX,IAAK,WACD,MAAO,WACX,IAAK,KACD,MAAO,UACX,QACI,OAAOA,CACf,CACJ,IAAK,OACL,IAAK,WACD,OAAQA,EAAU,CACd,IAAK,KACD,MAAO,KACX,IAAK,KACD,MAAO,MACX,IAAK,KACD,MAAO,QACX,IAAK,MACD,MAAO,YACX,IAAK,KACD,MAAO,SACX,IAAK,MACD,MAAO,aACX,IAAK,OACD,MAAO,UACX,IAAK,QACD,MAAO,aACX,QACI,OAAOA,CACf,CACJ,QACI,OAAOA,CACf,CACJ,EAjFkD,sCAmFrCI,GAAoClB,EAAA,CAC7CmB,EACAC,IAC8B,CAxLlC,IAAAC,EAyLI,IAAMC,EAAoC,CAAC,EAErCC,EAAkBJ,EAAY,KAC/BK,GAAWA,EAAO,WAAa,IACpC,EAEA,OAAIJ,IACIG,IACyBF,EAAAF,EAAY,KAChCK,GAAWA,EAAO,WAAa,IACpC,IAFyB,YAAAH,EAEtB,OAEc,IAAI,CAAC,CAAE,MAAAnB,EAAO,MAAAW,EAAO,SAAAC,CAAS,IAAM,CACjD,IAAMG,EAAaG,EAAYlB,CAAK,EAEpCoB,EAAgB,KAAK,CACjB,MAAOpB,EACP,SAAUc,GACNF,EACAG,CACJ,EACA,MAAOJ,IAAU,GAAK,OAAYA,EAClC,GAAIX,EAAQY,CAChB,CAAC,CACL,CAAC,EAEAK,EAAgC,IAC7B,CAAC,CAAE,MAAAjB,EAAO,MAAAW,EAAO,SAAAC,CAAS,IAAM,CAC5B,IAAMG,EAAaG,EAAYlB,CAAK,EAEpCoB,EAAgB,KAAK,CACjB,MAAOpB,EACP,SAAUc,GACNF,EACAG,CACJ,EACA,MAAOJ,IAAU,GAAK,OAAYA,EAClC,GAAIX,EAAQY,CAChB,CAAC,CACL,CACJ,GAID,CACH,MAAOQ,EAEP,cAAeC,EACTR,GAAkB,GAClBA,GAAkB,GAC5B,CACJ,EAvDiD,qCDvE1C,SAASU,GAKd,CACE,SAAUC,EACV,eAAAC,EACA,gBAAAC,EAAkB,GAClB,WAAAC,EACA,cAAAC,EAAgB,GAChB,cAAAC,EACA,gBAAAC,EACA,yBAAAC,EAA2B,UAC3B,cAAAC,EACA,gBAAAC,EACA,QAASC,EACT,QAASC,EACT,iBAAkBC,EAClB,SAAUC,EACV,oBAAAC,EACA,kBAAAC,EACA,aAAAC,EACA,SAAUC,EACV,YAAAC,EACA,WAAAC,EACA,KAAAC,EACA,SAAAC,EACA,iBAAAC,EACA,gBAAAC,CACJ,EAKI,CAAC,EAA2D,CAC5D,IAAMC,EAAQC,GAAS,EACjBC,EAAWC,GAAYV,CAAgB,EAEvC,CAACW,EAAcC,CAAc,EAAIC,GAAiC,EAElE,CACF,iBAAAC,EACA,QAAAC,EACA,WAAAC,EACA,SAAAC,EACA,YAAAC,EACA,QAAAC,GACA,WAAAC,EACA,QAAAC,EACA,WAAAC,EACA,OAAAC,EACA,UAAAC,EACA,UAAAC,EACA,8BAAAC,EACA,SAAAC,CACJ,EAAIC,GAA0C,CAC1C,gBAAAvC,EACA,gBAAAG,EACA,eAAAR,EACA,gBAAAC,EACA,WAAAC,EACA,cAAAC,EACA,cAAAC,EACA,cAAAG,EACA,QAASE,EACT,QAASC,EACT,iBAAkBC,EAClB,yBAAAL,EACA,SAAUM,EACV,oBAAAC,EACA,kBAAAC,EACA,aAAAC,EACA,SAAUC,EACV,YAAAC,EACA,WAAAC,EACA,KAAM2B,GAAkB1B,EAAMC,CAAQ,EACtC,SAAUyB,GAAkB1B,EAAMC,CAAQ,EAC1C,iBAAAC,EACA,gBAAAC,CACJ,CAAC,EAEK,CAACwB,EAAgBC,EAAiB,EAAIlB,GAAsBM,EAAO,EAEnE,CAAE,KAAAa,EAAM,UAAAC,GAAW,UAAAC,EAAU,EAAIpB,EAEjCqB,KACD1C,GAAA,YAAAA,EAAiB,OAAQ,YAAc,SACtC2C,KACD1C,GAAA,YAAAA,EAAiB,OAAQ,YAAc,SACtC2C,GAAsBlD,IAAkB,GAAQ,MAAQ,SACxDmD,KACDpD,GAAA,YAAAA,EAAY,OAAQmD,MAAyB,MAE5CE,GACFV,GAAkBnC,GAAA,YAAAA,EAAiB,UAAWL,CAAe,GAAK,CAAC,EACjEmD,GACFX,GAAkBpC,GAAA,YAAAA,EAAiB,UAAWD,CAAe,GAAK,CAAC,EAEjEiD,GAAmBC,EAACC,IAAiB,CACnCL,IACAtB,EAAW2B,GAAO,CAAC,CAE3B,EAJyB,oBAKnBC,GAAuBF,EAACzB,IAAqB,CAC3CqB,IACApB,EAAYD,EAAQ,CAE5B,EAJ6B,wBAMvB4B,GAAwBH,EAACI,IAA6B,CACxD,IAAMC,GAAcC,GAAgCF,EAAS,EAC7DxB,EAAWyB,EAAW,CAC1B,EAH8B,yBAKxBE,GAA0BP,EAACQ,IAAiC,CAC9D,IAAMC,GAAcC,GAAkCF,EAAW,EACjEnB,GAAkBoB,EAAW,EAC7B/B,EAAW+B,GAAY,OAAQE,IAAMA,GAAE,QAAU,EAAE,CAAC,EAChDf,IACAtB,EAAW,CAAC,CAEpB,EAPgC,2BAS1BsC,GAASZ,EAAA,MAAOa,IAA4B,CAC9C,GAAIxE,EAAc,CACd,IAAMyE,GAAgB,MAAMzE,EAAawE,EAAK,EAC9CxB,GAAkByB,EAAa,EAC/BpC,EAAWoC,GAAc,OAAQH,IAAMA,GAAE,QAAU,EAAE,CAAC,EAClDf,IACAtB,EAAW,CAAC,EAGxB,EATe,UAWTyC,GAA2Bf,EAAA,IAKzBJ,GACO,CACH,eAAgB,SAChB,gBAAiB,CACb,KAAMvB,EAAU,EAChB,SAAAE,CACJ,EACA,wBAA0ByC,IAAU,CAChCjB,GAAiBiB,GAAM,IAAI,EAC3Bd,GAAqBc,GAAM,QAAQ,CACvC,CACJ,EAGG,CACH,eAAgB,QACpB,EArB6B,4BAwBjC,MAAO,CACH,iBAAA5C,EACA,cAAe,CACX,2BAA4B,GAC5B,MAAMkB,GAAA,YAAAA,EAAM,OAAQ,CAAC,EACrB,QAASvB,IAAa,OAASyB,GAAY,CAACD,GAC5C,UAAUD,GAAA,YAAAA,EAAM,QAAS,EACzB,GAAGyB,GAAyB,EAC5B,YAAarB,GAA6B,SAAW,SACrD,UAAWuB,GACPC,GAAevC,EAASkB,GAA2BsB,EAAO,CAC9D,EACA,kBAAmBhB,GACnB,WAAYV,GAA+B,SAAW,SACtD,YAAa2B,GACTF,GACI9B,EACAU,GACAqB,EACJ,EACAlD,CACJ,EACA,oBAAqBsC,GACrB,cAAgBc,IAAU,CACtB,IAAMC,GAAkB,OAAO,YAC3B,OAAO,QAAQD,GAAM,QAAQ,MAAM,EAAE,IAAI,CAAC,CAACE,GAAKV,EAAK,IAC1C,CAACU,GAAMV,GAAc,IAAI,CACnC,CACL,EACuB,CAACM,GAAQG,GAAiBrD,CAAY,GAGzDC,EAAeoD,EAAe,CAEtC,EACA,GAAI,CACA,OAAQ,OACR,+BAAgC,CAC5B,WAAYE,GAAO3D,EAAM,QAAQ,WAAW,MAAO,GAAI,EACvD,aAAc,aAAa2D,GACvB3D,EAAM,QAAQ,WAAW,MACzB,EACJ,GACJ,EACA,sBAAuB,CACnB,aAAc,aAAa2D,GACvB3D,EAAM,QAAQ,WAAW,MACzB,GACJ,GACJ,CACJ,CACJ,EACA,QAAAQ,EACA,WAAAC,EACA,SAAAC,EACA,YAAAC,EACA,UAAAO,EACA,QAAAJ,EACA,WAAAC,EACA,OAAAC,EACA,UAAAC,EACA,QAAAL,GACA,WAAAC,EACA,OAAAkC,GACA,8BAAA5B,EACA,SAAAC,CACJ,CACJ,CAlOgBe,EAAA5D,GAAA,eE9GhB,OAAS,cAAAqF,OAAkB,QAcpB,IAAMC,GAAkBC,EAAA,IAA2B,CACtD,GAAM,CACF,gBAAAC,EACA,eAAAC,EACA,mBAAAC,EACA,kBAAAC,CACJ,EAAIC,GAAWC,EAAmB,EAElC,MAAO,CACH,aAAcL,EACd,gBAAiBE,EACjB,mBAAoB,CAACD,EACrB,sBAAwBK,GAAYH,EAAkB,CAACG,CAAO,CAClE,CACJ,EAd+B,mBCd/B,OAAS,cAAAC,OAAkB,QAOpB,IAAMC,GAAyBC,EAAA,IAAkC,CACpE,GAAM,CACF,gBAAAC,EACA,eAAAC,EACA,mBAAAC,EACA,kBAAAC,CACJ,EAAIC,GAAWC,EAAmB,EAElC,MAAO,CACH,gBAAAL,EACA,eAAAC,EACA,mBAAAC,EACA,kBAAAC,CACJ,CACJ,EAdsC,0BLkC/B,IAAMG,GAA0DC,EAAA,CAAC,CACpE,MAAOC,EACP,OAAAC,EACA,KAAAC,EACA,mBAAAC,EAAqB,EACzB,IAAM,CACF,GAAM,CACF,eAAAC,EACA,kBAAAC,EACA,gBAAAC,EACA,mBAAAC,CACJ,EAAIC,GAAuB,EAErBC,EAAcV,EAAA,IACZK,EAAuB,GACpB,IAFS,eAKdM,EAAIC,GAAa,EACjBC,EAAaC,GAAc,EAC3BC,EAAOC,GAAQ,EACf,CAAE,KAAMC,CAAW,EAAIC,GAAiB,EACxCC,EAAaN,IAAe,SAAWI,EAAaF,EACpD,CAAE,aAAAK,CAAa,EAAIC,GAAiB,EACpCC,EAAYV,GAAa,EAEzB,CAAE,UAAAW,EAAW,YAAAC,EAAa,gBAAAC,CAAgB,EAAIC,GAAQ,CAAE,KAAAvB,CAAK,CAAC,EAC9DwB,EAAwBC,GAAyB,EACjDC,EAAmBC,GAAS,EAC5BC,EAAeC,GAAsB,EACrC,CAAE,SAAAC,EAAU,YAAAC,CAAY,EAAIC,GAAmB,EAC/C,CAAE,OAAQC,CAAa,EAAIC,GAAU,CACvC,+BAAgC,GAAQN,GAAA,MAAAA,EAAc,SAC1D,CAAC,EAEK,CAACO,EAAMC,CAAO,EAAIC,GAA+B,CAAC,CAAC,EAEzDC,EAAM,UAAU,IAAM,CAClBF,EAASG,GAAa,CAElB,IAAMC,EADyB,OAAO,KAAKD,CAAQ,EACb,OACjCE,GAAQF,EAASE,CAAG,CACzB,EAEMC,EAAa,IAAI,IAAI,CACvB,GAAGF,EACH,GAAGlB,CACP,CAAC,EAID,OAHyB,OAAO,YAC5B,MAAM,KAAKoB,EAAW,OAAO,CAAC,EAAE,IAAKD,GAAQ,CAACA,EAAK,EAAI,CAAC,CAC5D,CAEJ,CAAC,CACL,EAAG,CAACnB,CAAe,CAAC,EAEpB,IAAMqB,EAAgB7C,GAAkB4B,GAAoBkB,GAEtDC,EAAchD,EAAC4C,GAAgB,CACjCL,EAAQ,CAAE,GAAGD,EAAM,CAACM,CAAG,EAAG,CAACN,EAAKM,CAAG,CAAE,CAAC,CAC1C,EAFoB,eAIdK,EAAiBjD,EAAA,CAACkD,EAAmB1B,IAChC0B,EAAK,IAAKC,GAAoB,CACjC,GAAM,CACF,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,KAAAC,EACA,SAAAC,GACA,WAAAC,EACA,KAAAtD,GACA,QAAAuD,EACJ,EAAIP,EACEQ,GAASrB,EAAKa,EAAK,KAAO,EAAE,GAAK,GAEjCS,GAAaT,EAAK,MAAQ3B,EAC1BqC,GACFC,GAAkB3D,IAAA,YAAAA,GAAM,OAAQuD,IAAA,YAAAA,GAAS,OAAQD,CAAU,IAC3D,OAGJ,GAAID,GAAS,OAAS,EAClB,OACIf,EAAA,cAACsB,GAAA,CACG,IAAKZ,EAAK,IACV,SAAUI,EAAK,YAAY,EAC3B,OAAO,OACP,OAAQ,CACJ,SAAUJ,CACd,GAEAV,EAAA,cAAC,OAAI,IAAKU,EAAK,KACXV,EAAA,cAACuB,GAAA,CACG,MAAOX,GAASE,EAChB,UAAU,QACV,qBAAsB,CAAClD,EACvB,MAAK,IAELoC,EAAA,cAACwB,GAAA,CACG,QAAS,IAAM,CACP5D,GACAC,EAAkB,EAAK,EAClBqD,IACDX,EAAYG,EAAK,KAAO,EAAE,GAG9BH,EAAYG,EAAK,KAAO,EAAE,CAElC,EACA,GAAI,CACA,GAAIU,GAAW,EAAI,EACnB,eAAgB,SAChB,UAAW,KACf,GAEApB,EAAA,cAACyB,GAAA,CACG,GAAI,CACA,eAAgB,SAChB,SAAU,OACV,WAAY,oBACZ,YAAa7D,EACP,MACA,OACN,MAAO,cACX,GAEC+C,GAAQX,EAAA,cAAC0B,GAAA,IAAa,CAC3B,EACA1B,EAAA,cAAC2B,GAAA,CACG,QAASf,EACT,uBAAwB,CACpB,OAAQ,GACR,SAAU,MACd,EACJ,EACCM,GACGlB,EAAA,cAAC4B,GAAA,CACG,GAAI,CACA,MAAO,WACX,EACJ,EAEA5B,EAAA,cAAC6B,GAAA,CACG,GAAI,CACA,MAAO,WACX,EACJ,CAER,CACJ,EACC,CAACjE,GACEoC,EAAA,cAAC8B,GAAA,CACG,GAAIjC,EAAKa,EAAK,KAAO,EAAE,EACvB,QAAQ,OACR,cAAa,IAEbV,EAAA,cAAC+B,GAAA,CAAK,UAAU,MAAM,eAAc,IAC/BvB,EAAeO,GAAUhC,CAAW,CACzC,CACJ,CAER,CACJ,EAIR,IAAMiD,GACFrE,GAAsBwD,GAChB,CAAE,cAAe,MAAO,EACxB,CAAC,EAEX,OACInB,EAAA,cAACsB,GAAA,CACG,IAAKZ,EAAK,IACV,SAAUI,EAAK,YAAY,EAC3B,OAAO,OACP,OAAQ,CAAE,SAAUJ,CAAK,GAEzBV,EAAA,cAACuB,GAAA,CACG,MAAOX,GAASE,EAChB,UAAU,QACV,qBAAsB,CAAClD,EACvB,MAAK,IAELoC,EAAA,cAACwB,GAAA,CACG,UAAW9C,EACX,GAAImC,EACJ,SAAUM,GACV,MAAOa,GACP,QAAS,IAAM,CACXjE,EAAmB,EAAK,CAC5B,EACA,GAAI,CACA,GAAIqD,GAAW,EAAI,EACnB,GAAIA,GAAW,KAAO,EACtB,eAAgB,SAChB,MAAOD,GACD,eACA,cACV,GAEAnB,EAAA,cAACyB,GAAA,CACG,GAAI,CACA,eAAgB,SAChB,WAAY,oBACZ,YAAa7D,EACP,MACA,OACN,SAAU,OACV,MAAO,cACX,GAEC+C,GAAQX,EAAA,cAAC0B,GAAA,IAAa,CAC3B,EACA1B,EAAA,cAAC2B,GAAA,CACG,QAASf,EACT,uBAAwB,CACpB,OAAQ,GACR,SAAU,MACd,EACJ,CACJ,CACJ,CACJ,CAER,CAAC,EApKkB,kBAuKjBqB,EAAYtD,EACdqB,EAAA,cAACsB,GAAA,CAAU,SAAS,YAAY,OAAO,QACnCtB,EAAA,cAACuB,GAAA,CACG,MAAO1C,EAAU,kBAAmB,WAAW,EAC/C,UAAU,QACV,qBAAsB,CAACjB,EACvB,MAAK,IAELoC,EAAA,cAACwB,GAAA,CACG,UAAW9C,EACX,GAAG,IACH,SAAUK,IAAgB,IAC1B,QAAS,IAAM,CACXhB,EAAmB,EAAK,CAC5B,EACA,GAAI,CACA,GAAI,EACJ,GAAI,EACJ,eAAgB,SAChB,MACIgB,IAAgB,IACV,eACA,cACd,GAEAiB,EAAA,cAACyB,GAAA,CACG,GAAI,CACA,eAAgB,SAChB,SAAU,OACV,WAAY,oBACZ,YAAa7D,EAAiB,MAAQ,OACtC,MAAO,eACP,SAAU,MACd,GAEAoC,EAAA,cAACkC,GAAA,IAAU,CACf,EACAlC,EAAA,cAAC2B,GAAA,CACG,QAAS9C,EAAU,kBAAmB,WAAW,EACjD,uBAAwB,CACpB,OAAQ,GACR,SAAU,MACd,EACJ,CACJ,CACJ,CACJ,EACA,KAEEsD,EAAe5E,EAAA,IAAM,CACnBiC,EACgB,OAAO,QACnBtB,EACI,yBACA,2DACJ,CACJ,IAGIuB,EAAY,EAAK,EACjBE,EAAa,GAGjBA,EAAa,CAErB,EAhBqB,gBAkBfyC,EAASlD,GACXc,EAAA,cAACuB,GAAA,CACG,MAAOrD,EAAE,iBAAkB,QAAQ,EACnC,UAAU,QACV,qBAAsB,CAACN,EACvB,MAAK,IAELoC,EAAA,cAACwB,GAAA,CACG,IAAI,SACJ,QAAS,IAAMW,EAAa,EAC5B,GAAI,CACA,eAAgB,QACpB,GAEAnC,EAAA,cAACyB,GAAA,CACG,GAAI,CACA,eAAgB,SAChB,SAAU,OACV,WAAY,oBACZ,YAAa7D,EAAiB,MAAQ,OACtC,MAAO,cACX,GAEAoC,EAAA,cAACqC,GAAA,IAAO,CACZ,EACArC,EAAA,cAAC2B,GAAA,CACG,QAASzD,EAAE,iBAAkB,QAAQ,EACrC,uBAAwB,CACpB,OAAQ,GACR,SAAU,MACd,EACJ,CACJ,CACJ,EAGEoE,GAAQ9B,EAAe1B,EAAWC,CAAW,EAoB7CwD,EACFvC,EAAA,cAAC+B,GAAA,CACG,eAAc,GACd,GAAI,CACA,SAAU,EACV,WAAY,MAChB,GAxBYxE,EAAA,IACZE,EACOA,EAAO,CACV,UAAAwE,EACA,OAAAG,EACA,MAAAE,GACA,UAAW1E,CACf,CAAC,EAGDoC,EAAA,cAAAA,EAAA,cACKiC,EACAK,GACAF,CACL,EAdY,eA0BC,CACjB,EAGJ,OACIpC,EAAA,cAAAA,EAAA,cACIA,EAAA,cAACwC,GAAA,CACG,GAAI,CACA,MAAO,CAAE,GAAIvE,EAAY,CAAE,EAC3B,QAAS,CACL,GAAI,OACJ,GAAI,OACR,EACA,WAAY,iBAChB,EACJ,EACA+B,EAAA,cAACwC,GAAA,CACG,UAAU,MACV,GAAI,CACA,SAAU,QACV,OAAQ,KACR,MAAO,CAAE,GAAIvE,EAAY,CAAE,EAC3B,QAAS,MACb,GAEA+B,EAAA,cAACyC,GAAA,CACG,QAAQ,YACR,UAAW,EACX,KAAM3E,EACN,QAAS,IAAMC,EAAmB,EAAK,EACvC,WAAY,CACR,YAAa,EACjB,EACA,GAAI,CACA,QAAS,CACL,GAAI,QACJ,GAAI,MACR,CACJ,GAEAiC,EAAA,cAACwC,GAAA,CACG,GAAI,CACA,MAAOvE,EAAY,CACvB,GAEA+B,EAAA,cAACwC,GAAA,CACG,GAAI,CACA,OAAQ,GACR,QAAS,OACT,WAAY,SACZ,YAAa,OACb,SAAU,MACd,GAEAxC,EAAA,cAACK,EAAA,CAAc,UAAW,GAAO,CACrC,EACCkC,CACL,CACJ,EACAvC,EAAA,cAACyC,GAAA,CACG,QAAQ,YACR,GAAI,CACA,QAAS,CAAE,GAAI,OAAQ,GAAI,OAAQ,EACnC,qBAAsB,CAClB,MAAOxE,EAAY,EACnB,SAAU,SACV,WACI,8CACR,CACJ,EACA,KAAI,IAEJ+B,EAAA,cAAC0C,GAAA,CACG,UAAW,EACX,GAAI,CACA,SAAU,OACV,MAAO,OACP,OAAQ,GACR,QAAS,OACT,WAAY,EACZ,WAAY,SACZ,eAAgB9E,EACV,SACA,gBACN,YAAaA,EAAiB,EAAI,OAClC,aAAcA,EAAiB,EAAI,MACnC,QAAS,WACT,aAAc,EACd,aAAe+E,GACX,aAAaA,EAAM,QAAQ,OAAO,OAC1C,GAEA3C,EAAA,cAACK,EAAA,CAAc,UAAWzC,EAAgB,EACzC,CAACA,GACEoC,EAAA,cAAC4C,GAAA,CACG,KAAK,QACL,QAAS,IAAM/E,EAAkB,EAAI,GAEpCmC,EAAA,cAAC6C,GAAA,IAAY,CAClB,CAER,EACA7C,EAAA,cAACwC,GAAA,CACG,GAAI,CACA,SAAU,EACV,UAAW,SACX,UAAW,MACf,GAECD,CACL,CACJ,CACJ,CACJ,CAER,EA1duE,iBMzCvE,OAAOO,OAAW,QAClB,OACI,kBAAAC,GACA,yBAAAC,GACA,qBAAAC,OACG,kBAEP,OAAOC,OAAY,uBACnB,OAAOC,OAAW,sBAClB,OAAOC,OAAa,wBACpB,OAAOC,OAAgB,2BACvB,OAAOC,OAAY,uBCXnB,OAAOC,OAAW,QAElB,OAAOC,OAAgB,2BACvB,OAAOC,OAAU,2BAMjB,IAAMC,GAAgBC,EAACC,GACnBC,GAAA,cAACC,GAAA,CACG,MAAM,UACN,aAAW,cACX,KAAK,QACJ,GAAGF,GAEJC,GAAA,cAACE,GAAA,IAAK,CACV,EARkB,iBAWTC,GAA0BL,EAAA,IAAM,CACzC,GAAM,CACF,eAAAM,EACA,kBAAAC,EACA,gBAAAC,EACA,mBAAAC,CACJ,EAAIC,GAAuB,EAE3B,OACIR,GAAA,cAAAA,GAAA,cACIA,GAAA,cAACH,GAAA,CACG,QAAS,IAAMQ,EAAkB,CAACD,CAAc,EAChD,GAAI,CACA,GAAI,EACJ,QAAS,CAAE,GAAI,OAAQ,GAAI,MAAO,EAClC,GAAI,CAACA,GAAkB,CAAE,QAAS,MAAO,CAC7C,EACJ,EACAJ,GAAA,cAACH,GAAA,CACG,QAAS,IAAMU,EAAmB,CAACD,CAAe,EAClD,GAAI,CACA,GAAI,EACJ,QAAS,CAAE,GAAI,OAAQ,GAAI,MAAO,EAClC,GAAIA,GAAmB,CAAE,QAAS,MAAO,CAC7C,EACJ,CACJ,CAER,EA5BuC,iBDHhC,IAAMG,GAA4DC,EAAA,CAAC,CACtE,SAAAC,EACA,OAAAC,CACJ,IAAM,CACF,IAAMC,EAAeC,GAAsB,EACrC,CAAE,KAAMC,CAAK,EAAIC,GAAe,CAClC,+BAAgC,GAAQH,GAAA,MAAAA,EAAc,SAC1D,CAAC,EAEKI,EAAkBC,GAAkBN,EAAQD,CAAQ,GAAK,GAE/D,OACIQ,GAAA,cAACC,GAAA,CAAO,SAAUH,EAAkB,SAAW,YAC3CE,GAAA,cAACE,GAAA,KACGF,GAAA,cAACG,GAAA,IAAc,EACfH,GAAA,cAACI,GAAA,CACG,UAAU,MACV,MAAM,OACN,eAAe,WACf,WAAW,UAEXJ,GAAA,cAACI,GAAA,CACG,UAAU,MACV,IAAI,OACJ,WAAW,SACX,eAAe,WAEdR,GAAA,YAAAA,EAAM,OACHI,GAAA,cAACK,GAAA,CACG,QAAQ,YACR,cAAY,oBAEXT,GAAA,YAAAA,EAAM,IACX,GAEHA,GAAA,YAAAA,EAAM,SACHI,GAAA,cAACM,GAAA,CAAO,IAAKV,GAAA,YAAAA,EAAM,OAAQ,IAAKA,GAAA,YAAAA,EAAM,KAAM,CAEpD,CACJ,CACJ,CACJ,CAER,EA3CyE,kBRRlE,IAAMW,GAAsDC,EAAA,CAAC,CAChE,MAAAC,EACA,OAAAC,EACA,MAAAC,EACA,OAAAC,EACA,cAAAC,EACA,SAAAC,EACA,sBAAAC,CACJ,IAKQC,GAAA,cAACC,GAAA,CACG,sBAAuBF,GAEvBC,GAAA,cAACE,GAAA,CAAI,QAAQ,OAAO,cAAc,OAC9BF,GAAA,cARUP,GAASU,GAQlB,CAAc,MAAOR,EAAO,EAC7BK,GAAA,cAACE,GAAA,CACG,GAAI,CACA,CACI,QAAS,OACT,cAAe,SACf,KAAM,EACN,UAAW,OACf,EACA,CAAE,SAAU,MAAO,EACnB,CAAE,SAAU,MAAO,CACvB,GAEAF,GAAA,cApBON,GAAUU,GAoBhB,IAAe,EAChBJ,GAAA,cAACE,GAAA,CACG,UAAU,OACV,GAAI,CACA,EAAG,CAAE,GAAI,EAAG,GAAI,EAAG,GAAI,CAAE,EACzB,SAAU,EACV,QAAUG,GACNA,EAAM,QAAQ,WAAW,OACjC,GAECP,CACL,EACCF,GAAUI,GAAA,cAACJ,EAAA,IAAO,CACvB,EACCC,GAAiBG,GAAA,cAACH,EAAA,IAAc,CACrC,CACJ,EA9C2D,kBUTnE,OAAOS,OAAW,QAClB,OAAS,oBAAAC,GAAkB,WAAAC,GAAS,iBAAAC,OAAqB,kBAEzD,OAAOC,OAAa,qBACpB,OAAOC,OAAa,wBACpB,OAAOC,OAAgB,2BAIvB,IAAMC,GAAc,iBAEdC,GACFC,GAAA,cAAC,OACG,MAAM,KACN,OAAO,KACP,QAAQ,YACR,KAAK,OACL,MAAM,6BACN,cAAY,eAEZA,GAAA,cAAC,QACG,EAAE,8GACF,KAAK,eACT,EACAA,GAAA,cAAC,QACG,SAAS,UACT,SAAS,UACT,EAAE,uOACF,KAAK,eACT,CACJ,EAGSC,GAAwDC,EAAA,CAAC,CAClE,UAAAC,EACA,cAAAC,EACA,KAAAC,EAAON,GACP,KAAAO,EAAOR,EACX,IAAM,CACF,IAAMS,EAAaC,GAAc,EAC3BC,EAAOC,GAAQ,EACf,CAAE,KAAMC,CAAW,EAAIC,GAAiB,EAI9C,OACIZ,GAAA,cAACa,GAAA,CACG,GAAG,IACH,UALWN,IAAe,SAAWI,EAAaF,EAMlD,UAAU,OACV,GAAI,CACA,QAAS,OACT,WAAY,SACZ,IAAK,OACL,GAAGL,CACP,GAEAJ,GAAA,cAACc,GAAA,CAAQ,OAAO,OAAO,MAAM,OAAO,MAAM,WACrCT,CACL,EACC,CAACF,GACEH,GAAA,cAACe,GAAA,CACG,QAAQ,KACR,WAAY,IACZ,MAAM,eACN,SAAS,UACT,aAAa,WACb,SAAS,UAERT,CACL,CAER,CAER,EAzCqE,iBCjCrE,UAAYU,MAAW,QACvB,OAAyB,yBAAAC,OAA6B,kBACtD,OAAS,WAAAC,OAAe,6BAExB,OAAOC,OAAY,uBACnB,OAAOC,OAAe,0BACtB,OAAOC,OAAsB,iCAC7B,OAAOC,OAAc,yBACrB,OAAOC,OAAU,qBACjB,OAAOC,OAAS,oBAChB,OAAOC,OAAgB,2BACvB,OAAOC,OAAe,0BACtB,OAAOC,OAAU,qBACjB,OAAOC,OAAiB,4BAExB,OAAgC,YAAAC,GAAU,gBAAAC,OAAoB,kBAcvD,IAAMC,GAAsCC,EAAA,IAAM,CA7BzD,IAAAC,EA8BI,GAAM,CACF,SAAAC,EACA,aAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,CACxB,EAAIC,GAA2C,EAEzCC,EAAeC,GAAsB,EACrC,CAAE,OAAQC,EAAO,UAAAC,CAAU,EAAIC,GAAqB,CACtD,+BAAgC,GAAQJ,GAAA,MAAAA,EAAc,SAC1D,CAAC,EAEKK,EAAYC,GAAa,EAE/B,OACI,gCACI,gBAACC,GAAA,CACG,UAAU,MACV,GAAI,CACA,WAAY,gEACZ,eAAgB,OACpB,GAEA,gBAACC,GAAA,CACG,UAAU,OACV,SAAS,KACT,GAAI,CACA,QAAS,OACT,cAAe,SACf,eAAgB,SAChB,OAAQ,OACZ,GAEA,gBAACD,GAAA,CACG,GAAI,CACA,QAAS,OACT,eAAgB,SAChB,cAAe,SACf,WAAY,QAChB,GAEA,gBAAC,WACG,gBAAC,OACG,IAAI,iEACJ,IAAI,cACJ,MAAO,CAAE,SAAU,GAAI,EAC3B,CACJ,EACA,gBAACA,GAAA,CAAI,GAAI,GACL,gBAACE,GAAA,KACG,gBAACC,GAAA,CAAY,GAAI,CAAE,SAAU,MAAO,GAChC,gBAACC,GAAA,CACG,UAAU,KACV,QAAQ,KACR,MAAM,SACN,GAAI,CACA,WAAY,MACZ,OAAQ,QACZ,GAECN,EACG,oBACA,sBACJ,CACJ,EACA,gBAACE,GAAA,CACG,UAAU,OACV,SAAUV,EAAce,GAAS,CAC7BV,EAAMU,CAAI,CACd,CAAC,EACD,IAAI,QAEJ,gBAACC,GAAA,CACI,GAAGjB,EAAS,WAAY,CACrB,SAAU,EACd,CAAC,EACD,GAAG,WACH,OAAO,SACP,KAAK,QACL,UAAS,GACT,MAAOS,EACH,uBACA,UACJ,EACA,KAAK,WACL,aAAa,WACb,UAAS,GACb,EACA,gBAACQ,GAAA,CACI,GAAGjB,EAAS,WAAY,CACrB,SAAU,EACd,CAAC,EACD,GAAG,WACH,KAAK,QACL,OAAO,SACP,UAAS,GACT,KAAK,WACL,MAAOS,EACH,uBACA,UACJ,EACA,YACIV,EAAAG,GAAA,YAAAA,EAAQ,WAAR,YAAAH,EAAkB,QAEtB,KAAK,WACL,YAAY,mDACZ,aAAa,mBACjB,EACA,gBAACY,GAAA,CACG,UAAU,MACV,GAAI,CACA,QAAS,OACT,eAAgB,gBAChB,WAAY,QAChB,GAEA,gBAACO,GAAA,CACG,GAAI,CACA,KAAM,CACF,SAAU,OACV,MAAO,gBACX,CACJ,EACA,MAAM,YACN,QACI,gBAACC,GAAA,CACG,KAAK,QACL,GAAG,WACF,GAAGnB,EACA,UACJ,EACJ,EAEJ,MAAOS,EACH,uBACA,aACJ,EACJ,EACA,gBAACW,GAAA,CACG,KAAK,IACL,GAAI,CACA,SAAU,OACV,eAAgB,MACpB,GAEA,gBAACL,GAAA,CACG,GAAI,CACA,SAAU,MACd,GAECN,EACG,6BACA,kBACJ,CACJ,CACJ,CACJ,EACA,gBAACY,GAAA,CACG,KAAK,SACL,UAAS,GACT,QAAQ,YACR,GAAI,CACA,GAAI,MACJ,MAAO,OACX,EACA,SAAUd,GAETE,EACG,qBACA,SACJ,CACJ,EACA,gBAACE,GAAA,CAAI,MAAO,CAAE,UAAW,CAAE,GACvB,gBAACI,GAAA,CAAW,QAAQ,aACfN,EACG,wBACA,6BACJ,EAAG,IACH,gBAACW,GAAA,CACG,UAAU,OACV,KAAK,IACL,MAAO,CACH,WAAY,MAChB,GAECX,EACG,qBACA,SACJ,CACJ,CACJ,CACJ,CACJ,CACJ,CACJ,CACJ,CACJ,CACJ,CACJ,CACJ,CAER,EAzMmD,aC7BnD,UAAYa,MAAW,QAGvB,OAAOC,OAAW,sBAClB,OAAOC,OAAU,qBACjB,OAAOC,OAAgB,2BACvB,OAAOC,OAAY,uBACnB,OAAOC,OAAU,qBAKV,IAAMC,GAA4CC,EAAA,IAAM,CAC3D,IAAMC,EAAaD,EAACE,GAChB,gBAACC,GAAA,CACG,GAAI,CACA,gBAAkBC,GACdA,EAAM,QAAQ,UAAU,aAC5B,MAAQA,GAAUA,EAAM,QAAQ,UAAU,KAC1C,QAAS,eACT,WAAY,WAChB,GAECF,CACL,EAXe,cAanB,OACI,gCACI,gBAACG,GAAA,CACG,UAAS,GACT,GAAI,CACA,gBAAkBD,GAAUA,EAAM,QAAQ,UAAU,KACpD,QAAS,OACT,eAAgB,SAChB,WAAY,SACZ,OAAQ,QACR,gBACI,wFACJ,eAAgB,OACpB,EACA,EAAG,GAEH,gBAACC,GAAA,CACG,QAAQ,OACR,cAAc,SACd,KAAM,EACN,WAAW,SACX,MAAQD,GAAUA,EAAM,QAAQ,QAAQ,cAExC,gBAACD,GAAA,CAAW,QAAQ,OAAO,eAAe,UACtC,gBAAC,OACG,MAAO,CAAE,aAAc,MAAO,EAC9B,IAAI,iEACJ,IAAI,cACR,CACJ,EACA,gBAACA,GAAA,CACG,QAAQ,KACR,WAAW,OACX,QAAQ,OACR,eAAe,UAClB,kBAED,EACA,gBAACA,GAAA,CAAW,QAAQ,KAAK,GAAI,GAAG,kCAEhC,EACA,gBAACA,GAAA,CAAW,QAAQ,KAAK,GAAI,GAAG,0DAC4B,IACvDF,EAAW,WAAW,EAAE,eAAa,IACrCA,EAAW,QAAQ,CACxB,EACA,gBAACI,GAAA,CACG,KAAI,GACJ,GAAI,GACJ,GAAI,GACJ,QAAQ,OACR,eAAe,UAEf,gBAACC,GAAA,CACG,QAAS,EACT,UAAW,CAAE,GAAI,SAAU,GAAI,KAAM,GAErC,gBAACC,GAAA,CACG,KAAK,qBACL,OAAO,SACP,IAAI,aACJ,MAAO,CACH,eAAgB,MACpB,GAEA,gBAACC,GAAA,CAAO,QAAQ,WAAW,UAAS,IAAC,eAErC,CACJ,EACA,gBAACD,GAAA,CACG,KAAK,8BACL,OAAO,SACP,IAAI,aACJ,MAAO,CACH,eAAgB,MACpB,GAEA,gBAACC,GAAA,CAAO,QAAQ,WAAW,UAAS,IAAC,UAErC,CACJ,EACA,gBAACD,GAAA,CACG,KAAK,4BACL,OAAO,SACP,IAAI,aACJ,MAAO,CACH,eAAgB,MACpB,GAEA,gBAACC,GAAA,CAAO,QAAQ,WAAW,UAAS,IAAC,WAErC,CACJ,CACJ,CACJ,CACJ,CACJ,CACJ,CAER,EAjHyD,aCZzD,OAAOC,OAAW,QAClB,OAAS,eAAeC,OAA2B,kBAM5C,IAAMC,GAAwBC,EAAA,IAC1BC,GAAA,cAACC,GAAA,IAAoB,EADK,eCPrC,OAAOC,IAAS,aAAAC,GAAW,YAAAC,OAAgB,QAC3C,OAAS,SAAAC,GAAO,eAAAC,GAAa,iBAAAC,OAAqB,kBAElD,OAAS,iBAAAC,GAAe,gBAAAC,OAAoB,kBAE5C,OAAOC,OAAW,sBAClB,OAAOC,OAAY,uBACnB,OAAOC,OAAa,wBACpB,OAAOC,OAAgB,2BACvB,OAAOC,OAAU,qBAEjB,OAAOC,OAAU,2BAEV,IAAMC,GAAiDC,EAAA,IAAM,CAChE,GAAM,CAACC,EAAcC,CAAe,EAAIC,GAAiB,EACnD,CAAE,KAAAC,CAAK,EAAIC,GAAc,EACzBC,EAAKC,GAAM,EACXC,EAAaC,GAAc,EAE3B,CAAE,SAAAC,EAAU,OAAAC,CAAO,EAAIC,GAAY,EAEnCC,EAAYC,GAAa,EAE/B,OAAAC,GAAU,IAAM,CACRL,GAAYC,GACZT,EACIW,EACI,mBACA,CACI,OAAAF,EACA,SAAUD,GAAA,YAAAA,EAAU,IACxB,EACA,sCAAsCC,oBAAyBD,GAAA,YAAAA,EAAU,iBAC7E,CACJ,CAER,EAAG,CAACC,EAAQD,CAAQ,CAAC,EAGjBM,GAAA,cAACC,GAAA,CACG,QAAQ,OACR,eAAe,SACf,WAAW,SACX,GAAI,IAEJD,GAAA,cAACC,GAAA,CACG,UAAS,GACT,UAAU,SACV,QAAQ,OACR,WAAW,UAEXD,GAAA,cAACE,GAAA,CAAW,QAAQ,MAAK,KAAG,EAC5BF,GAAA,cAACG,GAAA,CAAM,UAAU,MAAM,QAAQ,KAC3BH,GAAA,cAACE,GAAA,KACIL,EACG,kBACA,6CACJ,CACJ,EAECZ,GACGe,GAAA,cAACI,GAAA,CAAQ,MAAOnB,GACZe,GAAA,cAACK,GAAA,CAAK,cAAY,0BAA0B,CAChD,CAER,EACAL,GAAA,cAACM,GAAA,CACG,QAAS,IAAM,CACPd,IAAe,SACfJ,EAAK,GAAG,EAERE,EAAG,CAAE,GAAI,GAAI,CAAC,CAEtB,GAECO,EAAU,uBAAwB,WAAW,CAClD,CACJ,CACJ,CAER,EAnE8D,kBCb9D,OAAOU,OAAW,QCAlB,UAAYC,MAAW,QACvB,OAGI,yBAAAC,OACG,kBACP,OAAS,WAAAC,OAAe,6BACxB,OAAS,gBAAAC,OAAoB,kBAE7B,OAAOC,OAAY,uBACnB,OAAOC,OAAe,0BACtB,OAAOC,OAAS,oBAChB,OAAOC,OAAgB,2BACvB,OAAOC,OAAe,0BACtB,OAAOC,OAAU,qBACjB,OAAOC,OAAiB,4BACxB,OAAOC,OAAc,yBACrB,OAAOC,OAAsB,iCAC7B,OAAOC,OAAa,wBACpB,OAAOC,OAAa,qBACpB,OAAOC,OAAW,sBAKlB,OAGI,YAAAC,GACA,gBAAAC,GACA,oBAAAC,GACA,iBAAAC,GACA,WAAAC,OACG,kBC/BA,IAAMC,GAA8B,CAAC,EAE/BC,GAA6B,CACtC,UAAW,SACX,SAAU,OACV,aAAc,OACd,aAAc,aACd,QAAS,SACT,aAAc,QACd,WAAY,UAChB,EDiCO,IAAMC,GAAkCC,EAAA,CAAC,CAC5C,UAAAC,EACA,aAAAC,EACA,mBAAAC,EACA,WAAAC,EACA,aAAAC,EACA,aAAAC,EACA,cAAAC,EACA,UAAAC,EACA,MAAAC,CACJ,IAAM,CAvDN,IAAAC,EAwDI,GAAM,CAAE,SAAAC,EAAU,GAAGC,CAAa,EAAIJ,GAAa,CAAC,EAC9CK,EAAUC,GAA+C,CAC3D,GAAGF,CACP,CAAC,EACK,CACF,SAAAG,EACA,aAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,CACxB,EAAIJ,EAEEK,EAAeC,GAAsB,EACrC,CAAE,OAAQC,EAAO,UAAAC,CAAU,EAAIC,GAAyB,CAC1D,+BAAgC,GAAQJ,GAAA,MAAAA,EAAc,SAC1D,CAAC,EACKK,EAAYC,GAAa,EACzBC,EAAaC,GAAc,EAC3BC,EAAOC,GAAQ,EACf,CAAE,KAAMC,CAAW,EAAIC,GAAiB,EAExCC,EAAaN,IAAe,SAAWI,EAAaF,EAEpDK,EACFvB,IAAU,GAAQ,KACd,gBAAC,OACG,MAAO,CACH,QAAS,OACT,eAAgB,SAChB,aAAc,OACd,SAAU,MACd,GAECA,GACG,gBAACwB,GAAA,CACG,UAAW,GACX,cAAe,CACX,IAAK,KACT,EACJ,CAER,EAGFC,EAAkBlC,EAAA,IAChBC,GAAaA,EAAU,OAAS,EAE5B,gCACI,gBAACkC,GAAA,CAAM,QAAS,GACXlC,EAAU,IAAKmC,GAER,gBAACC,GAAA,CACG,IAAKD,EAAS,KACd,QAAQ,WACR,UAAS,GACT,GAAI,CACA,MAAO,gBACP,YAAa,gBACb,cAAe,MACnB,EACA,QAAS,IACLhB,EAAM,CAAE,aAAcgB,EAAS,IAAK,CAAC,EAEzC,UAAWA,EAAS,MAEnBA,EAAS,KACd,CAEP,CACL,EACA,gBAACE,GAAA,CACG,GAAI,CACA,SAAU,OACV,QAAS,MACb,GAECf,EAAU,sBAAuB,IAAI,CAC1C,CACJ,EAGD,KArCa,mBAwClBgB,EACF,gBAACC,GAAA,CAAM,GAAInC,GAAgB,CAAC,GACxB,gBAACoC,GAAA,CAAY,GAAI,CAAE,EAAG,OAAQ,eAAgB,CAAE,GAAI,MAAO,CAAE,GACzD,gBAACC,GAAA,CACG,UAAU,KACV,QAAQ,KACR,MAAM,SACN,MAAOC,GACP,MAAM,UACN,WAAY,KAEXpB,EAAU,oBAAqB,yBAAyB,CAC7D,EACA,gBAACqB,GAAA,CACG,UAAU,OACV,SAAU5B,EAAc6B,GAChBlC,EACOA,EAASkC,CAAI,EAGjBzB,EAAMyB,CAAI,CACpB,GAEAX,EAAgB,EACjB,gBAACY,GAAA,CACI,GAAG/B,EAAS,QAAS,CAClB,SAAU,EACd,CAAC,EACD,GAAG,QACH,OAAO,SACP,UAAS,GACT,MAAOQ,EAAU,2BAA4B,OAAO,EACpD,MAAO,CAAC,CAACN,EAAO,MAChB,KAAK,QACL,KAAK,QACL,aAAa,QACb,GAAI,CACA,GAAI,CACR,EACJ,EACA,gBAAC6B,GAAA,CACI,GAAG/B,EAAS,WAAY,CACrB,SAAU,EACd,CAAC,EACD,GAAG,WACH,OAAO,SACP,UAAS,GACT,KAAK,WACL,MAAOQ,EACH,8BACA,UACJ,EACA,YAAYb,EAAAO,GAAA,YAAAA,EAAQ,WAAR,YAAAP,EAAkB,QAC9B,MAAO,CAAC,CAACO,EAAO,SAChB,KAAK,WACL,YAAY,mDACZ,aAAa,mBACb,GAAI,CACA,GAAI,CACR,EACJ,EAEA,gBAAC2B,GAAA,CACG,UAAU,MACV,GAAI,CACA,GAAI,OACJ,QAAS,OACT,eAAgB,gBAChB,WAAY,QAChB,GAECxC,GACG,gBAAC2C,GAAA,CACG,GAAI,CACA,KAAM,CACF,SAAU,OACV,MAAO,gBACX,CACJ,EACA,MAAM,YACN,QACI,gBAACC,GAAA,CACG,KAAK,QACL,GAAG,WACF,GAAGjC,EAAS,UAAU,EAC3B,EAEJ,MAAOQ,EACH,iCACA,aACJ,EACJ,EAEHpB,GACG,gBAAC8C,GAAA,CACG,QAAQ,QACR,MAAM,UACN,SAAS,OACT,UAAWlB,EACX,UAAU,OACV,GAAG,oBAEFR,EACG,qCACA,kBACJ,CACJ,CAER,EACA,gBAACc,GAAA,CACG,KAAK,SACL,UAAS,GACT,QAAQ,YACR,SAAUhB,EACV,GAAI,CAAE,GAAI,MAAO,GAEhBE,EAAU,qBAAsB,SAAS,CAC9C,EACCrB,GACG,gBAAC0C,GAAA,CACG,GAAI,CACA,GAAI,OACJ,QAAS,OACT,eAAgB,SAChB,WAAY,QAChB,GAEA,gBAACF,GAAA,CACG,UAAU,SACV,QAAQ,QACR,UAAU,OACV,SAAS,QAERnB,EACG,gCACA,6BACJ,CACJ,EACA,gBAAC0B,GAAA,CACG,GAAG,MACH,SAAS,OACT,QAAQ,QACR,MAAM,UACN,UAAWlB,EACX,UAAU,OACV,GAAG,YACH,WAAW,QAEVR,EAAU,qBAAsB,SAAS,CAC9C,CACJ,CAER,CACJ,CACJ,EAGJ,OACI,gBAAC2B,GAAA,CAAc,GAAGrC,GACd,gBAAC+B,GAAA,CAAI,UAAU,MAAM,MAAOO,GAAe,GAAI7C,GAAgB,CAAC,GAC5D,gBAAC8C,GAAA,CACG,UAAU,OACV,SAAS,KACT,GAAI,CACA,QAAS,OACT,cAAe,SACf,eAAgB,SAChB,OAAQ,OACZ,GAEA,gBAACR,GAAA,CACG,GAAI,CACA,QAAS,OACT,eAAgB,SAChB,cAAe,SACf,WAAY,QAChB,GAECrC,EACGA,EAAcgC,EAASP,CAAS,EAEhC,gCACKA,EACAO,CACL,CAER,CACJ,CACJ,CACJ,CAER,EA5R+C,aE7C/C,UAAYc,MAAW,QACvB,OAGI,yBAAAC,OACG,kBACP,OAAS,WAAAC,OAAe,6BAExB,OAAOC,OAAY,uBACnB,OAAOC,OAAe,0BACtB,OAAOC,OAAS,oBAChB,OAAOC,OAAgB,2BACvB,OAAOC,OAAe,0BACtB,OAAOC,OAAU,qBACjB,OAAOC,OAAiB,4BACxB,OAAOC,OAAa,wBACpB,OAAOC,OAAW,sBAClB,OAAOC,OAAa,qBAKpB,OAGI,gBAAAC,GACA,oBAAAC,GACA,iBAAAC,GACA,WAAAC,GACA,eAAAC,OACG,kBAgBA,IAAMC,GAAwCC,EAAA,CAAC,CAClD,UAAAC,EACA,aAAAC,EACA,aAAAC,EACA,cAAAC,EACA,UAAAC,EACA,UAAAC,EACA,MAAAC,CACJ,IAAM,CACF,GAAM,CAAE,SAAAC,EAAU,GAAGC,CAAa,EAAIH,GAAa,CAAC,EAC9C,CACF,SAAAI,EACA,aAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,CACxB,EAAIC,GAAkD,CAClD,GAAGJ,CACP,CAAC,EAEKK,EAAeC,GAAsB,EACrC,CAAE,OAAQC,EAAgB,UAAAC,CAAU,EACtCC,GAA+B,CAC3B,+BAAgC,GAAQJ,GAAA,MAAAA,EAAc,SAC1D,CAAC,EACCK,EAAYC,GAAa,EACzBC,EAAaC,GAAc,EAC3BC,EAAOC,GAAQ,EACf,CAAE,KAAMC,CAAW,EAAIC,GAAiB,EAExCC,EAAaN,IAAe,SAAWI,EAAaF,EAEpDK,EACFrB,IAAU,GAAQ,KACd,gBAAC,OACG,MAAO,CACH,QAAS,OACT,eAAgB,SAChB,aAAc,OACd,SAAU,MACd,GAECA,GACG,gBAACsB,GAAA,CACG,UAAW,GACX,cAAe,CACX,IAAK,KACT,EACJ,CAER,EAGFC,EAAkB9B,EAAA,IAChBK,GAAaA,EAAU,OAAS,EAE5B,gCACI,gBAAC0B,GAAA,CAAM,QAAS,GACX1B,EAAU,IAAK2B,GAER,gBAACC,GAAA,CACG,IAAKD,EAAS,KACd,MAAM,YACN,UAAS,GACT,QAAQ,WACR,GAAI,CACA,MAAO,gBACP,YAAa,gBACb,cAAe,MACnB,EACA,QAAS,IACLhB,EAAe,CACX,aAAcgB,EAAS,IAC3B,CAAC,EAEL,UAAWA,EAAS,MAEnBA,EAAS,KACd,CAEP,CACL,EACA,gBAACE,GAAA,CAAQ,GAAI,CAAE,SAAU,GAAI,QAAS,MAAO,GACxCf,EAAU,sBAAuB,IAAI,CAC1C,CACJ,EAGD,KAnCa,mBAsClBgB,EACF,gBAACC,GAAA,CAAM,GAAIjC,GAAgB,CAAC,GACxB,gBAACkC,GAAA,CAAY,GAAI,CAAE,EAAG,OAAQ,eAAgB,CAAE,GAAI,MAAO,CAAE,GACzD,gBAACC,GAAA,CACG,UAAU,KACV,QAAQ,KACR,MAAM,SACN,MAAOC,GACP,MAAM,UACN,WAAY,KAEXpB,EACG,uBACA,0BACJ,CACJ,EACCW,EAAgB,EACjB,gBAACU,GAAA,CACG,UAAU,OACV,SAAU7B,EAAc8B,GAChBjC,EACOA,EAASiC,CAAI,EAGjBzB,EAAeyB,CAAI,CAC7B,GAED,gBAACC,GAAA,CACI,GAAGhC,EAAS,QAAS,CAClB,SAAU,GACV,QAAS,CACL,MAAO,2CACP,QAASS,EACL,mCACA,uBACJ,CACJ,CACJ,CAAC,EACD,GAAG,QACH,OAAO,SACP,UAAS,GACT,MAAOA,EAAU,uBAAwB,OAAO,EAChD,MAAO,CAAC,CAACP,EAAO,MAChB,WACIA,EAAO,MAAWA,EAAO,MAAS,QAAU,GAEhD,KAAK,QACL,aAAa,QACb,GAAI,CACA,GAAI,CACR,EACJ,EACA,gBAAC8B,GAAA,CACI,GAAGhC,EAAS,WAAY,CACrB,SAAU,EACd,CAAC,EACD,GAAG,WACH,OAAO,SACP,UAAS,GACT,KAAK,WACL,MAAOS,EACH,iCACA,UACJ,EACA,WACIP,EAAO,SAAcA,EAAO,SAAY,QAAU,GAEtD,MAAO,CAAC,CAACA,EAAO,SAChB,KAAK,WACL,YAAY,mDACZ,aAAa,mBACb,GAAI,CACA,GAAI,CACR,EACJ,EACA,gBAACqB,GAAA,CACG,KAAK,SACL,UAAS,GACT,QAAQ,YACR,SAAUhB,EACV,GAAI,CACA,GAAI,MACR,GAECE,EAAU,wBAAyB,SAAS,CACjD,EACClB,GACG,gBAACuC,GAAA,CACG,QAAQ,OACR,eAAe,WACf,WAAW,SACX,GAAI,CACA,GAAI,OACJ,QAAS,OACT,eAAgB,SAChB,WAAY,QAChB,GAEA,gBAACF,GAAA,CACG,QAAQ,QACR,UAAU,OACV,SAAS,QAERnB,EACG,kCACA,kBACJ,CACJ,EACA,gBAACwB,GAAA,CACG,GAAG,MACH,QAAQ,QACR,MAAM,UACN,UAAWhB,EACX,UAAU,OACV,GAAG,SACH,SAAS,OACT,WAAW,QAEVR,EAAU,qBAAsB,SAAS,CAC9C,CACJ,CAER,CACJ,CACJ,EAGJ,OACI,gBAACqB,GAAA,CAAI,UAAU,MAAM,MAAOI,GAAe,GAAI1C,GAAgB,CAAC,GAC5D,gBAAC2C,GAAA,CACG,UAAU,OACV,SAAS,KACT,GAAI,CACA,QAAS,OACT,cAAe,SACf,eAAgB,SAChB,OAAQ,OACZ,GAECzC,EACGA,EAAc+B,EAASP,CAAS,EAEhC,gCACKA,EACAO,CACL,CAER,CACJ,CAER,EA/OqD,gBC9CrD,OAAOW,OAAY,uBACnB,OAAOC,OAAe,0BACtB,OAAOC,OAAS,oBAChB,OAAOC,OAAgB,2BACvB,OAAOC,OAAe,0BACtB,OAAOC,OAAU,qBACjB,OAAOC,OAAiB,4BACxB,OAAOC,OAAa,qBASpB,OAAS,WAAAC,OAAe,6BACxB,UAAYC,MAAW,QAEvB,OAGI,qBAAAC,GACA,WAAAC,GACA,oBAAAC,GACA,iBAAAC,GACA,gBAAAC,OACG,kBAgBA,IAAMC,GAAoDC,EAAA,CAAC,CAC9D,UAAAC,EACA,aAAAC,EACA,aAAAC,EACA,cAAAC,EACA,UAAAC,EACA,MAAAC,CACJ,IAAM,CACF,GAAM,CAAE,SAAAC,EAAU,GAAGC,CAAa,EAAIH,GAAa,CAAC,EAC9C,CACF,SAAAI,EACA,aAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,CACxB,EAAIC,GAAwD,CACxD,GAAGJ,CACP,CAAC,EAEK,CAAE,OAAAK,EAAQ,UAAAC,CAAU,EAAIC,GAA2C,EACnEC,EAAYC,GAAa,EACzBC,EAAaC,GAAc,EAC3BC,EAAOC,GAAQ,EACf,CAAE,KAAMC,CAAW,EAAIC,GAAiB,EAExCC,EAAaN,IAAe,SAAWI,EAAaF,EAEpDK,EACFnB,IAAU,GAAQ,KACd,gBAAC,OACG,MAAO,CACH,QAAS,OACT,eAAgB,SAChB,aAAc,OACd,SAAU,MACd,GAECA,GACG,gBAACoB,GAAA,CACG,UAAW,GACX,cAAe,CACX,IAAK,KACT,EACJ,CAER,EAGFC,EACF,gBAACC,GAAA,CAAM,GAAIzB,GAAgB,CAAC,GACxB,gBAAC0B,GAAA,CAAY,GAAI,CAAE,EAAG,OAAQ,eAAgB,CAAE,GAAI,MAAO,CAAE,GACzD,gBAACC,GAAA,CACG,UAAU,KACV,QAAQ,KACR,MAAM,SACN,MAAOC,GACP,MAAM,UACN,WAAY,KAEXf,EACG,6BACA,uBACJ,CACJ,EACA,gBAACgB,GAAA,CACG,UAAU,OACV,SAAUtB,EAAcuB,GAChB1B,EACOA,EAAS0B,CAAI,EAGjBpB,EAAOoB,CAAI,CACrB,GAED,gBAACC,GAAA,CACI,GAAGzB,EAAS,QAAS,CAClB,SAAU,GACV,QAAS,CACL,MAAO,2CACP,QAASO,EACL,mCACA,uBACJ,CACJ,CACJ,CAAC,EACD,GAAG,QACH,OAAO,SACP,UAAS,GACT,MAAOA,EACH,oCACA,OACJ,EACA,KAAK,QACL,KAAK,QACL,MAAO,CAAC,CAACL,EAAO,MAChB,aAAa,QACb,GAAI,CACA,EAAG,CACP,EACJ,EACCV,GACG,gBAAC+B,GAAA,CAAI,UAAU,QAAQ,GAAI,CAAE,GAAI,MAAO,GACpC,gBAACF,GAAA,CACG,QAAQ,QACR,UAAU,OACV,SAAS,QAERd,EACG,qCACA,kBACJ,CACJ,EAAc,IACd,gBAACmB,GAAA,CACG,QAAQ,QACR,UAAWX,EACX,UAAU,OACV,GAAG,SACH,WAAW,OACX,SAAS,OACT,MAAM,iBAELR,EAAU,qBAAsB,SAAS,CAC9C,CACJ,EAEJ,gBAACoB,GAAA,CACG,KAAK,SACL,UAAS,GACT,QAAQ,YACR,GAAI,CAAE,GAAI,MAAO,EACjB,SAAUtB,GAETE,EACG,sCACA,yBACJ,CACJ,CACJ,CACJ,CACJ,EAGJ,OACI,gCACI,gBAACgB,GAAA,CAAI,UAAU,MAAM,MAAOK,GAAe,GAAInC,GAAgB,CAAC,GAC5D,gBAACoC,GAAA,CACG,UAAU,OACV,SAAS,KACT,GAAI,CACA,QAAS,OACT,cAAe,SACf,eAAgB,SAChB,OAAQ,OACZ,GAEClC,EACGA,EAAcuB,EAASF,CAAS,EAEhC,gCACKA,EACAE,CACL,CAER,CACJ,CACJ,CAER,EArKiE,sBC3CjE,UAAYY,MAAW,QACvB,OAGI,yBAAAC,OACG,kBAEP,OAAS,WAAAC,OAAe,6BAExB,OAAOC,OAAY,uBACnB,OAAOC,OAAe,0BACtB,OAAOC,OAAS,oBAChB,OAAOC,OAAgB,2BACvB,OAAOC,OAAe,0BACtB,OAAOC,OAAU,qBACjB,OAAOC,OAAiB,4BAKxB,OAGI,gBAAAC,GACA,qBAAAC,OACG,kBAgBA,IAAMC,GAAoDC,EAAA,CAAC,CAC9D,aAAAC,EACA,aAAAC,EACA,cAAAC,EACA,UAAAC,EACA,MAAAC,EAAQ,MACZ,IAAM,CA/CN,IAAAC,EAAAC,EAgDI,GAAM,CAAE,SAAAC,EAAU,GAAGC,CAAa,EAAIL,GAAa,CAAC,EAC9C,CACF,SAAAM,EACA,MAAAC,EACA,aAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,CACxB,EAAIC,GAAwD,CACxD,GAAGL,CACP,CAAC,EAEKM,EAAeC,GAAsB,EACrC,CAAE,OAAQC,EAAQ,UAAAC,CAAU,EAC9BC,GAA2C,CACvC,+BAAgC,GAAQJ,GAAA,MAAAA,EAAc,SAC1D,CAAC,EAECK,EAAYC,GAAa,EAEzBC,EACFjB,IAAU,GAAQ,KACd,gBAAC,OACG,MAAO,CACH,QAAS,OACT,eAAgB,SAChB,aAAc,OACd,SAAU,MACd,GAECA,GACG,gBAACkB,GAAA,CACG,UAAW,GACX,cAAe,CACX,IAAK,KACT,EACJ,CAER,EAGFC,EACF,gBAACC,GAAA,CAAM,GAAIvB,GAAgB,CAAC,GACxB,gBAACwB,GAAA,CAAY,GAAI,CAAE,EAAG,OAAQ,eAAgB,CAAE,GAAI,MAAO,CAAE,GACzD,gBAACC,GAAA,CACG,UAAU,KACV,QAAQ,KACR,MAAM,SACN,MAAOC,GACP,MAAM,UACN,WAAY,KAEXR,EACG,6BACA,kBACJ,CACJ,EACA,gBAACS,GAAA,CACG,UAAU,OACV,SAAUjB,EAAckB,GAChBtB,EACOA,EAASsB,CAAI,EAGjBb,EAAOa,CAAI,CACrB,GAED,gBAACC,GAAA,CACI,GAAGrB,EAAS,WAAY,CACrB,SAAU,EACd,CAAC,EACD,GAAG,WACH,OAAO,SACP,UAAS,GACT,KAAK,WACL,MAAOU,EACH,uCACA,cACJ,EACA,YAAYd,EAAAO,GAAA,YAAAA,EAAQ,WAAR,YAAAP,EAAkB,QAC9B,MAAO,CAAC,EAACO,GAAA,MAAAA,EAAQ,UACjB,KAAK,WACL,YAAY,mDACZ,aAAa,mBACb,GAAI,CACA,EAAG,CACP,EACJ,EAEA,gBAACkB,GAAA,CACI,GAAGrB,EAAS,kBAAmB,CAC5B,SAAU,GACV,SAAWsB,GACHrB,EAAM,UAAU,IAAMqB,EACfZ,EACH,sDACA,wBACJ,EAEG,EAEf,CAAC,EACD,GAAG,kBACH,OAAO,SACP,UAAS,GACT,KAAK,kBACL,MAAOA,EACH,8CACA,sBACJ,EACA,YAAYb,EAAAM,GAAA,YAAAA,EAAQ,kBAAR,YAAAN,EAAyB,QACrC,MAAO,CAAC,EAACM,GAAA,MAAAA,EAAQ,iBACjB,KAAK,WACL,YAAY,mDACZ,aAAa,2BACb,GAAI,CACA,GAAI,CACR,EACJ,EAEA,gBAACoB,GAAA,CACG,KAAK,SACL,UAAS,GACT,QAAQ,YACR,GAAI,CACA,GAAI,MACR,EACA,SAAUf,GAETE,EACG,sCACA,QACJ,CACJ,CACJ,CACJ,CACJ,EAGJ,OACI,gCACI,gBAACS,GAAA,CAAI,UAAU,MAAM,MAAOK,GAAe,GAAIjC,GAAgB,CAAC,GAC5D,gBAACkC,GAAA,CACG,UAAU,OACV,SAAS,KACT,GAAI,CACA,QAAS,OACT,cAAe,SACf,eAAgB,SAChB,OAAQ,OACZ,GAEChC,EACGA,EAAcqB,EAASF,CAAS,EAEhC,gCACKA,EACAE,CACL,CAER,CACJ,CACJ,CAER,EAzKiE,sBLhB1D,IAAMY,GAAgCC,EAACC,GAAU,CACpD,GAAM,CAAE,KAAAC,CAAK,EAAID,EAcjB,OAAOE,GAAA,cAAAA,GAAA,cAbYH,EAAA,IAAM,CACrB,OAAQE,EAAM,CACV,IAAK,WACD,OAAOC,GAAA,cAACC,GAAA,CAAc,GAAGH,EAAO,EACpC,IAAK,iBACD,OAAOE,GAAA,cAACE,GAAA,CAAoB,GAAGJ,EAAO,EAC1C,IAAK,iBACD,OAAOE,GAAA,cAACG,GAAA,CAAoB,GAAGL,EAAO,EAC1C,QACI,OAAOE,GAAA,cAACI,GAAA,CAAW,GAAGN,EAAO,CACrC,CACJ,EAXmB,cAaE,CAAE,CAC3B,EAhB6C,YMzB7C,OAAOO,OAAW,QAElB,OACI,iBAAAC,GACA,gBAAAC,GACA,uBAAAC,GACA,oBAAAC,GACA,iBAAAC,GACA,WAAAC,GACA,eAAAC,OACG,kBAEP,OAAOC,OAAU,qBACjB,OAAOC,OAAgB,2BACvB,OAAOC,OAAiB,4BACxB,OAAOC,OAAiB,4BACxB,OAAOC,OAAgB,2BACvB,OAAOC,OAAgB,2BACvB,OAAOC,OAAS,oBAEhB,OAAOC,OAAmB,gCAI1B,OAAS,8BAAAC,OAAkC,sBAQpC,IAAMC,GAAgCC,EAAA,CAAC,CAC1C,MAAAC,EACA,SAAAC,EACA,gBAAiBC,EACjB,SAAUC,EACV,UAAAC,EAAY,GACZ,WAAYC,EACZ,aAAAC,EACA,YAAAC,EACA,aAAAC,EACA,kBAAAC,EACA,cAAAC,EACA,kBAAAC,EACA,cAAAC,EACA,OAAQC,CACZ,IAAM,CA/CN,IAAAC,EAAAC,EAgDI,IAAMC,EAAYC,GAAa,EACzB,CAAE,QAAS,CAAE,WAAYC,CAAiB,EAAI,CAAC,CAAE,EACnDC,GAAiB,EAEfC,EAAaC,GAAc,EAC3BC,EAAOC,GAAQ,EACf,CAAE,OAAAC,CAAO,EAAIC,GAAc,EAC3BC,EAAsBC,GAAoB,EAE1C,CAAE,SAAAC,EAAU,OAAAC,EAAQ,WAAAC,CAAW,EAAIC,GAAY5B,CAAiB,EAEhE6B,EACF,OAAO3B,EAAwB,IACzBa,EACAb,EAEJ4B,EACF,OAAOD,EAAe,IAClBE,GAAA,cAAAA,GAAA,cAAGF,CAAW,GAAO,OAErBE,GAAA,cAACC,GAAA,IAAW,EAGdC,EAAmC,CACrC,GAAIhC,EAAY,CAAE,SAAU,EAAK,EAAI,CAAC,EACtC,GAAGF,CACP,EAEMmC,EAAuBH,GAAA,cAACI,GAAA,CAAY,GAAGF,EAAiB,EAE9D,OACIF,GAAA,cAACK,GAAA,CAAM,GAAIjC,GAAgB,CAAC,GACvB2B,EACDC,GAAA,cAACM,GAAA,CACG,GAAI,CACA,QAAS,OACT,SAAU,OACV,wBAAyB,CACrB,OAAQ,EACR,UAAW,QACf,CACJ,EACA,MACIxC,GACIkC,GAAA,cAACO,GAAA,CACG,QAAQ,KACR,UAAWC,GAA2B,OAErC1B,EACG,GAAGc,kBACH,UAAUJ,IACNZ,EAAAc,GAAA,YAAAA,EAAU,OAAV,YAAAd,EAAgB,UACZC,EAAAa,GAAA,YAAAA,EAAU,UAAV,YAAAb,EAAmB,SACnBa,GAAA,YAAAA,EAAU,QACVE,EACJ,UACJ,GACJ,CACJ,EAGR,OACI,OAAOjB,EAAoB,IACvBA,EAEAqB,GAAA,cAACS,GAAA,CACG,QACId,IAAW,QACX,OAAOA,EAAW,IACZT,IAAe,SACXI,EACAF,EACJ,QAGVY,GAAA,cAACU,GAAA,IAAc,CACnB,EAGR,OACIlC,EACIwB,GAAA,cAACW,GAAA,CACG,QAAQ,OACR,IAAI,OACH,GAAIpC,GAAqB,CAAC,GAE1BC,EACK,OAAOA,GAAkB,WACrBA,EAAc,CACV,eAAgB,IACpB,CAAC,EACDA,EACJ,IACV,EACA,OAEP,GAAIH,GAAe,CAAC,EACzB,EACA2B,GAAA,cAACY,GAAA,CAAa,GAAItC,GAAgB,CAAC,GAAKP,CAAS,EACjDiC,GAAA,cAACa,GAAA,CACG,GAAI,CACA,QAAS,OACT,eAAgB,WAChB,IAAK,OACL,QAAS,MACb,EACC,GAAIpC,GAAqB,CAAC,GAE1BC,EACK,OAAOA,GAAkB,WACrBA,EAAc,CACV,eAAgByB,EAChB,gBAAAD,CACJ,CAAC,EACDxB,EACJyB,CACV,CACJ,CAER,EAvI6C,UChC7C,OAAOW,MAAW,QAElB,OACI,mBAAAC,GACA,iBAAAC,GACA,gBAAAC,GACA,uBAAAC,GACA,oBAAAC,GACA,aAAAC,GACA,eAAAC,GACA,iBAAAC,GACA,WAAAC,GACA,SAAAC,OACG,kBAEP,OAAOC,OAAU,qBACjB,OAAOC,OAAgB,2BACvB,OAAOC,OAAgB,2BACvB,OAAOC,OAAiB,4BACxB,OAAOC,OAAiB,4BACxB,OAAOC,OAAgB,2BACvB,OAAOC,OAAS,oBAEhB,OAAOC,OAAmB,gCAe1B,OAAS,8BAAAC,OAAkC,sBAQpC,IAAMC,GAA4BC,EAAA,CAAC,CACtC,MAAAC,EACA,gBAAiBC,EACjB,aAAcC,EACd,aAAAC,EACA,SAAAC,EACA,kBAAmBC,EACnB,UAAAC,EACA,SAAUC,EACV,UAAAC,EAAY,GACZ,WAAYC,EACZ,iBAAAC,EACA,aAAAC,EACA,YAAAC,EACA,aAAAC,EACA,kBAAAC,EACA,cAAAC,EACA,kBAAAC,EACA,cAAAC,EACA,OAAQC,EACR,cAAAC,CACJ,IAAM,CAnEN,IAAAC,GAAAC,GAAAC,GAoEI,IAAMC,EAAYC,GAAa,EACzB,CAAE,QAAS,CAAE,WAAYC,CAAiB,EAAI,CAAC,CAAE,EACnDC,GAAiB,EACf,CAAE,aAAcC,CAAoB,EAAIC,GAAgB,EACxDC,EAAe3B,GAAoByB,EAEnCG,EAAaC,GAAc,EAC3BC,EAAOC,GAAQ,EACfC,EAAKC,GAAM,EACX,CAAE,OAAAC,EAAQ,KAAMC,CAAa,EAAIC,GAAc,EAC/CC,EAAsBC,GAAoB,EAE1C,CACF,SAAAC,EACA,OAAAC,EACA,GAAIC,EACJ,WAAAC,EACJ,EAAIC,GAAYtC,CAAiB,EAE3BuC,EAAaC,GAAU,CACzB,SAAAN,EACA,OAAQ,MACZ,CAAC,EAEKO,EAAK7C,GAAgBwC,EAErBM,EACF,OAAOxC,EAAwB,IACzBgB,EACAhB,EAEJyC,GAAUT,GAAA,YAAAA,EAAU,OAAQ,CAACtC,EAC7BgD,EACF7C,OACEc,GAAAqB,GAAA,YAAAA,EAAU,OAAV,YAAArB,GAAgB,aAAaqB,GAAA,YAAAA,EAAU,aACrCpC,GAEF+C,EACF,OAAOH,EAAe,IAClBI,EAAA,cAAAA,EAAA,cAAGJ,CAAW,GAAO,OAErBI,EAAA,cAACC,GAAA,IAAW,EAGdC,EAA+CL,EAC/C,CACI,GAAI1C,EAAY,CAAE,SAAU,EAAK,EAAI,CAAC,EACtC,SAAUsB,IAAe,SAAWW,GAAA,YAAAA,EAAU,MAAQG,EAC1D,EACA,OAEAY,EAAyC,CAC3C,GAAIhD,EAAY,CAAE,SAAU,EAAK,EAAI,CAAC,EACtC,SAAUsB,IAAe,SAAWW,GAAA,YAAAA,EAAU,MAAQG,GACtD,aAAcI,EACd,iBAAAtC,CACJ,EAEM+C,EACFJ,EAAA,cAACK,GAAA,CAAI,QAAQ,OAAO,cAAc,MAAM,WAAW,UAC9CvC,GAAiBkC,EAAA,cAACM,GAAA,CAAmB,GAAGxC,EAAe,EACvD+B,GAAWG,EAAA,cAACO,GAAA,CAAY,GAAGL,EAAiB,EAC7CF,EAAA,cAACQ,GAAA,CAAe,GAAGL,EAAoB,CAC3C,EAGEM,GACFX,EACO,CACG,GAAI3C,EAAY,CAAE,SAAU,EAAK,EAAI,CAAC,EACtC,SACIsB,IAAe,SAAWW,GAAA,YAAAA,EAAU,MAAQG,GAChD,aAAAf,EACA,QAAS,WACT,UAAW,IAAM,CACTC,IAAe,SACfO,GAAaI,GAAA,YAAAA,EAAU,SAASA,GAAA,YAAAA,EAAU,OAAQ,EAAE,EAEpDP,EAAG,CAAE,GAAIY,CAAW,CAAC,CAE7B,EACA,aAAcE,EACd,iBAAAtC,EACA,GAAGL,CACP,EACA,OAEJ0D,EAAmC,CACrC,GAAIvD,EAAY,CAAE,SAAU,EAAK,EAAI,CAAC,EACtC,GAAGP,CACP,EAEM+D,GACFX,EAAA,cAAAA,EAAA,cACKF,GAAyBE,EAAA,cAACY,GAAA,CAAc,GAAGH,GAAmB,EAC/DT,EAAA,cAACa,GAAA,CAAY,GAAGH,EAAiB,CACrC,EAGJ,OACIV,EAAA,cAACc,GAAA,CAAM,GAAIxD,GAAgB,CAAC,GACvByC,EACDC,EAAA,cAACe,GAAA,CACG,GAAI,CACA,QAAS,OACT,SAAU,OACV,wBAAyB,CACrB,OAAQ,EACR,UAAW,QACf,CACJ,EACA,MACIpE,GACIqD,EAAA,cAACgB,GAAA,CACG,QAAQ,KACR,UAAWC,GAA2B,OAErC/C,EACG,GAAGqB,iBACH,QAAQL,IACJlB,GAAAoB,GAAA,YAAAA,EAAU,OAAV,YAAApB,GAAgB,UACZC,GAAAmB,GAAA,YAAAA,EAAU,UAAV,YAAAnB,GAAmB,SACnBmB,GAAA,YAAAA,EAAU,QACVG,GACJ,UACJ,GACJ,CACJ,EAGR,OACI,OAAO1B,EAAoB,IACvBA,EAEAmC,EAAA,cAACkB,GAAA,CACG,QACI7B,IAAW,QACX,OAAOA,EAAW,IACZZ,IAAe,SACXM,EACAJ,EACJ,QAGVqB,EAAA,cAACmB,GAAA,IAAc,CACnB,EAGR,OACInB,EAAA,cAACK,GAAA,CACG,QAAQ,OACR,IAAI,OACH,GAAI5C,GAAqB,CAAC,GAE1BC,EACK,OAAOA,GAAkB,WACrBA,EAAc,CACV,eAAgB0C,EAChB,gBAAAF,EACA,mBAAAC,CACJ,CAAC,EACDzC,EACJ0C,CACV,EAEH,GAAI7C,GAAe,CAAC,EACzB,EACAyC,EAAA,cAACoB,GAAA,CAAa,GAAI5D,GAAgB,CAAC,GAAKT,CAAS,EACjDiD,EAAA,cAACqB,GAAA,CACG,GAAI,CACA,QAAS,OACT,eAAgB,WAChB,IAAK,OACL,QAAS,MACb,EACC,GAAI1D,GAAqB,CAAC,GAE1BC,EACK,OAAOA,GAAkB,WACrBA,EAAc,CACV,eAAgB+C,GAChB,kBAAAF,GACA,gBAAAC,CACJ,CAAC,EACD9C,EACJ+C,EACV,CACJ,CAER,EAnNyC,QC9CzC,OAAOW,OAAW,QAElB,OACI,gBAAAC,GACA,uBAAAC,GACA,oBAAAC,GACA,iBAAAC,GACA,eAAAC,OACG,kBAEP,OAAOC,OAAU,qBACjB,OAAOC,OAAgB,2BACvB,OAAOC,OAAiB,4BACxB,OAAOC,OAAgB,2BACvB,OAAOC,OAAS,oBAKhB,OAAS,8BAAAC,OAAkC,sBAQpC,IAAMC,GAA4BC,EAAA,CAAC,CACtC,MAAAC,EACA,UAAAC,EACA,SAAAC,EACA,kBAAmBC,EACnB,SAAUC,EACV,WAAYC,EACZ,aAAAC,EACA,YAAAC,EACA,aAAAC,EACA,kBAAAC,EACA,cAAAC,CACJ,IAAM,CAvCN,IAAAC,EAAAC,EAwCI,IAAMC,EAAYC,GAAa,EACzB,CAAE,QAAS,CAAE,WAAYC,CAAiB,EAAI,CAAC,CAAE,EACnDC,GAAiB,EACfC,EAAsBC,GAAoB,EAE1CC,EAAaC,GAAc,EAE3B,CAAE,SAAAC,EAAU,WAAAC,CAAW,EAAIC,GAAYnB,CAAiB,EAExDoB,EACFvB,MACEoB,GAAA,YAAAA,EAAU,YAAa,CAAC,EAACA,GAAA,MAAAA,EAAU,UACjClB,GAEFsB,EACF,OAAOpB,EAAwB,IACzBU,EACAV,EAEJqB,EACF,OAAOD,EAAe,IAClBE,GAAA,cAAAA,GAAA,cAAGF,CAAW,GAAO,OAErBE,GAAA,cAACC,GAAA,IAAW,EAGdC,EACFL,EACM,CACI,SACIL,IAAe,SAAWE,GAAA,YAAAA,EAAU,MAAQC,EAChD,GAAGnB,CACP,EACA,OAEJ2B,EAAuBN,EACzBG,GAAA,cAACI,GAAA,CAAc,GAAGF,EAAmB,EACrC,KAEJ,OACIF,GAAA,cAACK,GAAA,CAAM,GAAI1B,GAAgB,CAAC,GACvBoB,EACDC,GAAA,cAACM,GAAA,CACG,GAAI,CACA,QAAS,OACT,SAAU,OACV,wBAAyB,CACrB,OAAQ,EACR,UAAW,QACf,CACJ,EACA,MACIjC,GACI2B,GAAA,cAACO,GAAA,CACG,QAAQ,KACR,UAAWC,GAA2B,OAErCtB,EACG,GAAGS,gBACHL,IACIN,EAAAU,GAAA,YAAAA,EAAU,OAAV,YAAAV,EAAgB,UACZC,EAAAS,GAAA,YAAAA,EAAU,UAAV,YAAAT,EAAmB,SACnBS,GAAA,YAAAA,EAAU,QACVC,EACJ,QACJ,CACJ,CACJ,EAGR,OACIK,GAAA,cAACS,GAAA,CAAI,QAAQ,OAAO,IAAI,OAAQ,GAAG3B,GAC9BC,EACK,OAAOA,GAAkB,WACrBA,EAAc,CACV,eAAgBoB,EAChB,kBAAAD,CACJ,CAAC,EACDnB,EACJoB,CACV,EAEH,GAAIvB,GAAe,CAAC,EACzB,EACAoB,GAAA,cAACU,GAAA,CAAa,GAAI7B,GAAgB,CAAC,GAAKN,CAAS,CACrD,CAER,EApGyC,QC3BzC,OAAOoC,OAAW,QAClB,OACI,iBAAAC,GACA,gBAAAC,GACA,uBAAAC,GACA,oBAAAC,GACA,iBAAAC,GACA,WAAAC,GACA,SAAAC,GACA,eAAAC,GACA,aAAAC,OACG,kBAEP,OAAOC,OAAU,qBACjB,OAAOC,OAAiB,4BACxB,OAAOC,OAAiB,4BACxB,OAAOC,OAAgB,2BACvB,OAAOC,OAAgB,2BACvB,OAAOC,OAAS,oBAChB,OAAOC,OAAgB,2BAEvB,OAAOC,OAAmB,gCAc1B,OAAS,8BAAAC,OAAkC,sBAQpC,IAAMC,GAA4BC,EAAA,CAAC,CACtC,MAAAC,EACA,QAAAC,EACA,UAAAC,EACA,UAAAC,EAAY,GACZ,SAAAC,EACA,SAAUC,EACV,aAAAC,EACA,WAAYC,EACZ,iBAAAC,EACA,aAAAC,EACA,YAAAC,EACA,aAAAC,EACA,kBAAAC,EACA,cAAAC,EACA,kBAAAC,EACA,cAAAC,EACA,OAAQC,CACZ,IAAM,CA7DN,IAAAC,EAAAC,GAAAC,EA8DI,IAAMC,EAAYC,GAAa,EACzB,CAAE,QAAS,CAAE,WAAYC,CAAiB,EAAI,CAAC,CAAE,EACnDC,GAAiB,EAEfC,EAAaC,GAAc,EAC3BC,EAAOC,GAAQ,EACfC,EAAKC,GAAM,EACX,CAAE,OAAAC,EAAQ,KAAMC,CAAa,EAAIC,GAAc,EAC/CC,EAAsBC,GAAoB,EAE1C,CACF,SAAAC,EACA,OAAAC,EACA,GAAIC,EACJ,WAAAC,CACJ,EAAIC,GAAYlC,CAAiB,EAE3BmC,EAAaC,GAAU,CACzB,SAAAN,EACA,OAAQ,MACZ,CAAC,EAEKO,EAAKpC,GAAgB+B,EAErBM,EACF,OAAOpC,EAAwB,IACzBe,EACAf,EAEJqC,GAAUT,GAAA,YAAAA,EAAU,OAAQ,CAAC7B,EAG7BuC,GADF3C,KAAae,EAAAkB,GAAA,YAAAA,EAAU,OAAV,YAAAlB,EAAgB,aAAakB,GAAA,YAAAA,EAAU,aACb,OAAOO,EAAO,IACnDI,EACF7C,IAAWkC,GAAA,YAAAA,EAAU,UAAW,CAAC,EAACA,GAAA,MAAAA,EAAU,MAE1CY,EACF,OAAOJ,EAAe,IAClBK,GAAA,cAAAA,GAAA,cAAGL,CAAW,GAAO,OAErBK,GAAA,cAACC,GAAA,IAAW,EAGdC,EAA+CN,EAC/C,CACI,GAAIzC,EAAY,CAAE,SAAU,EAAK,EAAI,CAAC,EACtC,SAAUqB,IAAe,SAAWW,GAAA,YAAAA,EAAU,MAAQG,CAC1D,EACA,OACAa,EAA+CL,EAC/C,CACI,GAAI3C,EAAY,CAAE,SAAU,EAAK,EAAI,CAAC,EACtC,SAAUqB,IAAe,SAAWW,GAAA,YAAAA,EAAU,MAAQG,EACtD,aAAcI,CAClB,EACA,OACAU,EACFP,EACM,CACI,GAAI1C,EAAY,CAAE,SAAU,EAAK,EAAI,CAAC,EACtC,SACIqB,IAAe,SAAWW,GAAA,YAAAA,EAAU,MAAQG,EAChD,aAAcI,EACd,UAAW,IAAM,CACTlB,IAAe,SACfO,GAAaI,GAAA,YAAAA,EAAU,SAASA,GAAA,YAAAA,EAAU,OAAQ,EAAE,EAEpDP,EAAG,CAAE,GAAIY,CAAW,CAAC,CAE7B,EACA,iBAAAhC,CACJ,EACA,OACJ6C,EAAyC,CAC3C,GAAIlD,EAAY,CAAE,SAAU,EAAK,EAAI,CAAC,EACtC,SAAUqB,IAAe,SAAWW,GAAA,YAAAA,EAAU,MAAQG,EACtD,aAAcI,EACd,iBAAAlC,CACJ,EAEM8C,EACFN,GAAA,cAAAA,GAAA,cACKJ,GAAWI,GAAA,cAACO,GAAA,CAAY,GAAGL,EAAiB,EAC5CJ,GAAuBE,GAAA,cAACQ,GAAA,CAAY,GAAGL,EAAiB,EACxDN,GAAyBG,GAAA,cAACS,GAAA,CAAc,GAAGL,EAAmB,EAC/DJ,GAAA,cAACU,GAAA,CAAe,GAAGL,EAAoB,CAC3C,EAGJ,OACIL,GAAA,cAACW,GAAA,CAAM,GAAIlD,GAAgB,CAAC,GACvBsC,EACDC,GAAA,cAACY,GAAA,CACG,GAAI,CACA,QAAS,OACT,SAAU,OACV,wBAAyB,CACrB,OAAQ,EACR,UAAW,QACf,CACJ,EACA,MACI5D,GACIgD,GAAA,cAACa,GAAA,CACG,QAAQ,KACR,UAAWC,GAA2B,OAErC1C,EACG,GAAGkB,gBACH,QAAQL,IACJf,GAAAiB,GAAA,YAAAA,EAAU,OAAV,YAAAjB,GAAgB,UACZC,EAAAgB,GAAA,YAAAA,EAAU,UAAV,YAAAhB,EAAmB,SACnBgB,GAAA,YAAAA,EAAU,QACVG,EACJ,UACJ,GACJ,CACJ,EAGR,OACI,OAAOtB,EAAoB,IACvBA,EAEAgC,GAAA,cAACe,GAAA,CACG,QACI3B,IAAW,QACX,OAAOA,EAAW,IACZZ,IAAe,SACXM,EACAJ,EACJ,QAGVsB,GAAA,cAACgB,GAAA,IAAc,CACnB,EAGR,OACIhB,GAAA,cAACiB,GAAA,CACG,QAAQ,OACR,IAAI,OACH,GAAIrD,GAAqB,CAAC,GAE1BC,EACK,OAAOA,GAAkB,WACrBA,EAAc,CACV,eAAgByC,EAChB,kBAAAF,EACA,gBAAAD,EACA,gBAAAD,EACA,mBAAAG,CACJ,CAAC,EACDxC,EACJyC,CACV,EAEH,GAAI5C,GAAe,CAAC,EACzB,EACAsC,GAAA,cAACkB,GAAA,CAAa,GAAIvD,GAAgB,CAAC,GAAKP,CAAS,EACjD4C,GAAA,cAACmB,GAAA,CACG,GAAI,CAAE,QAAS,MAAO,EACrB,GAAIrD,GAAqB,CAAC,GAE1BC,EACK,OAAOA,GAAkB,WACrBA,EAAc,CAAE,eAAgB,IAAK,CAAC,EACtCA,EACJ,IACV,CACJ,CAER,EA/LyC,QC3CzC,OAAOqD,IAAS,cAAAC,OAAkB,QAClC,OACI,iBAAAC,GACA,gBAAAC,GACA,UAAAC,GACA,eAAAC,GACA,oBAAAC,GACA,iBAAAC,GACA,WAAAC,GACA,wBAAAC,OACG,kBACP,OACI,0BAAAC,GACA,uBAAAC,OACG,sBAEP,OAAOC,OAAY,uBACnB,OAAOC,OAAoB,qCAWpB,IAAMC,GAA4CC,EAAA,CAAC,CACtD,SAAUC,EACV,wBAAAC,EACA,SAAAC,EAAW,GACX,cAAAC,EACA,aAAAC,EACA,KAAAC,EACA,SAAAC,EACA,QAAAC,EACA,GAAGC,CACP,IAAM,CACF,IAAMC,EAAuBC,GAAWC,EAAoB,EAEtDC,GACFT,GAAA,YAAAA,EAAe,UACfM,EAAqB,QAAQ,QAAQ,oBAEnCI,GACFV,GAAA,YAAAA,EAAe,qBACfM,EAAqB,QAAQ,QAAQ,mBACnCK,EAAYC,GAAa,EACzBC,EAAaC,GAAc,EAC3BC,EAAOC,GAAQ,EACf,CAAE,KAAMC,CAAW,EAAIC,GAAiB,EAExCC,EAAaN,IAAe,SAAWI,EAAaF,EAEpD,CAAE,UAAWK,CAAkB,EAAIC,GAAc,EAEjD,CAAE,SAAAC,CAAS,EAAIC,GACjB1B,GAAyBC,CAC7B,EAEM,CAAE,KAAA0B,CAAK,EAAIC,GAAO,CACpB,SAAUH,GAAA,YAAAA,EAAU,KACpB,OAAQ,SACR,aAAc,CACV,QAASb,CACb,EACA,OAAQ,CACJ,SAAAa,CACJ,CACJ,CAAC,EAEKI,EAAgB9B,EAAA,IACd4B,GAAA,MAAAA,EAAM,IAAY,GACbA,GAAA,MAAAA,EAAM,OAAeA,EAAK,OAExBb,EACH,yBACA,qCACJ,EAPc,iBAUhBgB,EAAYL,EAAWF,EAAkBE,EAAUpB,CAAI,EAAI,GAE3D,CAAE,GAAA0B,EAAI,GAAGC,CAAU,EAAIxB,EAE7B,OAAII,GAAwBC,GAAsB,EAACc,GAAA,MAAAA,EAAM,KAC9C,KAIPM,GAAA,cAACX,EAAA,CACG,GAAIQ,EACJ,QAAS,GACT,QAAUI,GAAuD,CAC7D,IAAIP,GAAA,YAAAA,EAAM,OAAQ,GAAO,CACrBO,EAAE,eAAe,EACjB,OAEA3B,IACA2B,EAAE,eAAe,EACjB3B,EAAQ2B,CAAC,EAEjB,EACA,MAAO,CAAE,eAAgB,MAAO,GAEhCD,GAAA,cAACE,GAAA,CACG,UAAUR,GAAA,YAAAA,EAAM,OAAQ,GACxB,UAAW,CAACzB,GAAY+B,GAAA,cAACG,GAAA,CAAgB,GAAGhC,EAAc,EAC1D,MAAOyB,EAAc,EACrB,QAAQ,YACR,GAAI,CAAE,SAAU,EAAG,GAAGE,CAAG,EACzB,cAAaM,GAAoB,aACjC,UAAWC,GAAuB,aACjC,GAAGN,GAEH9B,EACG+B,GAAA,cAACG,GAAA,CAAe,SAAS,QAAS,GAAGhC,EAAc,EAEnDE,GAAYQ,EAAU,iBAAkB,QAAQ,CAExD,CACJ,CAER,EAhGyD,gBC5BzD,OAAOyB,IAAS,cAAAC,OAAkB,QAClC,OACI,UAAAC,GACA,iBAAAC,GACA,gBAAAC,GACA,eAAAC,GACA,oBAAAC,GACA,iBAAAC,GACA,WAAAC,GACA,wBAAAC,OACG,kBACP,OACI,0BAAAC,GACA,uBAAAC,OACG,sBAEP,OAAOC,OAAY,uBACnB,OAAOC,OAAkB,mCAWlB,IAAMC,GAAwCC,EAAA,CAAC,CAClD,SAAUC,EACV,wBAAAC,EACA,aAAAC,EACA,SAAAC,EAAW,GACX,cAAAC,EACA,aAAAC,EACA,KAAAC,EACA,SAAAC,EACA,QAAAC,EACA,GAAGC,CACP,IAAM,CACF,IAAMC,EAAuBC,GAAWC,EAAoB,EAEtDC,GACFT,GAAA,YAAAA,EAAe,UACfM,EAAqB,QAAQ,QAAQ,oBAEnCI,GACFV,GAAA,YAAAA,EAAe,qBACfM,EAAqB,QAAQ,QAAQ,mBACnCK,EAAYC,GAAa,EAEzBC,EAAaC,GAAc,EAC3BC,EAAOC,GAAQ,EACf,CAAE,KAAMC,CAAW,EAAIC,GAAiB,EAExCC,EAAaN,IAAe,SAAWI,EAAaF,EAEpD,CAAE,QAASK,CAAgB,EAAIC,GAAc,EAE7C,CAAE,GAAAC,EAAI,SAAAC,CAAS,EAAIC,GACrB5B,GAAyBC,CAC7B,EAEM,CAAE,KAAA4B,CAAK,EAAIC,GAAO,CACpB,SAAUH,GAAA,YAAAA,EAAU,KACpB,OAAQ,OACR,OAAQ,CAAE,GAAIzB,GAAgBwB,EAAI,SAAAC,CAAS,EAC3C,aAAc,CACV,QAASd,CACb,CACJ,CAAC,EAEKkB,EAAgBhC,EAAA,IACd8B,GAAA,MAAAA,EAAM,IAAY,GACbA,GAAA,MAAAA,EAAM,OAAeA,EAAK,OAExBd,EACH,yBACA,qCACJ,EAPc,iBAUhBiB,EACFL,IAAazB,GAAgBwB,GACvBF,EAAgBG,EAAUzB,GAAiBwB,EAAKpB,CAAI,EACpD,GAEJ,CAAE,GAAA2B,EAAI,GAAGC,CAAU,EAAIzB,EAE7B,OAAII,GAAwBC,GAAsB,EAACe,GAAA,MAAAA,EAAM,KAC9C,KAIPM,GAAA,cAACZ,EAAA,CACG,GAAIS,EACJ,QAAS,GACT,QAAUI,GAAuD,CAC7D,IAAIP,GAAA,YAAAA,EAAM,OAAQ,GAAO,CACrBO,EAAE,eAAe,EACjB,OAEA5B,IACA4B,EAAE,eAAe,EACjB5B,EAAQ4B,CAAC,EAEjB,EACA,MAAO,CAAE,eAAgB,MAAO,GAEhCD,GAAA,cAACE,GAAA,CACG,UAAUR,GAAA,YAAAA,EAAM,OAAQ,GACxB,UACI,CAAC1B,GACGgC,GAAA,cAACG,GAAA,CACG,GAAI,CAAE,UAAW,QAAS,EACzB,GAAGjC,EACR,EAGR,MAAO0B,EAAc,EACrB,GAAI,CAAE,SAAU,EAAG,GAAGE,CAAG,EACzB,cAAaM,GAAoB,WACjC,UAAWC,GAAuB,WACjC,GAAGN,GAEH/B,EACGgC,GAAA,cAACG,GAAA,CAAa,SAAS,QAAS,GAAGjC,EAAc,EAEjDE,GAAYQ,EAAU,eAAgB,MAAM,CAEpD,CACJ,CAER,EAzGqD,cC5BrD,OAAO0B,IAAS,cAAAC,OAAkB,QAClC,OACI,aAAAC,GACA,gBAAAC,GACA,mBAAAC,GACA,UAAAC,GACA,eAAAC,GACA,qBAAAC,GACA,sBAAAC,GACA,wBAAAC,OACG,kBACP,OACI,0BAAAC,GACA,uBAAAC,OACG,sBAEP,OAAOC,OAAY,uBACnB,OAAOC,OAAY,uBACnB,OAAOC,OAAmB,8BAC1B,OAAOC,OAAiB,4BAExB,OAAOC,OAAmB,yBAE1B,OAAOC,OAAmB,oCAUnB,IAAMC,GAA4CC,EAAA,CAAC,CACtD,SAAUC,EACV,wBAAAC,EACA,aAAAC,EACA,UAAAC,EACA,aAAcC,EACd,SAAAC,EACA,oBAAAC,EACA,kBAAAC,EACA,SAAAC,EAAW,GACX,cAAAC,EACA,KAAAC,EACA,SAAAC,EACA,iBAAAC,EACA,aAAAC,EACA,cAAAC,EACA,kBAAAC,EACA,aAAAC,EACA,YAAAC,EACA,GAAGC,CACP,IAAM,CACF,IAAMC,EAAuBC,GAAWC,EAAoB,EAEtDC,GACFb,GAAA,YAAAA,EAAe,UACfU,EAAqB,QAAQ,QAAQ,oBAEnCI,GACFd,GAAA,YAAAA,EAAe,qBACfU,EAAqB,QAAQ,QAAQ,mBACnCK,EAAYC,GAAa,EAEzB,CAAE,GAAAC,EAAI,SAAAC,EAAU,WAAAC,CAAW,EAAIC,GACjC7B,GAAyBC,CAC7B,EAEM,CAAE,aAAc6B,CAAoB,EAAIC,GAAgB,EAExDC,EAAe5B,GAAoB0B,EAEnC,CAAE,OAAAG,EAAQ,UAAAC,EAAW,UAAAC,CAAU,EAAIC,GAAU,EAE7C,CAAE,KAAAC,CAAK,EAAIC,GAAO,CACpB,SAAUX,GAAA,YAAAA,EAAU,KACpB,OAAQ,SACR,OAAQ,CAAE,GAAIzB,GAAgBwB,EAAI,SAAAC,CAAS,EAC3C,aAAc,CACV,QAASL,CACb,CACJ,CAAC,EAEKiB,EAAgBxC,EAAA,IACdsC,GAAA,MAAAA,EAAM,IAAY,GACbA,GAAA,MAAAA,EAAM,OAAeA,EAAK,OAExBb,EACH,yBACA,qCACJ,EAPc,iBAUhB,CAACgB,GAAMC,CAAO,EAAIC,GAAM,SAAS,EAAK,EAEtCC,EAAkB5C,EAAA,IAAM,CAC1B0C,EAAQ,EAAI,CAChB,EAFwB,mBAIlBG,EAAc7C,EAAA,IAAM,CACtB0C,EAAQ,EAAK,CACjB,EAFoB,eAIdI,EAAuB9C,EAAA,IAAM,EAC1BG,GAAgBwB,IAAOE,IACxBkB,EAAY,EAAK,EACjBL,EAAQ,EAAK,EACbR,EACI,CACI,GAAI/B,GAAgBwB,GAAM,GAC1B,SAAUE,EACV,aAAAI,EACA,oBAAA1B,EACA,kBAAAC,EACA,KAAMwC,GAAkBrC,EAAMC,CAAQ,EACtC,SAAUoC,GAAkBrC,EAAMC,CAAQ,EAC1C,iBAAAC,EACA,YAAAK,CACJ,EACA,CACI,UAAY+B,GAAU,CAClB7C,GAAaA,EAAU6C,CAAK,CAChC,CACJ,CACJ,EAER,EAvB6B,wBAyBvB,CAAE,GAAAC,EAAI,GAAGC,CAAU,EAAIhC,EAEvB,CAAE,YAAA4B,CAAY,EAAIK,GAAmB,EAE3C,OAAI7B,GAAwBC,GAAsB,EAACc,GAAA,MAAAA,EAAM,KAC9C,KAIPK,GAAA,cAAC,WACGA,GAAA,cAACU,GAAA,CACG,MAAM,QACN,QAAST,EACT,UAAUN,GAAA,YAAAA,EAAM,OAAQ,GACxB,SAAUnC,GAAgBwB,MAAQS,GAAA,YAAAA,EAAW,KAAMD,EACnD,UAAW,CAAC1B,GAAYkC,GAAA,cAACW,GAAA,CAAe,GAAGrC,EAAc,EACzD,MAAOuB,EAAc,EACrB,GAAI,CAAE,SAAU,EAAG,GAAGU,CAAG,EACzB,gBAAiBzC,EAAW,SAAW,QACvC,cAAa8C,GAAoB,aACjC,UAAWC,GAAuB,aACjC,GAAGL,GAEH1C,EACGkC,GAAA,cAACW,GAAA,CAAc,SAAS,QAAS,GAAGrC,EAAc,EAElDX,GAAYmB,EAAU,iBAAkB,QAAQ,CAExD,EACAkB,GAAA,cAACc,GAAA,CACG,KAAMhB,GACN,QAASI,EACT,kBAAgB,qBAChB,mBAAiB,4BAEjBF,GAAA,cAACe,GAAA,CAAY,GAAG,sBACX5C,GACGW,EAAU,kBAAmB,eAAe,CACpD,EACAkB,GAAA,cAACgB,GAAA,CAAc,GAAI,CAAE,eAAgB,QAAS,GAC1ChB,GAAA,cAACiB,GAAA,CAAO,QAASf,GACZ7B,GACGS,EAAU,iBAAkB,QAAQ,CAC5C,EACAkB,GAAA,cAACiB,GAAA,CACG,MAAM,QACN,QAASd,EACT,UAAS,IAER/B,GAAiBU,EAAU,iBAAkB,QAAQ,CAC1D,CACJ,CACJ,CACJ,CAER,EAvJyD,gBCjCzD,OAAOoC,OAAW,QAClB,OACI,gBAAAC,GACA,eAAAC,GACA,iBAAAC,GACA,aAAAC,GACA,oBAAAC,OACG,kBACP,OACI,0BAAAC,GACA,uBAAAC,OACG,sBAEP,OAAOC,OAAmB,yBAC1B,OAAOC,OAAqB,sCAI5B,OAAS,kBAAAC,OAAsB,wBAQxB,IAAMC,GAA8CC,EAAA,CAAC,CACxD,SAAUC,EACV,wBAAAC,EACA,aAAAC,EACA,SAAAC,EAAW,GACX,iBAAAC,EACA,aAAAC,EACA,SAAAC,EACA,QAAAC,EACA,KAAMC,EACN,SAAUC,EACV,GAAGC,CACP,IAAM,CACF,IAAMC,EAAYC,GAAa,EAEzBC,EAAcC,GAAe,EAC7BC,EAAcC,GAAc,EAE5B,CAAE,UAAAC,EAAW,WAAAC,EAAY,GAAAC,CAAG,EAAIC,GAClCpB,GAAyBC,CAC7B,EAEMoB,EAAiB,CAAC,CAACR,EAAY,WAAW,CAC5C,SAAUS,GACNJ,EACAK,GAAiBL,EAAYd,EAAkBa,CAAS,CAC5D,EAAE,OAAOf,GAAgBiB,CAAE,CAC/B,CAAC,EAEKK,EAAmBzB,EAAA,IAAM,CAC3BgB,EAAY,CACR,GAAIb,GAAgBiB,EACpB,YAAa,CAAC,QAAQ,EACtB,iBAAAf,EACA,SAAUc,CACd,CAAC,CACL,EAPyB,oBASnB,CAAE,GAAAO,EAAI,GAAGC,CAAU,EAAIhB,EAE7B,OACIiB,GAAA,cAACC,GAAA,CACG,UAAW,CAACzB,GAAYwB,GAAA,cAACE,GAAA,CAAiB,GAAGxB,EAAc,EAC3D,QAASgB,EACT,gBAAiBlB,EAAW,SAAW,QACvC,QAAU2B,GAAM,CACZvB,EAAUA,EAAQuB,CAAC,EAAIN,EAAiB,CAC5C,EACA,GAAI,CAAE,SAAU,EAAG,GAAGC,CAAG,EACzB,cAAaM,GAAoB,cACjC,UAAWC,GAAuB,cACjC,GAAGN,GAEHvB,EACGwB,GAAA,cAACE,GAAA,CAAgB,SAAS,QAAS,GAAGxB,EAAc,EAEpDC,GAAYK,EAAU,kBAAmB,SAAS,CAE1D,CAER,EA5D2D,iBC1B3D,OAAOsB,IAAS,cAAAC,OAAkB,QAClC,OACI,UAAAC,GACA,iBAAAC,GACA,gBAAAC,GACA,eAAAC,GACA,oBAAAC,GACA,iBAAAC,GACA,WAAAC,GACA,wBAAAC,OACG,kBACP,OACI,0BAAAC,GACA,uBAAAC,OACG,sBAEP,OAAOC,OAAY,uBACnB,OAAOC,OAAwB,yCAWxB,IAAMC,GAAwCC,EAAA,CAAC,CAClD,SAAUC,EACV,wBAAAC,EACA,aAAAC,EACA,SAAAC,EAAW,GACX,cAAAC,EACA,aAAAC,EACA,KAAAC,EACA,SAAAC,EACA,QAAAC,EACA,GAAGC,CACP,IAAM,CACF,IAAMC,EAAuBC,GAAWC,EAAoB,EAEtDC,GACFT,GAAA,YAAAA,EAAe,UACfM,EAAqB,QAAQ,QAAQ,oBAEnCI,GACFV,GAAA,YAAAA,EAAe,qBACfM,EAAqB,QAAQ,QAAQ,mBACnC,CAAE,QAASK,CAAgB,EAAIC,GAAc,EAC7CC,EAAaC,GAAc,EAC3BC,EAAOC,GAAQ,EACf,CAAE,KAAMC,CAAW,EAAIC,GAAiB,EAExCC,EAAaN,IAAe,SAAWI,EAAaF,EAEpDK,EAAYC,GAAa,EAEzB,CAAE,GAAAC,EAAI,SAAAC,CAAS,EAAIC,GACrB5B,GAAyBC,CAC7B,EAEM,CAAE,KAAA4B,CAAK,EAAIC,GAAO,CACpB,SAAUH,GAAA,YAAAA,EAAU,KACpB,OAAQ,OACR,OAAQ,CAAE,GAAIzB,GAAgBwB,EAAI,SAAAC,CAAS,EAC3C,aAAc,CACV,QAASd,CACb,CACJ,CAAC,EAEKkB,EAAgBhC,EAAA,IACd8B,GAAA,MAAAA,EAAM,IAAY,GACbA,GAAA,MAAAA,EAAM,OAAeA,EAAK,OAExBL,EACH,yBACA,qCACJ,EAPc,iBAUhBQ,EACFL,IAAazB,GAAgBwB,GACvBX,EAAgBY,EAAUzB,GAAiBwB,EAAKpB,CAAI,EACpD,GAEJ,CAAE,GAAA2B,EAAI,GAAGC,CAAU,EAAIzB,EAE7B,OAAII,GAAwBC,GAAsB,EAACe,GAAA,MAAAA,EAAM,KAC9C,KAIPM,GAAA,cAACZ,EAAA,CACG,GAAIS,EACJ,QAAS,GACT,QAAUI,GAAuD,CAC7D,IAAIP,GAAA,YAAAA,EAAM,OAAQ,GAAO,CACrBO,EAAE,eAAe,EACjB,OAEA5B,IACA4B,EAAE,eAAe,EACjB5B,EAAQ4B,CAAC,EAEjB,EACA,MAAO,CAAE,eAAgB,MAAO,GAEhCD,GAAA,cAACE,GAAA,CACG,UAAUR,GAAA,YAAAA,EAAM,OAAQ,GACxB,UACI,CAAC1B,GAAYgC,GAAA,cAACG,GAAA,CAAoB,GAAGjC,EAAc,EAEvD,MAAO0B,EAAc,EACrB,GAAI,CAAE,SAAU,EAAG,GAAGE,CAAG,EACzB,cAAaM,GAAoB,WACjC,UAAWC,GAAuB,WACjC,GAAGN,GAEH/B,EACGgC,GAAA,cAACG,GAAA,CAAmB,SAAS,QAAS,GAAGjC,EAAc,EAEvDE,GAAYiB,EAAU,eAAgB,MAAM,CAEpD,CACJ,CAER,EAnGqD,cC5BrD,OAAOiB,IAAS,cAAAC,OAAkB,QAClC,OACI,UAAAC,GACA,iBAAAC,GACA,gBAAAC,GACA,uBAAAC,GACA,eAAAC,GACA,oBAAAC,GACA,iBAAAC,GACA,WAAAC,GACA,qBAAAC,GACA,wBAAAC,OACG,kBACP,OACI,0BAAAC,GACA,uBAAAC,OACG,sBAEP,OAAOC,OAAY,uBACnB,OAAOC,OAAkB,mCAWlB,IAAMC,GAAwCC,EAAA,CAAC,CAClD,SAAUC,EACV,wBAAAC,EACA,SAAAC,EAAW,GACX,cAAAC,EACA,aAAAC,EACA,KAAAC,EACA,SAAAC,EACA,QAAAC,EACA,GAAGC,CACP,IAAM,CAxCN,IAAAC,EAyCI,IAAMC,EAAuBC,GAAWC,EAAoB,EAEtDC,GACFV,GAAA,YAAAA,EAAe,UACfO,EAAqB,QAAQ,QAAQ,oBAEnCI,GACFX,GAAA,YAAAA,EAAe,qBACfO,EAAqB,QAAQ,QAAQ,mBACnC,CAAE,QAASK,CAAgB,EAAIC,GAAc,EAC7CC,EAAaC,GAAc,EAC3BC,EAAOC,GAAQ,EACf,CAAE,KAAMC,CAAW,EAAIC,GAAiB,EACxCC,EAAsBC,GAAoB,EAE1CC,EAAaR,IAAe,SAAWI,EAAaF,EAEpDO,EAAYC,GAAa,EAEzB,CAAE,SAAAC,EAAU,WAAAC,CAAW,EAAIC,GAC7B9B,GAAyBC,CAC7B,EAEM,CAAE,KAAA8B,CAAK,EAAIC,GAAO,CACpB,SAAUJ,GAAA,YAAAA,EAAU,KACpB,OAAQ,OACR,aAAc,CACV,QAASf,CACb,EACA,OAAQ,CACJ,SAAAe,CACJ,CACJ,CAAC,EAEKK,EAAgBlC,EAAA,IACdgC,GAAA,MAAAA,EAAM,IAAY,GACbA,GAAA,MAAAA,EAAM,OAAeA,EAAK,OAExBL,EACH,yBACA,qCACJ,EAPc,iBAUhBQ,EAAUN,EAAWb,EAAgBa,EAAUvB,CAAI,EAAI,GAEvD,CAAE,GAAA8B,EAAI,GAAGC,CAAU,EAAI5B,EAE7B,OAAIK,GAAwBC,GAAsB,EAACiB,GAAA,MAAAA,EAAM,KAC9C,KAIPM,GAAA,cAACZ,EAAA,CACG,GAAIS,EACJ,QAAS,GACT,QAAUI,GAAuD,CAC7D,IAAIP,GAAA,YAAAA,EAAM,OAAQ,GAAO,CACrBO,EAAE,eAAe,EACjB,OAEA/B,IACA+B,EAAE,eAAe,EACjB/B,EAAQ+B,CAAC,EAEjB,EACA,MAAO,CAAE,eAAgB,MAAO,GAEhCD,GAAA,cAACE,GAAA,CACG,UAAUR,GAAA,YAAAA,EAAM,OAAQ,GACxB,UAAW,CAAC7B,GAAYmC,GAAA,cAACG,GAAA,CAAc,GAAGpC,EAAc,EACxD,MAAO6B,EAAc,EACrB,GAAI,CAAE,SAAU,EAAG,GAAGE,CAAG,EACzB,cAAaM,GAAoB,WACjC,UAAWC,GAAuB,WACjC,GAAGN,GAEHlC,EACGmC,GAAA,cAACG,GAAA,CAAa,SAAS,QAAS,GAAGpC,EAAc,EAEjDE,GACAoB,EACI,GACIG,GACA7B,GACAC,gBAEJsB,IACId,EAAAmB,GAAA,YAAAA,EAAU,OAAV,YAAAnB,EAAgB,SACZmB,GAAA,YAAAA,EAAU,QACVC,GACAc,GACI3C,EACAC,CACJ,EACJ,QACJ,CACJ,CAER,CACJ,CAER,EAjHqD,cC9BrD,OAAO2C,OAAW,QAClB,OAAS,gBAAAC,OAAoB,kBAC7B,OACI,0BAAAC,GACA,uBAAAC,OACG,sBAEP,OAAOC,OAAmB,yBAC1B,OAAOC,OAA0B,2CAU1B,IAAMC,GAA4CC,EAAA,CAAC,CACtD,SAAAC,EAAW,GACX,SAAAC,EACA,QAAAC,EAAU,GACV,aAAAC,EACA,GAAGC,CACP,IAAM,CACF,IAAMC,EAAYC,GAAa,EAEzB,CAAE,GAAAC,EAAI,GAAGC,CAAU,EAAIJ,EAE7B,OACIK,GAAA,cAACC,GAAA,CACI,GAAGN,EACJ,QAASF,EACT,UAAW,CAACF,GAAYS,GAAA,cAACE,GAAA,CAAsB,GAAGR,EAAc,EAChE,gBAAiBH,EAAW,SAAW,QACvC,GAAI,CAAE,SAAU,EAAG,GAAGO,CAAG,EACzB,cAAaK,GAAoB,aACjC,UAAWC,GAAuB,aACjC,GAAGL,GAEHR,EACGS,GAAA,cAACE,GAAA,CAAqB,SAAS,QAAS,GAAGR,EAAc,EAEzDF,GAAYI,EAAU,iBAAkB,QAAQ,CAExD,CAER,EA7ByD,gBClBzD,OAAOS,OAAW,QAClB,OAAS,gBAAAC,OAAoB,kBAC7B,OACI,0BAAAC,GACA,uBAAAC,OACG,sBAEP,OAAOC,OAAmB,yBAC1B,OAAOC,OAAkB,mCAUlB,IAAMC,GAAwCC,EAAA,CAAC,CAClD,SAAAC,EAAW,GACX,aAAAC,EACA,SAAAC,EACA,GAAGC,CACP,IAAM,CACF,IAAMC,EAAYC,GAAa,EAEzB,CAAE,GAAAC,EAAI,GAAGC,CAAU,EAAIJ,EAE7B,OACIK,GAAA,cAACC,GAAA,CACG,UAAW,CAACT,GAAYQ,GAAA,cAACE,GAAA,CAAc,GAAGT,EAAc,EACxD,GAAI,CAAE,SAAU,EAAG,GAAGK,CAAG,EACzB,QAAQ,YACR,cAAaK,GAAoB,WACjC,UAAWC,GAAuB,WACjC,GAAGL,GAEHP,EACGQ,GAAA,cAACE,GAAA,CAAa,SAAS,QAAS,GAAGT,EAAc,EAEjDC,GAAYE,EAAU,eAAgB,MAAM,CAEpD,CAER,EA1BqD,cClBrD,OAAOS,IAAS,cAAAC,OAAkB,QAClC,OACI,UAAAC,GACA,iBAAAC,GACA,gBAAAC,GACA,eAAAC,GACA,oBAAAC,GACA,iBAAAC,GACA,WAAAC,GACA,wBAAAC,OACG,kBACP,OACI,0BAAAC,GACA,uBAAAC,OACG,sBAEP,OAAOC,OAAY,uBACnB,OAAOC,OAAoB,qCAYpB,IAAMC,GAA0CC,EAAA,CAAC,CACpD,SAAUC,EACV,wBAAAC,EACA,aAAAC,EACA,SAAAC,EAAW,GACX,cAAAC,EACA,aAAAC,EACA,KAAAC,EACA,SAAAC,EACA,QAAAC,EACA,GAAGC,CACP,IAAM,CACF,IAAMC,EAAuBC,GAAWC,EAAoB,EAEtDC,GACFT,GAAA,YAAAA,EAAe,UACfM,EAAqB,QAAQ,QAAQ,oBAEnCI,GACFV,GAAA,YAAAA,EAAe,qBACfM,EAAqB,QAAQ,QAAQ,mBAEnC,CAAE,SAAUK,CAAiB,EAAIC,GAAc,EAC/CC,EAAaC,GAAc,EAC3BC,EAAOC,GAAQ,EACf,CAAE,KAAMC,CAAW,EAAIC,GAAiB,EAExCC,EAAaN,IAAe,SAAWI,EAAaF,EAEpDK,EAAYC,GAAa,EAEzB,CAAE,GAAAC,EAAI,SAAAC,CAAS,EAAIC,GACrB5B,GAAyBC,CAC7B,EAEM,CAAE,KAAA4B,CAAK,EAAIC,GAAO,CACpB,SAAUH,GAAA,YAAAA,EAAU,KACpB,OAAQ,SACR,OAAQ,CAAE,GAAIzB,GAAgBwB,EAAI,SAAAC,CAAS,EAC3C,aAAc,CACV,QAASd,CACb,CACJ,CAAC,EAEKkB,EAAgBhC,EAAA,IACd8B,GAAA,MAAAA,EAAM,IAAY,GACbA,GAAA,MAAAA,EAAM,OAAeA,EAAK,OAExBL,EACH,yBACA,qCACJ,EAPc,iBAUhBQ,EACFL,IAAazB,GAAgBwB,GACvBX,EAAiBY,EAAUzB,GAAiBwB,EAAKpB,CAAI,EACrD,GAEJ,CAAE,GAAA2B,EAAI,GAAGC,CAAU,EAAIzB,EAE7B,OAAII,GAAwBC,GAAsB,EAACe,GAAA,MAAAA,EAAM,KAC9C,KAIPM,GAAA,cAACZ,EAAA,CACG,GAAIS,EACJ,QAAS,GACT,QAAUI,GAAuD,CAC7D,IAAIP,GAAA,YAAAA,EAAM,OAAQ,GAAO,CACrBO,EAAE,eAAe,EACjB,OAEA5B,IACA4B,EAAE,eAAe,EACjB5B,EAAQ4B,CAAC,EAEjB,EACA,MAAO,CAAE,eAAgB,MAAO,GAEhCD,GAAA,cAACE,GAAA,CACG,UAAUR,GAAA,YAAAA,EAAM,OAAQ,GACxB,UAAW,CAAC1B,GAAYgC,GAAA,cAACG,GAAA,CAAgB,GAAGjC,EAAc,EAC1D,MAAO0B,EAAc,EACrB,GAAI,CAAE,SAAU,EAAG,GAAGE,CAAG,EACzB,cAAaM,GAAoB,YACjC,UAAWC,GAAuB,YACjC,GAAGN,GAEH/B,EACGgC,GAAA,cAACG,GAAA,CAAe,SAAS,QAAS,GAAGjC,EAAc,EAEnDE,GAAYiB,EAAU,gBAAiB,OAAO,CAEtD,CACJ,CAER,EAlGuD,eC7BvD,OAAOiB,OAAW,QAClB,OAAS,gBAAAC,OAAoB,kBAC7B,OACI,0BAAAC,GACA,uBAAAC,OACG,sBAEP,OAAOC,OAAmB,yBAC1B,OAAOC,OAA0B,2CAU1B,IAAMC,GAA4CC,EAAA,CAAC,CACtD,WAAAC,EACA,SAAAC,EAAW,GACX,QAAAC,EAAU,GACV,aAAAC,EACA,SAAAC,EACA,GAAGC,CACP,IAAM,CACF,IAAMC,EAAYC,GAAa,EAEzB,CAAE,GAAAC,EAAI,GAAGC,CAAU,EAAIJ,EAE7B,OACIK,GAAA,cAAC,SAAM,QAAQ,yBACXA,GAAA,cAAC,SAAO,GAAGV,EAAY,GAAG,wBAAwB,SAAQ,GAAC,OAAM,GAAC,EAClEU,GAAA,cAACC,GAAA,CACG,UAAU,OACV,UACI,CAACV,GAAYS,GAAA,cAACE,GAAA,CAAsB,GAAGT,EAAc,EAEzD,gBAAiBF,EAAW,SAAW,QACvC,QAASC,EACT,GAAI,CAAE,SAAU,EAAG,GAAGM,CAAG,EACzB,cAAaK,GAAoB,aACjC,UAAWC,GAAuB,aACjC,GAAGL,GAEHR,EACGS,GAAA,cAACE,GAAA,CAAqB,SAAS,QAAS,GAAGT,EAAc,EAEzDC,GAAYE,EAAU,iBAAkB,QAAQ,CAExD,CACJ,CAER,EAnCyD,gBClBzD,OAAOS,IAAS,YAAAC,GAAU,aAAAC,OAAiB,QAE3C,OAAOC,OAAS,oBAChB,OAAOC,OAAsB,iCAC7B,OAAOC,OAAgB,2BAOhB,IAAMC,GAA0DC,EAAA,CAAC,CACpE,gBAAAC,EACA,QAAAC,CACJ,IAAM,CACF,GAAM,CAACC,EAAUC,CAAW,EAAIC,GAAS,GAAG,EAEtC,CAACC,EAAWC,CAAY,EAAIF,GAASJ,CAAe,EAE1D,OAAAO,GAAU,IAAM,CACZ,IAAMC,EAAmB,IAAMR,EACzBS,EAAQ,YAAY,IAAM,CAC5BH,EAAcI,GAAiBA,EAAe,CAAC,EAC/CP,EAAaO,GAAiBA,EAAeF,CAAgB,CACjE,EAAG,GAAI,EAEP,OAAIH,IAAc,GACd,cAAcI,CAAK,EAGhB,IAAM,CACT,cAAcA,CAAK,CACvB,CACJ,EAAG,CAACJ,CAAS,CAAC,EAGVM,GAAA,cAAAA,GAAA,cACIA,GAAA,cAACC,GAAA,CAAI,GAAI,CAAE,SAAU,WAAY,QAAS,aAAc,GACpDD,GAAA,cAACE,GAAA,CACG,MAAM,UACN,QAAQ,cACR,MAAOX,EACX,EACAS,GAAA,cAACC,GAAA,CACG,GAAI,CACA,IAAK,EACL,KAAM,EACN,OAAQ,EACR,MAAO,EACP,SAAU,WACV,QAAS,OACT,WAAY,SACZ,eAAgB,QACpB,GAEAD,GAAA,cAACG,GAAA,CAAW,UAAU,OAAOT,CAAU,CAC3C,CACJ,EACAM,GAAA,cAACC,GAAA,CACG,GAAI,CACA,WAAY,OACZ,SAAU,CAAE,GAAI,QAAS,GAAI,MAAO,CACxC,GAEAD,GAAA,cAACG,GAAA,CAAW,QAAQ,aAAab,CAAQ,CAC7C,CACJ,CAER,EAzDuE,uBCXvE,OAAOc,OAAW,QAClB,OAAOC,OAAgB,2BASvB,IAAMC,GAAsCC,EAAA,CAAC,CAAE,MAAAC,EAAO,GAAGC,CAAK,IAEtDC,GAAA,cAACC,GAAA,CAAW,QAAQ,QAAS,GAAGF,GAC3BD,CACL,EAJoC,aCV5C,OAAOI,OAAW,QAClB,OAAOC,OAAU,qBASV,IAAMC,GAAoCC,EAAA,CAAC,CAAE,MAAAC,EAAO,GAAGC,CAAK,IACxDC,GAAA,cAACC,GAAA,CAAK,MAAOH,GAAA,YAAAA,EAAO,WAAa,GAAGC,EAAM,EADJ,YCVjD,OAAOG,OAAW,QAClB,OAAOC,OAAgB,2BACvB,OAAOC,OAAU,qBAUV,IAAMC,GAAwCC,EAAA,CAAC,CAAE,MAAAC,EAAO,GAAGC,CAAK,IAE/DC,GAAA,cAACC,GAAA,CAAW,QAAQ,SAChBD,GAAA,cAACE,GAAA,CAAK,KAAM,UAAUJ,IAAU,GAAGC,GAC9BD,CACL,CACJ,EAN6C,cCZrD,OAAOK,OAAW,QAElB,OAAOC,OAAa,wBACpB,OAAOC,OAAmB,oCAC1B,OAAOC,OAAmB,oCASnB,IAAMC,GAA4CC,EAAA,CAAC,CACtD,MAAAC,EACA,eAAAC,EAAiB,OACjB,gBAAAC,EAAkB,QAClB,SAAAC,EACA,UAAAC,EACA,aAAAC,EACA,GAAGC,CACP,IAEQC,GAAA,cAACC,GAAA,CAAQ,MAAOR,EAAQC,EAAiBC,EAAkB,GAAGI,GACzDN,EACGO,GAAA,cAAC,YAAMJ,GAAYI,GAAA,cAACE,GAAA,CAAe,GAAGJ,EAAc,CAAG,EAEvDE,GAAA,cAAC,YAAMH,GAAaG,GAAA,cAACG,GAAA,CAAe,GAAGL,EAAc,CAAG,CAEhE,EAhBiD,gBCbzD,OAAOM,OAAW,QAElB,OAAOC,OAAW,QAElB,OAAOC,OAAqB,+BAE5B,OAAOC,OAAgB,2BAIvBC,GAAM,OAAOC,EAAe,EAE5B,IAAMC,GAAgBF,GAAM,OAAO,EAQtBG,GAAsCC,EAAA,CAAC,CAChD,MAAAC,EACA,QAAAC,EACA,OAAQC,EAAa,IACrB,GAAGC,CACP,IAEQC,GAAA,cAACC,GAAA,CAAW,QAAQ,QAAS,GAAGF,GAC3BR,GAAMK,CAAK,EACP,OAAOC,GAAWJ,EAAa,EAC/B,OAAOK,CAAU,CAC1B,EAX2C,aCpBnD,OAAOI,OAAW,QAWX,IAAMC,GAAsCC,EAAA,CAAC,CAChD,MAAAC,EACA,IAAAC,EACA,GAAGC,CACP,IAEQC,GAAA,cAACC,GAAA,CAAS,MAAOH,EAAK,MAAOD,EAAQ,GAAGE,GACnCF,GAASC,CACd,EAR2C,aCXnD,OAAOI,OAAW,QAClB,OAAOC,OAAU,qBACjB,OAAOC,OAAgB,2BAWhB,IAAMC,GAAoCC,EAAA,CAAC,CAC9C,SAAAC,EACA,MAAAC,EACA,GAAGC,CACP,IAEQC,GAAA,cAACC,GAAA,CAAW,QAAQ,SAChBD,GAAA,cAACE,GAAA,CAAK,KAAMJ,EAAQ,GAAGC,GAClBF,GAAYC,CACjB,CACJ,EAVyC,YCbjD,OAAOK,OAAW,QAClB,OAAOC,OAAgB,2BAIvB,SAASC,IAAgC,CACrC,MAAO,CAAC,EACJ,OAAO,MAAQ,UACf,MACA,OAAO,KAAK,cAAgB,WAEpC,CANSC,EAAAD,GAAA,iCAaF,IAAME,GAA0CD,EAAA,CAAC,CACpD,MAAAE,EACA,OAAAC,EACA,QAAAC,EACA,GAAGC,CACP,IAAM,CACF,IAAMC,EAAS,OAAOJ,CAAK,EAE3B,OACIK,GAAA,cAACC,GAAA,CAAW,QAAQ,QAAS,GAAGH,GAC3BN,GAA8B,EACzBO,EAAO,eAAeH,EAAQC,CAAO,EACrCE,CACV,CAER,EAfuD,eClBvD,OAAOG,OAAW,QAClB,OAAOC,OAAmB,iBAC1B,OAAOC,OAAS,aAST,IAAMC,GAA8CC,EAAA,CAAC,CAAE,MAAAC,EAAQ,EAAG,IAC9DC,GAAA,cAACC,GAAA,CAAc,QAAS,CAACC,EAAG,GAAIH,CAAM,EADU,iBCX3D,OAAOI,OAAW,QAClB,OACI,0BAAAC,GACA,iBAAAC,GACA,WAAAC,GACA,oBAAAC,GACA,eAAAC,GACA,oBAAAC,GACA,iBAAAC,OACG,kBAGP,OAAOC,OAAiB,4BACxB,OAAOC,OAAgB,2BACvB,OAAOC,OAAU,qBACjB,OAAOC,OAAU,qBAKjB,OAAOC,OAAkB,mCAIlB,IAAMC,GAAwCC,EAAA,CAAC,CAClD,gBAAAC,EACA,SAAAC,EAAW,GACX,UAAAC,EAAY,GACZ,KAAAC,CACJ,IAAM,CA7BN,IAAAC,EAAAC,EA8BI,GAAM,CAAE,YAAAC,CAAY,EAAIC,GAAc,CAAE,KAAAJ,CAAK,CAAC,EACxCK,EAAaC,GAAc,EAC3BC,EAAUC,GAAQ,EAClB,CAAE,KAAMC,CAAW,EAAIC,GAAiB,EAExCC,EAAaN,IAAe,SAAWI,EAAaF,EAEpD,CAAE,aAAAK,CAAa,EAAIC,GAAiB,EAEpC,CAAE,UAAAC,CAAU,EAAIC,GAAY,EAE5BC,EAAoBC,GAAuB,IAAKH,CAAS,EAE/D,GAAIX,EAAY,SAAW,EACvB,OAAO,KAGX,IAAMe,EAAatB,EAACuB,GAChBC,GAAA,cAACC,GAAA,CAAM,GAAGF,EAAO,UAAWR,EAAY,EADzB,cAInB,OACIS,GAAA,cAACE,GAAA,CACG,aAAW,aACX,GAAI,CACA,SAAU,EACV,SAAU,EACV,IAAIzB,GAAA,YAAAA,EAAiB,KAAM,CAAC,CAChC,EACC,GAAGA,GAEHC,IAAac,GAAgBI,EAAkB,QAC5CI,GAAA,cAACF,EAAA,CACG,UAAU,QACV,GAAI,CACA,QAAS,OACT,WAAY,QAChB,EACA,MAAM,UACN,GAAG,OAEFhB,GAAAD,EAAAe,GAAA,YAAAA,EAAmB,WAAnB,YAAAf,EAA6B,OAA7B,YAAAC,EAAmC,OAChCkB,GAAA,cAACG,GAAA,CACG,GAAI,CACA,SAAU,MACd,EACJ,CAER,EAEHpB,EAAY,IAAI,CAAC,CAAE,MAAAqB,EAAO,KAAAC,EAAM,KAAAC,CAAK,IAE9BN,GAAA,cAACO,GAAA,CACG,IAAKH,EACL,GAAI,CACA,QAAS,OACT,WAAY,SACZ,qBAAsB,CAClB,SAAU,MACd,CACJ,GAEC,CAACzB,GAAa0B,EACdC,EACGN,GAAA,cAACF,EAAA,CACG,UAAU,QACV,GAAI,CACA,QAAS,OACT,WAAY,SACZ,SAAU,MACd,EACA,MAAM,UACN,GAAIQ,EACJ,QAAQ,YACR,WAAY,IAEXF,CACL,EAEAJ,GAAA,cAACQ,GAAA,CAAW,SAAS,QAAQJ,CAAM,CAE3C,CAEP,CACL,CAER,EA5FqD,cCxBrD,OAAOK,OAAW,QAClB,OAAiC,gBAAAC,OAAoB,kBACrD,OAAOC,OAAgB,2BACvB,OAAOC,OAA2B,wCAClC,OAAOC,OAAsB,mCAC7B,OAAOC,OAAyB,sCAChC,OAAOC,OAA8B,2CAE9B,IAAMC,GAAsDC,EAAA,CAAC,CAChE,OAAAC,CACJ,IAAM,CACF,IAAMC,EAAYC,GAAa,EAC3BC,EAAU,KACVC,EAAOC,GAAA,cAACC,GAAA,CAAsB,SAAS,QAAQ,EAEnD,OAAQN,EAAQ,CACZ,IAAK,UACDG,EAAUF,EAAU,mBAAoB,OAAO,EAC/CG,EAAOC,GAAA,cAACE,GAAA,CAAoB,SAAS,QAAQ,EAC7C,MACJ,IAAK,QACDJ,EAAUF,EAAU,iBAAkB,mBAAmB,EACzDG,EAAOC,GAAA,cAACG,GAAA,CAAyB,SAAS,QAAQ,EAElD,MACJ,IAAK,UACDL,EAAUF,EAAU,mBAAoB,WAAW,EACnDG,EAAOC,GAAA,cAACI,GAAA,CAAiB,SAAS,QAAQ,EAC1C,MACJ,QAEIN,EAAUF,EAAU,gBAAiB,qBAAqB,EAC1D,KACR,CAEA,OACII,GAAA,cAACK,GAAA,CACG,MAAM,OACN,SAAS,SACT,SAAS,WACT,QAAQ,OACR,WAAW,SACX,SAAS,OACT,YAAY,SAEXP,EACDE,GAAA,cAAC,QACG,MAAO,CAAE,SAAU,WAAY,IAAK,MAAO,WAAY,KAAM,GAE5DD,CACL,CACJ,CAER,EA7CmE,qBCPnE,OAAS,eAAAO,OAAmB,uBCCrB,IAAMC,GAA+B,CACxC,KAAM,QACN,QAAS,CACL,KAAM,UACN,aAAc,MAClB,EACA,UAAW,CACP,KAAM,UACN,aAAc,MAClB,EACA,WAAY,CACR,QAAS,UACT,MAAO,SACX,EACA,QAAS,CACL,KAAM,UACN,aAAc,MAClB,EACA,MAAO,CACH,KAAM,UACN,aAAc,MAClB,EACA,QAAS,CACL,KAAM,UACN,aAAc,MAClB,EACA,KAAM,CACF,KAAM,UACN,aAAc,MAClB,EACA,QAAS,gBACT,KAAM,CACF,QAAS,UACT,UAAW,UACX,SAAU,SACd,CACJ,ECpCO,IAAMC,GAA8B,CACvC,KAAM,OACN,QAAS,CACL,KAAM,UACN,aAAc,MAClB,EACA,UAAW,CACP,KAAM,UACN,aAAc,MAClB,EACA,WAAY,CACR,QAAS,UACT,MAAO,SACX,EACA,QAAS,CACL,KAAM,UACN,aAAc,MAClB,EACA,MAAO,CACH,KAAM,UACN,aAAc,MAClB,EACA,QAAS,CACL,KAAM,UACN,aAAc,MAClB,EACA,KAAM,CACF,KAAM,UACN,aAAc,MAClB,EACA,QAAS,gBACT,KAAM,CACF,QAAS,OACT,UAAW,wBACX,SAAU,SACd,CACJ,ECpCO,IAAMC,GAAwC,CACjD,WAAY,CACR,aACA,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,mBACJ,EAAE,KAAK,GAAG,CACd,EChBO,IAAMC,GAAiB,CAC1B,KAAM,CACF,KAAM,QACN,QAAS,CACL,KAAM,UACN,MAAO,UACP,KAAM,SACV,CACJ,EACA,SAAU,CACN,KAAM,OACN,QAAS,CACL,KAAM,UACN,MAAO,UACP,KAAM,SACV,CACJ,EACA,OAAQ,CACJ,KAAM,QACN,QAAS,CACL,KAAM,UACN,MAAO,UACP,KAAM,SACV,CACJ,EACA,WAAY,CACR,KAAM,OACN,QAAS,CACL,KAAM,UACN,MAAO,UACP,KAAM,SACV,CACJ,EACA,QAAS,CACL,KAAM,QACN,QAAS,CACL,KAAM,UACN,MAAO,UACP,KAAM,SACV,CACJ,EACA,YAAa,CACT,KAAM,OACN,QAAS,CACL,KAAM,UACN,MAAO,UACP,KAAM,SACV,CACJ,EACA,IAAK,CACD,KAAM,QACN,QAAS,CACL,KAAM,UACN,MAAO,UACP,KAAM,SACV,CACJ,EACA,QAAS,CACL,KAAM,OACN,QAAS,CACL,KAAM,UACN,MAAO,UACP,KAAM,SACV,CACJ,EAC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","names":["SnackbarProvider","withSnackbar","SnackbarContent","useSnackbar","React","Box","React","useState","Box","Drawer","List","ListItemButton","ListItemIcon","ListItemText","Collapse","Tooltip","Button","IconButton","ListOutlined","Logout","ExpandLess","ExpandMore","ChevronLeft","ChevronRight","MenuRounded","Dashboard","CanAccess","useIsExistAuthentication","useLogout","useTitle","useTranslate","useRouterContext","useRouterType","useLink","useMenu","useRefineContext","useActiveAuthProvider","pickNotDeprecated","useWarnAboutChange","Sider","__name","TitleFromProps","render","meta","collapsed","setCollapsed","useState","opened","setOpened","drawerWidth","t","useTranslate","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","hasDashboard","useRefineContext","translate","warnWhen","setWarnWhen","useWarnAboutChange","menuItems","selectedKey","defaultOpenKeys","useMenu","isExistAuthentication","useIsExistAuthentication","TitleFromContext","useTitle","authProvider","useActiveAuthProvider","mutateLogout","useLogout","open","setOpen","React","previous","previousOpenKeys","key","uniqueKeys","RenderToTitle","Title","handleClick","renderTreeView","tree","item","icon","label","route","name","children","parentName","options","isOpen","isSelected","isNested","pickNotDeprecated","CanAccess","Tooltip","ListItemButton","ListItemIcon","ListOutlined","ListItemText","ExpandLess","ExpandMore","Collapse","List","dashboard","Dashboard","handleLogout","logout","Logout","items","drawer","Box","Drawer","Button","prev","ChevronRight","ChevronLeft","IconButton","MenuRounded","React","useGetIdentity","useActiveAuthProvider","AppBar","Stack","Toolbar","Typography","Avatar","Header","__name","authProvider","useActiveAuthProvider","user","useGetIdentity","React","AppBar","Toolbar","Stack","Typography","Avatar","Layout","__name","Sider","Header","Title","Footer","OffLayoutArea","children","React","Box","theme","React","useRouterContext","useLink","useRouterType","Button","Title","__name","collapsed","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","React","Button","React","useState","Box","React","useState","Box","Drawer","List","ListItemButton","ListItemIcon","ListItemText","Collapse","Tooltip","IconButton","Paper","ListOutlined","Logout","ExpandLess","ExpandMore","ChevronLeft","MenuRounded","Dashboard","CanAccess","useIsExistAuthentication","useLogout","useTitle","useTranslate","useRouterContext","useRouterType","useLink","useMenu","useRefineContext","useActiveAuthProvider","pickNotDeprecated","useWarnAboutChange","ThemedSider","__name","TitleFromProps","render","meta","isSiderOpen","onToggleSiderClick","opened","setOpened","useState","drawerWidth","t","useTranslate","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","hasDashboard","useRefineContext","translate","menuItems","selectedKey","defaultOpenKeys","useMenu","isExistAuthentication","useIsExistAuthentication","TitleFromContext","useTitle","authProvider","useActiveAuthProvider","warnWhen","setWarnWhen","useWarnAboutChange","mutateLogout","useLogout","open","setOpen","React","previous","previousOpenKeys","key","uniqueKeys","RenderToTitle","ThemedTitle","handleClick","renderTreeView","tree","item","icon","label","route","name","children","parentName","options","isOpen","isSelected","isNested","pickNotDeprecated","CanAccess","Tooltip","ListItemButton","ListItemIcon","ListOutlined","ListItemText","ExpandLess","ExpandMore","Collapse","List","dashboard","Dashboard","handleLogout","logout","Logout","items","drawer","Box","Drawer","Paper","theme","IconButton","ChevronLeft","palette","mode","getContrastText","primary","background","prev","MenuRounded","React","useGetIdentity","useActiveAuthProvider","AppBar","Stack","Toolbar","Typography","Avatar","IconButton","Menu","ThemedHeader","__name","isSiderOpen","onToggleSiderClick","toggleSiderIconFromProps","authProvider","useActiveAuthProvider","user","useGetIdentity","React","AppBar","Toolbar","IconButton","Menu","Stack","Typography","Avatar","ThemedLayout","__name","Sider","Header","Title","Footer","OffLayoutArea","children","isSiderOpen","setIsSiderOpen","useState","React","Box","ThemedSider","isOpen","ThemedHeader","prev","theme","React","useRouterContext","useLink","useRouterType","MuiLink","SvgIcon","Typography","defaultText","defaultIcon","React","ThemedTitle","__name","collapsed","wrapperStyles","icon","text","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","MuiLink","SvgIcon","Typography","React","Box","React","useState","ThemedLayoutContext","React","ThemedLayoutContextProvider","__name","children","initialSiderCollapsed","siderCollapsed","setSiderCollapsed","useState","mobileSiderOpen","setMobileSiderOpen","React","useState","Box","Drawer","List","ListItemButton","ListItemIcon","ListItemText","Collapse","Tooltip","IconButton","Paper","ListOutlined","Logout","ExpandLess","ExpandMore","ChevronLeft","Dashboard","CanAccess","useIsExistAuthentication","useLogout","useTitle","useTranslate","useRouterContext","useRouterType","useLink","useMenu","useRefineContext","useActiveAuthProvider","pickNotDeprecated","useWarnAboutChange","useSelectCore","isEqual","unionWith","useAutocomplete","__name","props","_a","_b","queryResult","defaultValueQueryResult","onSearch","overtime","useSelectCore","unionWith","isEqual","event","value","x","pickNotDeprecated","useLiveMode","useTableCore","useState","darken","useTheme","differenceWith","isEqual","GridLogicOperator","transformSortModelToCrudSorting","__name","sortModel","field","sort","transformCrudSortingToSortModel","crudSorting","order","transformMuiOperatorToCrudOperator","operatorValue","transformFilterModelToCrudFilters","items","logicOperator","filters","value","operator","GridLogicOperator","transformCrudOperatorToMuiOperator","columnType","transformCrudFiltersToFilterModel","crudFilters","columnsType","_a","gridFilterItems","isExistOrFilter","filter","useDataGrid","onSearchProp","initialCurrent","initialPageSize","pagination","hasPagination","initialSorter","permanentSorter","defaultSetFilterBehavior","initialFilter","permanentFilter","filtersFromProp","sortersFromProp","syncWithLocationProp","resourceFromProp","successNotification","errorNotification","queryOptions","liveModeFromProp","onLiveEvent","liveParams","meta","metaData","dataProviderName","overtimeOptions","theme","useTheme","liveMode","useLiveMode","columnsTypes","setColumnsType","useState","tableQueryResult","current","setCurrent","pageSize","setPageSize","filters","setFilters","sorters","setSorters","sorter","setSorter","pageCount","createLinkForSyncWithLocation","overtime","useTableCore","pickNotDeprecated","muiCrudFilters","setMuiCrudFilters","data","isFetched","isLoading","isServerSideFilteringEnabled","isServerSideSortingEnabled","hasPaginationString","isPaginationEnabled","preferredPermanentSorters","preferredPermanentFilters","handlePageChange","__name","page","handlePageSizeChange","handleSortModelChange","sortModel","crudSorting","transformSortModelToCrudSorting","handleFilterModelChange","filterModel","crudFilters","transformFilterModelToCrudFilters","f","search","value","searchFilters","dataGridPaginationValues","model","transformCrudSortingToSortModel","differenceWith","isEqual","transformCrudFiltersToFilterModel","state","newColumnsTypes","key","darken","useContext","useSiderVisible","__name","mobileSiderOpen","siderCollapsed","setMobileSiderOpen","setSiderCollapsed","useContext","ThemedLayoutContext","visible","useContext","useThemedLayoutContext","__name","mobileSiderOpen","siderCollapsed","setMobileSiderOpen","setSiderCollapsed","useContext","ThemedLayoutContext","ThemedSiderV2","__name","TitleFromProps","render","meta","activeItemDisabled","siderCollapsed","setSiderCollapsed","mobileSiderOpen","setMobileSiderOpen","useThemedLayoutContext","drawerWidth","t","useTranslate","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","hasDashboard","useRefineContext","translate","menuItems","selectedKey","defaultOpenKeys","useMenu","isExistAuthentication","useIsExistAuthentication","TitleFromContext","useTitle","authProvider","useActiveAuthProvider","warnWhen","setWarnWhen","useWarnAboutChange","mutateLogout","useLogout","open","setOpen","useState","React","previous","previousOpenKeys","key","uniqueKeys","RenderToTitle","ThemedTitleV2","handleClick","renderTreeView","tree","item","icon","label","route","name","children","parentName","options","isOpen","isSelected","isNested","pickNotDeprecated","CanAccess","Tooltip","ListItemButton","ListItemIcon","ListOutlined","ListItemText","ExpandLess","ExpandMore","Collapse","List","linkStyle","dashboard","Dashboard","handleLogout","logout","Logout","items","drawer","Box","Drawer","Paper","theme","IconButton","ChevronLeft","React","useGetIdentity","useActiveAuthProvider","pickNotDeprecated","AppBar","Stack","Toolbar","Typography","Avatar","React","IconButton","Menu","HamburgerIcon","__name","props","React","IconButton","Menu","HamburgerMenu","siderCollapsed","setSiderCollapsed","mobileSiderOpen","setMobileSiderOpen","useThemedLayoutContext","ThemedHeaderV2","__name","isSticky","sticky","authProvider","useActiveAuthProvider","user","useGetIdentity","prefferedSticky","pickNotDeprecated","React","AppBar","Toolbar","HamburgerMenu","Stack","Typography","Avatar","ThemedLayoutV2","__name","Sider","Header","Title","Footer","OffLayoutArea","children","initialSiderCollapsed","React","ThemedLayoutContextProvider","Box","ThemedSiderV2","ThemedHeaderV2","theme","React","useRouterContext","useLink","useRouterType","MuiLink","SvgIcon","Typography","defaultText","defaultIcon","React","ThemedTitleV2","__name","collapsed","wrapperStyles","icon","text","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","MuiLink","SvgIcon","Typography","React","useActiveAuthProvider","useForm","Button","TextField","FormControlLabel","Checkbox","Link","Box","Typography","Container","Card","CardContent","useLogin","useTranslate","LoginPage","__name","_a","register","handleSubmit","errors","useForm","authProvider","useActiveAuthProvider","login","isLoading","useLogin","translate","useTranslate","Box","Container","Card","CardContent","Typography","data","TextField","FormControlLabel","Checkbox","Link","Button","React","Stack","Grid","Typography","Button","Link","ReadyPage","__name","renderCode","text","Typography","theme","Grid","Stack","Link","Button","React","WelcomePageFromCore","WelcomePage","__name","React","WelcomePageFromCore","React","useEffect","useState","useGo","useResource","useRouterType","useNavigation","useTranslate","Stack","Button","Tooltip","Typography","Grid","Info","ErrorComponent","__name","errorMessage","setErrorMessage","useState","push","useNavigation","go","useGo","routerType","useRouterType","resource","action","useResource","translate","useTranslate","useEffect","React","Grid","Typography","Stack","Tooltip","Info","Button","React","React","useActiveAuthProvider","useForm","FormProvider","Button","TextField","Box","Typography","Container","Card","CardContent","Checkbox","FormControlLabel","Divider","MuiLink","Stack","useLogin","useTranslate","useRouterContext","useRouterType","useLink","layoutStyles","titleStyles","LoginPage","__name","providers","registerLink","forgotPasswordLink","rememberMe","contentProps","wrapperProps","renderContent","formProps","title","_a","onSubmit","useFormProps","methods","useForm","register","handleSubmit","errors","authProvider","useActiveAuthProvider","login","isLoading","useLogin","translate","useTranslate","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","PageTitle","ThemedTitle","renderProviders","Stack","provider","Button","Divider","Content","Card","CardContent","Typography","titleStyles","Box","data","TextField","FormControlLabel","Checkbox","MuiLink","FormProvider","layoutStyles","Container","React","useActiveAuthProvider","useForm","Button","TextField","Box","Typography","Container","Card","CardContent","Divider","Stack","MuiLink","useTranslate","useRouterContext","useRouterType","useLink","useRegister","RegisterPage","__name","loginLink","wrapperProps","contentProps","renderContent","providers","formProps","title","onSubmit","useFormProps","register","handleSubmit","errors","useForm","authProvider","useActiveAuthProvider","registerMutate","isLoading","useRegister","translate","useTranslate","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","PageTitle","ThemedTitle","renderProviders","Stack","provider","Button","Divider","Content","Card","CardContent","Typography","titleStyles","Box","data","TextField","MuiLink","layoutStyles","Container","Button","TextField","Box","Typography","Container","Card","CardContent","MuiLink","useForm","React","useForgotPassword","useLink","useRouterContext","useRouterType","useTranslate","ForgotPasswordPage","__name","loginLink","wrapperProps","contentProps","renderContent","formProps","title","onSubmit","useFormProps","register","handleSubmit","errors","useForm","mutate","isLoading","useForgotPassword","translate","useTranslate","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","PageTitle","ThemedTitle","Content","Card","CardContent","Typography","titleStyles","Box","data","TextField","MuiLink","Button","layoutStyles","Container","React","useActiveAuthProvider","useForm","Button","TextField","Box","Typography","Container","Card","CardContent","useTranslate","useUpdatePassword","UpdatePasswordPage","__name","wrapperProps","contentProps","renderContent","formProps","title","_a","_b","onSubmit","useFormProps","register","watch","handleSubmit","errors","useForm","authProvider","useActiveAuthProvider","update","isLoading","useUpdatePassword","translate","useTranslate","PageTitle","ThemedTitle","Content","Card","CardContent","Typography","titleStyles","Box","data","TextField","value","Button","layoutStyles","Container","AuthPage","__name","props","type","React","RegisterPage","ForgotPasswordPage","UpdatePasswordPage","LoginPage","React","useNavigation","useTranslate","useUserFriendlyName","useRefineContext","useRouterType","useBack","useResource","Card","CardHeader","CardActions","CardContent","IconButton","Typography","Box","ArrowBackIcon","RefinePageHeaderClassNames","Create","__name","title","children","saveButtonPropsFromProps","resourceFromProps","isLoading","breadcrumbFromProps","wrapperProps","headerProps","contentProps","headerButtonProps","headerButtons","footerButtonProps","footerButtons","goBackFromProps","_a","_b","translate","useTranslate","globalBreadcrumb","useRefineContext","routerType","useRouterType","back","useBack","goBack","useNavigation","getUserFriendlyName","useUserFriendlyName","resource","action","identifier","useResource","breadcrumb","breadcrumbComponent","React","Breadcrumb","saveButtonProps","defaultFooterButtons","SaveButton","Card","CardHeader","Typography","RefinePageHeaderClassNames","IconButton","ArrowBackIcon","Box","CardContent","CardActions","React","useMutationMode","useNavigation","useTranslate","useUserFriendlyName","useRefineContext","useToPath","useResource","useRouterType","useBack","useGo","Card","CardHeader","IconButton","CardContent","CardActions","Typography","Box","ArrowBackIcon","RefinePageHeaderClassNames","Edit","__name","title","saveButtonPropsFromProps","mutationModeProp","recordItemId","children","deleteButtonPropsFromProps","canDelete","resourceFromProps","isLoading","breadcrumbFromProps","dataProviderName","wrapperProps","headerProps","contentProps","headerButtonProps","headerButtons","footerButtonProps","footerButtons","goBackFromProps","autoSaveProps","_a","_b","_c","translate","useTranslate","globalBreadcrumb","useRefineContext","mutationModeContext","useMutationMode","mutationMode","routerType","useRouterType","back","useBack","go","useGo","goBack","legacyGoList","useNavigation","getUserFriendlyName","useUserFriendlyName","resource","action","idFromParams","identifier","useResource","goListPath","useToPath","id","breadcrumb","hasList","isDeleteButtonVisible","breadcrumbComponent","React","Breadcrumb","listButtonProps","refreshButtonProps","defaultHeaderButtons","Box","AutoSaveIndicator","ListButton","RefreshButton","deleteButtonProps","saveButtonProps","defaultFooterButtons","DeleteButton","SaveButton","Card","CardHeader","Typography","RefinePageHeaderClassNames","IconButton","ArrowBackIcon","CardContent","CardActions","React","useTranslate","useUserFriendlyName","useRefineContext","useRouterType","useResource","Card","CardHeader","CardContent","Typography","Box","RefinePageHeaderClassNames","List","__name","title","canCreate","children","createButtonPropsFromProps","resourceFromProps","breadcrumbFromProps","wrapperProps","headerProps","contentProps","headerButtonProps","headerButtons","_a","_b","translate","useTranslate","globalBreadcrumb","useRefineContext","getUserFriendlyName","useUserFriendlyName","routerType","useRouterType","resource","identifier","useResource","isCreateButtonVisible","breadcrumb","breadcrumbComponent","React","Breadcrumb","createButtonProps","defaultHeaderButtons","CreateButton","Card","CardHeader","Typography","RefinePageHeaderClassNames","Box","CardContent","React","useNavigation","useTranslate","useUserFriendlyName","useRefineContext","useRouterType","useBack","useGo","useResource","useToPath","Card","CardActions","CardContent","CardHeader","IconButton","Box","Typography","ArrowBackIcon","RefinePageHeaderClassNames","Show","__name","title","canEdit","canDelete","isLoading","children","resourceFromProps","recordItemId","breadcrumbFromProps","dataProviderName","wrapperProps","headerProps","contentProps","headerButtonProps","headerButtons","footerButtonProps","footerButtons","goBackFromProps","_a","_b","_c","translate","useTranslate","globalBreadcrumb","useRefineContext","routerType","useRouterType","back","useBack","go","useGo","goBack","legacyGoList","useNavigation","getUserFriendlyName","useUserFriendlyName","resource","action","idFromParams","identifier","useResource","goListPath","useToPath","id","breadcrumb","hasList","isDeleteButtonVisible","isEditButtonVisible","breadcrumbComponent","React","Breadcrumb","listButtonProps","editButtonProps","deleteButtonProps","refreshButtonProps","defaultHeaderButtons","ListButton","EditButton","DeleteButton","RefreshButton","Card","CardHeader","Typography","RefinePageHeaderClassNames","IconButton","ArrowBackIcon","Box","CardContent","CardActions","React","useContext","useNavigation","useTranslate","useCan","useResource","useRouterContext","useRouterType","useLink","AccessControlContext","RefineButtonClassNames","RefineButtonTestIds","Button","AddBoxOutlined","CreateButton","__name","resourceNameFromProps","resourceNameOrRouteName","hideText","accessControl","svgIconProps","meta","children","onClick","rest","accessControlContext","useContext","AccessControlContext","accessControlEnabled","hideIfUnauthorized","translate","useTranslate","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","generateCreateUrl","useNavigation","resource","useResource","data","useCan","disabledTitle","createUrl","sx","restProps","React","e","Button","AddBoxOutlined","RefineButtonTestIds","RefineButtonClassNames","React","useContext","useCan","useNavigation","useTranslate","useResource","useRouterContext","useRouterType","useLink","AccessControlContext","RefineButtonClassNames","RefineButtonTestIds","Button","EditOutlined","EditButton","__name","resourceNameFromProps","resourceNameOrRouteName","recordItemId","hideText","accessControl","svgIconProps","meta","children","onClick","rest","accessControlContext","useContext","AccessControlContext","accessControlEnabled","hideIfUnauthorized","translate","useTranslate","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","generateEditUrl","useNavigation","id","resource","useResource","data","useCan","disabledTitle","editUrl","sx","restProps","React","e","Button","EditOutlined","RefineButtonTestIds","RefineButtonClassNames","React","useContext","useDelete","useTranslate","useMutationMode","useCan","useResource","pickNotDeprecated","useWarnAboutChange","AccessControlContext","RefineButtonClassNames","RefineButtonTestIds","Button","Dialog","DialogActions","DialogTitle","LoadingButton","DeleteOutline","DeleteButton","__name","resourceNameFromProps","resourceNameOrRouteName","recordItemId","onSuccess","mutationModeProp","children","successNotification","errorNotification","hideText","accessControl","meta","metaData","dataProviderName","confirmTitle","confirmOkText","confirmCancelText","svgIconProps","invalidates","rest","accessControlContext","useContext","AccessControlContext","accessControlEnabled","hideIfUnauthorized","translate","useTranslate","id","resource","identifier","useResource","mutationModeContext","useMutationMode","mutationMode","mutate","isLoading","variables","useDelete","data","useCan","disabledTitle","open","setOpen","React","handleClickOpen","handleClose","handleCloseOnConfirm","setWarnWhen","pickNotDeprecated","value","sx","restProps","useWarnAboutChange","LoadingButton","DeleteOutline","RefineButtonTestIds","RefineButtonClassNames","Dialog","DialogTitle","DialogActions","Button","React","useTranslate","useResource","useInvalidate","queryKeys","pickDataProvider","RefineButtonClassNames","RefineButtonTestIds","LoadingButton","RefreshOutlined","useQueryClient","RefreshButton","__name","resourceNameFromProps","resourceNameOrRouteName","recordItemId","hideText","dataProviderName","svgIconProps","children","onClick","_meta","_metaData","rest","translate","useTranslate","queryClient","useQueryClient","invalidates","useInvalidate","resources","identifier","id","useResource","isInvalidating","queryKeys","pickDataProvider","handleInvalidate","sx","restProps","React","LoadingButton","RefreshOutlined","e","RefineButtonTestIds","RefineButtonClassNames","React","useContext","useCan","useNavigation","useTranslate","useResource","useRouterContext","useRouterType","useLink","AccessControlContext","RefineButtonClassNames","RefineButtonTestIds","Button","VisibilityOutlined","ShowButton","__name","resourceNameFromProps","resourceNameOrRouteName","recordItemId","hideText","accessControl","svgIconProps","meta","children","onClick","rest","accessControlContext","useContext","AccessControlContext","accessControlEnabled","hideIfUnauthorized","generateShowUrl","useNavigation","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","translate","useTranslate","id","resource","useResource","data","useCan","disabledTitle","showUrl","sx","restProps","React","e","Button","VisibilityOutlined","RefineButtonTestIds","RefineButtonClassNames","React","useContext","useCan","useNavigation","useTranslate","useUserFriendlyName","useResource","useRouterContext","useRouterType","useLink","pickNotDeprecated","AccessControlContext","RefineButtonClassNames","RefineButtonTestIds","Button","ListOutlined","ListButton","__name","resourceNameFromProps","resourceNameOrRouteName","hideText","accessControl","svgIconProps","meta","children","onClick","rest","_a","accessControlContext","useContext","AccessControlContext","accessControlEnabled","hideIfUnauthorized","generateListUrl","useNavigation","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","getUserFriendlyName","useUserFriendlyName","ActiveLink","translate","useTranslate","resource","identifier","useResource","data","useCan","disabledTitle","listUrl","sx","restProps","React","e","Button","ListOutlined","RefineButtonTestIds","RefineButtonClassNames","pickNotDeprecated","React","useTranslate","RefineButtonClassNames","RefineButtonTestIds","LoadingButton","ImportExportOutlined","ExportButton","__name","hideText","children","loading","svgIconProps","rest","translate","useTranslate","sx","restProps","React","LoadingButton","ImportExportOutlined","RefineButtonTestIds","RefineButtonClassNames","React","useTranslate","RefineButtonClassNames","RefineButtonTestIds","LoadingButton","SaveOutlined","SaveButton","__name","hideText","svgIconProps","children","rest","translate","useTranslate","sx","restProps","React","LoadingButton","SaveOutlined","RefineButtonTestIds","RefineButtonClassNames","React","useContext","useCan","useNavigation","useTranslate","useResource","useRouterContext","useRouterType","useLink","AccessControlContext","RefineButtonClassNames","RefineButtonTestIds","Button","AddBoxOutlined","CloneButton","__name","resourceNameFromProps","resourceNameOrRouteName","recordItemId","hideText","accessControl","svgIconProps","meta","children","onClick","rest","accessControlContext","useContext","AccessControlContext","accessControlEnabled","hideIfUnauthorized","generateCloneUrl","useNavigation","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","translate","useTranslate","id","resource","useResource","data","useCan","disabledTitle","cloneUrl","sx","restProps","React","e","Button","AddBoxOutlined","RefineButtonTestIds","RefineButtonClassNames","React","useTranslate","RefineButtonClassNames","RefineButtonTestIds","LoadingButton","ImportExportOutlined","ImportButton","__name","inputProps","hideText","loading","svgIconProps","children","rest","translate","useTranslate","sx","restProps","React","LoadingButton","ImportExportOutlined","RefineButtonTestIds","RefineButtonClassNames","React","useState","useEffect","Box","CircularProgress","Typography","CircularDeterminate","__name","undoableTimeout","message","progress","setProgress","useState","timeCount","setTimeCount","useEffect","increaseProgress","timer","prevProgress","React","Box","CircularProgress","Typography","React","Typography","TextField","__name","value","rest","React","Typography","React","Chip","TagField","__name","value","rest","React","Chip","React","Typography","Link","EmailField","__name","value","rest","React","Typography","Link","React","Tooltip","CheckOutlined","CloseOutlined","BooleanField","__name","value","valueLabelTrue","valueLabelFalse","trueIcon","falseIcon","svgIconProps","rest","React","Tooltip","CheckOutlined","CloseOutlined","React","dayjs","LocalizedFormat","Typography","dayjs","LocalizedFormat","defaultLocale","DateField","__name","value","locales","dateFormat","rest","React","Typography","React","FileField","__name","title","src","rest","React","UrlField","React","Link","Typography","UrlField","__name","children","value","rest","React","Typography","Link","React","Typography","toLocaleStringSupportsOptions","__name","NumberField","value","locale","options","rest","number","React","Typography","React","ReactMarkdown","gfm","MarkdownField","__name","value","React","ReactMarkdown","gfm","React","matchResourceFromRoute","useBreadcrumb","useLink","useRefineContext","useResource","useRouterContext","useRouterType","Breadcrumbs","Typography","Link","Grid","HomeOutlined","Breadcrumb","__name","breadcrumbProps","showHome","hideIcons","meta","_a","_b","breadcrumbs","useBreadcrumb","routerType","useRouterType","NewLink","useLink","LegacyLink","useRouterContext","ActiveLink","hasDashboard","useRefineContext","resources","useResource","rootRouteResource","matchResourceFromRoute","LinkRouter","props","React","Link","Breadcrumbs","HomeOutlined","label","icon","href","Grid","Typography","React","useTranslate","Typography","MoreHorizOutlinedIcon","SyncOutlinedIcon","TaskAltOutlinedIcon","ErrorOutlineOutlinedIcon","AutoSaveIndicator","__name","status","translate","useTranslate","message","icon","React","MoreHorizOutlinedIcon","TaskAltOutlinedIcon","ErrorOutlineOutlinedIcon","SyncOutlinedIcon","Typography","createTheme","lightPalette","darkPalette","typography","RefinePalettes","commonThemeProperties","typography","LightTheme","createTheme","lightPalette","DarkTheme","darkPalette","RefineThemes","RefinePalettes","acc","key","paletteName","ownerState","React","useSnackbar","Box","IconButton","Typography","UndoOutlined","notificationProvider","__name","closeSnackbar","enqueueSnackbar","useSnackbar","message","type","undoableTimeout","key","cancelMutation","description","React","CircularDeterminate","IconButton","UndoOutlined","Box","Typography","styled","SnackbarProvider","RefineSnackbarProvider","props"]}